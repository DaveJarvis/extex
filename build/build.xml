<!--
  ############################################################################
  # This is the Ant build file for ExTeX
  ############################################################################
  # Copyright (C) 2004-2006 The ExTeX Group
  #
  # This library is free software; you can redistribute it and/or modify it
  # under the terms of the GNU Lesser General Public License as published by
  # the Free Software Foundation; either version 2.1 of the License, or (at
  # your option) any later version.
  #
  # This library is distributed in the hope that it will be useful, but
  # WITHOUT ANY WARRANTY; without even the implied warranty of
  # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
  # General Public License for more details.
  #
  # You should have received a copy of the GNU Lesser General Public License
  # along with this library; if not, write to the Free Software Foundation,
  # Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  #
  ######################################################################### -->

<project name="ExTeX build system" basedir=".">

  <description>
    ExTeX aims at the development of a high quality typesetting system. This
    development is massively based on the experiences with the typesetting
    system TeX. Despite of its age TeX can still be considered a very good
    choice. Nevertheless design decisions which where reasonable at the time
    of the writing of TeX can nowadays no longer be considered as state of the
    art.

    This build file is the central entry for the automatic creation of the
    essential pieces. There are two modes of operation. One mode takes all
    sub-projects in the parent directory and performs the necessary actions on
    them. The sub-projects are names ExTeX-* and contain a build file of their
    own.

    The second mode of operation takes a selected subset of the sub-projects
    and works on them. Thus it is possible to select the sub-projects which
    are production ready to make it into the distribution.
  </description>

  <property name="target" location="target" />
  <property name="configuration" value="application" />

  <!-- 
    -  The configuration can be found in application.xml or wherever the
    -  property "configuration" points to.
    -  This configuration is transformed into something digestable by Ant and
    -  imported.
    -->
  <mkdir dir="${target}"/>
  <xslt in="${configuration}.xml"
        out="${target}/def-${configuration}.xml"
        style="src/xslt/application.xsl"/>
  <import file="${target}/def-${configuration}.xml"/>
  
  <import file="build-sub-projects.xml"/>

  <property name="javac.deprecation" value="off" />
  <property name="extex.jar.file" value="extex" />
  <property name="classes" location="target/application/classes" />
  <property name="javadoc" location="target/javadoc" />
  <property name="installer.dir" location="util/Installer" />
  <property name="target.lib" location="target/lib" />

  <property name="tests.haltonfailure" value="no" />
  <property name="test.classes" location="target/test/classes" />
  <property name="test.results" location="target/test/results" />
  <property name="test.results.html" location="target/www/reports/tests" />

  <!-- ==================================================================== -->
  <target name="all"
          description="Build nearly everything"
          depends="installer,javadoc,checkstyle,test" />

  <!-- ==================================================================== -->
  <target name="clean"
          description="Remove unneccesary files and directories.">
    <iterate target="clean"/>
    <delete dir="${classes}" />
  </target>

  <!-- ==================================================================== -->
  <target name="compile" description="Compile the production Java files">

    <mkdir dir="${classes}" />
    <javac destdir="${classes}"
           debug="on"
           deprecation="${javac.deprecation}">
      <classpath refid="application.class.path" />
      <src refid="application.source.path"/>
    </javac>
    <copy todir="${classes}">
      <mapper type="regexp" from="^[a-zA-Z-]*/src/[a-z]*/(.*)$$" to="\1"/>
      <fileset refid="application.resource.files" />
    </copy>
  </target>

  <!-- ==================================================================== -->
  <target name="jar"
          depends="compile"
          description="Create the ExTeX jar file containing all compiled classes
                       except test cases.">
    <mkdir dir="${target}/${configuration}" />
    <jar jarfile="${target}/${configuration}/${extex.jar.file}.jar">
      <fileset dir="${classes}">
        <patternset>
          <exclude name="**/*Test.class" />
          <exclude name="**/*Tests.class" />
        </patternset>
      </fileset>
      <fileset dir=".">
        <patternset>
          <include name="LICENSE.txt" />
        </patternset>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Main-Class" value="org.extex.tex.main.TeX" />
      </manifest>
    </jar>
  </target>

  <!-- ==================================================================== -->
  <target name="javadoc"
          description="Create JavaDoc HTML pages.">
    <mkdir dir="${javadoc}" />
    <javadoc destdir="${javadoc}"
             sourcepathref="application.source.path"
             packagenames="org.extex.*"
             overview="${src}/overview.html"
             stylesheetfile="src/javadoc/stylesheet.css"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             notree="false"
             nonavbar="false"
             noindex="false"
             nodeprecatedlist="false"
             nodeprecated="false">
      <classpath refid="application.class.path"/>
    </javadoc>
  </target>
    
  <!-- ==================================================================== -->
  <target name="site"
          description="Build the site">
    <subant antfile="../www/build.xml"
            buildpath="../www"
            target="site"/>
  </target>

  <!-- ==================================================================== -->
  <target name="test"
          depends="jar"
          description="Run JUnit tests and produce a HTML test report">

    <delete dir="${test.results}" />
    <mkdir dir="${test.results}" />

    <mkdir dir="${test.classes}" />
    <javac destdir="${test.classes}"
           debug="on"
           deprecation="${javac.deprecation}">
      <classpath>
        <pathelement path="${target}/${configuration}/${extex.jar.file}.jar" />
      </classpath>
      <classpath refid="test.class.path" />
      <src refid="test.source.path"/>
    </javac>

    <copy todir="${test.classes}">
      <mapper type="regexp" from="^[a-zA-Z-]*/src/[a-z]*/(.*)$$" to="\1"/>
      <fileset dir=".." >
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <junit printsummary="on" haltonfailure="no">
      <jvmarg value="-Xms128m"/>
      <jvmarg value="-Xmx512m"/>
      <classpath>
        <pathelement path="${test.classes}" />
        <pathelement path="${target}/${configuration}/${extex.jar.file}.jar" />
      </classpath>
      <classpath refid="test.class.path" />
      <formatter type="xml"/>
      <batchtest fork="yes" todir="${test.results}">
        <fileset dir="${test.classes}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>

    <delete dir="${test.results.html}" />
    <junitreport todir="${test.results}">
      <fileset dir="${test.results}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames"
              styledir="src/xslt"
              todir="${test.results.html}"/>
    </junitreport>
  </target>


  
  
  
  
  

  <!-- ==================================================================== -->
  <target name="build.html"
          description="Translate the build log into a HTML page">
    <xslt in="target/build.log"
          out="target/build.html"
          style="src/ant/log.xsl"
          />
  </target>


  
  
  
  <!-- ==================================================================== -->
  <!-- ==================================================================== -->
  <!-- ==================================================================== -->
  <!-- ==================================================================== -->

  <!-- ==================================================================== -->
  <target name="formats"
          description="Compile the format files">
    <ant dir="texmf" 
         target="formats" />
  </target>

  <!-- ==================================================================== -->
  <target name="compile.tests"
          description="Compile the Java files (with tests)">
    <mkdir dir="${classes}" />
    <javac srcdir="${src.tests}" destdir="${classes}" debug="on">
      <classpath refid="application.class.path" />
      <classpath refid="develop.class.path" />
      <classpath>
       <pathelement path="${classes}"/>
      </classpath>
    </javac>
    <copy todir="${classes}">
      <fileset dir="src">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
        <include name="**/ExTeX-PL" />
      </fileset>
    </copy>
  </target>

  <!-- ==================================================================== -->
  <target name="testreport" depends="compile-develop,jar,checkstyle41-xml" 
          description="Run Checkstyle and create a HTML report">
    <java fork="true"
          classname="org.extex.checkstyle.ReportAddAuthor" 
          classpath="${target}/test/classes">
      <classpath path="${target}/lib/${extex.jar.file}.jar"/>
      <classpath refid="application.class.path" />
      <classpath refid="develop.class.path" />
      <arg value="${target}/checkstyle.xml"/>
      <arg value="${target}/checkstyle-author.xml"/>
    </java>
    <mkdir dir="${target}/html" />
    <xslt style="src/xslt/checkstyleauthorreport.xsl" 
          out="${target}/html/checkstyleauthorreport.html"
          in="${target}/checkstyle-author.xml" />
  </target>

  <!-- ==================================================================== -->
  <target name="compile-develop" 
          description="Compile the source in develop.">
    <mkdir dir="${target}/test/classes" />
    <javac srcdir="develop/reports"
           destdir="${target}/test"
           debug="on">
      <classpath refid="application.class.path" />
      <classpath>
        <pathelement path="${classes}"/>
      </classpath>
    </javac>
  </target>
    
  <!-- ==================================================================== -->
  <target name="*** site ***" depends="compile-develop"
          description="">
    <java classname="org.extex.site.report.Summary"
          classpath="${target}/test/classes"
    output="target/tests/index.xml">
      <arg value="-dir"/>
      <arg value="target/tests"/>
    </java>
    <xslt basedir="${target.test}"
          destdir="${target}/www/reports/tests"
          extension=".html"
          style="develop/reports/junit.xsl">
      <classpath refid="develop.class.path" />
    </xslt>
  </target>

  <!-- ==================================================================== -->
  <target name="checkstyle"
          description="Generates a report of violations of the coding conventions.">
    <checkstyle config="develop/eclipse/checkstyle.cfg"
                failureProperty="checkstyle.failure"
                failOnViolation="false">
      <formatter type="plain" tofile="${target}/checkstyle.txt" />
      <fileset dir="src" includes="**/*.java" />
    </checkstyle>
  </target>

  <!-- ==================================================================== -->
  <target name="checkstyle41"
    description="Generates a report of violations of the coding conventions using version 4.1.">
    <checkstyle config="develop/eclipse/extex_checkstyle.xml"
                failureProperty="checkstyle.failure"
          failOnViolation="false">
      <classpath>
        <pathelement location="develop/lib/checkstyle-all-4.1.jar" />
        <pathelement location="develop/lib/checkstyle-optional-4.1.jar" />
        </classpath>
      <formatter type="plain" tofile="${target}/checkstyle.txt" />
      <fileset dir="src" includes="**/*.java" />
    </checkstyle>
  </target>

  <!-- ==================================================================== -->
  <target name="checkstyle41-xml"
    description="Generates a report of violations of the coding conventions using version 4.1. (only in src/java)">
    <checkstyle config="develop/eclipse/extex_checkstyle.xml"
          failureProperty="checkstyle.failure"
          failOnViolation="false">
      <classpath>
        <pathelement location="develop/lib/checkstyle-all-4.1.jar" />
        <pathelement location="develop/lib/checkstyle-optional-4.1.jar" />
      </classpath>
      <formatter type="plain" tofile="${target}/checkstyle.txt" />
      <formatter type="xml" tofile="${target}/checkstyle.xml" />
      <fileset dir="src/java" includes="**/*.java" />
    </checkstyle>
  </target>

  <!-- ==================================================================== -->
  <target name="checkstyle-xml"
          description="Generates a report of violations of the coding conventions.">
    <checkstyle config="develop/eclipse/checkstyle.cfg"
                failureProperty="checkstyle.failure"
                failOnViolation="false">
      <formatter type="plain" tofile="${target}/checkstyle.txt" />
      <formatter type="xml" tofile="${target}/checkstyle.xml" />
      <fileset dir="src" includes="**/*.java" />
      <classpath refid="develop.class.path" />
    </checkstyle>
  </target>

  <!-- ==================================================================== -->
  <target name="installer"
          depends="jar,formats"
          description="Create a standalone installer for ExTeX.">
    <izpack input="${installer.dir}/install.xml"
            output="${target}/ExTeX-setup.jar"
            installerType="standard"
            basedir="${installer.dir}"
            izPackDir="${installer.dir}/IzPack/" />
  </target>

</project>
