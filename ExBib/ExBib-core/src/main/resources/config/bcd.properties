#  This file is part of ExBib a BibTeX compatible database.
#  Copyright (C) 2003-2008 Gerd Neugebauer
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
#  02111-1307 USA
#
#
ExBibIllegalValueException.Message=Illegal value: {0} {1}
#
ExBibIndexOutOfBoundsException.Message=''{0}'' is an illegal index
#
ExBibSyntaxException.Message=Syntax error: {0}
#
ExBibTypeMismatchException.Message=Type mismatch {0}
#
BibPrinterFactory.Unsupported_Encoding=Unsupported Encoding in BibPrinterFactory
BibPrinterFactory.BibPrinterFactory=BibPrinterFactory
#
BibReader099Impl.Attribute_name_expected=attribute name expected 
BibReader099Impl.while_reading_attribute_value=while reading attribute value
BibReader099Impl.while_in_block=while in block
BibReader099Impl.while_in_string=while in string
BibReader099Impl.while_parsing_value=while parsing value
#
BstIterateImpl.Empty_token_for_ITERATE=Empty token for ITERATE
#
BstReaderImpl.Expected_literal_instead_of__=Expected literal instead of ''{0}''
BstReaderImpl.Expected_literal_missing=Expected literal missing.
BstReaderImpl.Expected_string_missing=Expected string missing.
BstReaderImpl.Unexpected_token_found=Unexpected token ''{0}'' found
BstReaderImpl.unexpected_character=Unexpected character 
BstReaderImpl.while_expecting__=while expecting ''{0}''
BstReaderImpl.while_reading_block=while reading block
BstReaderImpl.while_reading_literal_list=while reading literal list.
#
CLI.File_not_found=File ''{0}'' not found
CLI.Resource_not_found=Resource ''{0}'' not found.
CLI.Version=This is {0}, Version {1} (Java {2})
CLI.Copyright=\
	Copyright (C) {0} Gerd Neugebauer (mailto:gene@gerd-neugebauer.de).\n\n\
	There is NO warranty.  Redistribution of this software is\n\
	covered by the terms of the GNU Library General Public License.\n\
	For more information about these matters, use the command line\n\
	switch -copying.
#
ChangeCase.illegal_case-conversion_string=''{0}'' is an illegal case-conversion string
#
ChrToInt.single_character_expected=''{0}'' should be a single character
#
DBImpl.No_sorter_configured=No sorter configured
#
DBObserver.Database_file_#=Database file #{0}: {1}\n
#
Entry.unable_to_find_entry_for=Unable to find entry for ''{0}''
#
EntryObserver.Empty_processor=Empty processor in EntryObserver
EntryObserver.Empty_writer=Empty writer in EntryObserver
EntryObserver.Not_style_file_defined=Warning: Entry type for ''{0}'' isn''t style-file defined\n
#
FormatName.Missing_end_of_group=Missing end of group
FormatName.Missing_end_of_item=Missing end of item
FormatName.No_initial_found=No initial found
FormatName.Letters_at_level_1=Several letters at level 1 of format
#
FuncallObserver.Profile=Profile:
FuncallObserver.Total__=Total: {0}\n
#
IntToChr.negative_argument=negative argument
#
Main.IO_Error={0}: Panic: IO Error.
Main.I_found_no_style_file=I found no style file\n\twhile reading {0}.aux
Main.Internal_Error=Internal Error. \
                                               Please report this error to <bcd-bug@gerd-neugebauer.de>
Main.do_msg=--- do 
Main.end_parse_msg=--- end parse
Main.push_msg=--- push
Main.start_parse_msg=--- start parse
Main.step_msg=--- step 
#
Name.Comma_not_found=Comma not found
Name.Too_many_commas=Too many commas
Name.strange_classifier=strange classifier: {0} 
#
ProcessorCoreImpl.Expected_Integer=Expected Integer instead of ''{0}''
ProcessorCoreImpl.Expected_String=Expected String instead of ''{0}''
ProcessorCoreImpl.Warning=Warning: {0} 
ProcessorCoreImpl.Pop_empty_stack=You can't pop an empty literal stack
#
ProcessorImpl.Missing_or_empty_name=Missing or empty name for builtin
ProcessorImpl.Missing_or_empty_class=Missing or empty class for builtin
#
SorterFactory.for_SorterFactory=for SorterFactory
#
TChar.Invalid_length_of_character=Invalid length of character ''{0}''
#
TField.unable_to_file_entry_for=Unable to find entry for ''{0}''
#
TokenList.Literal_expected_instead_of=Literal expected instead of ''{0}''
#
AuxReaderImpl.Reader_undefined=Reader not set
