/*
 * Copyright (C) 2007 The ExTeX Group and individual authors listed below
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation; either version 2.1 of the License, or (at your
 * option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */

package org.extex.font.format.xtf;

import java.io.IOException;

import junit.framework.TestCase;

import org.extex.font.format.xtf.cff.CffFont;
import org.extex.font.format.xtf.cff.CharString;
import org.extex.font.format.xtf.cff.T2Operator;

/**
 * Tests for the <code>XtfReader</code> with opentype files.
 * 
 * The test use the data from the <code>ttx</code> output.
 * 
 * @author <a href="mailto:m.g.n@gmx.de">Michael Niedermair</a>
 * @version $Revision$
 */
public class XtfReaderFxlrCharStringTest extends TestCase {

    /**
     * The xtf reader.
     */
    private static XtfReader reader;

    /**
     * Creates a new object.
     * 
     * @throws IOException if an error occurred.
     */
    public XtfReaderFxlrCharStringTest() throws IOException {

        if (reader == null) {
            reader = new XtfReader("../ExTeX-Font-otf/src/font/fxlr.otf");
        }
    }

    /**
     * Check.
     * 
     * @param cs The CharString
     * @param text The text array.
     */
    private void check(CharString cs, String[] text) {

        for (int i = 0; i < text.length; i++) {
            String cmd = text[i];
            if (cmd == null || cmd.trim().length() == 0) {
                break;
            }
            assertFalse("IndexOutOfBoundsException", i >= cs.size());
            T2Operator c = cs.get(i);
            assertNotNull(c);
            String text2 = c.toText();
            assertEquals("CharStringCommand", cmd.trim(), text2);
        }

    }

    // --------------------------------------

    /**
     * test : _notdef
     */
    public void test_notdef() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring(".notdef");
        assertNotNull(cs);
        assertEquals(".notdef", cs.getName());
        String[] text =
                {"-1 0 50 600 50 hstem", "0 50 400 50 vstem", "0 vmoveto",
                        "500 700 -500 hlineto", "250 -305 rmoveto",
                        "-170 255 340 0 rlineto", "-140 -300 rmoveto",
                        "170 255 0 -510 rlineto", "-370 -45 rmoveto",
                        "170 255 170 -255 rlineto", "-370 555 rmoveto",
                        "170 -255 -170 -255 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : A
     */
    public void testA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("A");
        assertNotNull(cs);
        assertEquals("A", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : AE
     */
    public void testAE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("AE");
        assertNotNull(cs);
        assertEquals("AE", cs.getName());
        String[] text =
                {"364 -1 29 -26 39 225 39 24 34 245 39 -29 28 hstemhm",
                        "429 83 hintmask 01111010", "471 3 rmoveto",
                        "30 callsubr", "hintmask 10110110", "31 callsubr",
                        "-200 302 rmoveto", "32 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : AEacute
     */
    public void testAEacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("AEacute");
        assertNotNull(cs);
        assertEquals("AEacute", cs.getName());
        String[] text =
                {"364 -1 29 -26 39 225 39 24 34 245 39 -29 28 75 -21 hstemhm",
                        "429 83 hintmask 01111011", "471 3 rmoveto",
                        "30 callsubr", "hintmask 10110111", "31 callsubr",
                        "-200 302 rmoveto", "32 callsubr", "189 517 rmoveto",
                        "38 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Aacute
     */
    public void testAacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Aacute");
        assertNotNull(cs);
        assertEquals("Aacute", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 82 -21 hstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-21 538 rmoveto",
                        "-125 -87 rlineto",
                        "-12 -8 -3 -6 0 -7 0 -9 6 -5 9 0 9 0 12 3 22 8 rrcurveto",
                        "144 59 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Abreve
     */
    public void testAbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Abreve");
        assertNotNull(cs);
        assertEquals("Abreve", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 53 53 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "55 522 rmoveto", "83 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Acircumflex
     */
    public void testAcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Acircumflex");
        assertNotNull(cs);
        assertEquals("Acircumflex", cs.getName());
        String[] text =
                {"", "194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-59 522 rmoveto", "26 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Adieresis
     */
    public void testAdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Adieresis");
        assertNotNull(cs);
        assertEquals("Adieresis", cs.getName());
        String[] text =
                {"194 1 27 216 39 357 90 hstem", "198 91 131 91 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-240 402 rmoveto", "27 callsubr",
                        "222 1 rmoveto", "28 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Adieresis_alt
     */
    public void testAdieresis_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Adieresis.alt");
        assertNotNull(cs);
        assertEquals("Adieresis.alt", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 65 91 hstem",
                        "216 91 98 91 vstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-222 466 rmoveto",
                        "-25 20 -21 25 25 21 21 25 24 -21 21 -25 -25 -20 -21 -24 vhcurveto",
                        "189 hmoveto", "27 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Agrave
     */
    public void testAgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Agrave");
        assertNotNull(cs);
        assertEquals("Agrave", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 82 -21 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-154 536 rmoveto", "25 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Alpha
     */
    public void testAlpha() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Alpha");
        assertNotNull(cs);
        assertEquals("Alpha", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Alphatonos
     */
    public void testAlphatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Alphatonos");
        assertNotNull(cs);
        assertEquals("Alphatonos", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "193 725 rmoveto",
                        "213 callsubr", "-53 -653 rmoveto", "-82 callsubr",
                        "119 211 rmoveto", "-81 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Amacron
     */
    public void testAmacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Amacron");
        assertNotNull(cs);
        assertEquals("Amacron", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 89 44 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "35 444 rmoveto", "82 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Aogonek
     */
    public void testAogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Aogonek");
        assertNotNull(cs);
        assertEquals("Aogonek", cs.getName());
        String[] text =
                {"194 -225 39 185 29 216 39 375 -20 hstem", "491 60 vstem",
                        "259 283 rmoveto", "-81 callsubr", "146 -508 rmoveto",
                        "36 0 50 20 24 47 rrcurveto", "-15 8 rlineto",
                        "-19 -21 -21 -15 -30 0 rrcurveto",
                        "-36 -22 27 32 51 55 75 80 hvcurveto",
                        "1 0 3 2 0 19 rlineto", "5 -5 3 -5 vhcurveto",
                        "-11 hlineto", "-40 0 -20 19 -14 39 rrcurveto",
                        "-205 542 rlineto",
                        "-8 20 -8 10 -18 0 -10 0 -8 -7 -9 -23 rrcurveto",
                        "-234 -547 rlineto", "-14 -34 -18 -19 -41 0 rrcurveto",
                        "-12 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 64 2 26 24 99 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-29 hlineto", "-30 -16 9 16 hvcurveto",
                        "0 6 1 6 3 7 rrcurveto", "65 155 rlineto",
                        "4 11 8 6 24 0 rrcurveto", "211 0 64 -172 rlineto",
                        "2 -6 1 -6 0 -5 rrcurveto",
                        "-16 -16 -11 -31 vhcurveto", "-28 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 98 2 35 vhcurveto", "23 hlineto",
                        "-62 -33 -41 -59 0 -49 0 -54 40 -31 53 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Aring
     */
    public void testAring() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Aring");
        assertNotNull(cs);
        assertEquals("Aring", cs.getName());
        String[] text =
                {"194 1 27 216 39 396 -21 112 27 hstem", "273 32 107 32 vstem",
                        "259 283 rmoveto", "-81 callsubr", "-165 431 rmoveto",
                        "0 -37 25 -31 34 -11 -1 -2 -1 -2 -1 -3 rrcurveto",
                        "-234 -547 rlineto", "-14 -34 -18 -19 -41 0 rrcurveto",
                        "-12 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 64 2 26 24 99 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-29 hlineto", "-30 -16 9 16 hvcurveto",
                        "0 6 1 6 3 7 rrcurveto", "65 155 rlineto",
                        "4 11 8 6 24 0 rrcurveto", "211 0 64 -172 rlineto",
                        "2 -6 1 -6 0 -5 rrcurveto",
                        "-16 -16 -11 -31 vhcurveto", "-28 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 98 2 35 39 77 -2 0 vhcurveto", "3 2 0 19 rlineto",
                        "5 -5 3 -5 vhcurveto", "-11 hlineto",
                        "-40 0 -20 19 -14 39 rrcurveto",
                        "-205 542 -3 8 rlineto", "33 11 24 31 0 36 rrcurveto",
                        "46 -40 37 -46 -47 -38 -38 -45 vhcurveto",
                        "85 56 rmoveto", "29 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Aringacute
     */
    public void testAringacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Aringacute");
        assertNotNull(cs);
        assertEquals("Aringacute", cs.getName());
        String[] text =
                {"194 1 27 216 39 396 -21 112 27 hstem", "273 32 107 32 vstem",
                        "259 283 rmoveto", "-81 callsubr", "-165 431 rmoveto",
                        "0 -37 25 -31 34 -11 -1 -2 -1 -2 -1 -3 rrcurveto",
                        "-234 -547 rlineto", "-14 -34 -18 -19 -41 0 rrcurveto",
                        "-12 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 64 2 26 24 99 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-29 hlineto", "-30 -16 9 16 hvcurveto",
                        "0 6 1 6 3 7 rrcurveto", "65 155 rlineto",
                        "4 11 8 6 24 0 rrcurveto", "211 0 64 -172 rlineto",
                        "2 -6 1 -6 0 -5 rrcurveto",
                        "-16 -16 -11 -31 vhcurveto", "-28 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 98 2 35 39 77 -2 0 vhcurveto", "3 2 0 19 rlineto",
                        "5 -5 3 -5 vhcurveto", "-11 hlineto",
                        "-40 0 -20 19 -14 39 rrcurveto",
                        "-205 542 -3 8 rlineto",
                        "33 11 23 30 1 35 7 2 9 3 11 4 rrcurveto",
                        "144 58 -62 53 -117 -82 rlineto",
                        "-15 28 -30 19 -33 0 -47 0 -38 -38 0 -45 rrcurveto",
                        "85 56 rmoveto", "29 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Atilde
     */
    public void testAtilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Atilde");
        assertNotNull(cs);
        assertEquals("Atilde", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 62 44 5 45 hstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-16 461 rmoveto",
                        "-19 0 -16 11 -17 12 -19 13 -22 14 -31 0 -43 0 -23 -29 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 18 0 18 -11 19 -12 20 -13 21 -13 22 0 47 0 28 30 12 61 rrcurveto",
                        "-24 6 rlineto", "", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : B
     */
    public void testB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("B");
        assertNotNull(cs);
        assertEquals("B", cs.getName());
        String[] text =
                {"91 -1 34 -34 29 310 35 238 35 -28 27 hstemhm",
                        "106 81 228 77 -30 89 hintmask 01100101",
                        "17 20 rmoveto", "-80 callsubr", "hintmask 10110101",
                        "-79 callsubr", "hintmask 00110110", "-78 callsubr",
                        "hintmask 00101101", "-77 callsubr",
                        "hintmask 00110101", "-76 callsubr",
                        "hintmask 01101101", "-75 callsubr", "170 318 rmoveto",
                        "-74 callsubr", "hintmask 10100101", "-73 callsubr",
                        "503 vmoveto", "hintmask 00110110", "-72 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Beta
     */
    public void testBeta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Beta");
        assertNotNull(cs);
        assertEquals("Beta", cs.getName());
        String[] text =
                {"91 -1 34 -34 29 310 35 238 35 -28 27 hstemhm",
                        "106 81 228 77 -30 89 hintmask 01100101",
                        "17 20 rmoveto", "-80 callsubr", "hintmask 10110101",
                        "-79 callsubr", "hintmask 00110110", "-78 callsubr",
                        "hintmask 00101101", "-77 callsubr",
                        "hintmask 00110101", "-76 callsubr",
                        "hintmask 01101101", "-75 callsubr", "170 318 rmoveto",
                        "-74 callsubr", "hintmask 10100101", "-73 callsubr",
                        "503 vmoveto", "hintmask 00110110", "-72 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : C
     */
    public void testC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("C");
        assertNotNull(cs);
        assertEquals("C", cs.getName());
        String[] text =
                {"143 -12 41 592 37 hstem", "37 87 vstem", "355 -12 rmoveto",
                        "-71 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Cacute
     */
    public void testCacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Cacute");
        assertNotNull(cs);
        assertEquals("Cacute", cs.getName());
        String[] text =
                {"143 -12 41 592 37 60 -21 hstem", "37 87 vstem",
                        "355 -12 rmoveto", "-71 callsubr", "37 831 rmoveto",
                        "85 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ccaron
     */
    public void testCcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ccaron");
        assertNotNull(cs);
        assertEquals("Ccaron", cs.getName());
        String[] text =
                {
                        "143 -12 41 592 37 61 -21 hstem",
                        "37 87 vstem",
                        "355 -12 rmoveto",
                        "-71 callsubr",
                        "-22 710 rmoveto",
                        "42 hlineto",
                        "31 33 32 33 37 28 rrcurveto",
                        "-14 20 rlineto",
                        "",
                        "-38 -16 -32 -18 -37 -27 -33 25 -34 19 -39 17 rrcurveto",
                        "-16 -20 rlineto", "36 -27 35 -31 30 -36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ccedilla
     */
    public void testCcedilla() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ccedilla");
        assertNotNull(cs);
        assertEquals("Ccedilla", cs.getName());
        String[] text =
                {"143 -186 26 76 31 41 41 592 37 hstem", "37 87 276 53 vstem",
                        "358 -84 rmoveto", "33 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ccircumflex
     */
    public void testCcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ccircumflex");
        assertNotNull(cs);
        assertEquals("Ccircumflex", cs.getName());
        String[] text =
                {"143 -12 41 592 37 hstem", "37 87 vstem", "355 -12 rmoveto",
                        "-71 callsubr", "23 819 rmoveto", "-43 hlineto",
                        "-31 -34 -32 -32 -37 -29 rrcurveto", "15 -20 rlineto",
                        "38 16 32 19 36 26 34 -24 34 -20 39 -17 rrcurveto",
                        "16 20 rlineto", "-37 28 -34 30 -30 37 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Cdotaccent
     */
    public void testCdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Cdotaccent");
        assertNotNull(cs);
        assertEquals("Cdotaccent", cs.getName());
        String[] text =
                {"143 -12 41 592 37 44 95 hstem", "37 87 185 96 vstem",
                        "355 -12 rmoveto", "-71 callsubr", "-46 762 rmoveto",
                        "86 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Chi
     */
    public void testChi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Chi");
        assertNotNull(cs);
        assertEquals("Chi", cs.getName());
        String[] text =
                {"154 -1 29 590 28 hstem", "13 625 rmoveto", "-37 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : D
     */
    public void testD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("D");
        assertNotNull(cs);
        assertEquals("D", cs.getName());
        String[] text =
                {"196 -1 29 -29 34 580 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01101100", "187 72 rmoveto",
                        "-70 callsubr", "-170 -53 rmoveto", "-69 callsubr",
                        "hintmask 10011100", "-68 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Dcaron
     */
    public void testDcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Dcaron");
        assertNotNull(cs);
        assertEquals("Dcaron", cs.getName());
        String[] text =
                {
                        "196 -1 29 -29 34 580 33 -28 28 73 -21 hstemhm",
                        "106 81 375 92 hintmask 01101110",
                        "187 72 rmoveto",
                        "-70 callsubr",
                        "-170 -53 rmoveto",
                        "-69 callsubr",
                        "hintmask 10011110",
                        "-68 callsubr",
                        "274 679 rmoveto",
                        "43 hlineto",
                        "30 33 32 33 38 28 rrcurveto",
                        "-15 20 rlineto",
                        "-38 -16 -32 -18 -37 -27 -33 25 -34 19 -39 17 rrcurveto",
                        "-16 -20 rlineto", "37 -27 34 -31 30 -36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Dcroat
     */
    public void testDcroat() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Dcroat");
        assertNotNull(cs);
        assertEquals("Dcroat", cs.getName());
        String[] text =
                {
                        "196 -1 29 -29 34 254 40 286 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01110110",
                        "187 72 rmoveto",
                        "215 157 40 -157 247 vlineto",
                        "35 35 4 49 216 75 -175 -154 -202 -125 -49 -141 vhcurveto",
                        "-98 -11 7 32 hvcurveto", "-170 -53 rmoveto",
                        "-69 callsubr", "hintmask 10101110",
                        "-128 1 0 -20 rlineto", "-5 4 -3 5 vhcurveto",
                        "28 hlineto", "42 10 -10 -36 hvcurveto",
                        "-245 -89 -40 89 -213 vlineto",
                        "-32 -14 -14 -38 vhcurveto", "-30 hlineto",
                        "-4 -3 -4 -5 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Delta
     */
    public void testDelta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Delta");
        assertNotNull(cs);
        assertEquals("Delta", cs.getName());
        String[] text =
                {"135 -2 33 620 -20 hstem", "354 651 rmoveto",
                        "-66 0 -255 -633 rlineto",
                        "-5 -10 0 -1 0 -2 rrcurveto", "-6 8 -1 13 vhcurveto",
                        "532 hlineto", "17 4 2 3 hvcurveto",
                        "0 2 -1 4 -3 9 rrcurveto", "-298 537 rmoveto",
                        "204 -524 -416 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : E
     */
    public void testE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("E");
        assertNotNull(cs);
        assertEquals("E", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011", "353 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-64 callsubr",
                        "hintmask 01111011", "-63 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Eacute
     */
    public void testEacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Eacute");
        assertNotNull(cs);
        assertEquals("Eacute", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 74 -21 hstemhm",
                        "102 80 194 25 hintmask 0011101110000000",
                        "353 606 rmoveto",
                        "-67 callsubr",
                        "hintmask 0011011110000000",
                        "-66 callsubr",
                        "hintmask 0011101110000000",
                        "-65 callsubr",
                        "hintmask 1011011110000000",
                        "-64 callsubr",
                        "hintmask 0111101110000000",
                        "-63 callsubr",
                        "132 215 rmoveto",
                        "-124 -87 rlineto",
                        "-13 -8 -2 -6 0 -7 0 -9 6 -5 9 0 8 0 13 3 22 8 rrcurveto",
                        "", "144 59 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ebreve
     */
    public void testEbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ebreve");
        assertNotNull(cs);
        assertEquals("Ebreve", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 44 53 hstemhm",
                        "102 80 194 25 hintmask 0011101110000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011110000000", "-66 callsubr",
                        "hintmask 0011101110000000", "-65 callsubr",
                        "hintmask 1011011110000000", "-64 callsubr",
                        "hintmask 0111101110000000", "-63 callsubr",
                        "197 198 rmoveto", "-27 hlineto",
                        "-7 -39 -51 -22 -49 0 -53 0 -47 22 -9 39 rrcurveto",
                        "-27 hlineto",
                        "5 -70 57 -44 74 0 65 0 63 42 6 72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ecaron
     */
    public void testEcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ecaron");
        assertNotNull(cs);
        assertEquals("Ecaron", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 73 -21 hstemhm",
                        "102 80 194 25 hintmask 0011101110000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011110000000", "-66 callsubr",
                        "hintmask 0011101110000000", "-65 callsubr",
                        "hintmask 1011011110000000", "-64 callsubr",
                        "hintmask 0111101110000000", "-63 callsubr",
                        "50 92 rmoveto", "94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ecircumflex
     */
    public void testEcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ecircumflex");
        assertNotNull(cs);
        assertEquals("Ecircumflex", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011", "353 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-64 callsubr",
                        "hintmask 01111011", "-63 callsubr", "99 199 rmoveto",
                        "35 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Edieresis
     */
    public void testEdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Edieresis");
        assertNotNull(cs);
        assertEquals("Edieresis", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 59 90 hstemhm",
                        "102 80 -34 91 98 91 -52 25 hintmask 0011101100100000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011100100000", "-66 callsubr",
                        "hintmask 0011101100100000", "", "-65 callsubr",
                        "hintmask 1011011100100000", "-64 callsubr",
                        "hintmask 0111101100100000", "-63 callsubr",
                        "hintmask 0011001010000000", "-70 144 rmoveto",
                        "36 callsubr", "hintmask 0011001001000000",
                        "189 hmoveto", "37 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Edotaccent
     */
    public void testEdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Edotaccent");
        assertNotNull(cs);
        assertEquals("Edotaccent", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 46 96 hstemhm",
                        "102 80 50 96 48 25 hintmask 0011101111000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011111000000", "-66 callsubr",
                        "hintmask 0011101111000000", "-65 callsubr",
                        "hintmask 1011011111000000", "-64 callsubr",
                        "hintmask 0111101111000000", "-63 callsubr",
                        "14 134 rmoveto", "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Egrave
     */
    public void testEgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Egrave");
        assertNotNull(cs);
        assertEquals("Egrave", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 73 -21 hstemhm",
                        "102 80 194 25 hintmask 0011101110000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011110000000", "-66 callsubr",
                        "hintmask 0011101110000000", "-65 callsubr",
                        "hintmask 1011011110000000", "-64 callsubr",
                        "hintmask 0111101110000000", "-63 callsubr",
                        "27 212 rmoveto", "34 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Eightroman
     */
    public void testEightroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Eightroman");
        assertNotNull(cs);
        assertEquals("Eightroman", cs.getName());
        String[] text =
                {
                        "709 -2 24 529 24 hstem",
                        "631 72 133 72 130 72 vstem",
                        "835 527 rmoveto",
                        "1 -4 0 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -6 -5 -4 -3 -8 -1 -14 -1 rrcurveto",
                        "-60 hlineto",
                        "-13 1 -8 1 -4 3 -6 5 -3 6 -1 7 -1 7 0 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 0 7 1 7 0 7 4 6 6 6 4 3 7 2 14 0 rrcurveto",
                        "60 hlineto",
                        "14 0 8 -2 4 -3 6 -4 2 -6 2 -9 rrcurveto",
                        "-205 hmoveto",
                        "0 -4 1 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -4 -6 -6 -5 -3 -3 -8 -1 -14 -1 rrcurveto",
                        "-30 hlineto",
                        "-3 0 -4 -1 -1 -6 rrcurveto",
                        "-19 vlineto",
                        "0 60 2 44 vhcurveto",
                        "206 0 201 0 rlineto",
                        "45 72 -2 0 hvcurveto",
                        "18 vlineto",
                        "0 4 -2 3 -6 1 rrcurveto",
                        "-30 hlineto",
                        "-13 1 -8 1 -4 3 -6 5 -4 6 0 7 -1 7 0 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 0 7 1 7 0 7 3 6 7 6 4 3 7 2 14 0 rrcurveto",
                        "30 hlineto",
                        "7 1 5 3 hvcurveto",
                        "0 18 -117 -2 -201 0 -206 0 -177 0 rlineto",
                        "-10 0 -93 2 -4 0 rrcurveto",
                        "-2 -2 hlineto",
                        "-17 vlineto",
                        "0 -3 1 -3 5 -1 rrcurveto",
                        "30 -1 rlineto",
                        "21 0 10 -2 3 -2 3 -4 2 -4 0 -6 rrcurveto",
                        "-4 vlineto",
                        "-1 -5 2 -7 -4 -10 rrcurveto",
                        "-140 -371 -123 371 rlineto",
                        "-2 8 -2 7 -2 7 rrcurveto",
                        "5 vlineto",
                        "0 5 1 4 4 4 2 3 7 1 14 0 rrcurveto",
                        "38 1 rlineto",
                        "3 0 2 2 2 3 rrcurveto",
                        "0 1 0 2 0 16 0 2 -2 0 rlineto",
                        "-13 0 -109 -2 -4 0 -10 0 -89 2 -3 0 rrcurveto",
                        "-3 -2 hlineto",
                        "-17 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 2 0 rrcurveto",
                        "20 -1 rlineto",
                        "12 0 9 -1 6 -3 8 -5 5 -6 4 -9 rrcurveto",
                        "8 -22 163 -487 rlineto",
                        "5 -16 7 -7 11 0 11 0 8 7 6 16 rrcurveto",
                        "176 487 rlineto",
                        "3 10 3 7 1 6 2 5 5 7 10 7 5 3 8 1 14 0 rrcurveto",
                        "57 1 rlineto",
                        "13 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto",
                        "407 hmoveto",
                        "1 -4 0 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -7 -5 -3 -3 -8 -1 -15 -1 rrcurveto",
                        "-55 hlineto",
                        "-14 1 -7 1 -4 3 -6 5 -4 6 -1 7 -1 7 0 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 0 7 1 7 1 7 3 6 7 6 3 3 8 2 14 0 rrcurveto",
                        "55 hlineto",
                        "14 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Elevenroman
     */
    public void testElevenroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Elevenroman");
        assertNotNull(cs);
        assertEquals("Elevenroman", cs.getName());
        String[] text =
                {
                        "320 -3 27 -24 23 530 26 hstemhm",
                        "649 73 hintmask 10110000",
                        "172 67 rmoveto",
                        "121 175 124 -175 rlineto",
                        "7 -9 5 -8 3 -4 2 -4 1 -4 0 -4 0 -2 0 -2 -1 -2 0 -1 -1 0 0 0 -2 -2 -7 -1 -11 0 rrcurveto",
                        "hintmask 01110000",
                        "-37 -1 rlineto",
                        "-2 0 -1 -1 -1 -1 -1 -2 0 -1 0 -2 rrcurveto",
                        "1 -16 rlineto",
                        "hintmask 10110000",
                        "-3 2 vlineto",
                        "hintmask 01110000",
                        "13 1 110 2 4 0 176 -2 -73 2 75 0 rrcurveto",
                        "45 71 -2 0 hvcurveto",
                        "18 vlineto",
                        "hintmask 10110000",
                        "0 4 -2 3 -5 1 rrcurveto",
                        "-30 hlineto",
                        "-13 1 -8 1 -4 3 -6 5 -4 6 -1 7 0 7 -1 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 1 6 0 8 1 7 3 6 7 6 3 3 8 2 14 0 rrcurveto",
                        "30 hlineto",
                        "6 1 5 3 hvcurveto",
                        "0 18 -116 -2 -196 -1 rlineto",
                        "-9 0 -86 3 -4 0 rrcurveto",
                        "-2 -3 hlineto",
                        "0 -16 0 -4 rlineto",
                        "1 -2 1 -1 2 0 rrcurveto",
                        "33 -1 rlineto",
                        "14 0 6 -2 1 -2 rrcurveto",
                        "1 hlineto",
                        "1 -2 0 -1 0 -3 0 -3 -1 -4 -3 -5 -1 -3 -4 -7 -8 -11 rrcurveto",
                        "-112 -161 -113 161 rlineto",
                        "-8 11 -4 6 -2 4 -2 4 -2 4 0 4 0 2 1 2 1 2 rrcurveto",
                        "1 vlineto",
                        "3 1 5 2 12 0 rrcurveto",
                        "40 1 rlineto",
                        "2 0 2 1 1 2 rrcurveto",
                        "0 4 1 16 0 3 -3 0 rlineto",
                        "-13 -1 -108 -2 -4 0 -10 0 -89 3 -3 0 rrcurveto",
                        "-3 -3 hlineto",
                        "-16 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 3 0 rrcurveto",
                        "9 -1 rlineto",
                        "13 -1 10 -1 6 -3 9 -4 8 -7 8 -9 5 -6 5 -7 6 -8 rrcurveto",
                        "160 -226 -146 -210 rlineto",
                        "-8 -10 -5 -8 -3 -4 -6 -8 -8 -6 -10 -5 -6 -3 -9 -1 -14 -1 rrcurveto",
                        "hintmask 01110000",
                        "-24 -1 rlineto",
                        "-2 0 -2 0 -2 -1 -3 -1 -1 -1 0 -4 rrcurveto",
                        "0 -16 rlineto",
                        "hintmask 10110000",
                        "-3 2 vlineto",
                        "hintmask 01110000",
                        "8 1 73 2 3 0 rrcurveto",
                        "hintmask 10110000",
                        "11 0 96 -3 4 0 rrcurveto",
                        "3 hlineto",
                        "hintmask 01110000",
                        "507 callsubr",
                        "hintmask 10110000",
                        "-35 1 rlineto",
                        "-14 0 -6 2 -1 2 -2 1 0 2 0 3 0 3 1 4 3 5 rrcurveto",
                        "4 7 4 8 5 6 rrcurveto",
                        "338 3 rmoveto",
                        "-170 240 137 196 rlineto",
                        "4 7 6 8 5 6 6 8 8 7 11 5 5 3 10 2 13 0 rrcurveto",
                        "67 1 rlineto",
                        "14 0 8 -2 4 -3 6 -5 3 -5 1 -9 1 -4 0 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -6 -5 -4 -3 -8 -1 -14 -1 -24 0 -26 -1 -11 5 -10 6 -9 6 -6 8 -7 10 -5 7 -4 5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Emacron
     */
    public void testEmacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Emacron");
        assertNotNull(cs);
        assertEquals("Emacron", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 87 44 hstemhm",
                        "102 80 194 25 hintmask 0011101110000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011110000000", "-66 callsubr",
                        "hintmask 0011101110000000", "-65 callsubr",
                        "hintmask 1011011110000000", "-64 callsubr",
                        "hintmask 0111101110000000", "-63 callsubr",
                        "167 127 rmoveto", "91 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Eng
     */
    public void testEng() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Eng");
        assertNotNull(cs);
        assertEquals("Eng", cs.getName());
        String[] text =
                {
                        "194 -198 31 168 26 591 29 hstemhm",
                        "104 45 372 82 -44 44 hintmask 11111000",
                        "521 39 rmoveto",
                        "-2 -159 -32 -47 -47 0 -28 0 -3 14 -3 12 -3 12 -7 27 -28 0 rrcurveto",
                        "-15 -17 -5 -25 -53 71 -13 33 hvcurveto",
                        "30 0 33 17 26 26 57 60 17 65 0 116 rrcurveto",
                        "hintmask 11110100", "0 1 0 470 rlineto",
                        "30 15 31 39 vhcurveto", "27 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -72 -3 -39 -36 -71 3 0 vhcurveto",
                        "-8 -2 0 -19 rlineto", "-5 9 -3 5 vhcurveto",
                        "26 hlineto", "41 13 -34 -27 hvcurveto",
                        "0 -379 1 -23 rlineto", "-11 -2 -4 -4 vhcurveto",
                        "-8 0 -16 28 -28 37 -130 176 -219 266 0 0 rrcurveto",
                        "-131 0 -2 -5 0 -16 rlineto", "-5 7 -3 5 vhcurveto",
                        "5 hlineto", "33 0 29 -42 6 -26 rrcurveto",
                        "-462 vlineto", "-27 -13 -34 -41 vhcurveto",
                        "-26 hlineto", "-5 -8 -3 -5 hvcurveto",
                        "0 -19 7 -1 rlineto", "0 72 2 35 40 71 -2 0 vhcurveto",
                        "2 1 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 31 30 hvcurveto",
                        "351 vlineto", "34 2 15 8 vhcurveto",
                        "6 0 11 -11 17 -22 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Eogonek
     */
    public void testEogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Eogonek");
        assertNotNull(cs);
        assertEquals("Eogonek", cs.getName());
        String[] text =
                {
                        "68 -224 39 184 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 129 60 5 25 hintmask 1011110111000000",
                        "404 -224 rmoveto", "36 0 50 20 24 47 rrcurveto",
                        "-15 8 rlineto", "-20 -21 -20 -15 -30 0 rrcurveto",
                        "-36 -22 27 32 51 55 75 80 hvcurveto", "7 hlineto",
                        "5 56 10 57 12 52 rrcurveto", "-31 5 rlineto",
                        "-20 -72 -29 -59 -76 0 rrcurveto", "-166 hlineto",
                        "-22 -14 6 27 hvcurveto", "255 137 vlineto",
                        "34 0 11 -15 5 -29 rrcurveto", "6 -31 rlineto",
                        "-3 3 -4 5 vhcurveto", "23 0 3 3 rlineto",
                        "-3 17 -5 45 0 34 0 33 4 37 4 25 rrcurveto",
                        "2 -1 2 -3 vhcurveto", "-22 hlineto",
                        "-4 -3 -4 -4 hvcurveto", "-7 -30 rlineto",
                        "-6 -28 -9 -16 -35 0 rrcurveto", "-137 213 hlineto",
                        "24 12 8 24 vhcurveto", "135 hlineto",
                        "75 0 18 -51 22 -69 rrcurveto", "29 5 rlineto",
                        "hintmask 1001101111000000", "-66 callsubr",
                        "hintmask 1001110111000000", "-65 callsubr",
                        "hintmask 1101101111000000", "-64 callsubr",
                        "hintmask 1011110111000000", "77 -1 192 0 rlineto",
                        "-60 -34 -40 -57 0 -48 rrcurveto",
                        "-54 40 -31 53 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Epsilon
     */
    public void testEpsilon() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Epsilon");
        assertNotNull(cs);
        assertEquals("Epsilon", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011", "353 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-64 callsubr",
                        "hintmask 01111011", "-63 callsubr", "", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Epsilontonos
     */
    public void testEpsilontonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Epsilontonos");
        assertNotNull(cs);
        assertEquals("Epsilontonos", cs.getName());
        String[] text =
                {"156 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "189 81 194 25 hintmask 00111011", "441 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-130 1 0 -21 rlineto",
                        "-3 1 -4 7 vhcurveto", "30 hlineto",
                        "38 13 -14 -31 hvcurveto", "-501 vlineto",
                        "-28 -11 -16 -40 vhcurveto", "-30 hlineto",
                        "-6 -2 -4 -3 hvcurveto", "0 -22 129 2 rlineto",
                        "hintmask 01111011", "78 -1 294 0 rlineto",
                        "4 56 11 57 11 52 rrcurveto", "-30 5 rlineto",
                        "-20 -72 -29 -59 -76 0 rrcurveto", "-166 hlineto",
                        "-22 -14 6 27 hvcurveto", "255 137 vlineto",
                        "33 0 12 -15 5 -29 rrcurveto", "6 -31 rlineto",
                        "-3 3 -4 5 vhcurveto", "23 0 3 3 rlineto",
                        "-3 17 -5 45 0 34 0 33 4 37 4 25 rrcurveto",
                        "2 -1 2 -3 vhcurveto", "-22 hlineto",
                        "-4 -3 -4 -4 hvcurveto", "-7 -30 rlineto",
                        "-6 -28 -9 -16 -35 0 rrcurveto", "-137 213 hlineto",
                        "24 12 8 24 vhcurveto", "-261 119 rmoveto",
                        "-10 0 -13 -7 -4 -10 rrcurveto", "-53 -143 rlineto",
                        "-1 -3 -1 -5 0 -1 0 -8 8 -6 8 0 4 0 4 4 3 4 rrcurveto",
                        "92 121 rlineto",
                        "3 6 1 5 0 5 0 20 -21 18 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Eta
     */
    public void testEta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Eta");
        assertNotNull(cs);
        assertEquals("Eta", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 hstem", "106 81 327 80 vstem",
                        "514 72 rmoveto", "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Etatonos
     */
    public void testEtatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Etatonos");
        assertNotNull(cs);
        assertEquals("Etatonos", cs.getName());
        String[] text =
                {"294 1 27 296 39 255 27 hstem", "202 80 327 80 vstem",
                        "609 72 rmoveto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-27 hlineto", "-39 -16 13 31 hvcurveto",
                        "502 vlineto", "28 14 16 41 vhcurveto", "27 hlineto",
                        "4 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-1 -1 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "252 327 vlineto", "-551 401 rmoveto", "214 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Eth
     */
    public void testEth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Eth");
        assertNotNull(cs);
        assertEquals("Eth", cs.getName());
        String[] text =
                {"196 -1 29 -29 34 254 39 287 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01110110", "187 72 rmoveto",
                        "40 callsubr", "-170 -53 rmoveto", "-69 callsubr",
                        "hintmask 10101110", "41 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Euro
     */
    public void testEuro() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Euro");
        assertNotNull(cs);
        assertEquals("Euro", cs.getName());
        String[] text =
                {
                        "-63 -12 42 193 34 51 34 208 35 hstem",
                        "57 81 vstem",
                        "14 308 rmoveto",
                        "43 hlineto",
                        "0 -10 -1 -9 0 -10 0 -8 0 -7 1 -7 rrcurveto",
                        "-37 0 -20 -25 0 -9 59 0 rlineto",
                        "15 -143 76 -92 119 0 51 0 40 17 28 -2 7 40 22 65 9 46 rrcurveto",
                        "-30 7 rlineto",
                        "-23 -66 -22 -65 -73 0 -81 0 -46 62 -11 131 rrcurveto",
                        "168 0 18 34 -188 0 0 33 0 18 205 0 18 34 -221 0 rlineto",
                        "10 115 43 93 78 0 73 0 29 -64 16 -67 rrcurveto",
                        "30 5 rlineto",
                        "-9 46 -10 58 -1 42 -28 -2 -46 17 -52 0 -113 0 -82 -94 -18 -149 rrcurveto",
                        "-26 0 -19 -24 rlineto", "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Euro_fitted
     */
    public void testEuro_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Euro.fitted");
        assertNotNull(cs);
        assertEquals("Euro.fitted", cs.getName());
        String[] text =
                {
                        "114 -12 43 186 42 54 42 187 37 hstem",
                        "120 84 vstem",
                        "44 313 rmoveto",
                        "78 hlineto",
                        "-2 -12 0 -12 0 -14 rrcurveto",
                        "-16 -92 vlineto",
                        "-23 -42 119 0 rlineto",
                        "21 -132 91 -97 160 0 52 0 64 12 27 0 8 40 17 65 13 45 rrcurveto",
                        "-31 8 rlineto",
                        "-22 -65 -32 -62 -104 0 -93 0 -63 86 -21 100 rrcurveto",
                        "188 0 22 42 -216 0 rlineto",
                        "0 10 -1 9 0 10 0 8 0 9 1 8 rrcurveto",
                        "237 0 22 42 -255 0 rlineto",
                        "21 142 91 45 62 0 84 0 46 -60 27 -86 rrcurveto",
                        "30 5 rlineto",
                        "-10 51 -9 48 -3 55 -47 4 -35 20 -93 0 -120 0 -98 -88 -28 -136 rrcurveto",
                        "-60 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : F
     */
    public void testF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("F");
        assertNotNull(cs);
        assertEquals("F", cs.getName());
        String[] text =
                {"-14 -1 29 299 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 198 25 hintmask 11110110", "182 574 rmoveto",
                        "-62 callsubr", "hintmask 11101110", "-66 callsubr",
                        "hintmask 11110110", "-257 0 -74 -1 rlineto",
                        "hintmask 11101110", "-61 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Fiveroman
     */
    public void testFiveroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Fiveroman");
        assertNotNull(cs);
        assertEquals("Fiveroman", cs.getName());
        String[] text =
                {"80 16 -21 556 27 hstem", "310 18 rmoveto", "176 487 rlineto",
                        "3 10 3 7 1 6 2 5 5 7 10 7 5 3 8 1 14 0 rrcurveto",
                        "18 1 rlineto", "2 0 3 0 1 1 2 2 2 1 0 4 rrcurveto",
                        "-1 16 0 2 -2 0 rlineto",
                        "-8 0 -68 -2 -3 0 -10 0 -93 2 -4 0 rrcurveto",
                        "-2 -2 hlineto", "-17 vlineto",
                        "0 -3 1 -3 5 -1 rrcurveto", "30 -1 rlineto",
                        "21 0 10 -2 3 -2 3 -4 2 -4 0 -6 rrcurveto",
                        "-4 vlineto", "-1 -5 2 -7 -4 -10 rrcurveto",
                        "-140 -371 -123 371 rlineto",
                        "-2 8 -2 6 -2 8 rrcurveto", "5 vlineto",
                        "0 5 1 4 4 4 2 3 7 1 14 0 rrcurveto", "38 1 rlineto",
                        "4 0 2 2 1 4 rrcurveto", "0 2 0 16 0 2 -2 0 rlineto",
                        "-13 0 -109 -2 -4 0 -10 0 -89 2 -3 0 rrcurveto",
                        "-3 -2 hlineto", "-17 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 2 0 rrcurveto",
                        "20 -1 rlineto",
                        "12 0 9 -1 6 -3 8 -5 5 -6 4 -9 rrcurveto",
                        "8 -22 163 -487 rlineto",
                        "5 -16 7 -7 11 0 11 0 8 7 6 16 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Fourroman
     */
    public void testFourroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Fourroman");
        assertNotNull(cs);
        assertEquals("Fourroman", cs.getName());
        String[] text =
                {
                        "291 -1 24 528 27 hstem",
                        "102 71 vstem",
                        "101 527 rmoveto",
                        "0 -4 1 -6 0 -11 rrcurveto",
                        "-438 vlineto",
                        "0 -9 0 -7 -1 -6 -1 -7 -4 -7 -6 -5 -4 -2 -7 -2 -15 0 rrcurveto",
                        "-29 -1 rlineto",
                        "-3 -5 0 -7 hvcurveto",
                        "-19 vlineto",
                        "0 69 3 44 45 63 -3 0 vhcurveto",
                        "19 vlineto",
                        "3 -2 4 -6 vhcurveto",
                        "-30 1 rlineto",
                        "-13 0 -8 1 -4 3 -7 5 -3 6 -1 8 -1 7 0 7 0 8 rrcurveto",
                        "438 vlineto",
                        "0 8 0 7 1 7 1 7 3 6 7 5 3 3 8 2 14 0 rrcurveto",
                        "49 hlineto",
                        "12 0 9 -1 5 -3 8 -5 6 -6 4 -9 rrcurveto",
                        "7 -22 163 -487 rlineto",
                        "6 -16 7 -7 10 0 11 0 8 7 6 16 rrcurveto",
                        "176 487 rlineto",
                        "3 10 3 7 2 6 1 5 4 7 12 7 4 3 9 1 14 0 rrcurveto",
                        "17 1 rlineto",
                        "3 0 2 0 1 1 3 2 1 1 0 4 rrcurveto",
                        "0 16 0 2 -3 0 rlineto",
                        "-7 0 -69 -2 -2 0 -11 0 -93 2 -3 0 rrcurveto",
                        "-3 -2 hlineto",
                        "-17 vlineto",
                        "0 -3 1 -3 5 -1 rrcurveto",
                        "1 0 29 -1 rlineto",
                        "21 0 10 -2 3 -2 4 -4 2 -4 0 -6 0 -1 0 -2 -1 -1 0 -5 2 -7 -4 -10 rrcurveto",
                        "-140 -371 -123 371 rlineto",
                        "-3 8 -2 6 -2 8 rrcurveto", "5 vlineto",
                        "0 5 1 4 4 4 2 3 7 1 15 0 rrcurveto", "38 1 rlineto",
                        "3 0 2 2 1 3 rrcurveto", "0 3 0 16 0 2 -2 0 rlineto",
                        "-13 0 -108 -2 -5 0 -175 2 184 2 -202 -5 rrcurveto",
                        "-113 3 0 -19 rlineto", "0 -5 2 -2 6 -1 rrcurveto",
                        "29 hlineto",
                        "14 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : G
     */
    public void testG() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("G");
        assertNotNull(cs);
        assertEquals("G", cs.getName());
        String[] text =
                {"192 -12 36 247 34 316 37 hstem", "32 87 421 81 vstem",
                        "375 658 rmoveto", "-60 callsubr", "", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Gamma
     */
    public void testGamma() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Gamma");
        assertNotNull(cs);
        assertEquals("Gamma", cs.getName());
        String[] text =
                {"-20 1 27 577 40 -27 27 hstemhm", "102 80 hintmask 11010000",
                        "343 605 rmoveto", "224 callsubr", "hintmask 10110000",
                        "225 callsubr", "hintmask 11010000", "-247 0 rlineto",
                        "hintmask 10110000", "226 callsubr",
                        "hintmask 11010000", "26 14 6 22 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Gbreve
     */
    public void testGbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Gbreve");
        assertNotNull(cs);
        assertEquals("Gbreve", cs.getName());
        String[] text =
                {"192 -12 36 247 34 316 37 35 52 hstem", "32 87 421 81 vstem",
                        "375 658 rmoveto", "-60 callsubr", "131 148 rmoveto",
                        "-27 hlineto",
                        "-6 -39 -52 -22 -49 0 -53 0 -47 22 -8 39 rrcurveto",
                        "-28 hlineto",
                        "5 -70 57 -43 74 0 66 0 62 42 6 71 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Gcaron
     */
    public void testGcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Gcaron");
        assertNotNull(cs);
        assertEquals("Gcaron", cs.getName());
        String[] text =
                {"192 -12 36 247 34 316 37 61 -21 hstem", "32 87 421 81 vstem",
                        "375 658 rmoveto", "-60 callsubr", "-33 40 rmoveto",
                        "94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Gcircumflex
     */
    public void testGcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Gcircumflex");
        assertNotNull(cs);
        assertEquals("Gcircumflex", cs.getName());
        String[] text =
                {"192 -12 36 247 34 316 37 hstem", "32 87 421 81 vstem",
                        "375 658 rmoveto", "-60 callsubr", "10 147 rmoveto",
                        "95 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Gcommaaccent
     */
    public void testGcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Gcommaaccent");
        assertNotNull(cs);
        assertEquals("Gcommaaccent", cs.getName());
        String[] text =
                {
                        "192 -134 82 40 36 247 34 316 37 hstem",
                        "32 87 285 33 103 81 vstem",
                        "375 658 rmoveto",
                        "-60 callsubr",
                        "-710 vmoveto",
                        "-36 -16 -24 -16 -17 10 -25 41 hvcurveto",
                        "7 0 10 3 12 6 1 -3 0 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "4 -16 rlineto", "90 3 18 76 0 26 rrcurveto",
                        "36 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Gdotaccent
     */
    public void testGdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Gdotaccent");
        assertNotNull(cs);
        assertEquals("Gdotaccent", cs.getName());
        String[] text =
                {
                        "192 -12 36 247 34 316 37 48 95 hstem",
                        "32 87 208 96 117 81 vstem",
                        "375 658 rmoveto",
                        "-60 callsubr",
                        "-48 95 rmoveto",
                        "-26 22 -21 26 26 22 21 26 27 -22 21 -26 -26 -22 -21 -27 vhcurveto",
                        "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Germandbls
     */
    public void testGermandbls() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Germandbls");
        assertNotNull(cs);
        assertEquals("Germandbls", cs.getName());
        String[] text =
                {
                        "213 -12 40 -27 27 593 37 hstemhm",
                        "106 81 377 90 hintmask 10111000",
                        "106 71 rmoveto",
                        "224 vlineto",
                        "201 56 162 262 vhcurveto",
                        "62 0 64 -10 58 -19 rrcurveto",
                        "0 -24 -147 -236 rlineto",
                        "-4 -8 2 -4 6 -1 101 -6 88 -74 0 -95 0 -98 -77 -95 -132 0 -32 0 -36 17 -33 0 -8 0 -8 -6 -10 -1 0 23 -5 51 -11 79 rrcurveto",
                        "29 3 rlineto", "19 -80 37 -46 67 0 rrcurveto",
                        "50 60 32 116 36 -25 113 -158 hvcurveto",
                        "-6 0 -5 0 -7 -1 rrcurveto", "-6 24 rlineto",
                        "48 68 93 154 0 23 rrcurveto",
                        "14 -50 14 -42 -119 -100 -92 -209 vhcurveto",
                        "-249 vlineto", "hintmask 01111000",
                        "-30 15 -13 40 vhcurveto", "12 hlineto",
                        "5 4 -3 -5 hvcurveto", "0 -19 -2 -2 rlineto",
                        "0 -73 2 -40 -35 -79 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto", "5 3 3 5 vhcurveto", "12 hlineto",
                        "41 13 16 27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Germandbls_alt
     */
    public void testGermandbls_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Germandbls.alt");
        assertNotNull(cs);
        assertEquals("Germandbls.alt", cs.getName());
        String[] text =
                {
                        "446 5 19 600 34 hstem",
                        "48 69 237 81 85 69 236 81 vstem",
                        "382 631 rmoveto",
                        "-42 callsubr",
                        "472 hmoveto",
                        "-55 8 2 19 -93 0 -87 0 -101 -67 0 -106 0 -117 123 -50 71 -27 61 -24 50 -27 0 -91 0 -81 -57 -44 -77 0 -88 0 -47 63 -20 91 rrcurveto",
                        "-31 -3 rlineto",
                        "11 -76 6 -48 3 -51 17 0 8 5 20 0 24 0 16 -17 99 0 114 0 83 94 0 102 0 121 -93 41 -83 30 -42 15 -99 38 0 83 rrcurveto",
                        "61 44 51 66 vhcurveto",
                        "99 0 28 -84 18 -66 rrcurveto", "31 5 rlineto",
                        "-9 49 -8 50 -4 53 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : H
     */
    public void testH() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("H");
        assertNotNull(cs);
        assertEquals("H", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 hstem", "106 81 327 80 vstem",
                        "514 72 rmoveto", "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : H18533
     */
    public void testH18533() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("H18533");
        assertNotNull(cs);
        assertEquals("H18533", cs.getName());
        String[] text =
                {"63 49 219 rmoveto", "546 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : H22073
     */
    public void testH22073() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("H22073");
        assertNotNull(cs);
        assertEquals("H22073", cs.getName());
        String[] text =
                {"75 0 34 362 34 hstem", "73 39 352 39 vstem",
                        "73 430 rmoveto", "-430 430 430 vlineto",
                        "-391 -34 rmoveto", "352 -362 -352 hlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Hbar
     */
    public void testHbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Hbar");
        assertNotNull(cs);
        assertEquals("Hbar", cs.getName());
        String[] text =
                {"199 1 27 296 39 147 39 69 27 hstem", "106 81 327 80 vstem",
                        "514 510 rmoveto", "-147 -327 147 vlineto",
                        "327 -438 rmoveto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "438 62 39 -62 25 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-25 -327 25 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-25 -65 -39 65 -438 vlineto",
                        "-28 -13 -16 -41 vhcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "252 327 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Hcircumflex
     */
    public void testHcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Hcircumflex");
        assertNotNull(cs);
        assertEquals("Hcircumflex", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 hstem", "106 81 327 80 vstem",
                        "368 803 rmoveto", "-43 hlineto",
                        "-31 -33 -31 -33 -37 -28 rrcurveto", "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 34 -19 39 -18 rrcurveto",
                        "16 21 rlineto", "-36 27 -35 31 -30 36 rrcurveto",
                        "146 -731 rmoveto", "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : I
     */
    public void testI() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("I");
        assertNotNull(cs);
        assertEquals("I", cs.getName());
        String[] text =
                {"-208 1 27 590 27 hstem", "106 81 vstem", "187 574 rmoveto",
                        "-58 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : IJ
     */
    public void testIJ() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("IJ");
        assertNotNull(cs);
        assertEquals("IJ", cs.getName());
        String[] text =
                {"87 -198 31 168 27 590 27 hstem", "106 81 229 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "147 -238 rmoveto",
                        "-28 0 -3 14 -3 12 -3 12 -7 27 -28 0 rrcurveto",
                        "-15 -17 -5 -25 -53 71 -13 33 hvcurveto",
                        "30 0 33 17 26 26 57 60 17 65 0 117 rrcurveto",
                        "487 vlineto", "28 13 16 41 vhcurveto", "17 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -84 -1 -35 -39 -104 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "36 hlineto", "40 22 -29 -30 hvcurveto",
                        "-494 vlineto", "-180 -33 -52 -49 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Iacute
     */
    public void testIacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Iacute");
        assertNotNull(cs);
        assertEquals("Iacute", cs.getName());
        String[] text =
                {"-208 1 27 590 27 74 -21 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "23 749 rmoveto",
                        "38 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ibreve
     */
    public void testIbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ibreve");
        assertNotNull(cs);
        assertEquals("Ibreve", cs.getName());
        String[] text =
                {"-208 1 27 590 27 47 52 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "96 734 rmoveto",
                        "106 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Icircumflex
     */
    public void testIcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Icircumflex");
        assertNotNull(cs);
        assertEquals("Icircumflex", cs.getName());
        String[] text =
                {"-208 1 27 590 27 hstem", "106 81 vstem", "187 574 rmoveto",
                        "-58 callsubr", "-20 734 rmoveto", "-42 hlineto",
                        "-31 -34 -32 -32 -37 -28 rrcurveto", "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 34 -19 39 -18 rrcurveto",
                        "16 21 rlineto", "-36 27 -35 31 -30 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Idieresis
     */
    public void testIdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Idieresis");
        assertNotNull(cs);
        assertEquals("Idieresis", cs.getName());
        String[] text =
                {"-208 1 27 590 27 58 91 hstem", "6 91 9 81 9 91 vstem",
                        "cntrmask 00011100", "187 574 rmoveto", "",
                        "-58 callsubr", "-181 678 rmoveto", "28 callsubr",
                        "190 hmoveto", "39 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Idotaccent
     */
    public void testIdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Idotaccent");
        assertNotNull(cs);
        assertEquals("Idotaccent", cs.getName());
        String[] text =
                {"-208 1 27 590 27 58 95 hstemhm",
                        "99 95 -88 81 hintmask 11101000", "187 574 rmoveto",
                        "-58 callsubr", "hintmask 11110000", "-88 679 rmoveto",
                        "-26 21 -21 26 27 21 21 26 27 -21 21 -27 vhcurveto",
                        "-26 -21 -21 -27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ifraktur
     */
    public void testIfraktur() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ifraktur");
        assertNotNull(cs);
        assertEquals("Ifraktur", cs.getName());
        String[] text =
                {
                        "42 -12 72 521 77 hstem",
                        "50 34 245 61 49 66 vstem",
                        "50 482 rmoveto",
                        "0 -132 96 -20 77 -11 rrcurveto",
                        "1 20 rlineto",
                        "-59 11 -12 3 -31 29 -28 26 -10 30 0 29 0 71 62 43 77 0 65 0 86 -38 37 -18 rrcurveto",
                        "-62 -74 rlineto",
                        "-16 -17 -4 -20 0 -22 0 -24 7 -27 13 -22 rrcurveto",
                        "75 -114 rlineto",
                        "4 -6 11 -28 0 -27 0 -67 -78 -17 -20 0 -16 0 -14 6 -18 8 rrcurveto",
                        "-122 66 rlineto",
                        "-13 7 -13 6 -12 0 -12 0 -15 -5 -21 -12 rrcurveto",
                        "-77 -47 14 -16 rlineto",
                        "25 11 14 6 14 0 13 0 13 -4 20 -12 rrcurveto",
                        "137 -75 rlineto",
                        "14 -8 13 -3 10 0 14 0 15 9 13 7 166 99 2 54 0 37 0 63 -115 131 0 50 0 14 6 19 15 17 rrcurveto",
                        "83 94 rlineto",
                        "-89 50 -93 26 -49 0 -128 0 -85 -77 0 -99 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Igrave
     */
    public void testIgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Igrave");
        assertNotNull(cs);
        assertEquals("Igrave", cs.getName());
        String[] text =
                {"-208 1 27 590 27 74 -21 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "-88 747 rmoveto",
                        "25 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Imacron
     */
    public void testImacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Imacron");
        assertNotNull(cs);
        assertEquals("Imacron", cs.getName());
        String[] text =
                {"-208 1 27 590 27 88 44 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "79 662 rmoveto",
                        "105 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Iogonek
     */
    public void testIogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Iogonek");
        assertNotNull(cs);
        assertEquals("Iogonek", cs.getName());
        String[] text =
                {"-208 -225 39 185 29 590 27 hstemhm",
                        "79 60 -33 81 hintmask 11110000", "172 -225 rmoveto",
                        "36 0 50 20 24 47 rrcurveto", "-15 8 rlineto",
                        "-19 -21 -21 -15 -30 0 rrcurveto",
                        "-36 -22 27 32 51 55 75 80 hvcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "hintmask 11101000",
                        "-40 -15 13 30 hvcurveto", "503 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-503 vlineto", "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 vhcurveto",
                        "10 0 11 0 13 -1 rrcurveto", "hintmask 11110000",
                        "-62 -33 -41 -58 0 -49 rrcurveto",
                        "-54 40 -31 53 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Iota
     */
    public void testIota() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Iota");
        assertNotNull(cs);
        assertEquals("Iota", cs.getName());
        String[] text =
                {"-208 1 27 590 27 hstem", "106 81 vstem", "187 574 rmoveto",
                        "-58 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Iotadieresis
     */
    public void testIotadieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Iotadieresis");
        assertNotNull(cs);
        assertEquals("Iotadieresis", cs.getName());
        String[] text =
                {
                        "-208 1 27 590 27 59 91 hstemhm",
                        "26 91 -11 81 0 90 hintmask 11101100",
                        "187 574 rmoveto",
                        "-58 callsubr",
                        "hintmask 11110100",
                        "-161 679 rmoveto",
                        "236 callsubr",
                        "161 hmoveto",
                        "-25 20 -21 25 25 20 21 25 24 -20 21 -25 -25 -20 -21 -24 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Iotatonos
     */
    public void testIotatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Iotatonos");
        assertNotNull(cs);
        assertEquals("Iotatonos", cs.getName());
        String[] text =
                {"-125 1 27 590 27 hstem", "189 81 vstem", "270 574 rmoveto",
                        "-58 callsubr", "-224 654 rmoveto", "215 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Itilde
     */
    public void testItilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Itilde");
        assertNotNull(cs);
        assertEquals("Itilde", cs.getName());
        String[] text =
                {"-208 1 27 590 27 51 44 5 46 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "26 669 rmoveto",
                        "104 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : J
     */
    public void testJ() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("J");
        assertNotNull(cs);
        assertEquals("J", cs.getName());
        String[] text =
                {"-186 -198 31 785 27 hstem", "143 81 vstem", "",
                        "61 -167 rmoveto", "-57 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Jcircumflex
     */
    public void testJcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Jcircumflex");
        assertNotNull(cs);
        assertEquals("Jcircumflex", cs.getName());
        String[] text =
                {"-186 -198 31 785 27 hstem", "143 81 vstem",
                        "61 -167 rmoveto", "-57 callsubr", "138 972 rmoveto",
                        "95 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : K
     */
    public void testK() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("K");
        assertNotNull(cs);
        assertEquals("K", cs.getName());
        String[] text =
                {"136 1 27 590 27 hstem", "106 81 vstem", "187 72 rmoveto",
                        "-56 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : K_alt
     */
    public void testK_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("K.alt");
        assertNotNull(cs);
        assertEquals("K.alt", cs.getName());
        String[] text =
                {"124 1 27 294 41 255 27 hstem", "106 81 vstem",
                        "350 149 rmoveto", "106 -144 54 -45 111 -3 rrcurveto",
                        "9 25 rlineto", "-54 24 -82 82 -44 61 rrcurveto",
                        "-161 216 197 192 rlineto",
                        "29 27 38 34 41 0 rrcurveto", "18 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -69 -1 -35 -39 -79 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "32 hlineto", "44 0 -32 -48 -27 -25 rrcurveto",
                        "-154 -146 rlineto", "-19 -19 -28 -17 -31 0 rrcurveto",
                        "211 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "250 vlineto", "35 0 14 -12 11 -20 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Kappa
     */
    public void testKappa() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Kappa");
        assertNotNull(cs);
        assertEquals("Kappa", cs.getName());
        String[] text =
                {"136 1 27 590 27 hstem", "106 81 vstem", "187 72 rmoveto",
                        "-56 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Kcommaaccent
     */
    public void testKcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Kcommaaccent");
        assertNotNull(cs);
        assertEquals("Kcommaaccent", cs.getName());
        String[] text =
                {
                        "136 -111 82 30 27 590 27 hstem",
                        "106 81 198 32 vstem",
                        "187 72 rmoveto",
                        "-56 callsubr",
                        "168 -101 rmoveto",
                        "-35 -16 -24 -16 -17 10 -25 40 hvcurveto",
                        "8 0 10 3 12 6 1 -3 0 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "36 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : L
     */
    public void testL() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("L");
        assertNotNull(cs);
        assertEquals("L", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 579 27 hstemhm", "106 81 hintmask 01110000",
                        "349 39 rmoveto", "-55 callsubr", "hintmask 10110000",
                        "-54 callsubr", "hintmask 01110000", "-53 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Lacute
     */
    public void testLacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Lacute");
        assertNotNull(cs);
        assertEquals("Lacute", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 579 27 73 -21 hstemhm",
                        "106 81 hintmask 01111000", "349 39 rmoveto",
                        "-55 callsubr", "hintmask 10111000", "-54 callsubr",
                        "hintmask 01111000", "-53 callsubr",
                        "-157 780 rmoveto", "109 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Lambda
     */
    public void testLambda() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Lambda");
        assertNotNull(cs);
        assertEquals("Lambda", cs.getName());
        String[] text =
                {"124 1 27 630 -20 hstem", "132 71 rmoveto",
                        "136 361 30 85 32 -87 124 -357 rlineto",
                        "3 -8 1 -6 0 -6 rrcurveto",
                        "-15 -12 -10 -36 vhcurveto", "-27 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 89 2 35 40 77 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-33 0 -26 5 -14 40 rrcurveto",
                        "-197 561 rlineto",
                        "-5 16 -7 8 -11 0 -10 0 -9 -8 -6 -15 rrcurveto",
                        "-210 -564 rlineto", "-13 -34 -19 -9 -41 0 rrcurveto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 52 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-18 hlineto",
                        "-34 -21 2 15 hvcurveto", "0 6 2 8 5 12 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Lcaron
     */
    public void testLcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Lcaron");
        assertNotNull(cs);
        assertEquals("Lcaron", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 579 27 -22 75 hstemhm",
                        "106 81 223 50 hintmask 01101100", "349 39 rmoveto",
                        "", "-55 callsubr", "hintmask 10001100",
                        "-54 callsubr", "hintmask 01101100", "-53 callsubr",
                        "hintmask 00011100", "51 659 rmoveto", "88 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Lcommaaccent
     */
    public void testLcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Lcommaaccent");
        assertNotNull(cs);
        assertEquals("Lcommaaccent", cs.getName());
        String[] text =
                {
                        "25 -116 82 33 29 -28 39 579 27 hstemhm",
                        "106 81 110 32 hintmask 10111100",
                        "349 39 rmoveto",
                        "-55 callsubr",
                        "hintmask 11011100",
                        "-54 callsubr",
                        "hintmask 10111100",
                        "-53 callsubr",
                        "-82 -73 rmoveto",
                        "-36 -15 -24 -16 -17 10 -25 40 hvcurveto",
                        "8 0 10 3 11 6 1 -3 1 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "4 -16 rlineto", "90 4 17 75 0 26 rrcurveto",
                        "36 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ldot
     */
    public void testLdot() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ldot");
        assertNotNull(cs);
        assertEquals("Ldot", cs.getName());
        String[] text =
                {
                        "25 -1 29 -28 39 243 109 227 27 hstemhm",
                        "106 81 100 109 hintmask 01111100",
                        "349 39 rmoveto",
                        "-55 callsubr",
                        "hintmask 10111100",
                        "-54 callsubr",
                        "hintmask 01111100",
                        "-53 callsubr",
                        "-7 243 rmoveto",
                        "30 24 25 29 30 -28 25 -26 -30 -25 -27 -28 -28 22 -26 33 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Lslash
     */
    public void testLslash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Lslash");
        assertNotNull(cs);
        assertEquals("Lslash", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 579 27 hstemhm", "106 81 hintmask 10110000",
                        "310 449 rmoveto", "-123 -70 0 195 rlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "0 -241 -101 -58 18 -31 83 48 0 -220 rlineto",
                        "-35 -9 -9 -42 vhcurveto", "-30 hlineto",
                        "-4 -4 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 115 2 12 vhcurveto", "hintmask 01110000",
                        "78 -1 255 0 rlineto", "4 56 11 57 11 52 rrcurveto",
                        "-30 5 rlineto", "-20 -72 -30 -59 -76 0 rrcurveto",
                        "-115 hlineto", "", "-29 -18 19 31 hvcurveto",
                        "0 249 141 81 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : M
     */
    public void testM() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("M");
        assertNotNull(cs);
        assertEquals("M", cs.getName());
        String[] text =
                {"338 1 27 590 28 hstem", "665 87 rmoveto", "-52 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Mu
     */
    public void testMu() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Mu");
        assertNotNull(cs);
        assertEquals("Mu", cs.getName());
        String[] text =
                {"338 1 27 590 28 hstem", "665 87 rmoveto", "-52 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : N
     */
    public void testN() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("N");
        assertNotNull(cs);
        assertEquals("N", cs.getName());
        String[] text =
                {"194 1 27 590 28 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Nacute
     */
    public void testNacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Nacute");
        assertNotNull(cs);
        assertEquals("Nacute", cs.getName());
        String[] text =
                {"194 1 27 590 28 73 -21 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "-221 799 rmoveto",
                        "110 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ncaron
     */
    public void testNcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ncaron");
        assertNotNull(cs);
        assertEquals("Ncaron", cs.getName());
        String[] text =
                {"194 1 27 590 28 73 -21 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "-272 677 rmoveto",
                        "111 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ncommaaccent
     */
    public void testNcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ncommaaccent");
        assertNotNull(cs);
        assertEquals("Ncommaaccent", cs.getName());
        String[] text =
                {
                        "194 -110 82 29 27 590 28 hstem",
                        "104 45 239 32 138 45 vstem",
                        "603 557 rmoveto",
                        "-51 callsubr",
                        "-245 -49 rmoveto",
                        "-36 -15 -24 -16 -17 9 -25 41 hvcurveto",
                        "8 0 10 3 11 6 1 -3 1 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "3 -17 rlineto", "91 4 17 76 0 26 rrcurveto",
                        "36 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Nearrow
     */
    public void testNearrow() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Nearrow");
        assertNotNull(cs);
        assertEquals("Nearrow", cs.getName());
        String[] text =
                {"365 717 509 rmoveto", "2 -31 2 -27 2 -22 rrcurveto",
                        "-546 -548 37 -36 523 523 rlineto",
                        "13 -49 8 -24 0 -1 rrcurveto", "28 27 rlineto",
                        "-4 61 2 54 7 47 6 48 9 37 13 26 rrcurveto",
                        "-16 16 rlineto",
                        "-41 -16 -39 -10 -37 -2 -86 -4 -53 -1 -20 3 rrcurveto",
                        "-28 -29 rlineto", "22 -9 23 -9 21 -7 rrcurveto",
                        "-516 -517 37 -37 540 540 rlineto",
                        "33 -6 30 -1 28 4 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Nineroman
     */
    public void testNineroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Nineroman");
        assertNotNull(cs);
        assertEquals("Nineroman", cs.getName());
        String[] text =
                {
                        "340 -3 27 527 27 hstem",
                        "102 71 vstem",
                        "398 67 rmoveto",
                        "121 175 123 -175 rlineto",
                        "7 -9 5 -8 3 -4 3 -4 1 -4 0 -4 0 -2 -1 -2 -1 -2 rrcurveto",
                        "-1 vlineto",
                        "-2 -2 -7 -1 -11 0 rrcurveto",
                        "-37 -1 rlineto",
                        "-2 0 -2 -1 -1 -1 rrcurveto",
                        "0 -5 0 -16 0 -3 3 0 rlineto",
                        "12 1 111 2 4 0 9 0 82 -3 4 0 rrcurveto",
                        "3 3 hlineto",
                        "16 vlineto",
                        "3 -1 2 -3 vhcurveto",
                        "-2 1 -2 0 -4 1 rrcurveto",
                        "-7 1 rlineto",
                        "-15 1 -10 1 -5 2 -10 6 -8 6 -7 8 -6 10 -6 7 -4 5 rrcurveto",
                        "-169 240 136 196 rlineto",
                        "5 7 5 8 6 6 6 8 7 7 11 5 6 3 9 2 14 0 rrcurveto",
                        "26 1 rlineto",
                        "3 0 2 0 2 1 3 1 1 2 0 3 rrcurveto",
                        "0 16 0 3 -2 0 rlineto",
                        "-10 -1 -84 -2 -3 0 -10 0 -86 3 -3 0 rrcurveto",
                        "-3 -3 hlineto",
                        "-16 vlineto",
                        "0 -1 0 -2 1 -1 1 -2 0 -1 3 0 rrcurveto",
                        "33 -1 rlineto",
                        "14 0 6 -2 1 -2 rrcurveto",
                        "1 hlineto",
                        "0 -2 1 -1 0 -3 0 -3 -1 -4 -3 -5 -2 -3 -3 -7 -8 -11 rrcurveto",
                        "-112 -161 -114 161 rlineto",
                        "-8 11 -4 6 -2 4 -2 4 -1 4 0 4 0 2 0 2 1 2 1 0 0 0 0 1 2 1 5 2 13 0 rrcurveto",
                        "40 1 rlineto",
                        "1 0 2 1 1 2 1 1 0 1 0 2 rrcurveto",
                        "0 16 0 3 -2 0 rlineto",
                        "-13 -1 -108 -2 -4 0 -184 2 184 2 -217 -5 rrcurveto",
                        "-104 3 0 -19 rlineto",
                        "0 -5 2 -2 6 -1 rrcurveto",
                        "29 hlineto",
                        "14 0 8 -2 4 -3 6 -4 3 -6 2 -9 0 -4 1 -6 0 -11 rrcurveto",
                        "-438 vlineto",
                        "0 -9 0 -7 -1 -6 -1 -7 -4 -7 -6 -5 -4 -2 -7 -2 -15 0 rrcurveto",
                        "-29 -1 rlineto",
                        "-3 -5 0 -7 hvcurveto",
                        "-19 vlineto",
                        "0 60 3 44 187 12 1 0 vhcurveto",
                        "11 0 96 -3 4 0 rrcurveto",
                        "2 3 hlineto",
                        "16 vlineto",
                        "0 2 0 2 -1 1 0 1 0 0 -3 1 rrcurveto",
                        "-35 1 rlineto",
                        "-14 0 -7 2 -1 2 -1 1 -1 2 0 3 0 3 2 4 2 5 4 7 5 8 5 6 rrcurveto",
                        "94 213 rmoveto",
                        "-145 -210 rlineto",
                        "",
                        "-8 -10 -5 -8 -3 -4 -6 -8 -8 -6 -10 -5 -7 -3 -8 -2 -14 0 -26 -1 -16 -2 -26 2 -13 0 -8 1 -4 3 -7 5 -3 6 -1 8 rrcurveto",
                        "-1 7 0 7 0 8 rrcurveto",
                        "438 vlineto",
                        "0 8 0 7 1 7 1 7 3 6 7 5 3 3 8 2 14 0 41 0 -10 3 13 -1 rrcurveto",
                        "8 -1 rlineto",
                        "13 -1 10 -1 6 -3 9 -4 9 -7 7 -9 6 -6 4 -7 7 -8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ntilde
     */
    public void testNtilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ntilde");
        assertNotNull(cs);
        assertEquals("Ntilde", cs.getName());
        String[] text =
                {
                        "194 1 27 590 28 52 44 4 46 hstem",
                        "104 45 409 45 vstem",
                        "603 557 rmoveto",
                        "-51 callsubr",
                        "-186 721 rmoveto",
                        "-20 0 -16 11 -17 11 -19 14 -22 14 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 18 0 18 -11 19 -11 20 -13 21 -13 22 0 47 0 28 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Nu
     */
    public void testNu() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Nu");
        assertNotNull(cs);
        assertEquals("Nu", cs.getName());
        String[] text =
                {"194 1 27 590 28 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Nwarrow
     */
    public void testNwarrow() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Nwarrow");
        assertNotNull(cs);
        assertEquals("Nwarrow", cs.getName());
        String[] text =
                {"361 150 511 rmoveto", "32 2 26 2 22 2 rrcurveto",
                        "548 -546 36 37 -522 523 rlineto",
                        "48 13 24 8 1 0 rrcurveto", "-27 28 rlineto",
                        "-61 -4 -53 2 -48 6 -48 7 -37 9 -26 13 rrcurveto",
                        "-16 -16 rlineto",
                        "16 -41 10 -39 2 -38 5 -85 0 -53 -2 -20 rrcurveto",
                        "28 -29 rlineto", "10 23 8 23 7 21 rrcurveto",
                        "517 -516 37 37 -540 540 rlineto",
                        "6 33 1 30 -4 28 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : O
     */
    public void testO() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("O");
        assertNotNull(cs);
        assertEquals("O", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : OE
     */
    public void testOE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("OE");
        assertNotNull(cs);
        assertEquals("OE", cs.getName());
        String[] text =
                {"348 0 39 -39 32 300 34 240 40 -35 35 hstemhm",
                        "42 91 267 81 163 24 95 27 hintmask 0110011110000000",
                        "338 hmoveto", "102 1 rlineto",
                        "hintmask 1010011110000000", "", "78 -1 rlineto",
                        "hintmask 0110011110000000",
                        "266 0 26 160 -27 5 rlineto",
                        "hintmask 1011011110000000",
                        "-15 -73 -29 -53 -65 0 rrcurveto", "-157 hlineto",
                        "-22 -14 6 27 hvcurveto", "260 105 vlineto",
                        "34 0 11 -16 6 -28 rrcurveto", "6 -31 rlineto",
                        "-4 3 -3 5 vhcurveto", "23 0 2 3 rlineto",
                        "-3 32 -5 29 0 35 0 33 6 30 2 32 rrcurveto",
                        "2 -1 2 -2 vhcurveto", "-22 hlineto",
                        "-4 -3 -4 -4 hvcurveto", "-7 -30 rlineto",
                        "-7 -28 -8 -16 -36 0 rrcurveto", "-105 208 hlineto",
                        "24 12 8 24 vhcurveto", "153 hlineto",
                        "52 0 34 -60 7 -43 rrcurveto", "27 3 rlineto",
                        "hintmask 0010111110000000", "-14 140 rlineto",
                        "hintmask 0011011110000000", "-257 0 -78 -1 rlineto",
                        "hintmask 0110111110000000", "-114 1 rlineto",
                        "-186 -99 -148 -180 hvcurveto",
                        "-180 108 -138 188 vhcurveto", "-2 32 rmoveto",
                        "-103 -100 88 207 214 84 70 97 hvcurveto",
                        "35 hlineto", "38 13 -6 -31 hvcurveto", "-502 vlineto",
                        "-28 -11 -12 -40 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Oacute
     */
    public void testOacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Oacute");
        assertNotNull(cs);
        assertEquals("Oacute", cs.getName());
        String[] text =
                {"197 -12 34 602 34 62 -21 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "53 197 rmoveto", "38 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Obreve
     */
    public void testObreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Obreve");
        assertNotNull(cs);
        assertEquals("Obreve", cs.getName());
        String[] text =
                {"197 -12 34 602 34 34 52 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "154 181 rmoveto", "106 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ocircumflex
     */
    public void testOcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ocircumflex");
        assertNotNull(cs);
        assertEquals("Ocircumflex", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "34 181 rmoveto", "43 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Odieresis
     */
    public void testOdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Odieresis");
        assertNotNull(cs);
        assertEquals("Odieresis", cs.getName());
        String[] text =
                {"197 -12 34 602 34 -18 90 -87 90 hstemhm",
                        "37 91 -19 91 294 90 -14 92 hintmask 11001001",
                        "662 329 rmoveto", "44 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "hintmask 10100010", "160 61 rmoveto",
                        "45 callsubr", "hintmask 10010100", "-385 3 rmoveto",
                        "46 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Odieresis_alt
     */
    public void testOdieresis_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Odieresis.alt");
        assertNotNull(cs);
        assertEquals("Odieresis.alt", cs.getName());
        String[] text =
                {"197 -12 34 602 34 47 91 hstem",
                        "37 91 79 91 98 91 83 92 vstem", "662 329 rmoveto",
                        "-50 callsubr", "-328 295 rmoveto", "-49 callsubr",
                        "-127 126 rmoveto", "318 callsubr", "189 1 rmoveto",
                        "27 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ograve
     */
    public void testOgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ograve");
        assertNotNull(cs);
        assertEquals("Ograve", cs.getName());
        String[] text =
                {"197 -12 34 602 34 62 -21 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-31 195 rmoveto", "42 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ohorn
     */
    public void testOhorn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ohorn");
        assertNotNull(cs);
        assertEquals("Ohorn", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstemhm",
                        "37 91 442 92 -71 37 hintmask 11110000",
                        "662 329 rmoveto", "135 callsubr", "hintmask 11101000",
                        "136 callsubr", "-328 295 rmoveto",
                        "hintmask 11110000", "-49 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Ohungarumlaut
     */
    public void testOhungarumlaut() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ohungarumlaut");
        assertNotNull(cs);
        assertEquals("Ohungarumlaut", cs.getName());
        String[] text =
                {"197 -12 34 602 34 53 -21 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "23 202 rmoveto",
                        "-6 5 -8 4 -10 0 -15 0 -7 -3 -4 -9 rrcurveto",
                        "-57 -115 rlineto", "-1 0 -2 -2 hvcurveto",
                        "0 -4 1 -4 4 -2 3 -2 3 -2 2 0 3 0 3 1 2 2 rrcurveto",
                        "94 85 rlineto",
                        "5 5 3 7 0 7 0 12 -6 10 -9 7 rrcurveto",
                        "132 -6 rmoveto",
                        "-10 9 -10 1 -8 0 -10 0 -7 -3 -5 -8 rrcurveto",
                        "-63 -115 rlineto",
                        "-1 -1 0 -2 0 -1 0 -9 9 -5 6 0 2 0 3 1 1 1 rrcurveto",
                        "99 84 rlineto",
                        "5 4 3 7 0 9 0 11 -5 10 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Omacron
     */
    public void testOmacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Omacron");
        assertNotNull(cs);
        assertEquals("Omacron", cs.getName());
        String[] text =
                {"197 -12 34 602 34 75 44 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "135 109 rmoveto", "115 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Omega
     */
    public void testOmega() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Omega");
        assertNotNull(cs);
        assertEquals("Omega", cs.getName());
        String[] text =
                {"192 0 59 565 34 hstemhm",
                        "42 25 -17 88 423 88 -23 26 hintmask 11011000",
                        "457 117 rmoveto", "232 callsubr", "hintmask 11100000",
                        "233 callsubr", "hintmask 11011000", "234 callsubr",
                        "hintmask 11000100", "235 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Omegatonos
     */
    public void testOmegatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Omegatonos");
        assertNotNull(cs);
        assertEquals("Omegatonos", cs.getName());
        String[] text =
                {"214 0 59 565 34 hstemhm",
                        "64 26 -18 88 423 88 -23 26 hintmask 11011000",
                        "479 117 rmoveto", "218 callsubr", "hintmask 11100000",
                        "219 callsubr", "hintmask 11011000", "220 callsubr",
                        "hintmask 11000100", "221 callsubr",
                        "-417 666 rmoveto", "213 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Omicron
     */
    public void testOmicron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Omicron");
        assertNotNull(cs);
        assertEquals("Omicron", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Omicrontonos
     */
    public void testOmicrontonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Omicrontonos");
        assertNotNull(cs);
        assertEquals("Omicrontonos", cs.getName());
        String[] text =
                {
                        "220 -12 34 602 34 hstem",
                        "59 92 442 92 vstem",
                        "685 329 rmoveto",
                        "198 -135 131 -180 -180 -131 -152 -196 -197 139 -125 173 191 123 141 200 vhcurveto",
                        "-328 295 rmoveto", "216 callsubr", "-290 101 rmoveto",
                        "215 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Oneroman
     */
    public void testOneroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Oneroman");
        assertNotNull(cs);
        assertEquals("Oneroman", cs.getName());
        String[] text =
                {
                        "-222 -1 24 528 27 hstem",
                        "102 71 vstem",
                        "101 527 rmoveto",
                        "0 -4 1 -6 0 -11 rrcurveto",
                        "-438 vlineto",
                        "0 -9 0 -7 -1 -6 -1 -7 -4 -7 -6 -5 -4 -2 -7 -2 -15 0 rrcurveto",
                        "-29 -1 rlineto",
                        "-3 -5 0 -7 hvcurveto",
                        "-19 vlineto",
                        "0 63 3 41 46 71 -3 0 vhcurveto",
                        "19 vlineto",
                        "3 -2 4 -6 vhcurveto",
                        "-30 1 rlineto",
                        "-13 0 -8 1 -4 3 -7 5 -3 6 -1 8 -1 7 0 7 0 8 rrcurveto",
                        "438 vlineto",
                        "0 8 0 7 1 7 1 7 3 6 7 5 3 3 8 2 14 0 rrcurveto",
                        "30 hlineto", "7 1 1 5 0 3 rrcurveto",
                        "0 18 -117 -3 -104 3 0 -19 rlineto",
                        "0 -5 2 -2 6 -1 rrcurveto", "29 hlineto",
                        "14 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Oslash
     */
    public void testOslash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Oslash");
        assertNotNull(cs);
        assertEquals("Oslash", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "527 511 rmoveto", "47 callsubr", "134 517 rmoveto",
                        "48 callsubr", "-253 -664 rmoveto", "49 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Oslashacute
     */
    public void testOslashacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Oslashacute");
        assertNotNull(cs);
        assertEquals("Oslashacute", cs.getName());
        String[] text =
                {"197 -12 34 602 34 61 -21 hstem", "37 91 442 92 vstem",
                        "527 511 rmoveto", "47 callsubr", "134 517 rmoveto",
                        "48 callsubr", "-253 -664 rmoveto", "49 callsubr",
                        "340 834 rmoveto", "85 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Otilde
     */
    public void testOtilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Otilde");
        assertNotNull(cs);
        assertEquals("Otilde", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 40 44 4 46 hstem",
                        "37 91 442 92 vstem",
                        "662 329 rmoveto",
                        "-50 callsubr",
                        "-328 295 rmoveto",
                        "-49 callsubr",
                        "76 118 rmoveto",
                        "-19 0 -16 11 -17 11 -20 14 -22 14 -30 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 18 -11 21 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : P
     */
    public void testP() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("P");
        assertNotNull(cs);
        assertEquals("P", cs.getName());
        String[] text =
                {"14 1 27 254 33 304 25 -24 34 hstemhm",
                        "106 81 225 85 hintmask 11011100", "106 71 rmoveto",
                        "-48 callsubr", "hintmask 11101100", "-47 callsubr",
                        "81 31 rmoveto", "hintmask 11011100", "-46 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Phi
     */
    public void testPhi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Phi");
        assertNotNull(cs);
        assertEquals("Phi", cs.getName());
        String[] text =
                {
                        "167 1 27 590 27 hstem",
                        "37 78 179 81 179 78 vstem",
                        "cntrmask 00111000",
                        "375 138 rmoveto",
                        "370 vlineto",
                        "98 -10 81 -46 0 -128 0 -70 -18 -101 -161 -15 rrcurveto",
                        "-81 -26 rmoveto",
                        "-41 vlineto",
                        "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "41 vlineto",
                        "160 14 97 104 0 101 0 107 -100 87 -157 11 rrcurveto",
                        "38 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "27 hlineto",
                        "39 15 -14 -30 hvcurveto",
                        "-39 vlineto",
                        "-191 -16 -66 -116 0 -79 0 -53 21 -144 236 -15 rrcurveto",
                        "26 vmoveto",
                        "-96 11 -83 57 0 125 0 133 93 38 86 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Pi
     */
    public void testPi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Pi");
        assertNotNull(cs);
        assertEquals("Pi", cs.getName());
        String[] text =
                {"166 1 27 576 41 -27 28 hstemhm",
                        "106 81 293 81 hintmask 10111000", "480 72 rmoveto",
                        "227 callsubr", "hintmask 11011000", "0 19 rlineto",
                        "hintmask 10111000", "-2 1 rlineto",
                        "hintmask 11011000", "228 callsubr",
                        "hintmask 10111000", "229 callsubr",
                        "hintmask 11011000", "-2 -1 0 -20 rlineto",
                        "hintmask 10111000", "230 callsubr",
                        "hintmask 11011000", "231 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Psi
     */
    public void testPsi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Psi");
        assertNotNull(cs);
        assertEquals("Psi", cs.getName());
        String[] text =
                {
                        "186 1 27 590 27 hstem",
                        "96 69 136 80 142 68 vstem",
                        "614 616 rmoveto",
                        "-73 -18 -61 -78 hvcurveto",
                        "0 -38 -9 -180 -133 -28 rrcurveto",
                        "343 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "26 hlineto",
                        "40 15 -14 -30 hvcurveto",
                        "-342 vlineto",
                        "-65 17 -71 58 0 159 rrcurveto",
                        "98 -31 52 -61 vhcurveto",
                        "-31 hlineto",
                        "-11 -9 -1 -11 hvcurveto",
                        "0 -5 5 -2 8 -2 22 -6 39 -11 0 -128 0 -174 103 -59 102 -12 rrcurveto",
                        "-134 vlineto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "133 vlineto",
                        "103 12 107 64 0 193 0 102 38 11 22 7 8 2 7 2 0 7 rrcurveto",
                        "10 -11 2 -12 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Q
     */
    public void testQ() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Q");
        assertNotNull(cs);
        assertEquals("Q", cs.getName());
        String[] text =
                {"211 -201 57 132 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-45 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Q_u
     */
    public void testQ_u() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Q_u");
        assertNotNull(cs);
        assertEquals("Q_u", cs.getName());
        String[] text =
                {
                        "746 -190 61 51 44 22 34 -34 45 -6 28 347 27 195 34 hstemhm",
                        "37 91 442 92 156 75 191 75 hintmask 1101011111100000",
                        "1159 116 rmoveto",
                        "0 236 2 79 rlineto",
                        "0 -16 -2 -24 -28 -71 2 0 vhcurveto",
                        "-1 -3 0 -25 1 -2 rlineto",
                        "4 0 11 1 5 0 rrcurveto",
                        "38 4 -17 -36 hvcurveto",
                        "-247 vlineto",
                        "-10 -13 -16 -14 -24 -18 -20 -15 -21 -9 -24 0 rrcurveto",
                        "-29 -47 16 89 hvcurveto",
                        "0 213 1 80 rlineto",
                        "0 -22 -2 -15 -32 -67 2 0 vhcurveto",
                        "-3 -3 0 -26 3 -1 rlineto",
                        "6 0 6 1 4 0 rrcurveto",
                        "37 7 -17 -33 hvcurveto",
                        "-228 vlineto",
                        "-69 27 -67 99 vhcurveto",
                        "40 0 45 14 55 60 rrcurveto",
                        "3 0 -3 -74 23 0 rlineto",
                        "hintmask 1100111111100000",
                        "22 18 49 10 62 11 rrcurveto",
                        "-4 28 rlineto",
                        "-17 -3 -23 -2 -11 0 rrcurveto",
                        "-21 -5 16 50 hvcurveto",
                        "-497 213 rmoveto",
                        "198 -135 131 -180 -179 -131 -152 -196 vhcurveto",
                        "0 -174 108 -118 144 -25 rrcurveto",
                        "-38 -33 rlineto",
                        "-23 -4 -67 -26 -27 -46 rrcurveto",
                        "39 -19 rlineto",
                        "20 46 45 11 15 0 34 0 128 -26 132 -48 88 -32 89 -6 83 0 104 0 102 39 62 58 rrcurveto",
                        "-17 19 rlineto",
                        "-66 -37 -80 -18 -50 0 -76 0 -102 16 -92 29 -100 32 -87 14 -90 4 rrcurveto",
                        "hintmask 1110011111100000", "3 8 8 12 10 2 rrcurveto",
                        "12 hlineto", "191 123 141 200 hvcurveto",
                        "-328 295 rmoveto", "-49 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : R
     */
    public void testR() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("R");
        assertNotNull(cs);
        assertEquals("R", cs.getName());
        String[] text =
                {"73 1 27 256 38 304 28 hstem", "106 81 229 81 vstem",
                        "497 479 rmoveto", "-44 callsubr", "-81 -1 rmoveto",
                        "-43 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : R_alt
     */
    public void testR_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("R.alt");
        assertNotNull(cs);
        assertEquals("R.alt", cs.getName());
        String[] text =
                {
                        "73 1 27 256 38 298 32 -26 28 hstemhm",
                        "106 81 229 81 hintmask 11011100",
                        "106 72 rmoveto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -1 rlineto",
                        "0 93 1 36 39 87 -1 0 vhcurveto",
                        "2 1 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-27 hlineto",
                        "-39 -15 14 30 hvcurveto",
                        "212 vlineto",
                        "67 0 30 -6 4 -7 rrcurveto",
                        "110 -207 rlineto",
                        "113 -210 100 30 45 18 rrcurveto",
                        "-4 20 rlineto",
                        "-44 -10 -64 35 -70 136 rrcurveto",
                        "-114 220 rlineto",
                        "22 7 22 12 22 18 47 39 24 45 0 55 0 50 -17 41 -36 34 -48 45 -70 5 -63 0 rrcurveto",
                        "hintmask 11101100",
                        "-32 0 -37 0 -43 -2 -42 -1 -67 -6 -11 -3 rrcurveto",
                        "-19 vlineto",
                        "-4 3 -3 5 vhcurveto",
                        "30 3 rlineto",
                        "2 1 2 0 3 0 rrcurveto",
                        "26 4 -17 -29 hvcurveto",
                        "278 -201 rmoveto",
                        "-24 -34 -48 -17 -75 0 rrcurveto",
                        "-50 296 hlineto",
                        "hintmask 11011100",
                        "23 5 28 3 36 0 60 0 32 -27 9 -9 31 -28 10 -41 0 -43 0 -42 -13 -35 -19 -28 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Racute
     */
    public void testRacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Racute");
        assertNotNull(cs);
        assertEquals("Racute", cs.getName());
        String[] text =
                {
                        "73 1 27 256 38 304 28 65 -21 hstem",
                        "106 81 229 81 vstem",
                        "497 479 rmoveto",
                        "-44 callsubr",
                        "-81 -1 rmoveto",
                        "-43 callsubr",
                        "-104 342 rmoveto",
                        "-124 -86 rlineto",
                        "-13 -9 -3 -5 0 -7 0 -10 6 -5 9 0 8 0 13 3 22 9 rrcurveto",
                        "144 58 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Rcaron
     */
    public void testRcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rcaron");
        assertNotNull(cs);
        assertEquals("Rcaron", cs.getName());
        String[] text =
                {
                        "73 1 27 256 38 304 28 65 -21 hstem",
                        "106 81 229 81 vstem",
                        "497 479 rmoveto",
                        "-44 callsubr",
                        "-81 -1 rmoveto",
                        "-43 callsubr",
                        "-172 220 rmoveto",
                        "43 hlineto",
                        "30 33 33 33 37 28 rrcurveto",
                        "-14 20 rlineto",
                        "-39 -16 -32 -18 -36 -27 -34 25 -34 19 -39 17 rrcurveto",
                        "-15 -20 rlineto", "36 -27 34 -31 30 -36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Rcommaaccent
     */
    public void testRcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rcommaaccent");
        assertNotNull(cs);
        assertEquals("Rcommaaccent", cs.getName());
        String[] text =
                {
                        "73 -115 81 35 27 256 38 304 28 hstem",
                        "106 81 132 33 64 81 vstem",
                        "497 479 rmoveto",
                        "-44 callsubr",
                        "-81 -1 rmoveto",
                        "-43 callsubr",
                        "-126 -512 rmoveto",
                        "-36 -16 -24 -16 -16 10 -25 41 hvcurveto",
                        "7 0 10 3 12 6 1 -3 0 -3 0 -4 0 -6 -3 -58 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 18 76 0 26 rrcurveto",
                        "35 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Rfraktur
     */
    public void testRfraktur() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rfraktur");
        assertNotNull(cs);
        assertEquals("Rfraktur", cs.getName());
        String[] text =
                {
                        "207 33 78 494 53 hstem",
                        "23 32 130 44 77 85 vstem",
                        "23 475 rmoveto",
                        "0 -134 162 0 0 -46 0 -11 -13 -8 -4 -6 rrcurveto",
                        "20 -15 32 47 rlineto",
                        "5 7 4 8 0 10 0 19 -11 21 -32 17 rrcurveto",
                        "-86 43 rlineto",
                        "-24 12 -21 32 0 32 rrcurveto",
                        "22 20 80 95 110 26 -99 -173 vhcurveto",
                        "0 -113 -5 -82 -55 -81 rrcurveto",
                        "-71 50 rlineto",
                        "-4 3 -3 1 -5 0 -10 0 -9 -11 -18 -16 rrcurveto",
                        "-64 -54 18 -14 rlineto",
                        "",
                        "14 10 15 7 13 0 17 0 11 -8 15 -11 rrcurveto",
                        "34 -28 rlineto",
                        "21 11 78 60 42 54 49 64 2 54 0 97 0 56 -4 73 -12 79 rrcurveto",
                        "56 36 rlineto",
                        "11 7 12 5 10 0 15 0 17 -7 17 -17 rrcurveto",
                        "72 -67 -173 -120 10 -18 4 0 rlineto",
                        "25 0 12 -10 11 -31 46 -131 -41 -143 103 -52 rrcurveto",
                        "98 79 -13 21 rlineto",
                        "-10 -4 -12 -7 -13 0 -61 0 53 191 -111 142 rrcurveto",
                        "163 115 -145 126 rlineto",
                        "-6 6 -7 2 -5 0 -12 0 -11 -7 -8 -7 rrcurveto",
                        "-117 -85 rlineto",
                        "-24 37 -4 22 -43 22 -26 13 -27 6 -27 0 -115 0 -76 -74 0 -109 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Rho
     */
    public void testRho() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rho");
        assertNotNull(cs);
        assertEquals("Rho", cs.getName());
        String[] text =
                {"14 1 27 254 33 304 25 -24 34 hstemhm",
                        "106 81 225 85 hintmask 11011100", "106 71 rmoveto",
                        "-48 callsubr", "hintmask 11101100", "-47 callsubr",
                        "81 31 rmoveto", "hintmask 11011100", "-46 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Rsmallcap
     */
    public void testRsmallcap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rsmallcap");
        assertNotNull(cs);
        assertEquals("Rsmallcap", cs.getName());
        String[] text =
                {"-60 -11 21 -9 27 156 31 188 27 -22 22 hstemhm",
                        "88 75 157 65 hintmask 00110110", "320 306 rmoveto",
                        "-39 -30 -52 -73 vhcurveto", "-54 183 hlineto",
                        "15 4 14 1 14 0 rrcurveto", "89 25 -58 -39 hvcurveto",
                        "hintmask 01100110", "-279 -278 rmoveto",
                        "-4 -6 -2 -3 hvcurveto", "-24 vlineto",
                        "0 58 2 37 32 50 -2 0 vhcurveto", "23 vlineto",
                        "4 -2 2 -4 -36 -3 12 31 vhcurveto", "113 76 vlineto",
                        "38 -111 rlineto", "21 -58 33 -27 53 0 rrcurveto",
                        "hintmask 10110110", "10 0 11 0 11 1 rrcurveto",
                        "21 vlineto", "-29 0 -26 30 -16 45 rrcurveto",
                        "-37 110 rlineto", "22 8 55 45 0 56 rrcurveto",
                        "100 -84 26 -66 vhcurveto", "hintmask 01101110",
                        "-200 -19 hlineto", "-2 1 -1 3 vhcurveto",
                        "24 hlineto", "22 -1 3 -9 0 -20 rrcurveto",
                        "-307 vlineto", "-33 -2 -10 -45 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Rsmallinverted
     */
    public void testRsmallinverted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rsmallinverted");
        assertNotNull(cs);
        assertEquals("Rsmallinverted", cs.getName());
        String[] text =
                {"-60 0 22 -22 26 189 31 156 27 -9 20 hstemhm",
                        "73 75 157 65 hintmask 01100110", "305 124 rmoveto",
                        "39 -31 52 -72 vhcurveto", "-54 -184 hlineto",
                        "15 -3 14 -2 14 0 rrcurveto", "89 25 59 39 hvcurveto",
                        "hintmask 00110110", "-280 278 rmoveto",
                        "-3 -6 1 4 hvcurveto", "24 vlineto",
                        "0 58 -2 37 32 49 2 0 vhcurveto", "-23 vlineto",
                        "-4 -2 -2 -3 -36 -3 -12 -32 vhcurveto",
                        "-112 76 vlineto", "38 110 rlineto",
                        "21 59 32 27 54 0 rrcurveto", "hintmask 01101110",
                        "10 0 11 -1 11 -1 rrcurveto", "-20 vlineto",
                        "-29 0 -26 -30 -16 -46 rrcurveto", "-38 -110 rlineto",
                        "23 -7 55 -45 0 -56 rrcurveto",
                        "-101 -84 -25 -66 vhcurveto", "-200 19 hlineto",
                        "2 1 0 2 vhcurveto", "hintmask 10110110",
                        "25 1 rlineto", "22 3 10 20 hvcurveto", "306 vlineto",
                        "34 -2 10 -46 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Rsmallinverted_superior
     */
    public void testRsmallinverted_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Rsmallinverted.superior");
        assertNotNull(cs);
        assertEquals("Rsmallinverted.superior", cs.getName());
        String[] text =
                {"-225 364 22 113 19 90 22 -11 19 hstemhm",
                        "57 49 90 54 hintmask 11001100", "196 442 rmoveto",
                        "-24 -8 -32 -55 vhcurveto", "-9 0 -9 1 -9 2 rrcurveto",
                        "110 34 vlineto", "44 12 -33 -24 hvcurveto",
                        "hintmask 11101100", "-168 166 rmoveto",
                        "28 1 -6 -21 hvcurveto", "-179 vlineto",
                        "-12 -1 -6 -14 vhcurveto", "-15 -1 rlineto",
                        "-2 -1 0 -2 hvcurveto", "-17 127 vlineto",
                        "40 59 18 62 hvcurveto", "0 34 -23 27 -32 5 rrcurveto",
                        "23 62 rlineto", "hintmask 11011100",
                        "10 28 16 19 18 0 rrcurveto", "18 vlineto",
                        "-7 1 -6 0 -7 0 -33 0 -20 -22 -13 -36 rrcurveto",
                        "-23 -62 -47 0 0 63 rlineto", "hintmask 11101100",
                        "20 2 7 22 2 1 1 3 vhcurveto", "0 17 -1 2 rlineto",
                        "0 -31 -1 -20 -23 -35 1 0 vhcurveto",
                        "-1 -1 0 -19 rlineto", "", "-2 4 -1 2 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : S
     */
    public void testS() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("S");
        assertNotNull(cs);
        assertEquals("S", cs.getName());
        String[] text =
                {"-26 5 19 600 34 hstem", "48 69 237 81 vstem",
                        "382 631 rmoveto", "-42 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Sacute
     */
    public void testSacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Sacute");
        assertNotNull(cs);
        assertEquals("Sacute", cs.getName());
        String[] text =
                {"-26 5 19 600 34 61 -21 hstem", "48 69 237 81 vstem",
                        "382 631 rmoveto", "-42 callsubr", "-100 189 rmoveto",
                        "117 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Scaron
     */
    public void testScaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Scaron");
        assertNotNull(cs);
        assertEquals("Scaron", cs.getName());
        String[] text =
                {"-26 5 19 600 34 61 -21 hstem", "48 69 237 81 vstem",
                        "382 631 rmoveto", "-42 callsubr", "-167 67 rmoveto",
                        "120 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Scedilla
     */
    public void testScedilla() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Scedilla");
        assertNotNull(cs);
        assertEquals("Scedilla", cs.getName());
        String[] text =
                {
                        "-26 -194 26 76 31 49 36 600 34 hstem",
                        "48 69 157 54 26 81 vstem",
                        "233 -92 rmoveto",
                        "23 18 -14 -21 -27 -29 -14 -31 hvcurveto",
                        "-19 0 -11 3 -27 10 rrcurveto",
                        "-11 -22 rlineto",
                        "26 -11 17 -6 32 0 rrcurveto",
                        "61 46 28 43 39 -31 23 -40 hvcurveto",
                        "-9 0 -9 -1 -8 -2 rrcurveto",
                        "21 52 rlineto",
                        "107 8 76 90 0 98 0 121 -93 41 -84 30 -42 15 -99 38 0 83 0 61 44 51 66 0 99 0 28 -84 19 -66 rrcurveto",
                        "30 5 rlineto",
                        "-9 49 -8 50 -4 53 -55 8 2 19 -93 0 -87 0 -101 -67 0 -106 0 -117 123 -50 72 -27 61 -24 50 -27 0 -91 0 -81 -58 -44 -76 0 rrcurveto",
                        "-89 0 -47 63 -20 91 rrcurveto",
                        "-30 -3 rlineto",
                        "10 -76 7 -48 2 -51 17 0 9 5 20 0 22 0 15 -15 82 -2 rrcurveto",
                        "-36 -81 6 -6 rlineto", "16 5 10 2 19 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Scircumflex
     */
    public void testScircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Scircumflex");
        assertNotNull(cs);
        assertEquals("Scircumflex", cs.getName());
        String[] text =
                {"-26 5 19 600 34 hstem", "48 69 237 81 vstem",
                        "382 631 rmoveto", "-42 callsubr", "-132 181 rmoveto",
                        "-43 hlineto", "-31 -33 -31 -32 -38 -29 rrcurveto",
                        "15 -20 rlineto",
                        "38 16 32 18 37 27 33 -25 34 -19 39 -17 rrcurveto",
                        "16 20 rlineto", "-37 28 -34 30 -30 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Scommaaccent
     */
    public void testScommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Scommaaccent");
        assertNotNull(cs);
        assertEquals("Scommaaccent", cs.getName());
        String[] text =
                {
                        "-26 -126 82 49 19 600 34 hstem",
                        "48 69 156 32 49 81 vstem",
                        "243 -44 rmoveto",
                        "-35 -16 -24 -16 -17 10 -25 40 hvcurveto",
                        "8 0 10 3 11 6 1 -3 1 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "35 -23 38 -39 vhcurveto", "139 675 rmoveto",
                        "-42 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Searrow
     */
    public void testSearrow() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Searrow");
        assertNotNull(cs);
        assertEquals("Searrow", cs.getName());
        String[] text =
                {"361 713 19 rmoveto", "-31 -2 -27 -2 -22 -2 rrcurveto",
                        "-548 546 -36 -37 523 -523 -73 -21 26 -28 rlineto",
                        "61 4 54 -2 48 -7 47 -6 37 -9 26 -13 rrcurveto",
                        "16 16 rlineto",
                        "-16 41 -9 39 -3 37 -4 86 -1 53 3 20 rrcurveto",
                        "-29 28 rlineto", "-9 -23 -9 -22 -7 -22 rrcurveto",
                        "-517 517 -37 -38 540 -539 rlineto",
                        "-6 -33 -1 -31 4 -27 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Sevenroman
     */
    public void testSevenroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Sevenroman");
        assertNotNull(cs);
        assertEquals("Sevenroman", cs.getName());
        String[] text =
                {
                        "516 -2 24 529 24 hstem",
                        "631 72 142 72 vstem",
                        "844 527 rmoveto",
                        "1 -4 0 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -7 -5 -3 -3 -8 -1 -14 -1 rrcurveto",
                        "-69 hlineto",
                        "-13 1 -8 1 -4 3 -6 5 -3 6 -1 7 -1 7 0 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 0 7 1 7 0 7 4 6 6 6 4 3 7 2 14 0 rrcurveto",
                        "69 hlineto",
                        "14 0 8 -2 3 -3 6 -4 3 -6 2 -9 rrcurveto",
                        "-214 hmoveto",
                        "0 -4 1 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -4 -6 -6 -5 -3 -3 -8 -1 -14 -1 rrcurveto",
                        "-30 hlineto",
                        "-3 0 -4 -1 -1 -6 rrcurveto",
                        "-19 vlineto",
                        "0 60 2 44 vhcurveto",
                        "223 hlineto",
                        "46 62 -2 0 hvcurveto",
                        "19 vlineto",
                        "3 -2 4 -6 vhcurveto",
                        "-29 1 rlineto",
                        "-14 0 -7 1 -4 3 -7 5 -3 6 -1 8 -1 7 0 7 0 8 rrcurveto",
                        "438 vlineto",
                        "0 8 0 6 1 8 0 7 3 6 8 5 3 3 8 2 14 0 rrcurveto",
                        "29 hlineto", "7 1 1 5 0 3 rrcurveto",
                        "0 18 -108 -3 -223 0 -177 0 rlineto",
                        "-10 0 -93 2 -4 0 rrcurveto", "-2 -2 hlineto",
                        "-17 vlineto", "0 -3 1 -3 5 -1 rrcurveto",
                        "30 -1 rlineto",
                        "21 0 10 -2 3 -2 3 -4 2 -4 0 -6 rrcurveto",
                        "-4 vlineto", "-1 -5 2 -7 -4 -10 rrcurveto",
                        "-140 -371 -123 371 rlineto",
                        "-2 8 -2 7 -2 7 rrcurveto", "5 vlineto",
                        "0 5 1 4 4 4 2 3 7 1 14 0 rrcurveto", "38 1 rlineto",
                        "3 0 2 2 2 3 rrcurveto",
                        "0 1 0 2 0 16 0 2 -2 0 rlineto",
                        "-13 0 -109 -2 -4 0 -10 0 -89 2 -3 0 rrcurveto",
                        "-3 -2 hlineto", "-17 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 2 0 rrcurveto",
                        "20 -1 rlineto",
                        "12 0 9 -1 6 -3 8 -5 5 -6 4 -9 rrcurveto",
                        "8 -22 163 -487 rlineto",
                        "5 -16 7 -7 11 0 11 0 8 7 6 16 rrcurveto",
                        "176 487 rlineto",
                        "3 10 3 7 1 6 2 5 5 7 10 7 5 3 8 1 14 0 rrcurveto",
                        "57 1 rlineto",
                        "13 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Sigma
     */
    public void testSigma() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Sigma");
        assertNotNull(cs);
        assertEquals("Sigma", cs.getName());
        String[] text =
                {"93 -1 44 560 43 -28 28 hstemhm", "hintmask 11000000",
                        "392 603 rmoveto", "139 callsubr", "hintmask 10100000",
                        "140 callsubr", "hintmask 11000000",
                        "-187 272 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Sixroman
     */
    public void testSixroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Sixroman");
        assertNotNull(cs);
        assertEquals("Sixroman", cs.getName());
        String[] text =
                {
                        "302 -2 24 529 24 hstem",
                        "631 72 vstem",
                        "630 527 rmoveto",
                        "0 -4 1 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -4 -6 -6 -5 -3 -3 -8 -1 -14 -1 rrcurveto",
                        "-30 hlineto",
                        "-3 0 -4 -1 -1 -6 rrcurveto",
                        "-19 vlineto",
                        "0 60 2 44 46 71 -2 0 vhcurveto",
                        "18 vlineto",
                        "0 4 -2 3 -6 1 rrcurveto",
                        "-30 hlineto",
                        "-13 1 -8 1 -4 3 -6 5 -3 6 -1 7 -1 7 0 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 0 7 1 7 0 7 4 6 6 6 4 3 7 2 14 0 rrcurveto",
                        "30 hlineto", "7 1 5 3 hvcurveto",
                        "0 18 -117 -2 -177 0 rlineto",
                        "-10 0 -93 2 -4 0 rrcurveto", "-2 -2 hlineto",
                        "-17 vlineto", "0 -3 1 -3 5 -1 rrcurveto",
                        "30 -1 rlineto",
                        "21 0 10 -2 3 -2 3 -4 2 -4 0 -6 rrcurveto",
                        "-4 vlineto", "-1 -5 2 -7 -4 -10 rrcurveto",
                        "-140 -371 -123 371 rlineto",
                        "-2 8 -2 7 -2 7 rrcurveto", "5 vlineto",
                        "0 5 1 4 4 4 2 3 7 1 14 0 rrcurveto", "38 1 rlineto",
                        "3 0 2 2 2 3 rrcurveto",
                        "0 1 0 2 0 16 0 2 -2 0 rlineto",
                        "-13 0 -109 -2 -4 0 -10 0 -89 2 -3 0 rrcurveto",
                        "-3 -2 hlineto", "-17 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 2 0 rrcurveto",
                        "20 -1 rlineto",
                        "12 0 9 -1 6 -3 8 -5 5 -6 4 -9 rrcurveto",
                        "8 -22 163 -487 rlineto",
                        "5 -16 7 -7 11 0 11 0 8 7 6 16 rrcurveto",
                        "176 487 rlineto",
                        "3 10 3 7 1 6 2 5 5 7 10 7 5 3 8 1 14 0 rrcurveto",
                        "57 1 rlineto",
                        "13 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Swarrow
     */
    public void testSwarrow() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Swarrow");
        assertNotNull(cs);
        assertEquals("Swarrow", cs.getName());
        String[] text =
                {"365 150 21 rmoveto", "-1 31 -2 27 -2 22 rrcurveto",
                        "545 547 -36 37 -523 -523 rlineto",
                        "-14 48 -7 25 -1 0 rrcurveto", "-27 -27 rlineto",
                        "3 -60 -1 -54 -7 -48 -6 -47 -9 -37 -13 -26 rrcurveto",
                        "16 -17 rlineto",
                        "40 17 40 9 37 3 86 4 53 1 20 -3 rrcurveto",
                        "28 29 rlineto", "-23 9 -22 9 -22 6 rrcurveto",
                        "517 518 -38 37 -539 -540 rlineto",
                        "-33 6 -31 0 -28 -3 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : T
     */
    public void testT() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("T");
        assertNotNull(cs);
        assertEquals("T", cs.getName());
        String[] text =
                {"76 1 27 578 40 hstem", "258 80 184 26 vstem",
                        "77 646 rmoveto", "-41 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : T_h
     */
    public void testT_h() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("T_h");
        assertNotNull(cs);
        assertEquals("T_h", cs.getName());
        String[] text =
                {"508 1 27 365 47 166 40 52 -20 hstem",
                        "257 81 247 75 197 75 vstem", "125 606 rmoveto",
                        "84 hlineto", "36 12 -8 -31 hvcurveto", "-495 vlineto",
                        "-28 -13 -16 -41 vhcurveto", "-27 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "492 vlineto", "34 12 8 36 vhcurveto", "120 hlineto",
                        "70 9 -12 -55 hvcurveto", "-467 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "248 vlineto",
                        "59 56 32 17 29 0 rrcurveto",
                        "46 31 -38 -81 hvcurveto", "-202 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "210 vlineto",
                        "103 -36 55 -72 vhcurveto",
                        "-39 0 -58 -16 -67 -67 rrcurveto", "341 -22 vlineto",
                        "-53 -40 -29 -12 -88 0 rrcurveto", "-391 hlineto",
                        "-21 0 17 6 hvcurveto", "-27 4 rlineto",
                        "-4 -49 -6 -52 -12 -53 rrcurveto", "30 -5 rlineto",
                        "20 80 13 12 55 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Tau
     */
    public void testTau() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tau");
        assertNotNull(cs);
        assertEquals("Tau", cs.getName());
        String[] text =
                {"76 1 27 578 40 hstem", "258 80 184 26 vstem",
                        "77 646 rmoveto", "-41 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Tbar
     */
    public void testTbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tbar");
        assertNotNull(cs);
        assertEquals("Tbar", cs.getName());
        String[] text =
                {"76 1 27 301 39 238 40 hstem", "258 80 184 26 vstem",
                        "128 329 rmoveto", "130 -257 hlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 39 88 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-39 -16 13 31 hvcurveto",
                        "257 137 39 -137 196 vlineto", "34 12 8 36 vhcurveto",
                        "66 hlineto", "55 0 14 -12 20 -80 rrcurveto",
                        "29 5 rlineto", "-11 53 -7 52 -4 49 rrcurveto",
                        "-26 -4 rlineto", "-6 -1 -17 -21 vhcurveto",
                        "-423 hlineto", "-21 0 17 6 hvcurveto",
                        "-27 4 rlineto", "-4 -49 -6 -52 -12 -53 rrcurveto",
                        "30 -5 rlineto", "20 80 13 12 55 0 rrcurveto",
                        "84 hlineto", "37 12 -8 -31 hvcurveto",
                        "-199 -130 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Tcaron
     */
    public void testTcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tcaron");
        assertNotNull(cs);
        assertEquals("Tcaron", cs.getName());
        String[] text =
                {"76 1 27 578 40 73 -21 hstem", "258 80 184 26 vstem",
                        "77 646 rmoveto", "-41 callsubr", "-220 52 rmoveto",
                        "122 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Tcommaaccent
     */
    public void testTcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tcommaaccent");
        assertNotNull(cs);
        assertEquals("Tcommaaccent", cs.getName());
        String[] text =
                {"76 -177 25 76 32 43 29 578 40 hstem",
                        "258 80 10 53 121 26 vstem", "307 -76 rmoveto",
                        "22 19 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-19 0 -11 4 -28 10 rrcurveto", "-10 -22 rlineto",
                        "25 -11 18 -6 32 0 rrcurveto",
                        "60 46 28 43 38 -31 24 -40 hvcurveto",
                        "-9 0 -9 -1 -7 -2 rrcurveto", "19 48 rlineto",
                        "43 -1 59 -1 0 0 rrcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-39 -16 13 31 hvcurveto", "492 vlineto",
                        "34 12 8 36 vhcurveto", "66 hlineto",
                        "55 0 14 -12 20 -80 rrcurveto", "29 5 rlineto",
                        "-11 53 -7 52 -4 49 rrcurveto", "-26 -4 rlineto",
                        "-6 -1 -17 -21 vhcurveto", "-423 hlineto",
                        "-21 0 17 6 hvcurveto", "-27 4 rlineto",
                        "-4 -49 -6 -52 -12 -53 rrcurveto", "30 -5 rlineto",
                        "20 80 13 12 55 0 rrcurveto", "84 hlineto",
                        "37 12 -8 -31 hvcurveto", "-495 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 0 79 1 40 1 rrcurveto", "-35 -77 7 -7 rlineto",
                        "15 6 10 1 20 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Tenroman
     */
    public void testTenroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tenroman");
        assertNotNull(cs);
        assertEquals("Tenroman", cs.getName());
        String[] text =
                {
                        "120 -3 27 529 26 hstem",
                        "172 67 rmoveto",
                        "",
                        "121 175 124 -175 rlineto",
                        "7 -9 5 -8 3 -4 2 -4 1 -4 0 -4 0 -2 0 -2 -1 -2 0 -1 -1 0 0 0 -2 -2 -7 -1 -11 0 rrcurveto",
                        "-37 -1 rlineto",
                        "-2 0 -1 -1 -1 -1 -1 -2 0 -1 0 -2 rrcurveto",
                        "1 -16 0 -3 2 0 rlineto",
                        "13 1 110 2 4 0 10 0 82 -3 4 0 rrcurveto",
                        "2 3 hlineto",
                        "1 16 rlineto",
                        "3 -2 2 -2 vhcurveto",
                        "-2 1 -2 0 -4 1 rrcurveto",
                        "-8 1 rlineto",
                        "-15 1 -10 1 -4 2 -10 6 -9 6 -6 8 -7 10 -5 7 -4 5 rrcurveto",
                        "-170 240 137 196 rlineto",
                        "4 7 6 8 5 6 6 8 8 7 11 5 5 3 10 2 13 0 rrcurveto",
                        "26 1 rlineto",
                        "3 0 3 0 2 1 3 1 1 2 0 3 rrcurveto",
                        "0 16 0 3 -2 0 rlineto",
                        "-10 -1 -84 -2 -4 0 -9 0 -86 3 -4 0 rrcurveto",
                        "-2 -3 hlineto",
                        "0 -16 0 -4 rlineto",
                        "1 -2 1 -1 2 0 rrcurveto",
                        "33 -1 rlineto",
                        "14 0 6 -2 1 -2 rrcurveto",
                        "1 hlineto",
                        "1 -2 0 -1 0 -3 0 -3 -1 -4 -3 -5 -1 -3 -4 -7 -8 -11 rrcurveto",
                        "-112 -161 -113 161 rlineto",
                        "-8 11 -4 6 -2 4 -2 4 -2 4 0 4 0 2 1 2 1 2 rrcurveto",
                        "1 vlineto",
                        "3 1 5 2 12 0 rrcurveto",
                        "40 1 rlineto",
                        "2 0 2 1 1 2 rrcurveto",
                        "0 4 1 16 0 3 -3 0 rlineto",
                        "-13 -1 -108 -2 -4 0 -10 0 -89 3 -3 0 rrcurveto",
                        "-3 -3 hlineto",
                        "-16 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 3 0 rrcurveto",
                        "9 -1 rlineto",
                        "13 -1 10 -1 6 -3 9 -4 8 -7 8 -9 5 -6 5 -7 6 -8 rrcurveto",
                        "160 -226 -146 -210 rlineto",
                        "-8 -10 -5 -8 -3 -4 -6 -8 -8 -6 -10 -5 -6 -3 -9 -1 -14 -1 rrcurveto",
                        "-24 -1 rlineto",
                        "-2 0 -2 0 -2 -1 -3 -1 -1 -1 0 -4 rrcurveto",
                        "0 -16 0 -3 2 0 rlineto",
                        "8 1 73 2 3 0 11 0 96 -3 4 0 rrcurveto",
                        "3 3 hlineto",
                        "16 vlineto",
                        "0 2 0 2 -1 1 -1 1 0 0 -3 1 rrcurveto",
                        "-35 1 rlineto",
                        "-14 0 -6 2 -1 2 -2 1 0 2 0 3 0 3 1 4 3 5 4 7 4 8 5 6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Theta
     */
    public void testTheta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Theta");
        assertNotNull(cs);
        assertEquals("Theta", cs.getName());
        String[] text =
                {"197 -12 34 275 56 271 34 hstem", "",
                        "37 91 63 26 262 26 65 92 vstem", "662 329 rmoveto",
                        "-50 callsubr", "-328 295 rmoveto", "-49 callsubr",
                        "100 -271 rmoveto", "-171 hlineto",
                        "-34 -12 2 35 hvcurveto", "7 vlineto",
                        "0 3 -1 4 -7 1 rrcurveto", "-21 hlineto",
                        "0 3 -45 -28 -34 -3 -52 0 hvcurveto", "21 hlineto",
                        "4 0 3 2 1 6 rrcurveto", "7 vlineto",
                        "33 13 3 33 vhcurveto", "171 hlineto",
                        "28 17 -3 -33 hvcurveto", "-7 vlineto",
                        "-7 5 -1 3 vhcurveto", "21 hlineto",
                        "0 -3 52 34 28 3 44 0 hvcurveto", "-22 hlineto",
                        "-5 -2 -2 -6 hvcurveto", "-6 vlineto",
                        "-34 -14 -3 -31 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Thorn
     */
    public void testThorn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Thorn");
        assertNotNull(cs);
        assertEquals("Thorn", cs.getName());
        String[] text =
                {"22 1 27 124 30 311 28 97 27 hstem", "98 81 229 81 vstem",
                        "98 575 rmoveto", "-503 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-27 hlineto",
                        "-39 -15 13 31 hvcurveto", "87 vlineto",
                        "15 -5 26 -2 35 0 rrcurveto",
                        "178 56 116 75 71 -35 107 -185 hvcurveto",
                        "-19 0 -35 0 -36 -2 rrcurveto", "56 vlineto",
                        "28 13 15 41 vhcurveto", "27 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -94 -1 -35 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "26 hlineto", "40 15 -13 -30 hvcurveto",
                        "81 -96 rmoveto", "21 6 49 8 19 0 rrcurveto",
                        "59 81 -30 -120 -129 -86 -32 -72 hvcurveto",
                        "-38 0 -24 2 -9 3 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Threeroman
     */
    public void testThreeroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Threeroman");
        assertNotNull(cs);
        assertEquals("Threeroman", cs.getName());
        String[] text =
                {
                        "200 -2 24 529 27 hstem",
                        "102 71 142 72 145 72 vstem",
                        "101 527 rmoveto",
                        "0 -4 1 -6 0 -11 rrcurveto",
                        "-438 vlineto",
                        "0 -9 0 -7 -1 -6 -1 -7 -4 -7 -6 -5 -4 -2 -7 -2 -15 0 rrcurveto",
                        "-29 -1 rlineto",
                        "-3 -5 0 -7 hvcurveto",
                        "-19 vlineto",
                        "0 60 3 44 vhcurveto",
                        "439 -1 rlineto",
                        "46 62 -2 0 hvcurveto",
                        "18 vlineto",
                        "4 -2 4 -6 vhcurveto",
                        "-29 hlineto",
                        "-14 1 -8 1 -3 3 -7 5 -3 6 -2 8 rrcurveto",
                        "0 21 0 439 0 21 rlineto",
                        "1 7 3 7 8 5 3 3 8 2 14 0 rrcurveto",
                        "29 hlineto",
                        "7 1 1 4 0 3 rrcurveto",
                        "0 19 -108 -3 -439 0 -104 3 0 -19 rlineto",
                        "0 -5 2 -2 6 -1 rrcurveto",
                        "29 hlineto",
                        "14 0 8 -2 4 -3 6 -4 3 -6 2 -9 rrcurveto",
                        "213 hmoveto",
                        "1 -4 0 -6 0 -11 rrcurveto",
                        "-438 vlineto",
                        "0 -9 0 -7 -1 -6 -1 -7 -3 -7 -7 -5 -3 -2 -8 -2 -14 0 rrcurveto",
                        "-68 hlineto",
                        "-13 0 -8 1 -4 3 -7 5 -3 6 -1 8 -1 7 0 7 0 8 rrcurveto",
                        "438 vlineto",
                        "0 8 0 7 1 7 1 7 3 6 7 5 3 3 8 2 14 0 rrcurveto",
                        "68 hlineto",
                        "14 0 8 -2 3 -3 7 -4 2 -6 2 -9 rrcurveto",
                        "217 hmoveto",
                        "0 -4 1 -6 0 -11 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -7 -5 -3 -3 -8 -1 -14 -1 rrcurveto",
                        "-72 1 rlineto",
                        "-13 0 -7 1 -5 3 -6 5 -3 6 -1 8 0 7 -1 7 0 8 rrcurveto",
                        "438 vlineto",
                        "0 8 1 7 0 7 0 7 4 6 6 5 4 3 8 2 13 0 rrcurveto",
                        "72 hlineto",
                        "14 0 7 -2 4 -3 6 -4 4 -6 1 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Tux
     */
    public void testTux() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tux");
        assertNotNull(cs);
        assertEquals("Tux", cs.getName());
        String[] text =
                {
                        "259 -153 7 33 48 103 87 -61 9 11 5 7 9 281 10 24 7 115 10 153 -20 hstemhm",
                        "14 8 6 9 -2 9 68 53 9 17 65 18 52 14 -9 45 13 50 56 8 39 46 71 10 hintmask 110100111111011100111100",
                        "379 -113 rmoveto",
                        "42 0 43 -6 21 -3 7 -18 16 -11 22 -5 rrcurveto",
                        "19 -3 rlineto",
                        "26 0 17 13 22 19 rrcurveto",
                        "28 24 rlineto",
                        "66 57 38 -15 0 40 0 30 -55 1 -6 30 rrcurveto",
                        "-4 21 rlineto",
                        "-4 27 -6 5 -11 0 6 18 3 19 0 20 0 92 -39 57 -39 49 -80 98 17 23 -15 111 -13 110 -87 15 -34 0 -98 0 -25 -58 0 -67 rrcurveto",
                        "0 -72 9 -36 0 -27 0 -26 -8 -19 -30 -37 rrcurveto",
                        "-22 -25 rlineto",
                        "-9 -10 -18 -23 -6 -25 -12 -57 -4 2 -18 -36 rrcurveto",
                        "-11 -18 rlineto",
                        "-8 -17 -7 -15 0 -12 -1 -7 0 -6 4 -6 -8 -10 4 1 -9 -21 -5 -3 -3 -2 -5 0 rrcurveto",
                        "-33 hlineto",
                        "-10 -18 -12 -29 hvcurveto",
                        "hintmask 110100111110111100111100",
                        "0 -11 7 -35 0 -8 0 -16 -8 -11 -10 -16 -2 -4 -1 -5 0 -6 0 -24 61 -5 20 -5 76 -17 30 -22 39 0 20 0 18 6 14 20 rrcurveto",
                        "-1 vlineto",
                        "24 11 35 4 28 0 rrcurveto",
                        "-205 270 rmoveto",
                        "0 -19 8 -10 11 -8 -1 7 -1 7 0 6 0 24 8 40 27 52 rrcurveto",
                        "22 42 rlineto",
                        "4 10 -9 -8 20 50 rrcurveto",
                        "17 34 rlineto",
                        "6 12 3 6 2 14 rrcurveto",
                        "15 -15 rlineto",
                        "8 -9 18 -6 16 0 14 0 25 7 31 23 rrcurveto",
                        "26 19 rlineto",
                        "17 -34 1 -7 21 -42 3 -69 56 14 0 -140 0 -20 -1 -19 -3 -19 rrcurveto",
                        "hintmask 110001111110011100111100",
                        "-6 4 -6 2 -5 0 -15 0 -12 -16 0 -39 0 -15 1 15 0 -38 -50 -73 -70 -4 -27 0 -24 0 -33 4 -16 20 -7 14 -2 2 0 2 rrcurveto",
                        "1 0 1 1 13 19 17 11 vhcurveto",
                        "0 12 -17 20 -33 27 rrcurveto",
                        "-30 20 rlineto",
                        "-52 39 -2 13 0 22 0 40 36 70 12 14 1 -1 5 -1 1 -2 -17 -20 -29 -60 0 -43 rrcurveto",
                        "-95 -260 rmoveto",
                        "-45 7 -9 9 -3 8 rrcurveto",
                        "hintmask 110100111110111100111100",
                        "0 22 22 8 0 33 rrcurveto",
                        "hintmask 110100111111011100111100",
                        "0 17 -7 17 0 14 0 10 3 9 8 9 8 4 11 0 12 0 5 0 5 1 5 0 5 1 5 1 4 2 13 9 -17 25 41 8 rrcurveto",
                        "41 -10 10 -41 23 -33 rrcurveto",
                        "19 -26 rlineto",
                        "39 -49 10 -32 0 -21 0 -8 -1 -6 -2 -6 -10 -12 -17 -13 -23 0 -28 0 -54 33 -73 10 rrcurveto",
                        "414 -15 rmoveto",
                        "0 1 4 32 rlineto",
                        "6 54 2 -7 0 21 0 8 -1 9 -1 8 rrcurveto",
                        "0 34 0 9 rlineto",
                        "hintmask 110001111110011100111100",
                        "24 4 21 18 vhcurveto",
                        "4 0 4 -2 7 -6 2 -12 3 -11 6 -8 rrcurveto",
                        "hintmask 111000111110011100111100",
                        "8 -15 19 -4 13 0 rrcurveto",
                        "hintmask 110011111110011100111100",
                        "36 0 19 46 16 0 1 0 1 0 1 -1 2 -4 1 -6 2 -6 rrcurveto",
                        "3 -17 rlineto",
                        "15 -59 40 23 9 -38 -3 -29 -36 7 -53 -43 rrcurveto",
                        "-50 -42 rlineto",
                        "-7 -5 -14 -14 -27 0 -27 0 -17 15 -10 17 rrcurveto",
                        "-66 577 rmoveto",
                        "-2 2 0 4 -2 1 -44 -32 -25 -7 -17 0 -21 0 -16 8 -15 15 -4 4 -2 2 0 4 0 25 57 25 15 0 23 0 73 -32 7 -7 rrcurveto",
                        "1 -2 0 -2 0 -2 0 -7 -4 -8 -8 -5 rrcurveto",
                        "-25 -19 rlineto",
                        "-33 -24 -23 -6 -14 0 -6 0 -17 0 -17 18 rrcurveto",
                        "-17 16 rlineto",
                        "-5 5 -2 5 -2 5 13 -12 18 -13 26 0 29 0 28 17 31 22 rrcurveto",
                        "-34 45 rmoveto",
                        "-1 1 -7 3 -1 0 rrcurveto",
                        "hintmask 110000111110011101111100",
                        "-6 11 -2 16 0 8 rrcurveto",
                        "18 13 15 22 18 19 -14 -35 vhcurveto",
                        "0 -12 -2 -14 -5 -16 -14 6 1 -2 -8 4 11 3 8 9 0 14 rrcurveto",
                        "13 -10 20 -16 -13 -11 -11 -23 vhcurveto",
                        "1 -5 1 -5 2 -4 rrcurveto",
                        "hintmask 110010111110011100111100",
                        "262 -415 rmoveto",
                        "hintmask 111000111110011100111100",
                        "-5 0 6 36 -70 0 rrcurveto",
                        "hintmask 110011111110011100111100",
                        "-24 0 -15 -29 -4 0 -1 0 -2 1 0 3 3 5 13 20 17 6 14 43 1 14 0 15 0 30 -16 50 -34 10 2 6 2 -1 0 1 rrcurveto",
                        "19 -5 36 -28 0 -61 0 -21 -4 -22 -10 -28 19 -2 -7 1 12 -2 42 -5 10 -25 0 -8 rrcurveto",
                        "-2 -2 -2 -2 vhcurveto",
                        "-356 404 rmoveto",
                        "-3 -2 -4 -2 -3 -2 -10 13 -5 12 0 10 rrcurveto",
                        "21 7 26 20 vhcurveto",
                        "hintmask 110000111110011101111100",
                        "24 6 -27 -11 -19 -3 0 0 hvcurveto",
                        "-1 0 -1 -1 -2 -1 0 2 1 2 0 2 rrcurveto",
                        "18 -10 16 -12 -12 -8 -13 -16 vhcurveto",
                        "0 -8 3 -13 13 -7 rrcurveto",
                        "hintmask 110000111110011110111100",
                        "27 hmoveto",
                        "-3 1 -1 2 vhcurveto",
                        "1 0 3 0 1 1 4 5 2 5 0 1 rrcurveto",
                        "1 0 1 -1 vhcurveto",
                        "-3 -10 -3 -7 hvcurveto",
                        "91 43 rmoveto",
                        "",
                        "-2 hlineto",
                        "0 1 0 -1 -2 6 2 0 1 1 1 0 12 0 2 -17 1 -5 rrcurveto",
                        "-6 hlineto",
                        "-2 9 -2 6 -5 0 rrcurveto",
                        "-100 -15 rmoveto",
                        "-6 hlineto",
                        "-2 10 0 -1 -3 5 -2 1 -3 1 -1 -1 -1 2 -1 3 0 1 2 0 1 1 1 0 12 0 2 -19 1 -3 rrcurveto",
                        "50 -28 rmoveto",
                        "7 -10 5 -2 -1 0 -1 -2 -10 9 -2 0 3 1 3 0 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Twelveroman
     */
    public void testTwelveroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Twelveroman");
        assertNotNull(cs);
        assertEquals("Twelveroman", cs.getName());
        String[] text =
                {
                        "536 -3 27 -24 24 529 24 hstemhm",
                        "649 72 144 73 hintmask 01111000",
                        "510 70 rmoveto",
                        "-170 240 137 196 rlineto",
                        "4 7 6 8 5 6 6 8 8 7 11 5 5 3 10 2 13 0 rrcurveto",
                        "67 1 rlineto",
                        "14 0 8 -2 4 -3 6 -5 3 -5 1 -9 1 -4 0 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -6 -5 -4 -3 -8 -1 -14 -1 -24 0 -26 -1 -11 5 -10 6 -9 6 -6 8 rrcurveto",
                        "-7 10 -5 7 -4 5 rrcurveto",
                        "-338 -3 rmoveto",
                        "121 175 124 -175 rlineto",
                        "7 -9 5 -8 3 -4 2 -4 1 -4 0 -4 0 -2 0 -2 -1 -2 0 -1 -1 0 0 0 -2 -2 -7 -1 -11 0 rrcurveto",
                        "-37 -1 rlineto",
                        "-2 0 -1 -1 -1 -1 -1 -2 0 -1 0 -2 rrcurveto",
                        "1 -16 rlineto",
                        "hintmask 10111000",
                        "-3 2 vlineto",
                        "hintmask 01111000",
                        "13 1 110 2 4 0 176 -2 -64 2 75 0 rrcurveto",
                        "207 hlineto",
                        "45 71 -2 0 hvcurveto",
                        "18 vlineto",
                        "0 4 -2 3 -6 1 rrcurveto",
                        "-29 hlineto",
                        "-14 1 -7 1 -4 3 -7 5 -3 6 -1 7 0 7 -1 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 1 6 0 8 0 7 4 6 7 6 3 3 7 2 15 0 rrcurveto",
                        "29 hlineto",
                        "7 1 5 3 hvcurveto",
                        "0 18 -116 -2 -207 0 -205 -1 rlineto",
                        "-9 0 -86 3 -4 0 rrcurveto",
                        "-2 -3 hlineto",
                        "0 -16 0 -4 rlineto",
                        "1 -2 1 -1 2 0 rrcurveto",
                        "33 -1 rlineto",
                        "14 0 6 -2 1 -2 rrcurveto",
                        "1 hlineto",
                        "1 -2 0 -1 0 -3 0 -3 -1 -4 -3 -5 -1 -3 -4 -7 -8 -11 rrcurveto",
                        "-112 -161 -113 161 rlineto",
                        "-8 11 -4 6 -2 4 -2 4 -2 4 0 4 0 2 1 2 1 2 rrcurveto",
                        "1 vlineto",
                        "3 1 5 2 12 0 rrcurveto",
                        "40 1 rlineto",
                        "2 0 2 1 1 2 rrcurveto",
                        "0 4 1 16 0 3 -3 0 rlineto",
                        "-13 -1 -108 -2 -4 0 -10 0 -89 3 -3 0 rrcurveto",
                        "-3 -3 hlineto",
                        "-16 vlineto",
                        "0 -3 2 -2 2 -1 2 -1 2 0 3 0 rrcurveto",
                        "9 -1 rlineto",
                        "13 -1 10 -1 6 -3 9 -4 8 -7 8 -9 5 -6 5 -7 6 -8 rrcurveto",
                        "160 -226 -146 -210 rlineto",
                        "-8 -10 -5 -8 -3 -4 -6 -8 -8 -6 -10 -5 -6 -3 -9 -1 -14 -1 rrcurveto",
                        "-24 -1 rlineto",
                        "-2 0 -2 0 -2 -1 -3 -1 -1 -1 0 -4 rrcurveto",
                        "0 -16 rlineto",
                        "hintmask 10111000",
                        "-3 2 vlineto",
                        "hintmask 01111000",
                        "8 1 73 2 3 0 rrcurveto",
                        "hintmask 10111000",
                        "11 0 96 -3 4 0 rrcurveto",
                        "3 hlineto",
                        "hintmask 01111000",
                        "507 callsubr",
                        "hintmask 10111000",
                        "-35 1 rlineto",
                        "-14 0 -6 2 -1 2 -2 1 0 2 0 3 0 3 1 4 3 5 4 7 4 8 5 6 rrcurveto",
                        "692 462 rmoveto",
                        "1 -4 0 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -6 -5 rrcurveto",
                        "hintmask 01111000",
                        "-4 -3 -8 -1 -14 -1 rrcurveto",
                        "-70 hlineto",
                        "-13 1 -8 1 -4 3 -6 5 -4 6 -1 7 0 7 -1 7 0 8 rrcurveto",
                        "439 vlineto",
                        "0 7 1 6 0 8 1 7 3 6 7 6 3 3 8 2 14 0 rrcurveto",
                        "70 hlineto",
                        "14 0 8 -2 4 -3 5 -5 4 -5 1 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Tworoman
     */
    public void testTworoman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Tworoman");
        assertNotNull(cs);
        assertEquals("Tworoman", cs.getName());
        String[] text =
                {
                        "-15 -2 24 529 27 hstem",
                        "102 72 143 72 vstem",
                        "101 527 rmoveto",
                        "1 -4 0 -6 0 -11 rrcurveto",
                        "-438 vlineto",
                        "0 -9 0 -7 -1 -6 -1 -7 -4 -7 -6 -5 -4 -2 -7 -2 -15 0 rrcurveto",
                        "-29 -1 rlineto",
                        "-3 -5 0 -7 hvcurveto",
                        "-19 vlineto",
                        "0 60 3 44 vhcurveto",
                        "223 -1 rlineto",
                        "46 62 -2 0 hvcurveto",
                        "18 vlineto",
                        "0 4 -1 3 -6 1 rrcurveto",
                        "-30 hlineto",
                        "-13 0 -8 2 -4 3 -6 5 -4 6 -1 7 rrcurveto",
                        "0 22 0 439 0 21 rlineto",
                        "1 7 3 6 7 6 3 3 9 2 13 0 rrcurveto",
                        "30 hlineto",
                        "6 1 5 3 hvcurveto",
                        "0 18 -108 -2 -223 0 -104 3 0 -19 rlineto",
                        "0 -5 2 -2 6 -1 rrcurveto",
                        "29 hlineto",
                        "14 0 8 -2 4 -3 6 -4 4 -6 1 -9 rrcurveto",
                        "214 hmoveto",
                        "1 -4 1 -7 0 -10 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -2 -5 0 -8 -4 -6 -6 -5 -4 -3 -7 -2 -14 0 rrcurveto",
                        "-70 1 rlineto",
                        "-13 0 -8 1 -3 3 -7 5 -3 6 -2 8 rrcurveto",
                        "0 22 0 438 0 22 rlineto",
                        "1 7 3 6 8 5 2 3 9 2 13 0 rrcurveto", "70 hlineto",
                        "13 0 8 -2 4 -3 6 -4 3 -6 1 -9 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : U
     */
    public void testU() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("U");
        assertNotNull(cs);
        assertEquals("U", cs.getName());
        String[] text =
                {"160 -12 41 589 27 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Uacute
     */
    public void testUacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Uacute");
        assertNotNull(cs);
        assertEquals("Uacute", cs.getName());
        String[] text =
                {"160 -12 41 589 27 74 -21 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "84 832 rmoveto",
                        "38 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ubreve
     */
    public void testUbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ubreve");
        assertNotNull(cs);
        assertEquals("Ubreve", cs.getName());
        String[] text =
                {"160 -12 41 589 27 46 53 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "161 817 rmoveto",
                        "-26 hlineto",
                        "-7 -39 -52 -22 -49 0 -53 0 -47 22 -8 39 rrcurveto",
                        "-28 hlineto",
                        "5 -70 57 -44 74 0 66 0 63 42 5 72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ucircumflex
     */
    public void testUcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ucircumflex");
        assertNotNull(cs);
        assertEquals("Ucircumflex", cs.getName());
        String[] text =
                {"160 -12 41 589 27 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "50 817 rmoveto",
                        "-43 hlineto", "-31 -34 -32 -32 -37 -28 rrcurveto",
                        "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 35 -19 39 -18 rrcurveto",
                        "15 21 rlineto", "-36 27 -35 31 -29 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Udieresis
     */
    public void testUdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Udieresis");
        assertNotNull(cs);
        assertEquals("Udieresis", cs.getName());
        String[] text =
                {"160 -12 41 589 27 -4 91 hstemhm",
                        "89 80 63 89 55 90 60 46 hintmask 11011110",
                        "320 -12 rmoveto", "206 46 127 178 hvcurveto",
                        "279 vlineto", "28 13 18 41 17 8 1 7 vhcurveto",
                        "0 19 -2 1 rlineto", "0 -65 -1 -35 vhcurveto",
                        "-39 0 -4 1 -27 0 rrcurveto", "-3 -6 -3 -6 hvcurveto",
                        "-11 vlineto",
                        "0 -5 4 -2 4 -1 35 -7 13 -11 0 -31 rrcurveto",
                        "-294 vlineto", "-112 -16 -134 -168 vhcurveto",
                        "-48 0 -42 21 -29 29 -53 53 -1 70 0 65 rrcurveto",
                        "302 vlineto", "0 28 8 15 40 6 rrcurveto",
                        "5 3 3 5 hvcurveto", "10 vlineto",
                        "6 -1 4 -5 vhcurveto", "-36 0 -20 -1 -36 0 rrcurveto",
                        "-39 -76 1 0 hvcurveto", "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 34 36 -6 -40 vhcurveto", "-338 vlineto",
                        "-204 142 -42 89 vhcurveto", "56 699 rmoveto",
                        "hintmask 10111110", "50 callsubr", "-144 hmoveto",
                        "51 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Udieresis_alt
     */
    public void testUdieresis_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Udieresis.alt");
        assertNotNull(cs);
        assertEquals("Udieresis.alt", cs.getName());
        String[] text =
                {"160 -12 41 589 27 60 91 hstem",
                        "89 81 36 91 99 90 40 46 vstem", "321 -12 rmoveto",
                        "-40 callsubr", "-115 762 rmoveto", "318 callsubr",
                        "190 1 rmoveto", "209 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ugrave
     */
    public void testUgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ugrave");
        assertNotNull(cs);
        assertEquals("Ugrave", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 75 -21 hstem",
                        "89 81 356 46 vstem",
                        "321 -12 rmoveto",
                        "-40 callsubr",
                        "-46 831 rmoveto",
                        "-76 -46 155 -63 rlineto",
                        "21 -8 13 -3 9 0 9 0 6 4 0 10 0 7 -5 7 -11 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Uhorn
     */
    public void testUhorn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Uhorn");
        assertNotNull(cs);
        assertEquals("Uhorn", cs.getName());
        String[] text =
                {"189 -12 41 589 27 45 80 hstemhm",
                        "89 81 356 46 -1 115 -38 38 hintmask 11110100",
                        "615 618 rmoveto", "141 callsubr", "hintmask 11111010",
                        "142 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Uhungarumlaut
     */
    public void testUhungarumlaut() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Uhungarumlaut");
        assertNotNull(cs);
        assertEquals("Uhungarumlaut", cs.getName());
        String[] text =
                {"160 -12 41 589 27 66 -21 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "47 838 rmoveto",
                        "-6 5 -8 4 -9 0 -15 0 -8 -3 -4 -9 rrcurveto", "",
                        "-57 -115 rlineto", "-1 0 -2 -2 hvcurveto",
                        "0 -4 2 -4 4 -2 2 -2 3 -2 2 0 3 0 3 1 2 2 rrcurveto",
                        "94 85 rlineto",
                        "5 5 3 7 0 7 0 12 -6 10 -9 7 rrcurveto",
                        "132 -6 rmoveto",
                        "-10 9 -10 1 -7 0 -11 0 -7 -3 -5 -8 rrcurveto",
                        "-62 -115 rlineto",
                        "-1 -1 0 -2 0 -1 0 -9 9 -5 5 0 2 0 3 1 2 1 rrcurveto",
                        "98 84 rlineto",
                        "5 4 3 7 0 9 0 11 -5 10 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Umacron
     */
    public void testUmacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Umacron");
        assertNotNull(cs);
        assertEquals("Umacron", cs.getName());
        String[] text =
                {"160 -12 41 589 27 87 44 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "142 744 rmoveto",
                        "13 10 18 12 7 -4 7 -9 hvcurveto", "-245 hlineto",
                        "-12 -10 -17 -12 -7 3 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Uogonek
     */
    public void testUogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Uogonek");
        assertNotNull(cs);
        assertEquals("Uogonek", cs.getName());
        String[] text =
                {
                        "160 -205 38 155 41 589 27 hstem",
                        "89 81 166 60 130 46 vstem",
                        "539 -138 rmoveto",
                        "-16 8 rlineto",
                        "-22 -23 -16 -14 -29 0 -37 0 -23 27 0 25 0 63 47 46 44 40 67 53 18 93 0 113 rrcurveto",
                        "281 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -74 -1 -36 -39 -71 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "27 hlineto",
                        "39 15 -13 -31 hvcurveto",
                        "-299 vlineto",
                        "-112 -15 -134 -169 vhcurveto",
                        "-48 0 -41 21 -30 29 -53 53 0 70 0 65 rrcurveto",
                        "307 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "27 hlineto",
                        "39 15 -13 -31 hvcurveto",
                        "-340 vlineto",
                        "-204 142 -42 90 vhcurveto",
                        "29 0 26 2 23 5 -35 -34 -28 -41 0 -41 0 -55 42 -29 54 0 41 0 37 22 29 45 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Upsilon
     */
    public void testUpsilon() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Upsilon");
        assertNotNull(cs);
        assertEquals("Upsilon", cs.getName());
        String[] text =
                {"73 1 27 590 27 hstem", "254 80 vstem", "254 72 rmoveto",
                        "-36 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Upsilon1
     */
    public void testUpsilon1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Upsilon1");
        assertNotNull(cs);
        assertEquals("Upsilon1", cs.getName());
        String[] text =
                {
                        "41 1 27 582 48 -35 35 hstemhm",
                        "228 80 hintmask 11010000",
                        "228 71 rmoveto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "1 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "275 vlineto",
                        "1 126 63 138 53 0 22 0 6 -12 5 -13 7 -13 9 -13 29 0 rrcurveto",
                        "21 19 20 20 35 -19 24 -62 hvcurveto",
                        "-115 0 -54 -185 -9 -59 rrcurveto",
                        "hintmask 10110000", "256 callsubr",
                        "hintmask 11010000", "257 callsubr",
                        "hintmask 10110000", "258 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : Upsilondieresis
     */
    public void testUpsilondieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Upsilondieresis");
        assertNotNull(cs);
        assertEquals("Upsilondieresis", cs.getName());
        String[] text =
                {
                        "73 1 27 590 27 58 91 hstem",
                        "158 91 5 80 14 90 vstem",
                        "254 72 rmoveto",
                        "-36 callsubr",
                        "-96 468 rmoveto",
                        "28 callsubr",
                        "190 hmoveto",
                        "-24 20 -21 26 24 20 21 24 25 -20 21 -24 -26 -20 -21 -25 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Upsilontonos
     */
    public void testUpsilontonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Upsilontonos");
        assertNotNull(cs);
        assertEquals("Upsilontonos", cs.getName());
        String[] text =
                {"186 1 27 590 27 hstem", "366 81 vstem", "366 72 rmoveto",
                        "217 callsubr", "-318 444 rmoveto", "213 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Uring
     */
    public void testUring() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Uring");
        assertNotNull(cs);
        assertEquals("Uring", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 -5 27 112 27 hstemhm",
                        "89 81 91 31 108 32 94 46 hintmask 11011111",
                        "321 -12 rmoveto",
                        "-40 callsubr",
                        "-60 735 rmoveto",
                        "hintmask 10111111",
                        "-46 39 -37 46 48 38 38 45 47 -40 36 -46 -47 -38 -37 -46 vhcurveto",
                        "85 56 rmoveto", "125 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Utilde
     */
    public void testUtilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Utilde");
        assertNotNull(cs);
        assertEquals("Utilde", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 53 44 4 46 hstem",
                        "89 81 356 46 vstem",
                        "321 -12 rmoveto",
                        "-40 callsubr",
                        "92 754 rmoveto",
                        "-19 0 -17 11 -16 11 -20 14 -22 14 -30 0 -43 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 18 -11 21 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : V
     */
    public void testV() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("V");
        assertNotNull(cs);
        assertEquals("V", cs.getName());
        String[] text =
                {"116 9 -21 630 27 hstem", "488 574 rmoveto", "-39 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : V_alt
     */
    public void testV_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("V.alt");
        assertNotNull(cs);
        assertEquals("V.alt", cs.getName());
        String[] text =
                {"103 9 -21 630 26 hstem", "488 574 rmoveto",
                        "-118 -361 -31 -88 -32 91 -141 356 rlineto",
                        "-3 9 -2 7 0 6 rrcurveto", "15 11 7 35 vhcurveto",
                        "26 hlineto", "5 3 3 6 hvcurveto", "0 18 -2 2 rlineto",
                        "0 -89 -3 -35 -39 -78 3 0 vhcurveto",
                        "-2 -2 0 -18 rlineto", "-6 4 -3 4 vhcurveto",
                        "13 hlineto", "39 0 15 -15 10 -29 rrcurveto",
                        "222 -561 rlineto",
                        "6 -14 8 -9 11 0 10 0 10 9 5 14 rrcurveto",
                        "183 563 rlineto", "12 32 14 12 33 0 rrcurveto",
                        "15 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -56 -3 -36 -39 -51 3 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "9 hlineto", "29 16 -1 -18 hvcurveto",
                        "0 -6 -2 -8 -4 -11 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : W
     */
    public void testW() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("W");
        assertNotNull(cs);
        assertEquals("W", cs.getName());
        String[] text =
                {"414 9 -21 630 27 hstem", "323 12 rmoveto", "-38 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : W_alt
     */
    public void testW_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("W.alt");
        assertNotNull(cs);
        assertEquals("W.alt", cs.getName());
        String[] text =
                {"392 11 -21 626 29 -26 26 hstemhm", "hintmask 10100000",
                        "337 12 rmoveto", "111 408 151 -408 rlineto",
                        "5 -14 9 -8 14 0 14 0 3 8 4 13 rrcurveto",
                        "170 564 rlineto", "11 33 4 11 29 0 rrcurveto",
                        "20 hlineto", "1 9 0 8 hvcurveto", "19 vlineto",
                        "0 -54 -1 -32 -42 -62 1 0 vhcurveto", "-20 vlineto",
                        "-3 1 -4 5 vhcurveto", "39 hlineto",
                        "20 8 -3 -14 hvcurveto", "0 -6 0 -12 -4 -10 rrcurveto",
                        "-106 -354 -30 -99 -28 86 -143 365 rlineto",
                        "-5 13 -3 9 0 6 rrcurveto", "15 7 2 21 vhcurveto",
                        "29 hlineto", "4 3 2 5 hvcurveto", "22 vlineto",
                        "0 -69 -1 -49 -40 -71 1 0 vhcurveto", "-21 vlineto",
                        "-5 2 -3 7 vhcurveto", "20 hlineto",
                        "38 0 20 -18 8 -27 rrcurveto",
                        "36 -90 -79 -288 -21 -83 -36 99 -139 362 rlineto",
                        "-3 11 -4 8 0 7 rrcurveto", "hintmask 11000000",
                        "13 8 5 19 vhcurveto", "38 hlineto",
                        "3 4 2 7 hvcurveto", "21 vlineto", "hintmask 10100000",
                        "0 -80 -1 -51 -38 -60 1 0 vhcurveto", "-22 vlineto",
                        "hintmask 11000000", "-5 3 -3 7 vhcurveto",
                        "21 hlineto", "33 0 10 -13 10 -33 rrcurveto",
                        "214 -558 rlineto", "5 -15 8 -7 15 0 rrcurveto",
                        "14 0 10 9 4 13 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Wacute
     */
    public void testWacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Wacute");
        assertNotNull(cs);
        assertEquals("Wacute", cs.getName());
        String[] text =
                {"414 9 -21 630 27 73 -21 hstem", "323 12 rmoveto",
                        "-38 callsubr", "187 807 rmoveto", "110 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Wcircumflex
     */
    public void testWcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Wcircumflex");
        assertNotNull(cs);
        assertEquals("Wcircumflex", cs.getName());
        String[] text =
                {"414 9 -21 630 27 hstem", "323 12 rmoveto", "-38 callsubr",
                        "156 793 rmoveto", "-43 hlineto",
                        "-31 -34 -32 -32 -37 -28 rrcurveto", "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 34 -19 39 -18 rrcurveto",
                        "16 21 rlineto", "-36 27 -35 31 -29 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Wdieresis
     */
    public void testWdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Wdieresis");
        assertNotNull(cs);
        assertEquals("Wdieresis", cs.getName());
        String[] text =
                {"414 9 -21 630 27 67 91 hstem", "328 90 70 91 vstem",
                        "323 12 rmoveto", "-38 callsubr", "5 746 rmoveto",
                        "347 callsubr", "160 hmoveto", "8 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : Wgrave
     */
    public void testWgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Wgrave");
        assertNotNull(cs);
        assertEquals("Wgrave", cs.getName());
        String[] text =
                {
                        "414 9 -21 630 27 74 -21 hstem",
                        "323 12 rmoveto",
                        "-38 callsubr",
                        "44 806 rmoveto",
                        "-76 -46 154 -62 rlineto",
                        "21 -9 13 -3 9 0 10 0 5 5 0 10 0 7 -4 6 -11 8 rrcurveto",
                        "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : X
     */
    public void testX() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("X");
        assertNotNull(cs);
        assertEquals("X", cs.getName());
        String[] text =
                {"154 -1 29 590 28 hstem", "13 625 rmoveto", "-37 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Xi
     */
    public void testXi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Xi");
        assertNotNull(cs);
        assertEquals("Xi", cs.getName());
        String[] text =
                {"147 0 63 221 56 242 64 hstemhm",
                        "53 26 -26 27 60 27 316 27 64 27 hintmask 11100111",
                        "438 340 rmoveto", "-226 hlineto",
                        "-34 -11 3 34 hvcurveto", "7 vlineto",
                        "3 -1 5 -7 vhcurveto", "-22 1 rlineto",
                        "0 3 -45 -29 -33 -3 -53 0 hvcurveto", "22 hlineto",
                        "3 0 4 1 1 7 rrcurveto", "7 vlineto",
                        "33 12 3 33 vhcurveto", "226 hlineto",
                        "29 16 -3 -33 hvcurveto", "-7 vlineto",
                        "1 -7 5 -1 2 0 rrcurveto", "22 hlineto",
                        "0 -3 53 33 28 3 45 0 hvcurveto", "-23 hlineto",
                        "-4 0 -2 -3 -1 -5 rrcurveto", "-7 vlineto",
                        "-34 -13 -3 -32 vhcurveto", "163 156 rmoveto",
                        "-2 32 -6 112 0 10 rrcurveto", "-27 hlineto",
                        "-2 -3 -2 -1 -5 0 rrcurveto", "-466 hlineto",
                        "-4 0 -2 1 -1 3 rrcurveto", "-24 hlineto",
                        "hintmask 11101111", "-1 -14 -6 -139 0 -1 rrcurveto",
                        "27 hlineto", "5 83 9 3 68 0 rrcurveto", "329 hlineto",
                        "67 0 8 -1 8 -85 rrcurveto", "hintmask 11110111",
                        "-521 -335 rmoveto", "7 -165 33 0 rlineto",
                        "1 2 3 2 4 0 rrcurveto", "457 hlineto",
                        "3 0 3 -1 1 -3 rrcurveto", "28 0 8 165 -27 0 rlineto",
                        "-7 -89 -9 -9 -71 0 rrcurveto", "-336 hlineto",
                        "-47 1 -18 6 -7 91 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Y
     */
    public void testY() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Y");
        assertNotNull(cs);
        assertEquals("Y", cs.getName());
        String[] text =
                {"73 1 27 590 27 hstem", "254 80 vstem", "254 72 rmoveto",
                        "-36 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Yacute
     */
    public void testYacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Yacute");
        assertNotNull(cs);
        assertEquals("Yacute", cs.getName());
        String[] text =
                {
                        "73 1 27 590 27 75 -21 hstem",
                        "254 80 vstem",
                        "254 72 rmoveto",
                        "-36 callsubr",
                        "105 540 rmoveto",
                        "-124 -87 rlineto",
                        "-12 -8 -3 -6 0 -7 0 -9 6 -5 9 0 8 0 13 3 22 8 rrcurveto",
                        "144 59 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ycircumflex
     */
    public void testYcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ycircumflex");
        assertNotNull(cs);
        assertEquals("Ycircumflex", cs.getName());
        String[] text =
                {"73 1 27 590 27 hstem", "254 80 vstem", "254 72 rmoveto",
                        "-36 callsubr", "60 524 rmoveto", "35 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ydieresis
     */
    public void testYdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ydieresis");
        assertNotNull(cs);
        assertEquals("Ydieresis", cs.getName());
        String[] text =
                {"73 1 27 590 27 60 91 hstemhm",
                        "180 91 -17 80 7 91 hintmask 11101100",
                        "254 72 rmoveto", "-36 callsubr", "hintmask 11110100",
                        "-74 469 rmoveto", "127 callsubr", "161 hmoveto",
                        "128 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Yen_fitted
     */
    public void testYen_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Yen.fitted");
        assertNotNull(cs);
        assertEquals("Yen.fitted", cs.getName());
        String[] text =
                {
                        "72 -1 25 109 44 59 44 266 26 -23 26 hstemhm",
                        "264 81 hintmask 11101100",
                        "572 557 rmoveto",
                        "-1 16 0 2 -2 0 rlineto",
                        "-9 0 -74 -2 -3 0 -9 0 -79 2 -3 0 rrcurveto",
                        "-2 -19 hlineto",
                        "0 -3 1 -3 5 -1 rrcurveto",
                        "29 hlineto",
                        "19 -1 6 -2 0 -11 0 -6 -4 -9 -7 -15 rrcurveto",
                        "-114 -214 rlineto",
                        "-49 85 -93 147 0 0 rrcurveto",
                        "hintmask 11110100",
                        "-6 12 4 10 25 1 rrcurveto",
                        "29 hlineto",
                        "5 1 4 4 hvcurveto",
                        "18 -3 vlineto",
                        "-11 0 -98 -2 -4 0 -10 0 -92 2 -3 0 rrcurveto",
                        "-2 -19 hlineto",
                        "0 -6 7 0 3 -1 rrcurveto",
                        "12 hlineto",
                        "21 -2 12 1 17 -24 rrcurveto",
                        "145 -241 -151 0 0 -44 177 0 3 -6 0 -53 -180 0 0 -44 180 0 0 -63 rlineto",
                        "0 -34 -2 -11 -35 -1 rrcurveto", "-30 hlineto",
                        "-7 -1 -3 -3 hvcurveto", "-19 vlineto",
                        "3 0 102 2 8 0 22 0 75 -2 19 0 rrcurveto",
                        "18 vlineto", "5 -1 2 -6 vhcurveto", "-30 hlineto",
                        "-35 1 -1 12 0 33 rrcurveto",
                        "63 182 44 -182 59 182 44 -162 vlineto",
                        "115 222 rlineto", "hintmask 11101100",
                        "20 42 11 4 30 1 rrcurveto", "20 hlineto",
                        "10 0 0 4 1 4 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Ygrave
     */
    public void testYgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Ygrave");
        assertNotNull(cs);
        assertEquals("Ygrave", cs.getName());
        String[] text =
                {"73 1 27 590 27 74 -21 hstem", "254 80 vstem",
                        "254 72 rmoveto", "-36 callsubr", "-27 537 rmoveto",
                        "25 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Z
     */
    public void testZ() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Z");
        assertNotNull(cs);
        assertEquals("Z", cs.getName());
        String[] text =
                {"103 0 39 567 40 hstem", "551 hmoveto", "-35 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Zacute
     */
    public void testZacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Zacute");
        assertNotNull(cs);
        assertEquals("Zacute", cs.getName());
        String[] text =
                {
                        "103 0 39 567 40 73 -21 hstem",
                        "348 820 rmoveto",
                        "-124 -86 rlineto",
                        "-13 -9 -2 -5 0 -7 0 -10 6 -5 9 0 8 0 13 3 22 9 rrcurveto",
                        "144 58 rlineto", "140 -768 rmoveto", "-35 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Zcaron
     */
    public void testZcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Zcaron");
        assertNotNull(cs);
        assertEquals("Zcaron", cs.getName());
        String[] text =
                {"103 0 39 567 40 74 -21 hstem", "551 hmoveto", "-35 callsubr",
                        "220 699 rmoveto", "122 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Zdotaccent
     */
    public void testZdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Zdotaccent");
        assertNotNull(cs);
        assertEquals("Zdotaccent", cs.getName());
        String[] text =
                {
                        "103 0 39 567 40 56 96 hstem",
                        "262 95 vstem",
                        "551 hmoveto",
                        "-35 callsubr",
                        "202 750 rmoveto",
                        "-26 21 -22 27 26 21 22 26 26 -21 22 -26 -27 -21 -22 -26 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : Zeta
     */
    public void testZeta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("Zeta");
        assertNotNull(cs);
        assertEquals("Zeta", cs.getName());
        String[] text =
                {"103 0 39 567 40 hstem", "551 hmoveto", "-35 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : a
     */
    public void testa() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("a");
        assertNotNull(cs);
        assertEquals("a", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10101110",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01110110",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : a_inferior
     */
    public void testa_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("a.inferior");
        assertNotNull(cs);
        assertEquals("a.inferior", cs.getName());
        String[] text =
                {
                        "-194 -117 31 223 24 hstemhm",
                        "35 52 -47 48 109 53 hintmask 11011000",
                        "240 -117 rmoveto",
                        "18 0 19 12 9 9 rrcurveto",
                        "-10 16 rlineto",
                        "-3 -3 -5 -2 -4 0 rrcurveto",
                        "-9 -5 17 40 hvcurveto",
                        "75 vlineto",
                        "94 -57 20 -49 -42 -62 -33 -39 -16 11 -10 15 19 8 13 8 vhcurveto",
                        "0 5 -1 5 -2 3 -1 2 -1 4 0 7 rrcurveto",
                        "15 21 12 34 22 32 -9 -75 vhcurveto",
                        "-58 -15 rlineto",
                        "hintmask 11101000",
                        "-63 -16 -41 -28 0 -42 0 -42 35 -27 43 0 33 0 18 9 33 30 rrcurveto",
                        "3 -19 14 -20 26 0 rrcurveto",
                        "-43 144 rmoveto",
                        "-79 vlineto",
                        "-27 -24 -17 -10 -21 0 -33 0 -12 20 0 21 0 31 24 18 86 23 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : a_sc
     */
    public void testa_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("a.sc");
        assertNotNull(cs);
        assertEquals("a.sc", cs.getName());
        String[] text =
                {
                        "15 1 27 170 32 199 29 -24 28 hstemhm",
                        "hintmask 11010000",
                        "163 189 rmoveto",
                        "570 callsubr",
                        "hintmask 11100000",
                        "571 callsubr",
                        "hintmask 11010000",
                        "-46 0 -59 3 -32 1 rrcurveto",
                        "-3 -2 -2 -20 rlineto",
                        "-4 3 -2 6 vhcurveto",
                        "37 -1 10 -4 -3 -28 -7 -58 -43 -179 -33 -98 -10 -28 -27 -10 -27 0 rrcurveto",
                        "-4 -5 -5 -3 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 61 2 28 31 49 -2 0 vhcurveto", "2 2 0 21 rlineto",
                        "3 -3 3 -4 vhcurveto", "-12 hlineto",
                        "-31 0 -9 10 6 21 rrcurveto",
                        "9 27 13 49 14 54 rrcurveto", "hintmask 11100000",
                        "91 240 rmoveto", "572 callsubr", "96 -248 rmoveto",
                        "573 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : a_scalt
     */
    public void testa_scalt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("a.scalt");
        assertNotNull(cs);
        assertEquals("a.scalt", cs.getName());
        String[] text =
                {"50 1 27 147 29 hstem", "166 164 rmoveto",
                        "3 6 6 5 13 0 rrcurveto", "173 0 48 -116 rlineto",
                        "1 -4 1 -4 0 -3 rrcurveto", "-13 -15 -7 -25 vhcurveto",
                        "-18 hlineto", "-4 -3 -3 -3 hvcurveto",
                        "0 -21 2 -2 rlineto", "0 84 2 28 30 52 -2 0 vhcurveto",
                        "2 2 0 21 rlineto", "3 -2 3 -5 vhcurveto",
                        "-33 0 -13 8 -16 40 rrcurveto", "-152 373 rlineto",
                        "-9 23 -17 2 -12 0 -7 0 -17 -4 -9 -21 rrcurveto",
                        "-175 -379 rlineto", "-17 -36 -21 -6 -26 0 rrcurveto",
                        "-3 -3 -3 -3 hvcurveto", "0 -21 2 -2 rlineto",
                        "0 45 2 20 19 78 -2 0 vhcurveto", "2 2 0 21 rlineto",
                        "3 -3 3 -3 vhcurveto", "-13 hlineto",
                        "-26 -15 5 13 hvcurveto", "0 3 2 5 2 5 rrcurveto", "",
                        "233 145 rmoveto", "-139 hlineto",
                        "-15 -6 7 6 1 1 0 0 hvcurveto", "80 175 2 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : a_superior
     */
    public void testa_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("a.superior");
        assertNotNull(cs);
        assertEquals("a.superior", cs.getName());
        String[] text =
                {"-204 358 32 222 25 hstemhm",
                        "27 52 -47 48 108 54 hintmask 11011000",
                        "231 358 rmoveto", "11 callsubr", "hintmask 11101000",
                        "12 callsubr", "-43 144 rmoveto", "13 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aacute
     */
    public void testaacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aacute");
        assertNotNull(cs);
        assertEquals("aacute", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10101110",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01110110",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "-48 425 rmoveto", "53 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aacute_sc
     */
    public void testaacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aacute.sc");
        assertNotNull(cs);
        assertEquals("aacute.sc", cs.getName());
        String[] text =
                {
                        "15 1 27 170 32 199 29 -24 28 206 -20 hstemhm",
                        "hintmask 11011000",
                        "163 189 rmoveto",
                        "570 callsubr",
                        "hintmask 11101000",
                        "571 callsubr",
                        "hintmask 11011000",
                        "594 callsubr",
                        "141 477 rmoveto",
                        "-80 -125 rlineto",
                        "-6 -10 0 -8 0 -5 0 -7 7 -5 7 0 7 0 7 5 15 14 rrcurveto",
                        "115 109 -2 11 rlineto",
                        "-2 1 -2 2 -3 2 -8 8 -13 10 -28 0 -5 0 -6 -1 -3 -1 rrcurveto",
                        "hintmask 11101000", "-50 -237 rmoveto",
                        "572 callsubr", "96 -248 rmoveto", "573 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : abreve
     */
    public void testabreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("abreve");
        assertNotNull(cs);
        assertEquals("abreve", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 57 hstemhm",
                        "39 72 -61 73 -52 27 193 74 -51 27 77 25 hintmask 1011010101000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111100101000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr",
                        "hintmask 0011001011000000", "-193 404 rmoveto",
                        "84 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : abreve_sc
     */
    public void testabreve_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("abreve.sc");
        assertNotNull(cs);
        assertEquals("abreve.sc", cs.getName());
        String[] text =
                {"15 1 27 170 32 199 29 -24 28 51 57 hstemhm",
                        "152 27 217 27 hintmask 11011110", "163 189 rmoveto",
                        "570 callsubr", "hintmask 11101110", "571 callsubr",
                        "hintmask 11011110", "594 callsubr",
                        "hintmask 11101110", "91 240 rmoveto", "572 callsubr",
                        "-75 233 rmoveto", "-27 -14 rlineto",
                        "8 -77 51 -58 77 0 50 0 75 35 10 100 rrcurveto",
                        "-27 14 rlineto",
                        "-2 -62 -60 -30 -46 0 -60 0 -47 41 -2 51 rrcurveto",
                        "171 -481 rmoveto", "573 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : acircumflex
     */
    public void testacircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("acircumflex");
        assertNotNull(cs);
        assertEquals("acircumflex", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 204 -20 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10110111",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01111011",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "-51 401 rmoveto", "54 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : acircumflex_sc
     */
    public void testacircumflex_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("acircumflex.sc");
        assertNotNull(cs);
        assertEquals("acircumflex.sc", cs.getName());
        String[] text =
                {"15 1 27 170 32 199 29 -24 28 189 -20 hstemhm",
                        "hintmask 11011000", "163 189 rmoveto", "570 callsubr",
                        "hintmask 11101000", "571 callsubr",
                        "hintmask 11011000", "594 callsubr", "150 462 rmoveto",
                        "-49 hlineto", "-30 -46 -38 -43 -35 -40 rrcurveto",
                        "20 -14 rlineto",
                        "37 27 32 25 37 38 34 -36 33 -25 40 -29 rrcurveto",
                        "21 14 rlineto", "-36 40 -37 42 -29 47 rrcurveto",
                        "hintmask 11101000", "-59 -222 rmoveto",
                        "572 callsubr", "96 -248 rmoveto", "573 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : acute
     */
    public void testacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("acute");
        assertNotNull(cs);
        assertEquals("acute", cs.getName());
        String[] text =
                {
                        "-160 542 163 hstem",
                        "89 158 vstem",
                        "175 703 rmoveto",
                        "-80 -126 rlineto",
                        "-6 -10 0 -7 0 -5 0 -7 7 -6 8 0 6 0 7 5 15 15 rrcurveto",
                        "115 109 -2 11 rlineto",
                        "-2 1 -2 2 -3 2 -8 7 -13 11 -28 0 -4 0 -7 -1 -3 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : acute_cap
     */
    public void testacute_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("acute.cap");
        assertNotNull(cs);
        assertEquals("acute.cap", cs.getName());
        String[] text =
                {"-501 571 122 hstem", "-296 201 vstem", "-157 693 rmoveto",
                        "206 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : acutecomb
     */
    public void testacutecomb() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("acutecomb");
        assertNotNull(cs);
        assertEquals("acutecomb", cs.getName());
        String[] text =
                {
                        "-501 547 163 hstem",
                        "-238 158 vstem",
                        "-152 708 rmoveto",
                        "-80 -126 rlineto",
                        "-6 -10 0 -7 0 -5 0 -7 7 -6 7 0 7 0 7 5 15 15 rrcurveto",
                        "115 109 -3 11 rlineto",
                        "-1 1 -2 1 -3 2 -8 8 -13 11 -28 0 -5 0 -6 -1 -3 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : adieresis
     */
    public void testadieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("adieresis");
        assertNotNull(cs);
        assertEquals("adieresis", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 85 91 hstemhm",
                        "39 72 -61 73 -35 91 70 90 -48 74 53 25 hintmask 1011010011000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111100011000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr",
                        "hintmask 0011001001000000", "-203 327 rmoveto",
                        "56 callsubr", "hintmask 0011000101000000",
                        "161 hmoveto", "57 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : adieresis_sc
     */
    public void testadieresis_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("adieresis.sc");
        assertNotNull(cs);
        assertEquals("adieresis.sc", cs.getName());
        String[] text =
                {"15 1 27 170 32 199 29 -24 28 65 91 hstemhm",
                        "162 91 69 91 hintmask 11011110", "163 189 rmoveto",
                        "570 callsubr", "hintmask 11101110", "571 callsubr",
                        "hintmask 11011110", "594 callsubr", "-1 383 rmoveto",
                        "80 callsubr", "160 hmoveto", "72 callsubr",
                        "hintmask 11101110", "-68 -143 rmoveto",
                        "572 callsubr", "96 -248 rmoveto", "573 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ae
     */
    public void testae() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ae");
        assertNotNull(cs);
        assertEquals("ae", cs.getName());
        String[] text =
                {
                        "186 -12 49 -49 42 188.331665039 34.6683349609 155 34 -30 30 hstemhm",
                        "39 72 -61 73 175 73 201 76 hintmask 0011000110000000",
                        "372 253 rmoveto", "60 callsubr", "-74 -38 rmoveto",
                        "61 callsubr", "hintmask 0110010110000000",
                        "62 callsubr", "-33 172 rmoveto", "63 callsubr",
                        "hintmask 1011001110000000", "64 callsubr",
                        "hintmask 0110101110000000", "65 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : ae_alt
     */
    public void testae_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ae.alt");
        assertNotNull(cs);
        assertEquals("ae.alt", cs.getName());
        String[] text =
                {
                        "197 -9 41 -39 49 193 39 136 34 -30 30 hstemhm",
                        "39 72 -61 73 170 78 211 80 hintmask 1010010110000000",
                        "293 248 rmoveto",
                        "-170 vlineto",
                        "-38 -31 -29 -15 -24 0 -77 0 -14 48 0 29 rrcurveto",
                        "0 56 25 45 157 38 rrcurveto",
                        "289 26 rmoveto",
                        "-207 hlineto",
                        "hintmask 0011000110000000",
                        "7 57 35 79 72 0 rrcurveto",
                        "37 56 -29 -107 hvcurveto",
                        "hintmask 0111001110000000",
                        "-74 -232 rmoveto",
                        "-75 -62 71 107 hvcurveto",
                        "0 9 0 -3 1 9 rrcurveto",
                        "290 hlineto",
                        "96 -35 113 -137 vhcurveto",
                        "-57 0 -46 -25 -39 -45 rrcurveto",
                        "hintmask 1010101110000000",
                        "-37 67 -77 3 -24 0 rrcurveto",
                        "-82 -78 -46 -58 -20 9 -25 31 25 14 17 16 hvcurveto",
                        "0 23 -6 -11 0 26 0 31 45 17 39 0 21 0 22 -10 15 -15 28 -28 0 -58 0 -25 rrcurveto",
                        "-91 -23 rlineto",
                        "hintmask 1010010110000000",
                        "-104 -26 -59 -45 0 -80 0 -68 50 -45 78 0 36 0 39 8 28 20 rrcurveto",
                        "hintmask 0111001110000000",
                        "32 23 rlineto",
                        "23 19 4 1 5 5 16 -23 46 -51 102 0 88 0 46 58 26 35 rrcurveto",
                        "-17 10 rlineto", "-35 -38 -44 -16 -54 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ae_sc
     */
    public void testae_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ae.sc");
        assertNotNull(cs);
        assertEquals("ae.sc", cs.getName());
        String[] text =
                {"190 0 28 147 28 27 32 169 30 -25 27 hstemhm",
                        "351 74 115 19 hintmask 11110110", "274 393 rmoveto",
                        "13 28 11 10 14 0 rrcurveto", "13 26 -1 -34 hvcurveto",
                        "-193 -139 vlineto", "-20 0 -2 5 3 7 rrcurveto",
                        "342 -187 rmoveto", "-81 hlineto",
                        "-17 -12 5 19 hvcurveto", "178 70 vlineto",
                        "26 0 9 -11 4 -20 rrcurveto", "5 -22 rlineto",
                        "-3 2 -3 4 vhcurveto", "18 0 2 3 rlineto",
                        "-3 23 -3 21 0 25 0 24 4 28 2 23 rrcurveto",
                        "2 -1 1 -2 vhcurveto", "-17 hlineto",
                        "-3 -2 -3 -3 hvcurveto", "-6 -21 rlineto",
                        "-5 -20 -7 -12 -27 0 rrcurveto", "-70 149 hlineto",
                        "17 10 6 19 vhcurveto", "", "80 hlineto",
                        "63 0 19 -59 11 -37 rrcurveto", "25 4 rlineto",
                        "-7 38 -6 38 -2 44 rrcurveto", "-182 0 -73 -1 rlineto",
                        "hintmask 11101110", "-188 2 -2 -4 0 -19 rlineto",
                        "-2 0 -2 6 vhcurveto", "31 0 15 -9 -12 -25 rrcurveto",
                        "-155 -337 rlineto", "-11 -24 -14 -14 -32 0 rrcurveto",
                        "-9 hlineto", "-4 -2 -2 -4 hvcurveto", "-21 1 vlineto",
                        "0 51 1 19 19 76 -1 0 vhcurveto", "2 21 hlineto",
                        "4 -3 2 -3 vhcurveto", "-10 hlineto",
                        "-24 -12 7 11 hvcurveto", "0 4 1 5 2 5 rrcurveto",
                        "45 103 rlineto", "4 8 6 5 19 0 rrcurveto",
                        "153 -116 hlineto", "-20 -9 -12 -31 vhcurveto",
                        "-17 hlineto", "-5 -1 -3 -2 hvcurveto",
                        "0 -22 94 1 72 -1 184 0 rlineto",
                        "2 31 7 41 12 49 rrcurveto", "-25 3 rlineto",
                        "-16 -50 -23 -46 -60 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aeacute
     */
    public void testaeacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aeacute");
        assertNotNull(cs);
        assertEquals("aeacute", cs.getName());
        String[] text =
                {
                        "186 -12 49 -49 42 188.331665039 34.6683349609 155 34 -30 30 hstemhm",
                        "39 72 -61 73 175 73 201 76 hintmask 0011000110000000",
                        "372 253 rmoveto", "60 callsubr", "-74 -38 rmoveto",
                        "61 callsubr", "hintmask 0110010110000000",
                        "62 callsubr", "-33 172 rmoveto", "63 callsubr",
                        "hintmask 1011001110000000", "64 callsubr",
                        "hintmask 0110101110000000", "65 callsubr",
                        "142 283 rmoveto", "161 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10017
     */
    public void testafii10017() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10017");
        assertNotNull(cs);
        assertEquals("afii10017", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10018
     */
    public void testafii10018() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10018");
        assertNotNull(cs);
        assertEquals("afii10018", cs.getName());
        String[] text =
                {
                        "92 0 29 304 40 233 40 -28 28 hstemhm",
                        "106 81 275 90 -68 30 hintmask 11101100",
                        "552 188 rmoveto",
                        "76 -40 109 -246 vhcurveto",
                        "-79 201 hlineto",
                        "24 12 8 24 vhcurveto",
                        "143 hlineto",
                        "",
                        "hintmask 11011010",
                        "73 0 32 -71 13 -66 rrcurveto",
                        "30 5 rlineto",
                        "-9 56 -6 55 -4 61 rrcurveto",
                        "hintmask 11101100",
                        "-275 0 -74 -1 rlineto",
                        "hintmask 11011100",
                        "-125 1 -4 -1 0 -20 rlineto",
                        "-2 1 -5 7 vhcurveto",
                        "30 hlineto",
                        "43 8 -15 -29 hvcurveto",
                        "-502 vlineto",
                        "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 35 vhcurveto",
                        "116 -1 84 0 rlineto",
                        "118 86 82 106 hvcurveto",
                        "-365 145 rmoveto",
                        "117 hlineto",
                        "128 30 -98 -57 -62 -36 -87 -157 -76 -6 12 36 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10019
     */
    public void testafii10019() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10019");
        assertNotNull(cs);
        assertEquals("afii10019", cs.getName());
        String[] text =
                {"91 -1 34 -34 29 310 35 238 35 -28 27 hstemhm",
                        "106 81 228 77 -30 89 hintmask 01100101",
                        "17 20 rmoveto", "-80 callsubr", "hintmask 10110101",
                        "-79 callsubr", "hintmask 00110110", "-78 callsubr",
                        "hintmask 00101101", "-77 callsubr",
                        "hintmask 00110101", "-76 callsubr",
                        "hintmask 01101101", "-75 callsubr", "170 318 rmoveto",
                        "-74 callsubr", "hintmask 10100101", "-73 callsubr",
                        "503 vmoveto", "hintmask 00110110", "-72 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10020
     */
    public void testafii10020() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10020");
        assertNotNull(cs);
        assertEquals("afii10020", cs.getName());
        String[] text =
                {"-20 1 27 577 40 -27 27 hstemhm", "102 80 hintmask 11010000",
                        "343 605 rmoveto", "224 callsubr", "hintmask 10110000",
                        "225 callsubr", "hintmask 11010000", "-247 0 rlineto",
                        "hintmask 10110000", "226 callsubr",
                        "hintmask 11010000", "26 14 6 22 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10021
     */
    public void testafii10021() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10021");
        assertNotNull(cs);
        assertEquals("afii10021", cs.getName());
        String[] text =
                {
                        "154 0 28 -28 39 578 29 hstemhm",
                        "464 81 hintmask 01110000",
                        "427 605 rmoveto",
                        "31 6 -8 -31 hvcurveto",
                        "-487 vlineto",
                        "-37 -12 -3 -24 vhcurveto",
                        "-219 hlineto",
                        "",
                        "-14 -13 5 12 hvcurveto",
                        "0 21 25 99 22 117 12 68 15 104 8 101 2 25 10 14 27 0 rrcurveto",
                        "-191 -558 rmoveto",
                        "hintmask 10110000",
                        "-17 -19 -13 0 -20 0 rrcurveto",
                        "-10 -11 -8 -12 hvcurveto",
                        "-7 -149 27 0 rlineto",
                        "hintmask 01110000",
                        "11 52 26 89 83 0 rrcurveto",
                        "hintmask 10110000",
                        "286 hlineto",
                        "80 0 36 -85 12 -56 rrcurveto",
                        "27 0 -7 149 rlineto",
                        "12 -8 8 -22 -17 -23 13 37 vhcurveto",
                        "487 vlineto",
                        "36 5 16 32 vhcurveto",
                        "29 hlineto",
                        "4 4 2 6 hvcurveto",
                        "14 vlineto",
                        "3 -2 4 -3 vhcurveto",
                        "-452 hlineto",
                        "-7 -6 -5 -4 hvcurveto",
                        "-12 vlineto",
                        "-4 3 -4 5 vhcurveto",
                        "30 hlineto",
                        "26 9 -12 -24 hvcurveto",
                        "0 -63 -12 -103 -22 -114 -32 -156 -20 -70 -24 -28 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10022
     */
    public void testafii10022() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10022");
        assertNotNull(cs);
        assertEquals("afii10022", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011", "353 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-64 callsubr",
                        "hintmask 01111011", "-63 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10023
     */
    public void testafii10023() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10023");
        assertNotNull(cs);
        assertEquals("afii10023", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 57 91 hstemhm",
                        "97 80 -35 91 99 90 hintmask 0011101101000000",
                        "348 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011101000000", "262 callsubr",
                        "hintmask 0011101101000000", "-65 callsubr",
                        "hintmask 1011011101000000", "-64 callsubr",
                        "hintmask 0111101101000000", "263 callsubr",
                        "hintmask 0011001011000000", "-71 143 rmoveto",
                        "-25 21 -21 25 24 21 21 25 24 -21 21 -24 vhcurveto",
                        "-25 -21 -21 -24 hvcurveto", "190 hmoveto",
                        "264 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10024
     */
    public void testafii10024() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10024");
        assertNotNull(cs);
        assertEquals("afii10024", cs.getName());
        String[] text =
                {"354 -1 29 295 43 224 61 -33 27 hstemhm",
                        "388 80 hintmask 11101000", "832 -1 rmoveto",
                        "270 callsubr", "hintmask 11011000", "271 callsubr",
                        "hintmask 11101000", "272 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10025
     */
    public void testafii10025() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10025");
        assertNotNull(cs);
        assertEquals("afii10025", cs.getName());
        String[] text =
                {
                        "41 -12 37 311 37 251 34 hstemhm",
                        "375 80 -50 92 hintmask 11101000",
                        "248 25 rmoveto",
                        "-76 0 -32 34 -21 61 -11 32 -10 13 -28 0 -23 0 -11 -21 0 -26 0 -27 21 -27 27 -21 31 -24 49 -31 81 0 118 0 134 53 0 151 rrcurveto",
                        "0 107 -86 41 -71 20 rrcurveto", "hintmask 11110000",
                        "273 callsubr", "hintmask 11101000",
                        "117 39 -109 -51 hvcurveto",
                        "-108 -87 -43 -70 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10026
     */
    public void testafii10026() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10026");
        assertNotNull(cs);
        assertEquals("afii10026", cs.getName());
        String[] text =
                {"199 1 27 590 26 hstem", "106 81 327 80 vstem",
                        "594 574 rmoveto", "268 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10027
     */
    public void testafii10027() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10027");
        assertNotNull(cs);
        assertEquals("afii10027", cs.getName());
        String[] text =
                {
                        "199 1 27 590 26 53 31 hstem",
                        "106 81 39 70 109 70 39 80 vstem",
                        "594 574 rmoveto",
                        "268 callsubr",
                        "-119 703 rmoveto",
                        "20 -12 10 -26 -23 -9 -16 -15 vhcurveto",
                        "0 -4 0 -5 rlineto",
                        "-22 -24 -14 -30 -33 -23 17 20 vhcurveto",
                        "0 1 0 2 1 1 rrcurveto",
                        "4 vlineto",
                        "15 -10 16 -21 -28 -11 -9 -22 -52 57 -24 67 63 62 25 52 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10028
     */
    public void testafii10028() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10028");
        assertNotNull(cs);
        assertEquals("afii10028", cs.getName());
        String[] text =
                {"101 -1 29 295 43 224 61 -33 27 hstemhm",
                        "106 81 hintmask 11101000", "583 -1 rmoveto",
                        "266 callsubr", "hintmask 11011000", "267 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10029
     */
    public void testafii10029() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10029");
        assertNotNull(cs);
        assertEquals("afii10029", cs.getName());
        String[] text =
                {
                        "103 -12 44 -31 26 591 28 hstemhm",
                        "180 44 193 81 hintmask 10111000",
                        "585 646 rmoveto",
                        "-52 0 -40 -1 -168 0 -137 0 -40 3 -45 0 rrcurveto",
                        "-1 -2 0 -18 rlineto",
                        "-9 3 -1 18 51 6 -11 -122 vhcurveto",
                        "",
                        "0 -203 -5 -120 -18 -65 -12 -41 -7 -24 -17 0 -10 0 -7 9 -4 15 -4 16 -15 11 -18 0 rrcurveto",
                        "-27 -8 -24 -18 -29 36 -24 37 hvcurveto",
                        "42 0 28 20 19 52 29 80 5 143 0 229 rrcurveto",
                        "95 6 11 43 vhcurveto", "90 hlineto",
                        "37 17 -14 -30 hvcurveto", "-503 vlineto",
                        "hintmask 01111000", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -1 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 1 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 14 30 hvcurveto",
                        "503 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "19 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10030
     */
    public void testafii10030() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10030");
        assertNotNull(cs);
        assertEquals("afii10030", cs.getName());
        String[] text =
                {"338 1 27 590 28 hstem", "665 87 rmoveto", "-52 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10031
     */
    public void testafii10031() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10031");
        assertNotNull(cs);
        assertEquals("afii10031", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 hstem", "106 81 327 80 vstem",
                        "514 72 rmoveto", "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10032
     */
    public void testafii10032() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10032");
        assertNotNull(cs);
        assertEquals("afii10032", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10033
     */
    public void testafii10033() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10033");
        assertNotNull(cs);
        assertEquals("afii10033", cs.getName());
        String[] text =
                {"166 1 27 576 41 -27 28 hstemhm",
                        "106 81 293 81 hintmask 10111000", "480 72 rmoveto",
                        "227 callsubr", "hintmask 11011000", "0 19 rlineto",
                        "hintmask 10111000", "-2 1 rlineto",
                        "hintmask 11011000", "228 callsubr",
                        "hintmask 10111000", "229 callsubr",
                        "hintmask 11011000", "-2 -1 0 -20 rlineto",
                        "hintmask 10111000", "230 callsubr",
                        "hintmask 11011000", "231 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10034
     */
    public void testafii10034() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10034");
        assertNotNull(cs);
        assertEquals("afii10034", cs.getName());
        String[] text =
                {"14 1 27 254 33 304 25 -24 34 hstemhm",
                        "106 81 225 85 hintmask 11011100", "106 71 rmoveto",
                        "-48 callsubr", "hintmask 11101100", "-47 callsubr",
                        "81 31 rmoveto", "hintmask 11011100", "-46 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10035
     */
    public void testafii10035() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10035");
        assertNotNull(cs);
        assertEquals("afii10035", cs.getName());
        String[] text =
                {"143 -12 41 592 37 hstem", "37 87 vstem", "355 -12 rmoveto",
                        "-71 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10036
     */
    public void testafii10036() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10036");
        assertNotNull(cs);
        assertEquals("afii10036", cs.getName());
        String[] text =
                {"76 1 27 578 40 hstem", "258 80 184 26 vstem",
                        "77 646 rmoveto", "-41 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10037
     */
    public void testafii10037() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10037");
        assertNotNull(cs);
        assertEquals("afii10037", cs.getName());
        String[] text =
                {"79 -22 62 578 27 hstem", "195 40 rmoveto", "269 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10038
     */
    public void testafii10038() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10038");
        assertNotNull(cs);
        assertEquals("afii10038", cs.getName());
        String[] text =
                {
                        "167 1 27 590 27 hstem",
                        "37 78 179 81 178 79 vstem",
                        "294 146 rmoveto",
                        "-90 6 -89 33 0 146 0 138 87 33 92 6 rrcurveto",
                        "81 -362 rmoveto",
                        "363 vlineto",
                        "99 -7 79 -35 0 -142 0 -140 -94 -32 -84 -7 rrcurveto",
                        "-74 vmoveto",
                        "47 vlineto",
                        "130 7 127 46 0 159 0 149 -112 48 -145 8 rrcurveto",
                        "38 vlineto",
                        "28 13 16 41 vhcurveto",
                        "27 hlineto",
                        "4 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -35 -40 -86 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto",
                        "26 hlineto",
                        "40 15 -13 -31 hvcurveto",
                        "-38 vlineto",
                        "-123 -7 -134 -41 0 -163 0 -170 149 -31 108 -5 rrcurveto",
                        "-47 vlineto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-27 hlineto", "-39 -15 13 31 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10039
     */
    public void testafii10039() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10039");
        assertNotNull(cs);
        assertEquals("afii10039", cs.getName());
        String[] text =
                {"154 -1 29 590 28 hstem", "13 625 rmoveto", "-37 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10040
     */
    public void testafii10040() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10040");
        assertNotNull(cs);
        assertEquals("afii10040", cs.getName());
        String[] text =
                {"138 -1 29 -26 35 581 28 hstemhm",
                        "92 80 291 80 hintmask 01111000", "458 2 rmoveto",
                        "77 0 44 -72 14 -71 rrcurveto", "27 0 -6 149 rlineto",
                        "hintmask 10111000", "-1 9 -4 11 -25 0 rrcurveto",
                        "-24 -17 24 25 hvcurveto", "495 vlineto",
                        "0 33 2 12 37 1 rrcurveto", "29 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -3 1 -115 -1 -108 1 -2 -1 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "30 hlineto",
                        "37 -1 2 -13 0 -32 rrcurveto", "-489 vlineto",
                        "hintmask 01111000", "-32 -4 -14 -35 vhcurveto",
                        "-213 hlineto", "-31 -8 5 41 hvcurveto", "489 vlineto",
                        "40 7 6 32 vhcurveto", "30 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -2 1 -118 -1 -108 1 -2 -1 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "30 hlineto",
                        "34 6 -7 -39 hvcurveto", "-497 vlineto",
                        "hintmask 10111000", "0 -40 -7 -6 -33 -1 rrcurveto",
                        "-26 hlineto", "-5 -4 -5 -5 hvcurveto",
                        "0 -17 3 -2 rlineto", "hintmask 01111000",
                        "107 3 rlineto", "129 1 202 -1 0 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10041
     */
    public void testafii10041() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10041");
        assertNotNull(cs);
        assertEquals("afii10041", cs.getName());
        String[] text =
                {"132 1 27 222 58 310 27 hstem", "97 81 271 80 vstem",
                        "97 573 rmoveto", "274 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10042
     */
    public void testafii10042() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10042");
        assertNotNull(cs);
        assertEquals("afii10042", cs.getName());
        String[] text =
                {"461 -1 29 -26 35 581 27 hstemhm",
                        "106 81 253 81 255 81 hintmask 01111100",
                        "857 574 rmoveto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -85 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "24 hlineto", "39 15 -14 -30 hvcurveto",
                        "-491 vlineto", "-39 -6 -7 -33 vhcurveto",
                        "-179 hlineto", "-33 -4 16 30 hvcurveto",
                        "491 vlineto", "28 14 16 41 vhcurveto", "24 hlineto",
                        "", "4 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -90 -1 -36 -39 -85 1 0 vhcurveto",
                        "-1 -1 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "24 hlineto", "39 15 -14 -30 hvcurveto",
                        "-491 vlineto", "-31 -2 -15 -31 vhcurveto",
                        "-181 hlineto",
                        "-14 0 -8 1 -4 3 -13 10 0 9 0 23 rrcurveto",
                        "491 vlineto", "28 14 16 41 vhcurveto", "24 hlineto",
                        "5 2 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -90 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-499 vlineto", "hintmask 10111100",
                        "0 -39 -5 -7 -34 -1 rrcurveto", "-30 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -22 2 -2 rlineto",
                        "hintmask 01111100", "146 3 635 0 rlineto",
                        "hintmask 10111100", "115 -3 2 2 0 22 rlineto",
                        "3 -2 2 -4 vhcurveto", "-30 hlineto",
                        "-31 -8 7 35 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10043
     */
    public void testafii10043() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10043");
        assertNotNull(cs);
        assertEquals("afii10043", cs.getName());
        String[] text =
                {"464 1 27 -27 35 582 27 hstemhm",
                        "106 81 253 81 255 81 hintmask 01111100",
                        "187 574 rmoveto", "28 14 16 41 vhcurveto",
                        "24 hlineto", "5 2 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -90 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-505 vlineto", "-39 -6 -4 -33 vhcurveto",
                        "-30 hlineto", "-3 -2 -1 -4 hvcurveto",
                        "0 -21 2 -1 113 2 628 0 rlineto",
                        "86 0 38 -98 7 -44 rrcurveto", "28 0 -7 147 rlineto",
                        "hintmask 10111100", "-1 17 -11 5 -18 0 rrcurveto",
                        "-15 -25 14 39 hvcurveto", "493 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -85 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "24 hlineto", "39 15 -14 -30 hvcurveto",
                        "-491 vlineto", "hintmask 01111100",
                        "-36 -4 -11 -35 vhcurveto", "-168 hlineto",
                        "-43 -5 11 36 hvcurveto", "491 vlineto",
                        "28 14 16 41 vhcurveto", "24 hlineto",
                        "4 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -90 -1 -36 -39 -85 1 0 vhcurveto",
                        "-1 -1 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "24 hlineto", "39 15 -14 -30 hvcurveto",
                        "-491 vlineto", "-36 -3 -11 -38 vhcurveto",
                        "-173 hlineto", "-36 -3 17 30 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10044
     */
    public void testafii10044() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10044");
        assertNotNull(cs);
        assertEquals("afii10044", cs.getName());
        String[] text =
                {"216 -1 30 304 40 233 40 -28 28 hstemhm",
                        "26 30 209 81 246 89 hintmask 11011110",
                        "304 645 rmoveto", "-39 1 -223 0 rlineto",
                        "-2 -62 -5 -54 -9 -56 rrcurveto", "30 -5 rlineto",
                        "hintmask 11101110", "8 43 34 94 66 0 rrcurveto",
                        "62 hlineto", "28 11 -15 -27 hvcurveto",
                        "-492 vlineto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 vhcurveto",
                        "29 0 31 -2 36 0 rrcurveto",
                        "121 157 17 167 89 -29 101 -246 hvcurveto",
                        "-60 201 hlineto", "hintmask 11011110",
                        "28 13 16 41 vhcurveto", "27 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -94 -1 -35 vhcurveto", "42 -312 rmoveto",
                        "265 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10045
     */
    public void testafii10045() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10045");
        assertNotNull(cs);
        assertEquals("afii10045", cs.getName());
        String[] text =
                {"285 -1 30 -27 27 304 40 245 27 hstemhm",
                        "106 81 246 89 76 81 hintmask 10111110",
                        "187 333 rmoveto", "275 callsubr", "-81 495 rmoveto",
                        "276 callsubr", "573 1 rmoveto", "277 callsubr",
                        "hintmask 01111110", "278 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10046
     */
    public void testafii10046() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10046");
        assertNotNull(cs);
        assertEquals("afii10046", cs.getName());
        String[] text =
                {"57 -1 30 304 40 245 27 hstem", "106 81 246 89 vstem",
                        "187 333 rmoveto", "275 callsubr", "-81 495 rmoveto",
                        "276 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10047
     */
    public void testafii10047() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10047");
        assertNotNull(cs);
        assertEquals("afii10047", cs.getName());
        String[] text =
                {"103 -12 33 252 56 -18 49 261 37 hstemhm",
                        "472 89 hintmask 11011000", "472 307 rmoveto",
                        "279 callsubr", "hintmask 10111000", "280 callsubr",
                        "hintmask 11011000", "281 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10048
     */
    public void testafii10048() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10048");
        assertNotNull(cs);
        assertEquals("afii10048", cs.getName());
        String[] text =
                {
                        "404 -12 34 -21 27 277 39 274 27 -21 34 hstemhm",
                        "106 81 98 91 399 91 hintmask 00101111",
                        "866 329 rmoveto",
                        "198 -125 131 -168 vhcurveto",
                        "-156 0 -118 -135 -13 -179 rrcurveto",
                        "-99 230 hlineto",
                        "hintmask 01110111",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "27 hlineto",
                        "39 15 -14 -30 hvcurveto",
                        "-503 vlineto",
                        "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "234 98 vlineto",
                        "hintmask 10101111",
                        "2 -194 129 -123 158 0 rrcurveto",
                        "178 114 141 200 hvcurveto",
                        "-304 295 rmoveto",
                        "125 88 -106 -208 -179 -80 -109 -103 -108 -108 113 192 210 102 87 84 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10049
     */
    public void testafii10049() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10049");
        assertNotNull(cs);
        assertEquals("afii10049", cs.getName());
        String[] text =
                {
                        "60 0 28 295 43 245 35 -28 28 hstemhm",
                        "69 77 227 81 hintmask 11101100",
                        "373 575 rmoveto",
                        "-209 -78 vlineto",
                        "-83 -66 30 106 93 80 16 56 hvcurveto",
                        "87 4 -3 -33 hvcurveto",
                        "-252 vmoveto",
                        "-252 vlineto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-27 hlineto",
                        "-39 -15 13 30 hvcurveto",
                        "503 vlineto",
                        "hintmask 11011100",
                        "34 11 10 42 vhcurveto",
                        "30 hlineto",
                        "5 2 3 4 hvcurveto",
                        "21 vlineto",
                        "0 -97 -1 -31 vhcurveto",
                        "hintmask 11101100",
                        "-33 0 -59 1 -35 0 -186 0 -34 -90 0 -69 0 -102 81 -46 68 -10 -26 -18 -14 -34 -16 -41 -53 -133 -50 -75 -33 0 rrcurveto",
                        "-9 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 1 -2 66 1 rlineto",
                        "71 1 29 69 39 110 36 102 15 41 106 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10050
     */
    public void testafii10050() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10050");
        assertNotNull(cs);
        assertEquals("afii10050", cs.getName());
        String[] text =
                {"-13 0 27 579 39 -27 28 hstemhm",
                        "105 81 261 27 hintmask 10111000", "145 644 rmoveto",
                        "-13 0 -12 1 -102 1 rrcurveto", "-2 -2 0 -18 rlineto",
                        "-5 3 -3 4 vhcurveto", "30 hlineto",
                        "43 9 -10 -35 hvcurveto", "-502 vlineto",
                        "-30 -15 -14 -40 vhcurveto", "-26 hlineto",
                        "-4 -4 -3 -5 hvcurveto", "0 -19 2 -1 rlineto",
                        "0 86 1 40 35 93 -1 0 vhcurveto", "2 1 0 19 rlineto",
                        "5 -3 3 -4 vhcurveto", "-27 hlineto",
                        "-41 -13 16 28 hvcurveto", "502 vlineto",
                        "hintmask 11011000", "27 14 6 22 vhcurveto",
                        "135 hlineto", "65 0 14 -16 12 -48 rrcurveto",
                        "26 4 0 220 -27 0 rlineto",
                        "-6 -55 -29 -66 -51 0 rrcurveto", "-138 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10051
     */
    public void testafii10051() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10051");
        assertNotNull(cs);
        assertEquals("afii10051", cs.getName());
        String[] text =
                {
                        "233 -142 89 54 27 353 59 166 40 hstem",
                        "258 80 184 26 74 59 vstem",
                        "258 567 rmoveto",
                        "-495 vlineto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 35 39 88 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-39 -16 13 31 hvcurveto",
                        "248 vlineto",
                        "59 56 62 5 45 0 rrcurveto",
                        "80 38 -156 -73 -39 -1 -183 -49 hvcurveto",
                        "-12 0 -12 5 -9 4 -10 5 -12 3 -13 0 rrcurveto",
                        "-20 -17 -20 -22 -26 30 -21 37 hvcurveto",
                        "22 0 25 12 18 18 50 49 32 106 0 135 0 135 -13 127 -137 0 -72 0 -54 -16 -67 -67 rrcurveto",
                        "207 vlineto", "34 12 8 36 vhcurveto", "66 hlineto",
                        "55 0 14 -12 20 -80 rrcurveto", "29 5 rlineto",
                        "-11 53 -7 52 -4 49 rrcurveto", "-26 -4 rlineto",
                        "-6 -1 -17 -21 vhcurveto", "-423 hlineto",
                        "-21 0 17 6 hvcurveto", "-27 4 rlineto",
                        "-4 -49 -6 -52 -12 -53 rrcurveto", "30 -5 rlineto",
                        "20 80 13 12 55 0 rrcurveto", "84 hlineto",
                        "37 12 -8 -31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10052
     */
    public void testafii10052() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10052");
        assertNotNull(cs);
        assertEquals("afii10052", cs.getName());
        String[] text =
                {"-20 1 27 577 40 -27 27 74 -21 hstemhm",
                        "102 80 hintmask 11011000", "343 605 rmoveto",
                        "224 callsubr", "hintmask 10111000", "225 callsubr",
                        "hintmask 11011000", "-247 0 rlineto",
                        "hintmask 10111000", "226 callsubr",
                        "hintmask 11011000", "26 14 6 22 vhcurveto",
                        "127 215 rmoveto", "206 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10053
     */
    public void testafii10053() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10053");
        assertNotNull(cs);
        assertEquals("afii10053", cs.getName());
        String[] text =
                {
                        "103 -12 37 253 50 -18 56 255 37 hstemhm",
                        "39 87 hintmask 10111000",
                        "350 25 rmoveto",
                        "-119 0 -90 142 -14 129 30 11 26 3 42 0 rrcurveto",
                        "hintmask 11011000",
                        "58 0 29 -32 67 0 rrcurveto",
                        "59 63 29 25 8 -5 4 -4 hvcurveto",
                        "-8 0 -16 -16 -38 0 rrcurveto",
                        "hintmask 10111000",
                        "-59 0 -43 38 -63 0 -14 0 -67 -3 -58 -34 0 151 87 141 111 0 138 0 51 -81 26 -86 rrcurveto",
                        "30 4 rlineto",
                        "-10 52 -9 48 -3 55 -58 3 -31 42 -123 0 rrcurveto",
                        "-165 -131 -143 -200 -182 115 -145 179 hvcurveto",
                        "101 0 53 32 32 24 26 21 20 28 0 27 0 26 -10 19 -25 0 -22 0 -15 -16 -10 -29 rrcurveto",
                        "-23 -72 -36 -23 -74 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10054
     */
    public void testafii10054() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10054");
        assertNotNull(cs);
        assertEquals("afii10054", cs.getName());
        String[] text =
                {"", "-26 5 19 600 34 hstem", "48 69 237 81 vstem",
                        "382 631 rmoveto", "-42 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10055
     */
    public void testafii10055() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10055");
        assertNotNull(cs);
        assertEquals("afii10055", cs.getName());
        String[] text =
                {"-208 1 27 590 27 hstem", "106 81 vstem", "187 574 rmoveto",
                        "-58 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10056
     */
    public void testafii10056() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10056");
        assertNotNull(cs);
        assertEquals("afii10056", cs.getName());
        String[] text =
                {"-208 1 27 590 27 60 91 hstemhm",
                        "21 91 -6 81 -5 91 hintmask 11110000",
                        "21 750 rmoveto", "37 callsubr", "hintmask 11100100",
                        "161 hmoveto", "127 callsubr", "hintmask 11101000",
                        "5 -176 rmoveto", "-58 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10057
     */
    public void testafii10057() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10057");
        assertNotNull(cs);
        assertEquals("afii10057", cs.getName());
        String[] text =
                {"-130 -12 31 599 27 hstem", "198 81 vstem", "143 19 rmoveto",
                        "-22 0 -7 17 -2 13 -2 12 -10 25 -28 0 rrcurveto",
                        "-15 -18 -10 -25 -53 70 -10 34 63 73 28 178 hvcurveto",
                        "380 vlineto", "28 13 16 41 vhcurveto", "17 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -84 -1 -35 -39 -104 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "36 hlineto", "39 22 -29 -30 hvcurveto",
                        "-387 vlineto", "-93 -6 -60 -49 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10058
     */
    public void testafii10058() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10058");
        assertNotNull(cs);
        assertEquals("afii10058", cs.getName());
        String[] text =
                {
                        "382 -12 45 -34 30 304 40 240 32 -27 30 hstemhm",
                        "182 44 205 81 246 89 hintmask 01100111",
                        "512 333 rmoveto",
                        "265 callsubr",
                        "-81 -7 rmoveto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 101 2 28 vhcurveto",
                        "29 0 31 -2 36 0 rrcurveto",
                        "121 157 17 167 89 -29 101 -246 hvcurveto",
                        "-60 201 hlineto",
                        "hintmask 00101111",
                        "28 13 16 41 vhcurveto",
                        "27 hlineto",
                        "5 3 3 5 hvcurveto",
                        "hintmask 00110111",
                        "0 19 -2 1 rlineto",
                        "-52 0 -25 -1 -49 0 rrcurveto",
                        "-124 hlineto",
                        "hintmask 10101111",
                        "-137 0 -62 3 -45 0 rrcurveto",
                        "-1 -2 0 -18 rlineto",
                        "-9 3 -1 18 49 8 -12 -121 vhcurveto",
                        "0 -264 -13 -97 -20 -59 -7 -21 -10 -11 -11 0 -10 0 -7 8 -4 15 -4 16 -15 11 -18 0 rrcurveto",
                        "-25 -10 -20 -21 -34 38 -20 42 hvcurveto",
                        "22 0 51 12 21 94 19 85 5 134 0 199 rrcurveto",
                        "hintmask 01110111", "95 6 6 43 vhcurveto",
                        "104 hlineto", "43 9 -15 -29 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10059
     */
    public void testafii10059() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10059");
        assertNotNull(cs);
        assertEquals("afii10059", cs.getName());
        String[] text =
                {
                        "422 -1 30 311 39 239 27 hstem",
                        "106 81 284 80 246 90 vstem",
                        "551 340 rmoveto",
                        "88 hlineto",
                        "128 30 -97 -60 -62 -34 -92 -152 -55 -5 17 33 hvcurveto",
                        "300 vmoveto", "195 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-194 -284 194 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "270 284 -270 vlineto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 100 2 29 vhcurveto",
                        "29 0 31 -2 36 0 rrcurveto",
                        "121 157 17 167 89 -30 107 -245 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10060
     */
    public void testafii10060() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10060");
        assertNotNull(cs);
        assertEquals("afii10060", cs.getName());
        String[] text =
                {"241 1 27 365 47 166 40 hstem", "258 80 184 26 32 75 vstem",
                        "258 567 rmoveto", "-495 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 39 88 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-39 -16 13 31 hvcurveto", "248 vlineto",
                        "59 56 52 17 29 0 rrcurveto",
                        "46 56 -38 -81 hvcurveto", "-202 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-18 hlineto",
                        "-33 -10 15 29 hvcurveto", "210 vlineto",
                        "103 -61 55 -72 vhcurveto",
                        "-39 0 -78 -16 -67 -67 rrcurveto", "207 vlineto",
                        "34 12 8 36 vhcurveto", "66 hlineto",
                        "55 0 14 -12 20 -80 rrcurveto", "29 5 rlineto",
                        "-11 53 -7 52 -4 49 rrcurveto", "-26 -4 rlineto",
                        "-6 -1 -17 -21 vhcurveto", "-423 hlineto",
                        "-21 0 17 6 hvcurveto", "-27 4 rlineto",
                        "-4 -49 -6 -52 -12 -53 rrcurveto", "30 -5 rlineto",
                        "20 80 13 12 55 0 rrcurveto", "84 hlineto",
                        "37 12 -8 -31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10061
     */
    public void testafii10061() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10061");
        assertNotNull(cs);
        assertEquals("afii10061", cs.getName());
        String[] text =
                {"101 -1 29 295 43 224 61 -33 27 75 -21 hstemhm",
                        "106 81 hintmask 11101100", "583 -1 rmoveto",
                        "266 callsubr", "hintmask 11011100", "267 callsubr",
                        "-83 821 rmoveto", "38 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10062
     */
    public void testafii10062() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10062");
        assertNotNull(cs);
        assertEquals("afii10062", cs.getName());
        String[] text =
                {
                        "79 -22 62 578 27 52 31 hstem",
                        "188 70 108 71 vstem",
                        "195 40 rmoveto",
                        "269 callsubr",
                        "242 734 rmoveto",
                        "20 -12 10 -28 -22 -9 -16 -15 vhcurveto",
                        "-4 vlineto",
                        "1 -2 0 -1 0 -2 rrcurveto",
                        "-22 -25 -14 -30 -33 -22 17 20 vhcurveto",
                        "4 vlineto",
                        "0 1 1 1 0 2 rrcurveto",
                        "15 -11 16 -21 -27 -11 -9 -22 -52 57 -24 66 63 63 25 52 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10065
     */
    public void testafii10065() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10065");
        assertNotNull(cs);
        assertEquals("afii10065", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10101110",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01110110",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10066
     */
    public void testafii10066() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10066");
        assertNotNull(cs);
        assertEquals("afii10066", cs.getName());
        String[] text =
                {
                        "-20 -12 32 389 33 256 -20 hstem",
                        "42 79 249 78 vstem",
                        "244 409 rmoveto",
                        "78 48 -95 -120 -126 -58 -48 -54 -82 -55 90 125 52 21 122 102 hvcurveto",
                        "-202 -171 rmoveto",
                        "-181 101 -69 97 126 82 111 119 108 -52 116 -141 vhcurveto",
                        "-95 0 -39 -59 -20 -42 1 38 8 41 14 29 29 63 24 26 92 8 85 8 58 38 13 106 rrcurveto",
                        "-21 hlineto",
                        "-10 -52 -41 -22 -83 -6 -90 -7 -53 -61 -32 -63 -31 -59 -22 -71 0 -119 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10067
     */
    public void testafii10067() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10067");
        assertNotNull(cs);
        assertEquals("afii10067", cs.getName());
        String[] text =
                {"-48 -1 29 189 29 152 32 -28 29 hstemhm",
                        "102 74 150 69 -58 72 hintmask 11101010",
                        "32 -1 rmoveto", "187 callsubr", "hintmask 11101100",
                        "188 callsubr", "hintmask 11011010", "189 callsubr",
                        "146 216 rmoveto", "190 callsubr", "174 vmoveto",
                        "118 vlineto", "hintmask 11101100", "191 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10068
     */
    public void testafii10068() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10068");
        assertNotNull(cs);
        assertEquals("afii10068", cs.getName());
        String[] text =
                {"-99 1 27 363 39 -28 29 hstemhm",
                        "106 75 171 27 hintmask 11011000", "106 72 rmoveto",
                        "282 callsubr", "hintmask 10111000", "283 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10069
     */
    public void testafii10069() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10069");
        assertNotNull(cs);
        assertEquals("afii10069", cs.getName());
        String[] text =
                {
                        "15 0 28 -28 39 352 39 -28 27 hstemhm",
                        "145 45 149 75 hintmask 01001100",
                        "168 hmoveto",
                        "172 hlineto",
                        "83 0 29 -88 8 -40 rrcurveto",
                        "25 0 -6 135 rlineto",
                        "hintmask 10011100",
                        "-1 14 -6 7 -18 0 rrcurveto",
                        "-16 -24 11 37 hvcurveto",
                        "279 vlineto",
                        "",
                        "34 9 13 37 vhcurveto",
                        "17 hlineto",
                        "3 4 3 4 hvcurveto",
                        "0 20 -1 2 rlineto",
                        "0 -73 -3 -33 vhcurveto",
                        "hintmask 00101100",
                        "-40 0 -32 2 -44 0 rrcurveto",
                        "hintmask 10011100",
                        "-37 0 -36 -1 -20 0 rrcurveto",
                        "-17 -78 2 0 hvcurveto",
                        "-3 -2 0 -22 rlineto",
                        "-4 3 -1 4 vhcurveto",
                        "27 hlineto",
                        "36 5 -25 -12 hvcurveto",
                        "0 -119 -18 -91 -19 -85 -6 -27 -17 -15 -27 0 -14 0 -13 -2 -1 -18 rrcurveto",
                        "-6 -136 26 0 rlineto", "8 37 26 91 84 0 rrcurveto",
                        "-17 51 rmoveto", "0 17 25 69 14 228 rrcurveto",
                        "hintmask 01101100", "4 5 22 23 vhcurveto",
                        "81 hlineto", "37 3 -15 -34 hvcurveto", "-254 vlineto",
                        "-33 -3 -16 -37 vhcurveto", "-129 hlineto",
                        "-10 -9 1 11 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10070
     */
    public void testafii10070() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10070");
        assertNotNull(cs);
        assertEquals("afii10070", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10071
     */
    public void testafii10071() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10071");
        assertNotNull(cs);
        assertEquals("afii10071", cs.getName());
        String[] text =
                {"-73 -8 49 201 39 131 34 81 91 hstemhm",
                        "34 76 -6 90 70 91 -43 80 hintmask 11111001",
                        "378 97 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "69 callsubr", "hintmask 11110100", "-194 291 rmoveto",
                        "57 callsubr", "hintmask 11110010", "160 hmoveto",
                        "70 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10072
     */
    public void testafii10072() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10072");
        assertNotNull(cs);
        assertEquals("afii10072", cs.getName());
        String[] text =
                {"160 1 27 182 34 127 67 -36 27 hstemhm",
                        "293 75 hintmask 11101000", "368 210 rmoveto",
                        "284 callsubr", "hintmask 11011000", "285 callsubr",
                        "hintmask 11101000", "286 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10073
     */
    public void testafii10073() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10073");
        assertNotNull(cs);
        assertEquals("afii10073", cs.getName());
        String[] text =
                {"-99 -12 32 196 32 162 32 hstemhm",
                        "40 27 219 66 -61 75 hintmask 11110100",
                        "189 20 rmoveto",
                        "-51 0 -28 22 -5 34 -4 33 -23 4 -11 0 rrcurveto",
                        "-18 -12 -15 -14 -54 55 -42 91 145 38 80 56 hvcurveto",
                        "0 82 -68 29 -26 3 rrcurveto", "hintmask 11111000",
                        "287 callsubr", "hintmask 11110100",
                        "50 28 -49 -46 hvcurveto", "-81 -69 -20 -33 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10074
     */
    public void testafii10074() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10074");
        assertNotNull(cs);
        assertEquals("afii10074", cs.getName());
        String[] text =
                {"76 1 27 374 29 hstem", "108 75 206 74 vstem",
                        "144 428 rmoveto", "288 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10075
     */
    public void testafii10075() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10075");
        assertNotNull(cs);
        assertEquals("afii10075", cs.getName());
        String[] text =
                {
                        "76 1 27 374 29 68 30 hstemhm",
                        "108 75 -10 73 96 73 -26 74 hintmask 11110010",
                        "144 428 rmoveto",
                        "288 callsubr",
                        "hintmask 11101100",
                        "157 155 rmoveto",
                        "19 -15 13 -24 -18 -16 -14 -17 vhcurveto",
                        "0 -2 0 -2 1 -3 0 -2 1 -3 0 -3 rrcurveto",
                        "-23 -21 -20 -29 -30 -20 21 22 vhcurveto",
                        "0 3 0 3 1 2 0 3 1 3 0 2 rrcurveto",
                        "16 -13 14 -22 -23 -15 -14 -19 -54 55 -32 65 vhcurveto",
                        "63 59 32 55 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10076
     */
    public void testafii10076() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10076");
        assertNotNull(cs);
        assertEquals("afii10076", cs.getName());
        String[] text =
                {"-24 1 27 343 67 -36 27 hstemhm", "102 74 hintmask 11010000",
                        "176 69 rmoveto", "289 callsubr", "hintmask 10110000",
                        "290 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10077
     */
    public void testafii10077() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10077");
        assertNotNull(cs);
        assertEquals("afii10077", cs.getName());
        String[] text =
                {"0 -12 35 -22 27 363 38 -27 27 hstemhm",
                        "138 45 138 75 hintmask 10011100", "95 23 rmoveto",
                        "9 0 10 10 7 25 10 34 7 62 0 105 rrcurveto",
                        "132 -3 11 -56 -17 -4 0 9 vhcurveto",
                        "0 18 3 2 rlineto",
                        "0 63 -2 40 33 53 1 0 0 66 -1 43 43 68 2 0 vhcurveto",
                        "3 -2 0 -20 rlineto", "-5 -2 -2 -6 vhcurveto",
                        "-28 hlineto", "-38 -3 -9 -38 hvcurveto",
                        "-283 vlineto", "hintmask 01101100",
                        "-29 10 -15 33 vhcurveto", "19 hlineto",
                        "4 4 -3 -5 hvcurveto", "0 -19 -2 -2 rlineto",
                        "0 -68 2 -39 -36 -68 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto", "5 3 3 5 vhcurveto", "19 hlineto",
                        "34 9 15 29 hvcurveto", "270 vlineto",
                        "34 -4 15 -36 vhcurveto", "-57 hlineto",
                        "-38 -3 -31 -94 hvcurveto",
                        "0 -82 -6 -85 -11 -39 rrcurveto", "hintmask 10011100",
                        "-13 -47 -28 -25 -42 0 rrcurveto",
                        "-33 -35 26 26 20 10 16 21 hvcurveto",
                        "17 0 15 -15 1 -15 rrcurveto",
                        "2 -13 5 -10 9 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10078
     */
    public void testafii10078() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10078");
        assertNotNull(cs);
        assertEquals("afii10078", cs.getName());
        String[] text =
                {"158 -1 29 374 29 hstemhm",
                        "106 36 -26 34 332 69 hintmask 11011000",
                        "43 431 rmoveto", "-1 -2 0 -22 rlineto",
                        "-3 1 -2 4 vhcurveto", "29 hlineto",
                        "25 15 -10 -35 hvcurveto", "hintmask 11101000",
                        "-10 -282 rlineto", "-1 -36 -5 -11 -37 0 rrcurveto",
                        "-30 hlineto", "-4 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 94 2 79 -2 2 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto", "-17 hlineto",
                        "-29 0 -10 14 1 33 rrcurveto", "9 244 rlineto",
                        "hintmask 11011000", "-1 59 24 -67 128 -305 rlineto",
                        "3 -6 4 -4 4 0 6 0 4 4 4 6 rrcurveto",
                        "121 300 35 92 -1 -68 0 -256 rlineto",
                        "-36 -2 -10 -36 vhcurveto", "-13 hlineto",
                        "-3 -2 -2 -4 hvcurveto",
                        "0 -21 1 -2 85 2 117 -2 1 2 0 21 rlineto",
                        "3 -2 3 -4 vhcurveto", "-30 hlineto",
                        "-39 0 -2 13 -2 33 rrcurveto", "285 vlineto",
                        "37 3 6 37 vhcurveto", "28 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -2 2 -156 0 -134 -341 -136 341 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10079
     */
    public void testafii10079() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10079");
        assertNotNull(cs);
        assertEquals("afii10079", cs.getName());
        String[] text =
                {"60 -1 29 184 34 156 29 hstem", "104 74 205 75 vstem",
                        "104 355 rmoveto", "192 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10080
     */
    public void testafii10080() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10080");
        assertNotNull(cs);
        assertEquals("afii10080", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10081
     */
    public void testafii10081() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10081");
        assertNotNull(cs);
        assertEquals("afii10081", cs.getName());
        String[] text =
                {"63 -1 29 362 39 -27 29 hstemhm",
                        "106 75 203 74 hintmask 11011000", "106 353 rmoveto",
                        "-279 vlineto", "-35 -3 -11 -38 vhcurveto",
                        "-30 hlineto", "-4 -2 -2 -3 hvcurveto",
                        "0 -22 2 -2 110 2 111 -2 1 2 0 21 rlineto",
                        "4 -2 2 -3 vhcurveto", "-27 hlineto",
                        "-35 -5 8 38 hvcurveto", "277 vlineto",
                        "35 20 4 21 vhcurveto", "121 hlineto",
                        "20 21 -2 -37 hvcurveto", "-277 vlineto",
                        "-35 -4 -11 -37 vhcurveto", "-27 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 107 2 115 -2 1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto", "-30 hlineto",
                        "-35 -6 8 38 hvcurveto", "280 vlineto",
                        "hintmask 10111000", "291 callsubr",
                        "hintmask 11011000", "0 21 rlineto",
                        "hintmask 10111000", "-1 2 rlineto",
                        "hintmask 11011000", "292 callsubr",
                        "hintmask 10111000", "-110 2 rlineto",
                        "hintmask 11011000", "-2 -2 0 -22 rlineto",
                        "hintmask 10111000", "293 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10082
     */
    public void testafii10082() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10082");
        assertNotNull(cs);
        assertEquals("afii10082", cs.getName());
        String[] text =
                {
                        "-1 -227 27 188 34 374 46 -40 27 hstemhm",
                        "97 71 218 78 hintmask 11011100",
                        "171 429 rmoveto",
                        "-2 2 rlineto",
                        "0 -23 -2 -14 -35 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto",
                        "19 hlineto",
                        "33 10 -16 -28 hvcurveto",
                        "-514 vlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "166 vlineto",
                        "26 -14 28 -8 36 0 52 0 42 19 39 39 45 46 25 62 0 81 rrcurveto",
                        "hintmask 11101100", "106 -64 101 -97 vhcurveto",
                        "-32 0 -54 -10 -46 -70 rrcurveto", "-3 hlineto",
                        "3 -48 rmoveto", "-7 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10083
     */
    public void testafii10083() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10083");
        assertNotNull(cs);
        assertEquals("afii10083", cs.getName());
        String[] text =
                {"-98 -12 44 376 34 hstem", "37 77 vstem", "384 91 rmoveto",
                        "-28 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10084
     */
    public void testafii10084() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10084");
        assertNotNull(cs);
        assertEquals("afii10084", cs.getName());
        String[] text =
                {"-55 -1 29 365 37 hstem", "26 27 131 75 133 26 vstem",
                        "278 393 rmoveto", "81 0 16 -29 17 -81 rrcurveto",
                        "26 4 rlineto", "-6 46 -4 39 -1 58 rrcurveto",
                        "-369 hlineto", "-1 -58 -4 -39 -7 -46 rrcurveto",
                        "27 -4 rlineto", "17 81 15 29 82 0 rrcurveto",
                        "17 -319 hlineto", "0 -39 -5 -6 -35 -1 rrcurveto",
                        "-41 hlineto", "-4 -2 -2 -4 hvcurveto",
                        "0 -23 120 2 128 -2 0 23 rlineto",
                        "3 -2 3 -4 vhcurveto", "-40 hlineto",
                        "-34 1 -6 5 0 40 rrcurveto", "319 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10085
     */
    public void testafii10085() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10085");
        assertNotNull(cs);
        assertEquals("afii10085", cs.getName());
        String[] text =
                {"8 -230 55 577 27 hstem", "208 410 rmoveto", "5 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10086
     */
    public void testafii10086() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10086");
        assertNotNull(cs);
        assertEquals("afii10086", cs.getName());
        String[] text =
                {
                        "127 -12 40 374 40 hstem",
                        "39 74 164 75 163 74 vstem",
                        "352 -56 rmoveto",
                        "73 vlineto",
                        "21 -22 21 -7 29 0 rrcurveto",
                        "99 67 111 135 111 -50 97 -95 hvcurveto",
                        "-45 0 -26 -18 -21 -27 rrcurveto",
                        "107 vlineto",
                        "0 52 18 60 68 43 rrcurveto",
                        "-15 21 rlineto",
                        "-73 -38 -23 -41 -13 -28 -10 28 -24 45 -74 34 rrcurveto",
                        "-16 -21 rlineto", "70 -43 17 -60 0 -52 rrcurveto",
                        "-96 vlineto", "-18 21 -24 13 -29 0 rrcurveto",
                        "-86 -81 -89 -160 -108 51 -97 95 hvcurveto",
                        "38 0 29 12 25 28 rrcurveto", "-84 vlineto",
                        "0 -52 -17 -59 -70 -44 rrcurveto", "16 -20 rlineto",
                        "74 34 24 45 10 27 13 -28 23 -40 73 -38 rrcurveto",
                        "15 20 rlineto", "-68 43 -18 60 0 52 rrcurveto",
                        "65 458 rmoveto",
                        "79 19 -110 -84 -87 -20 -93 -82 hvcurveto",
                        "-20 0 -20 6 -21 32 rrcurveto", "294 vlineto",
                        "21 32 23 10 21 0 rrcurveto", "-206 -374 rmoveto",
                        "-78 -20 110 84 87 21 93 82 hvcurveto",
                        "21 0 19 -10 21 -27 rrcurveto", "-293 vlineto",
                        "-18 -30 -22 -14 -26 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10087
     */
    public void testafii10087() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10087");
        assertNotNull(cs);
        assertEquals("afii10087", cs.getName());
        String[] text =
                {"-4 1 27 374 29 hstem", "197 402 rmoveto", "4 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10088
     */
    public void testafii10088() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10088");
        assertNotNull(cs);
        assertEquals("afii10088", cs.getName());
        String[] text =
                {"51 0 39 -39 28 374 29 hstemhm",
                        "101 75 200 75 hintmask 10111000", "376 354 rmoveto",
                        "-266 vlineto", "-34 -3 -15 -37 vhcurveto",
                        "-120 hlineto", "-35 -5 12 37 hvcurveto",
                        "267 vlineto", "41 7 6 33 vhcurveto", "21 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -2 2 -107 -3 -104 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "26 hlineto",
                        "35 5 -9 -38 hvcurveto", "-284 vlineto",
                        "hintmask 01111000", "-39 -5 -4 -35 vhcurveto",
                        "-17 hlineto", "-3 -2 -2 -4 hvcurveto",
                        "0 -21 2 -2 93 1 243 0 rlineto",
                        "79 0 30 -79 11 -49 rrcurveto", "25 0 -6 135 rlineto",
                        "-1 17 -10 4 -18 0 rrcurveto",
                        "-18 -18 18 30 hvcurveto", "278 vlineto",
                        "41 7 7 34 vhcurveto", "25 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -2 2 -112 -2 -98 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "21 hlineto",
                        "35 5 -9 -39 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10089
     */
    public void testafii10089() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10089");
        assertNotNull(cs);
        assertEquals("afii10089", cs.getName());
        String[] text =
                {"9 1 27 118 35 221 29 hstem", "71 75 189 75 vstem",
                        "335 354 rmoveto", "-129 vlineto",
                        "-32 -32 -39 -12 -49 0 rrcurveto",
                        "-62 -7 34 78 hvcurveto", "67 vlineto",
                        "32 6 10 34 vhcurveto", "15 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -102 -3 -86 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "8 hlineto",
                        "35 6 -9 -38 hvcurveto", "-58 vlineto",
                        "-106 35 -45 98 vhcurveto",
                        "60 0 32 14 39 29 rrcurveto", "-113 vlineto",
                        "-39 -4 -9 -37 vhcurveto", "-16 hlineto",
                        "-4 -2 -2 -4 hvcurveto", "0 -21 2 -2 rlineto",
                        "0 62 2 40 38 56 -2 0 vhcurveto", "2 2 0 22 rlineto",
                        "3 -2 2 -3 vhcurveto", "-17 hlineto",
                        "-36 -4 10 38 hvcurveto", "278 vlineto",
                        "41 7 7 33 vhcurveto", "26 hlineto",
                        "3 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -92 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "15 hlineto",
                        "36 5 -9 -39 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10090
     */
    public void testafii10090() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10090");
        assertNotNull(cs);
        assertEquals("afii10090", cs.getName());
        String[] text =
                {"317 -1 29 -28 36 366 29 hstemhm",
                        "104 74 191 75 191 74 cntrmask 00011100",
                        "hintmask 01111100", "709 355 rmoveto",
                        "41 7 6 34 vhcurveto", "21 hlineto",
                        "3 2 2 4 hvcurveto",
                        "0 21 -1 2 -108 -3 -102 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "24 hlineto",
                        "35 6 -9 -38 hvcurveto", "-270 vlineto",
                        "-31 -3 -18 -37 vhcurveto", "-111 hlineto",
                        "-28 -12 7 42 hvcurveto", "269 vlineto",
                        "41 7 7 33 vhcurveto", "24 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -112 -2 -96 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "20 hlineto",
                        "35 5 -9 -39 hvcurveto", "-270 vlineto",
                        "-37 -5 -11 -35 vhcurveto", "-110 hlineto",
                        "-35 -6 9 40 hvcurveto", "270 vlineto",
                        "41 7 6 34 vhcurveto", "19 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -2 2 -106 -3 -103 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "26 hlineto",
                        "35 6 -9 -38 hvcurveto", "-285 vlineto",
                        "hintmask 10111100", "-39 -6 -3 -35 vhcurveto",
                        "-16 hlineto", "-4 -1 -2 -3 hvcurveto",
                        "0 -22 1 -2 rlineto", "hintmask 01111100",
                        "94 1 533 0 rlineto", "hintmask 10111100",
                        "114 -1 3 2 0 21 rlineto", "3 -2 3 -4 vhcurveto",
                        "-31 hlineto", "-33 -8 1 40 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10091
     */
    public void testafii10091() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10091");
        assertNotNull(cs);
        assertEquals("afii10091", cs.getName());
        String[] text =
                {"308 0 35 -35 28 374 29 hstemhm",
                        "104 74 191 75 191 74 cntrmask 00011100",
                        "hintmask 10111100", "709 355 rmoveto",
                        "41 7 6 34 vhcurveto", "21 hlineto",
                        "3 2 2 4 hvcurveto",
                        "0 21 -1 2 -108 -3 -102 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "24 hlineto",
                        "35 6 -9 -38 hvcurveto", "-271 vlineto",
                        "-33 -4 -15 -37 vhcurveto", "-109 -1 rlineto",
                        "-29 -12 7 41 hvcurveto", "271 vlineto",
                        "41 7 7 33 vhcurveto", "24 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -112 -2 -96 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "20 hlineto",
                        "35 5 -9 -39 hvcurveto", "-271 vlineto",
                        "-37 -5 -11 -35 vhcurveto", "-110 hlineto",
                        "-35 -6 9 39 hvcurveto", "272 vlineto",
                        "41 7 6 34 vhcurveto", "19 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -2 2 -106 -3 -103 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "26 hlineto",
                        "35 6 -9 -38 hvcurveto", "-285 vlineto",
                        "hintmask 01111100", "-38 -6 -4 -35 vhcurveto",
                        "-16 hlineto", "-4 -1 -2 -4 hvcurveto",
                        "0 -21 1 -2 94 1 499 0 rlineto",
                        "80 0 27 -79 12 -49 rrcurveto", "25 0 -6 136 rlineto",
                        "-1 18 -14 2 -13 0 rrcurveto",
                        "-23 -14 21 25 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10092
     */
    public void testafii10092() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10092");
        assertNotNull(cs);
        assertEquals("afii10092", cs.getName());
        String[] text =
                {"36 0 31 193 32 137 36 -27 29 hstemhm",
                        "26 27 143 75 160 75 hintmask 11001110",
                        "431 126 rmoveto",
                        "-82 -47 -13 -50 -46 -17 11 36 vhcurveto",
                        "146 67 vlineto", "71 22 -45 -53 hvcurveto",
                        "-235 -54 rmoveto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 vhcurveto",
                        "102 -1 rlineto",
                        "111 62 52 84 94 -82 26 -96 hvcurveto",
                        "-57 103 hlineto", "hintmask 11011110",
                        "35 3 8 37 vhcurveto", "31 hlineto",
                        "3 2 0 4 hvcurveto", "hintmask 11101110",
                        "0 23 rlineto", "hintmask 11011110", "-2 2 rlineto",
                        "hintmask 11101110", "-111 -2 -196 1 rlineto",
                        "-1 -58 -4 -46 -7 -46 rrcurveto", "27 -5 rlineto",
                        "17 82 15 36 82 0 rrcurveto", "22 7 -9 -37 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10093
     */
    public void testafii10093() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10093");
        assertNotNull(cs);
        assertEquals("afii10093", cs.getName());
        String[] text =
                {"180 0 31 193 32 145 27 hstem", "106 75 160 75 91 75 vstem",
                        "106 72 rmoveto", "294 callsubr", "235 -231 rmoveto",
                        "295 callsubr", "166 232 rmoveto", "296 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10094
     */
    public void testafii10094() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10094");
        assertNotNull(cs);
        assertEquals("afii10094", cs.getName());
        String[] text =
                {"-54 0 31 193 32 145 27 hstem", "106 75 160 75 vstem",
                        "106 72 rmoveto", "294 callsubr", "235 -231 rmoveto",
                        "295 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10095
     */
    public void testafii10095() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10095");
        assertNotNull(cs);
        assertEquals("afii10095", cs.getName());
        String[] text =
                {"-67 -12 31 161 49 -22 41 163 31 hstemhm",
                        "40 27 247 77 hintmask 11011100", "313 236 rmoveto",
                        "-12 -5 -14 -2 -16 0 rrcurveto", "hintmask 10111100",
                        "297 callsubr", "hintmask 11011100", "298 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10096
     */
    public void testafii10096() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10096");
        assertNotNull(cs);
        assertEquals("afii10096", cs.getName());
        String[] text =
                {
                        "185 -12 35 -22 27 170 39 165 27 -20 33 hstemhm",
                        "97 74 97 79 224 78 hintmask 01100111",
                        "97 358 rmoveto",
                        "-286 vlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "126 97 vlineto",
                        "hintmask 10101111",
                        "2 -101 60 -109 128 0 rrcurveto",
                        "139 52 129 100 104 -46 121 -144 hvcurveto",
                        "-115 0 -65 -86 -10 -119 rrcurveto",
                        "-98 121 hlineto",
                        "",
                        "hintmask 01110111",
                        "28 11 16 32 vhcurveto",
                        "19 hlineto",
                        "5 4 3 5 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -69 -2 -39 -35 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto",
                        "19 hlineto",
                        "33 10 -16 -28 hvcurveto",
                        "hintmask 10101111",
                        "352 51 rmoveto",
                        "78 44 -78 -146 -132 -55 -30 -41 -94 -34 126 77 hvcurveto",
                        "87 28 96 74 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10097
     */
    public void testafii10097() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10097");
        assertNotNull(cs);
        assertEquals("afii10097", cs.getName());
        String[] text =
                {"-72 1 27 167 35 -26 26 172 28 hstemhm",
                        "43 75 152 75 hintmask 11011100", "110 136 rmoveto",
                        "-14 -38 -32 -70 -29 0 rrcurveto", "-8 hlineto",
                        "-4 -6 -1 -7 hvcurveto", "0 -19 3 -2 63 1 rlineto",
                        "32 0 30 43 14 41 20 61 24 50 40 0 rrcurveto",
                        "27 -119 hlineto", "-39 -1 -9 -34 vhcurveto",
                        "-15 hlineto", "-4 -2 -3 -4 hvcurveto", "-22 vlineto",
                        "0 57 2 36 36 55 -2 0 vhcurveto", "20 vlineto",
                        "2 -2 7 -8 vhcurveto", "-22 hlineto",
                        "-18 -3 22 26 hvcurveto", "296 vlineto",
                        "21 0 9 25 vhcurveto", "25 hlineto",
                        "2 1 1 2 hvcurveto",
                        "0 24 -2 2 -87 -2 -42 1 -69 0 rlineto",
                        "-74 -81 -46 -74 hvcurveto", "hintmask 10111100",
                        "-71 77 -35 55 vhcurveto",
                        "-28 -6 -21 -21 -16 -41 rrcurveto",
                        "hintmask 11011100", "160 94 rmoveto",
                        "hintmask 10111100", "-67 hlineto",
                        "-57 -28 41 50 47 20 34 86 39 7 -4 -32 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10098
     */
    public void testafii10098() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10098");
        assertNotNull(cs);
        assertEquals("afii10098", cs.getName());
        String[] text =
                {"-104 1 27 358 44 -27 27 hstemhm",
                        "104 74 162 27 hintmask 11011000", "104 72 rmoveto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-33 -10 15 29 hvcurveto", "314 118 vlineto", "",
                        "30 0 13 -11 7 -21 rrcurveto", "21 188 -27 hlineto",
                        "-3 -54 -26 -58 -53 0 rrcurveto", "hintmask 10111000",
                        "-231 -22 hlineto", "-3 2 -2 3 vhcurveto",
                        "31 hlineto", "36 -2 5 -9 0 -38 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10099
     */
    public void testafii10099() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10099");
        assertNotNull(cs);
        assertEquals("afii10099", cs.getName());
        String[] text =
                {
                        "21 1 27 285 44 45 35 hstem",
                        "109 75 220 75 vstem",
                        "325 437 rmoveto",
                        "-141 67 hlineto",
                        "0 52 18 60 68 43 rrcurveto",
                        "-15 21 rlineto",
                        "-73 -38 -23 -41 -13 -28 -10 28 -24 45 -74 34 rrcurveto",
                        "-16 -21 rlineto",
                        "70 -43 17 -60 0 -52 rrcurveto",
                        "-67 -73 -35 73 -330 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "182 vlineto",
                        "53 57 41 2 26 0 47 0 53 -37 0 -147 0 -249 -88 -20 -60 -46 rrcurveto",
                        "11 -15 rlineto",
                        "114 49 98 81 0 203 0 176 -81 49 -79 0 -48 0 -36 -7 -51 -52 rrcurveto",
                        "104 141 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10100
     */
    public void testafii10100() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10100");
        assertNotNull(cs);
        assertEquals("afii10100", cs.getName());
        String[] text =
                {"-99 1 27 363 39 -28 29 hstemhm",
                        "106 75 171 27 hintmask 11011000", "106 72 rmoveto",
                        "282 callsubr", "hintmask 10111000", "283 callsubr",
                        "153 316 rmoveto", "299 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10101
     */
    public void testafii10101() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10101");
        assertNotNull(cs);
        assertEquals("afii10101", cs.getName());
        String[] text =
                {
                        "-69 -12 31 161 41 -22 49 163 31 hstemhm",
                        "39 77 244 27 hintmask 10111100",
                        "250 19 rmoveto",
                        "-84 0 -41 94 -7 80 11 4 13 2 15 0 rrcurveto",
                        "hintmask 11011100",
                        "38 0 17 -19 45 0 rrcurveto",
                        "43 46 18 14 4 -2 10 -6 hvcurveto",
                        "-7 0 -11 -5 -12 0 rrcurveto",
                        "hintmask 10111100",
                        "-35 0 -29 27 -43 0 -31 0 -32 -15 -22 -11 1 68 11 121 110 0 74 0 31 -54 17 -64 rrcurveto",
                        "27 4 rlineto",
                        "-6 44 -3 34 -2 55 -69 0 8 12 -68 0 rrcurveto",
                        "-133 -75 -112 -121 -165 104 -56 99 91 57 43 53 14 -9 15 -18 hvcurveto",
                        "-11 0 -23 -4 -5 -33 rrcurveto",
                        "-5 -34 -29 -23 -40 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10102
     */
    public void testafii10102() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10102");
        assertNotNull(cs);
        assertEquals("afii10102", cs.getName());
        String[] text =
                {"-130 -12 28 396 30 hstem", "53 61 153 67 vstem",
                        "43 140 rmoveto", "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10103
     */
    public void testafii10103() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10103");
        assertNotNull(cs);
        assertEquals("afii10103", cs.getName());
        String[] text =
                {"-220 1 27 374 27 94 96 hstemhm",
                        "95 95 -74 74 hintmask 11110000", "95 571 rmoveto",
                        "107 callsubr", "hintmask 11101000", "95 -142 rmoveto",
                        "-2 2 rlineto", "0 -22 -2 -15 -35 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-19 hlineto", "-32 -11 15 29 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii10104
     */
    public void testafii10104() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10104");
        assertNotNull(cs);
        assertEquals("afii10104", cs.getName());
        String[] text =
                {"-224 1 27 374 27 98 91 hstemhm",
                        "9 91 16 74 -20 91 hintmask 11110000", "9 572 rmoveto",
                        "222 callsubr", "hintmask 11110100", "161 hmoveto",
                        "56 callsubr", "hintmask 11111000", "20 -143 rmoveto",
                        "-2 2 rlineto", "0 -22 -2 -15 -35 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 39 69 -2 0 vhcurveto",
                        "hintmask 11110100", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "hintmask 11111000", "-32 -11 15 29 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10105
     */
    public void testafii10105() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10105");
        assertNotNull(cs);
        assertEquals("afii10105", cs.getName());
        String[] text =
                {"-233 -213 29 586 27 94 96 hstemhm",
                        "91 96 -75 75 hintmask 11101000", "187 429 rmoveto",
                        "-2 2 rlineto", "0 -23 -2 -14 -36 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "19 hlineto", "34 9 -16 -28 hvcurveto", "-321 vlineto",
                        "-141 -29 -80 -45 vhcurveto",
                        "-7 0 -6 6 -3 11 -5 21 -13 22 -24 0 rrcurveto",
                        "-17 -14 -13 -25 -30 52 -21 41 hvcurveto",
                        "24 0 30 12 26 27 56 55 9 56 0 130 rrcurveto",
                        "hintmask 11110000", "-96 504 rmoveto", "300 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10106
     */
    public void testafii10106() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10106");
        assertNotNull(cs);
        assertEquals("afii10106", cs.getName());
        String[] text =
                {
                        "162 -12 35 -23 31 193 32 135 38 -27 27 hstemhm",
                        "138 45 138 75 161 74 hintmask 01100111",
                        "557 126 rmoveto",
                        "-82 -48 -13 -50 -46 -17 8 35 vhcurveto",
                        "150 67 vlineto",
                        "72 22 -45 -53 hvcurveto",
                        "-161 130 rmoveto",
                        "99 vlineto",
                        "hintmask 10101111",
                        "38 3 9 38 vhcurveto",
                        "28 hlineto",
                        "6 2 2 5 hvcurveto",
                        "0 20 -3 2 rlineto",
                        "0 -68 -2 -43 -43 -66 1 0 0 -53 -1 -33 -40 -63 2 0 vhcurveto",
                        "-3 -2 0 -18 rlineto",
                        "-9 4 0 17 56 3 -11 -132 vhcurveto",
                        "0 -105 -7 -62 -10 -34 -7 -25 -10 -10 -9 0 -9 0 -5 10 -2 13 -1 15 -15 15 -17 0 rrcurveto",
                        "-21 -10 -16 -20 -26 33 -26 39 hvcurveto",
                        "51 0 15 25 13 47 11 39 6 85 0 82 rrcurveto",
                        "hintmask 01110111", "94 3 31 38 vhcurveto",
                        "57 hlineto", "36 4 -15 -34 hvcurveto", "-270 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 vhcurveto", "101 -1 rlineto",
                        "112 61 52 84 94 -82 26 -95 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10107
     */
    public void testafii10107() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10107");
        assertNotNull(cs);
        assertEquals("afii10107", cs.getName());
        String[] text =
                {"224 0 31 186 34 151 27 hstem", "102 75 207 74 161 75 vstem",
                        "619 124 rmoveto",
                        "-82 -47 -11 -50 -46 -18 8 35 vhcurveto",
                        "143 68 vlineto", "71 22 -40 -53 hvcurveto",
                        "-161 234 rmoveto", "28 10 16 33 vhcurveto",
                        "20 hlineto", "4 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -35 -39 -65 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "16 hlineto", "33 10 -16 -28 hvcurveto",
                        "-107 -207 107 vlineto", "28 9 16 34 vhcurveto",
                        "15 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -64 -2 -36 -39 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto",
                        "-286 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 65 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-15 hlineto", "-33 -10 15 29 hvcurveto",
                        "145 207 -145 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 vhcurveto",
                        "102 -1 rlineto",
                        "111 62 50 84 95 -82 22 -96 hvcurveto", "-58 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10108
     */
    public void testafii10108() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10108");
        assertNotNull(cs);
        assertEquals("afii10108", cs.getName());
        String[] text =
                {
                        "42 1 27 277 47 50 35 hstem",
                        "114 74 198 75 vstem",
                        "345 437 rmoveto",
                        "-157 67 hlineto",
                        "0 52 19 60 68 43 rrcurveto",
                        "-15 21 rlineto",
                        "-73 -38 -23 -41 -13 -28 -10 28 -24 45 -75 34 rrcurveto",
                        "-15 -21 rlineto", "70 -43 17 -60 0 -52 rrcurveto",
                        "-67 -76 -35 76 -330 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-32 -11 15 29 hvcurveto", "178 vlineto",
                        "48 48 44 7 29 0 rrcurveto", "55 22 -19 -81 hvcurveto",
                        "-133 vlineto", "", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "122 vlineto", "103 -36 55 -72 vhcurveto",
                        "-39 0 -70 -8 -56 -56 rrcurveto", "114 157 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10109
     */
    public void testafii10109() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10109");
        assertNotNull(cs);
        assertEquals("afii10109", cs.getName());
        String[] text =
                {"-24 1 27 343 67 -36 27 hstemhm", "102 74 hintmask 11010000",
                        "176 69 rmoveto", "289 callsubr", "hintmask 10110000",
                        "290 callsubr", "114 601 rmoveto", "118 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10110
     */
    public void testafii10110() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10110");
        assertNotNull(cs);
        assertEquals("afii10110", cs.getName());
        String[] text =
                {
                        "8 -230 55 577 27 60 31 hstem",
                        "151 73 96 73 vstem",
                        "208 410 rmoveto",
                        "5 callsubr",
                        "185 167 rmoveto",
                        "19 -15 13 -24 -18 -16 -14 -17 vhcurveto",
                        "0 -3 0 -2 1 -2 0 -3 1 -3 0 -3 rrcurveto",
                        "-22 -21 -20 -29 -30 -20 21 21 vhcurveto",
                        "0 3 0 3 1 3 0 3 1 2 0 3 rrcurveto",
                        "16 -13 14 -22 -22 -16 -15 -18 -54 55 -33 65 63 59 33 55 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10145
     */
    public void testafii10145() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10145");
        assertNotNull(cs);
        assertEquals("afii10145", cs.getName());
        String[] text =
                {"191 0 39 -39 28 590 27 hstemhm",
                        "106 81 319 80 hintmask 10111000", "586 574 rmoveto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-1 -1 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-491 vlineto", "-34 -6 -10 -30 vhcurveto",
                        "-246 hlineto", "-29 -8 20 24 hvcurveto",
                        "491 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto", "",
                        "-505 vlineto", "hintmask 01111000",
                        "-38 -5 -3 -31 vhcurveto", "-29 hlineto",
                        "-6 -3 -4 -5 hvcurveto", "0 -18 2 -2 115 1 rlineto",
                        "hintmask 10111000", "123 hlineto",
                        "30 0 19 -40 8 -101 rrcurveto", "35 hlineto",
                        "8 100 16 41 33 0 rrcurveto", "hintmask 01111000",
                        "0 0 82 -1 45 1 rrcurveto", "12 100 -1 0 hvcurveto",
                        "1 2 0 20 rlineto", "4 -3 3 -3 vhcurveto",
                        "-31 hlineto", "-32 -6 4 37 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10146
     */
    public void testafii10146() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10146");
        assertNotNull(cs);
        assertEquals("afii10146", cs.getName());
        String[] text =
                {
                        "200 -1 29 -29 42 282 31 157 39 68 27 hstemhm",
                        "249 80 216 26 -3 89 hintmask 01111101",
                        "329 323 rmoveto",
                        "80 hlineto",
                        "129 30 -65 -69 -84 -27 -64 -152 -55 -5 17 33 hvcurveto",
                        "-201 420 rmoveto", "121 -439 hlineto",
                        "hintmask 10111101", "-28 -14 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 rlineto", "hintmask 01111101", "2 -2 rlineto",
                        "0 100 2 29 vhcurveto",
                        "29 0 31 -2 36 0 165 1 105 63 0 120 rrcurveto",
                        "78 -25 93 -236 vhcurveto", "-67 157 146 hlineto",
                        "55 0 13 -13 20 -80 rrcurveto", "30 5 rlineto",
                        "hintmask 10111110", "-11 54 -7 51 -4 50 rrcurveto",
                        "-26 -4 rlineto", "-7 -1 -17 -21 vhcurveto",
                        "-194 24 hlineto", "30 15 14 40 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -1 1 rlineto",
                        "0 -87 -1 -39 -36 -93 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 3 -3 4 vhcurveto",
                        "27 hlineto", "41 14 -16 -28 hvcurveto",
                        "-24 -169 vlineto", "-21 -1 17 7 hvcurveto",
                        "-26 4 rlineto", "-4 -50 -7 -51 -11 -54 rrcurveto",
                        "30 -5 rlineto", "20 80 13 13 55 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10147
     */
    public void testafii10147() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10147");
        assertNotNull(cs);
        assertEquals("afii10147", cs.getName());
        String[] text =
                {"197 -12 34 244 57 -11 58 254 34 hstemhm",
                        "37 91 442 92 hintmask 10111100", "570 316 rmoveto",
                        "301 callsubr", "hintmask 11011100", "302 callsubr",
                        "92 13 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "303 callsubr", "hintmask 10111100", "304 callsubr",
                        "hintmask 11011100", "305 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10148
     */
    public void testafii10148() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10148");
        assertNotNull(cs);
        assertEquals("afii10148", cs.getName());
        String[] text =
                {"162 9 -21 629 41 -40 26 hstemhm", "hintmask 11000000",
                        "582 658 rmoveto", "306 callsubr", "hintmask 10100000",
                        "307 callsubr", "hintmask 11000000", "308 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10193
     */
    public void testafii10193() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10193");
        assertNotNull(cs);
        assertEquals("afii10193", cs.getName());
        String[] text =
                {"63 -1 29 -28 40 362 29 hstemhm",
                        "106 75 85 34 86 75 hintmask 01111100",
                        "386 353 rmoveto", "-269 vlineto",
                        "-34 -5 -10 -31 vhcurveto", "-133 hlineto",
                        "-33 -3 14 30 hvcurveto", "271 vlineto",
                        "41 7 6 33 vhcurveto", "21 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -2 2 -107 -3 -104 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "25 hlineto",
                        "36 5 -9 -38 hvcurveto", "-286 vlineto",
                        "hintmask 10111100", "-39 -5 -2 -32 vhcurveto",
                        "-29 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "hintmask 01111100",
                        "2 0 104 1 6 0 rrcurveto", "76 hlineto",
                        "26 0 13 -55 5 -73 rrcurveto", "34 hlineto",
                        "5 72 12 56 27 0 rrcurveto", "79 hlineto",
                        "hintmask 10111100", "14 0 89 -1 8 0 rrcurveto",
                        "2 2 0 20 rlineto", "2 -1 5 -7 vhcurveto",
                        "-30 hlineto", "-31 -6 4 37 hvcurveto", "284 vlineto",
                        "41 7 8 33 vhcurveto", "26 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -2 2 -113 -2 -97 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "21 hlineto",
                        "35 5 -10 -39 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10194
     */
    public void testafii10194() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10194");
        assertNotNull(cs);
        assertEquals("afii10194", cs.getName());
        String[] text =
                {
                        "26 0 31 188 32 142 37 hstemhm",
                        "",
                        "15 27 144 74 160 29 -28 75 hintmask 11111010",
                        "421 124 rmoveto",
                        "-82 -47 -11 -50 -47 -17 8 35 vhcurveto",
                        "145 68 vlineto",
                        "71 22 -43 -52 hvcurveto",
                        "-161 127 rmoveto",
                        "142 47 vlineto",
                        "hintmask 11111100",
                        "81 0 15 -21 17 -82 rrcurveto",
                        "29 4 rlineto",
                        "-7 46 -4 32 -1 58 rrcurveto",
                        "-177 74 hlineto",
                        "0 52 18 60 69 43 rrcurveto",
                        "-15 21 rlineto",
                        "-74 -38 -23 -41 -12 -28 -10 28 -25 45 -74 34 rrcurveto",
                        "-15 -21 rlineto", "70 -43 17 -60 0 -52 rrcurveto",
                        "-74 -160 vlineto", "-1 -58 -4 -39 -6 -46 rrcurveto",
                        "27 -4 rlineto", "17 81 15 29 81 0 rrcurveto",
                        "31 -321 hlineto", "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 vhcurveto",
                        "101 -1 rlineto", "hintmask 11111010",
                        "112 62 49 84 95 -82 23 -96 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii10195
     */
    public void testafii10195() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10195");
        assertNotNull(cs);
        assertEquals("afii10195", cs.getName());
        String[] text =
                {
                        "-46 -12 35 157 49 -22 41 161 33 hstemhm",
                        "37 79 225 78 hintmask 10111100",
                        "117 202 rmoveto",
                        "7 2 8 3 10 0 rrcurveto",
                        "hintmask 11011100",
                        "35 0 29 -27 43 0 34 0 36 18 21 12 1 -8 0 -9 0 -8 0 -132 -56 -30 -41 0 rrcurveto",
                        "-85 0 -35 103 -7 76 rrcurveto",
                        "222 35 rmoveto",
                        "-13 -5 -15 -3 -18 0 rrcurveto",
                        "hintmask 10111100",
                        "-39 0 -17 19 -44 0 rrcurveto",
                        "hintmask 11011100",
                        "-30 0 -30 -9 -17 -10 1 87 29 93 72 0 69 0 42 -59 10 -113 rrcurveto",
                        "-302 -34 rmoveto",
                        "-103 61 -112 129 139 53 129 100 104 -47 121 -143 -127 -65 -103 -136 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10196
     */
    public void testafii10196() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10196");
        assertNotNull(cs);
        assertEquals("afii10196", cs.getName());
        String[] text =
                {"36 10 -21 413 27 -27 40 hstemhm", "hintmask 10100000",
                        "431 402 rmoveto", "309 callsubr", "hintmask 11000000",
                        "310 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii10846
     */
    public void testafii10846() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii10846");
        assertNotNull(cs);
        assertEquals("afii10846", cs.getName());
        String[] text =
                {"-65 -12 34 131 39 201 49 hstem", "48 79 203 76 vstem",
                        "62 336 rmoveto", "313 callsubr", "284 -200 rmoveto",
                        "314 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57645
     */
    public void testafii57645() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57645");
        assertNotNull(cs);
        assertEquals("afii57645", cs.getName());
        String[] text =
                {"-126 418 87 hstem", "62 251 vstem", "62 418 rmoveto",
                        "231 0 20 87 -230 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57658
     */
    public void testafii57658() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57658");
        assertNotNull(cs);
        assertEquals("afii57658", cs.getName());
        String[] text =
                {
                        "-149 88 176 vstem",
                        "264 84 rmoveto",
                        "-56 23 -15 22 -17 44 -9 -22 -15 -42 -64 -25 42 -16 22 -8 24 -63 26 67 14 0 48 20 rrcurveto",
                        "341 vmoveto",
                        "-49 20 -13 1 -26 67 -23 -59 -19 -11 -46 -18 56 -22 6 2 26 -69 16 42 14 23 58 24 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57664
     */
    public void testafii57664() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57664");
        assertNotNull(cs);
        assertEquals("afii57664", cs.getName());
        String[] text =
                {"-20 21 -21 hstemhm", "33 50 -13 112 hintmask 11000000",
                        "453 442 rmoveto", "327 callsubr", "hintmask 10100000",
                        "328 callsubr", "hintmask 11000000", "329 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57665
     */
    public void testafii57665() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57665");
        assertNotNull(cs);
        assertEquals("afii57665", cs.getName());
        String[] text =
                {"-33 0 100 325 108 hstem", "370 38 vstem", "238 533 rmoveto",
                        "330 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57666
     */
    public void testafii57666() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57666");
        assertNotNull(cs);
        assertEquals("afii57666", cs.getName());
        String[] text =
                {"-166 210 24 vstem", "234 296 rmoveto", "331 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57667
     */
    public void testafii57667() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57667");
        assertNotNull(cs);
        assertEquals("afii57667", cs.getName());
        String[] text =
                {"-63 413 107 hstemhm", "271 60 -56 67 hintmask 11000000",
                        "331 291 rmoveto", "332 callsubr", "hintmask 10100000",
                        "333 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57668
     */
    public void testafii57668() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57668");
        assertNotNull(cs);
        assertEquals("afii57668", cs.getName());
        String[] text =
                {"-23 408 108 hstemhm",
                        "53 66 -63 67 227 50 -43 65 hintmask 10010000",
                        "400 296 rmoveto", "0 100 36 -2 0 40 rrcurveto",
                        "24 vlineto", "38 -10 20 -53 vhcurveto",
                        "-246 hlineto", "-25 0 -19 21 -5 23 rrcurveto",
                        "0 -45 -7 -74 -41 29 -30 50 hvcurveto", "295 hlineto",
                        "-38 -45 -19 -62 0 -78 rrcurveto", "hintmask 10001000",
                        "0 -42 7 -90 0 -42 0 -20 -4 -17 -8 -14 rrcurveto",
                        "8 -10 rlineto", "46 7 23 32 0 58 rrcurveto",
                        "0 66 -22 79 0 66 rrcurveto", "hintmask 11000000",
                        "-281 -137 rmoveto", "0 32 8 30 16 10 rrcurveto",
                        "13 vlineto",
                        "-5 3 -6 1 -6 0 -49 0 -24 -42 0 -68 rrcurveto",
                        "hintmask 10100000",
                        "0 -19 3 -60 0 -18 0 -16 -5 -18 -8 -9 rrcurveto",
                        "7 -11 rlineto", "49 3 24 29 0 39 rrcurveto",
                        "0 19 -4 63 0 19 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57669
     */
    public void testafii57669() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57669");
        assertNotNull(cs);
        assertEquals("afii57669", cs.getName());
        String[] text =
                {
                        "-216 179 53 -43 37 hintmask 10000000",
                        "179 -6 rmoveto",
                        "1 1 53 -7 -1 63 rrcurveto",
                        "hintmask 01000000",
                        "-6 355 rlineto",
                        "0 98 -31 6 -55 9 -21 4 -36 6 -5 30 0 0 -51 -9 0 -56 0 -41 35 -32 49 -8 53 -9 26 -9 -1 -59 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57670
     */
    public void testafii57670() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57670");
        assertNotNull(cs);
        assertEquals("afii57670", cs.getName());
        String[] text =
                {
                        "-212 101 48 -32 63 hintmask 01000000",
                        "117 51 rmoveto",
                        "0 -22 -5 -17 -10 -14 0 0 78 -19 0 115 rrcurveto",
                        "hintmask 10000000",
                        "0 72 -31 75 0 78 0 21 3 43 12 38 19 -9 35 -13 24 8 8 11 6 22 0 9 0 61 -26 14 -120 4 -17 4 -11 11 -4 19 rrcurveto",
                        "0 -40 -6 -74 -46 34 -24 68 hvcurveto",
                        "-26 -55 -13 -65 0 -62 rrcurveto",
                        "0 -58 16 -63 0 -58 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57671
     */
    public void testafii57671() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57671");
        assertNotNull(cs);
        assertEquals("afii57671", cs.getName());
        String[] text =
                {
                        "-22 413 107 hstemhm",
                        "61 48 239 48 -40 63 hintmask 11100000",
                        "396 299 rmoveto",
                        "0 97 45 -18 0 76 rrcurveto",
                        "45 -22 21 -45 vhcurveto",
                        "-240 hlineto",
                        "-27 0 -16 17 -5 23 rrcurveto",
                        "0 -51 2 -68 -46 31 -35 63 hvcurveto",
                        "-75 -72 1 -81 6 -121 3 -63 5 -47 -20 -31 0 0 79 -25 0 120 0 62 -19 77 0 62 0 54 17 41 32 24 rrcurveto",
                        "249 hlineto",
                        "-37 -45 -22 -66 0 -79 rrcurveto",
                        "hintmask 11010000",
                        "0 -42 8 -90 0 -42 0 -21 -4 -17 -9 -13 0 0 76 -21 0 108 rrcurveto",
                        "0 61 -23 95 0 58 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57672
     */
    public void testafii57672() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57672");
        assertNotNull(cs);
        assertEquals("afii57672", cs.getName());
        String[] text =
                {
                        "-15 0 100 319 108 hstemhm",
                        "28 38 -1 32 324 31 hintmask 11011000",
                        "96 410 rmoveto",
                        "-17 -44 -14 -49 0 -42 0 -86 40 -118 1 -71 rrcurveto",
                        "279 hlineto",
                        "42 117 25 105 0 88 0 185 -66 32 -41 0 -29 0 -28 -19 -20 -24 -26 -29 -23 -53 -32 -74 rrcurveto",
                        "24 -12 rlineto",
                        "49 84 31 19 45 0 54 0 31 -38 0 -71 0 -80 -18 -72 -28 -58 rrcurveto",
                        "-223 hlineto",
                        "-33 76 -22 69 0 63 0 26 11 41 11 37 18 -1 20 0 14 5 4 14 2 14 0 14 0 41 -19 21 -39 1 rrcurveto",
                        "hintmask 11101000",
                        "-33 1 -17 13 -3 24 0 0 -38 -1 0 -77 rrcurveto",
                        "0 -49 27 -15 41 -7 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57673
     */
    public void testafii57673() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57673");
        assertNotNull(cs);
        assertEquals("afii57673", cs.getName());
        String[] text =
                {"-231 415 106 hstem", "27 42 122 37 vstem", "152 243 rmoveto",
                        "334 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57674
     */
    public void testafii57674() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57674");
        assertNotNull(cs);
        assertEquals("afii57674", cs.getName());
        String[] text =
                {"-26 408 108 hstemhm", "347 61 -52 36 hintmask 10100000",
                        "392 361 rmoveto", "hintmask 11000000",
                        "-2 38 9 5 9 3 15 5 14 19 0 27 rrcurveto",
                        "26 -9 32 -59 vhcurveto", "-242 hlineto",
                        "-29 0 -17 11 -6 23 rrcurveto",
                        "0 -43 -2 -71 -41 24 -28 47 hvcurveto",
                        "hintmask 10100000", "253 0 rlineto",
                        "hintmask 11000000", "-9 -577 rlineto",
                        "12 0 53 -4 -4 87 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57675
     */
    public void testafii57675() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57675");
        assertNotNull(cs);
        assertEquals("afii57675", cs.getName());
        String[] text =
                {"-38 0 100 313 108 hstem", "371 38 vstem", "371 248 rmoveto",
                        "-97 -29 -51 -78 vhcurveto",
                        "-210 0 -26 -100 189 0 rlineto",
                        "166 26 84 181 169 -43 87 -103 hvcurveto",
                        "-132 hlineto", "-27 0 -16 11 -5 23 rrcurveto",
                        "0 -43 -9 -71 -41 23 -21 46 hvcurveto", "166 hlineto",
                        "87 9 -71 -94 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57676
     */
    public void testafii57676() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57676");
        assertNotNull(cs);
        assertEquals("afii57676", cs.getName());
        String[] text =
                {
                        "-25 10 -21 424 107 hstemhm",
                        "11 30 1 40 -5 33 87 62 112 43 hintmask 11110110",
                        "82 558 rmoveto",
                        "0 12 4 18 5 14 rrcurveto",
                        "hintmask 11101110",
                        "3 9 16 64 0 3 0 26 -21 10 -18 5 -8 2 -20 7 -2 18 0 -1 -30 -2 0 -45 0 -22 22 -9 12 -4 13 -5 19 -7 0 -18 rrcurveto",
                        "0 -9 -6 -17 -5 -10 rrcurveto",
                        "hintmask 11110110",
                        "-12 -32 -12 -38 0 -48 rrcurveto",
                        "-45 33 -21 50 vhcurveto",
                        "153 hlineto",
                        "82 11 -32 -49 hvcurveto",
                        "0 -64 -14 -16 -49 -51 -34 -34 -77 -80 0 -57 rrcurveto",
                        "-27 11 -14 22 22 11 12 24 vhcurveto",
                        "0 11 -4 10 0 15 0 34 33 37 43 50 71 79 8 13 0 87 rrcurveto",
                        "109 -9 50 -88 vhcurveto", "-170 hlineto",
                        "-37 -28 5 33 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57677
     */
    public void testafii57677() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57677");
        assertNotNull(cs);
        assertEquals("afii57677", cs.getName());
        String[] text =
                {"26 0 100 317 107 hstem", "59 44 328 42 vstem", "51 hmoveto",
                        "433 0 -11 341 rlineto",
                        "-5 144 -28 39 -146 0 rrcurveto", "-156 hlineto",
                        "-26 0 -15 12 -6 23 rrcurveto",
                        "0 -44 0 -69 -41 25 -32 48 hvcurveto", "31 hlineto",
                        "-41 -43 -50 -69 -1 -42 rrcurveto", "125 154 rmoveto",
                        "146 hlineto", "76 0 20 -38 5 -148 rrcurveto",
                        "4 -131 -337 0 5 146 rlineto",
                        "1 54 28 56 52 61 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57678
     */
    public void testafii57678() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57678");
        assertNotNull(cs);
        assertEquals("afii57678", cs.getName());
        String[] text =
                {
                        "19 0 100 hstem",
                        "37 35 366 34 vstem",
                        "291 533 rmoveto",
                        "-5 -50 -37 -35 -55 -30 -10 6 -6 16 0 13 0 13 3 2 0 17 0 37 -30 4 -25 2 -20 2 -26 4 -8 31 0 0 -34 -5 0 -63 rrcurveto",
                        "0 -35 21 -30 41 -9 44 -9 11 -7 0 -26 -76 -83 -42 -120 0 -136 rrcurveto",
                        "-28 3 -19 14 9 9 9 5 vhcurveto",
                        "0 134 23 94 44 65 43 65 63 40 51 0 84 0 58 -74 0 -92 0 -50 -15 -56 -11 -35 rrcurveto",
                        "-207 0 -36 -100 244 0 29 83 rlineto",
                        "7 21 23 81 0 67 0 131 -61 130 -120 20 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57679
     */
    public void testafii57679() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57679");
        assertNotNull(cs);
        assertEquals("afii57679", cs.getName());
        String[] text =
                {
                        "-219 406 109.925598145 hstemhm",
                        "147 72 -61 45 -8 44 hintmask 1100",
                        "0000",
                        "147 -203 rmoveto",
                        "5 2 74 -12 -7 135 rrcurveto",
                        "hintmask 10100000",
                        "-16 314 rlineto",
                        "hintmask 11000000",
                        "-2 45 5 42 13 38 rrcurveto",
                        "hintmask 10010000",
                        "13 38 7 25 0 11 0 75 -53 3 -48 3 -22 1 -37 2 -7 35 0 0 -39 -5 0 -73 0 -43 35 -23 64 -4 39 -2 24 -9 0 -17 rrcurveto",
                        "0 -9 -4 -12 -6 -12 rrcurveto", "hintmask 10100000",
                        "-18 -31 -9 -27 0 -23 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57680
     */
    public void testafii57680() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57680");
        assertNotNull(cs);
        assertEquals("afii57680", cs.getName());
        String[] text =
                {
                        "-184 0 100 hstem",
                        "217 27 vstem",
                        "244 272 rmoveto",
                        "0 58 18 61 0 57 0 60 -47 8 -46 2 -29 1 -35 2 -6 33 0 0 -44 0 0 -72 0 -40 44 -29 71 -4 27 -2 20 -13 0 -25 rrcurveto",
                        "0 -56 -11 -76 3 -56 2 -29 2 -24 5 -28 rrcurveto",
                        "-170 0 -32 -100 254 0 rlineto",
                        "3 14 1 21 0 28 0 52 -30 67 0 90 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : afii57681
     */
    public void testafii57681() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57681");
        assertNotNull(cs);
        assertEquals("afii57681", cs.getName());
        String[] text =
                {
                        "9 -11 101 326 106 hstem",
                        "51 40 319 36 vstem",
                        "250 -11 rmoveto",
                        "97 99 32 245 198 -71 58 -104 hvcurveto",
                        "-134 hlineto",
                        "-27 0 -16 12 -5 23 rrcurveto",
                        "0 -46 -2 -69 -21 14 -49 47 hvcurveto",
                        "-35 -54 -18 -69 0 -78 rrcurveto",
                        "-199 134 -27 65 vhcurveto",
                        "39 426 rmoveto",
                        "96 25 -60 -106 -141 -73 -18 -84 -65 -97 4 163 hvcurveto",
                        "0 56 14 55 28 47 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57682
     */
    public void testafii57682() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57682");
        assertNotNull(cs);
        assertEquals("afii57682", cs.getName());
        String[] text =
                {
                        "-2 170 31 208 57 vstem",
                        "280 122 rmoveto",
                        "-79 -13 0 110 rlineto",
                        "0 55 -20 12 -35 23 -26 18 0 36 8 50 16 0 13 0 22 -5 4 9 5 23 0 11 0 68 -42 2 -28 2 -11 1 -35 3 -8 34 rrcurveto",
                        "0 -35 -4 -70 hvcurveto",
                        "0 -36 33 -29 39 -9 -13 -36 -8 -34 0 -20 0 -47 18 -18 35 -29 17 -15 19 -46 1 -64 rrcurveto",
                        "-117 -19 -20 -99 213 34 rlineto",
                        "90 10 46 45 0 79 0 121 84 120 0 71 0 30 -17 18 -35 5 -47 7 -12 9 -6 26 0 0 -37 -3 0 -73 0 -35 24 -23 48 -11 rrcurveto",
                        "16 -4 9 -11 0 -19 0 -10 -9 -28 -18 -38 -73 -156 42 -19 -71 -9 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57683
     */
    public void testafii57683() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57683");
        assertNotNull(cs);
        assertEquals("afii57683", cs.getName());
        String[] text =
                {
                        "-25 413 108 hstemhm",
                        "25 58 278 67 -55 40 hintmask 11010000",
                        "164 193 rmoveto",
                        "18 5 21 26 hvcurveto",
                        "0 24 -16 15 -31 6 -47 8 -10 13 0 30 0 25 11 21 20 31 rrcurveto",
                        "143 hlineto",
                        "46 0 34 -12 12 -24 12 -23 13 -47 -1 -62 rrcurveto",
                        "hintmask 11100000",
                        "-12 -454 rlineto",
                        "14 5 53 -20 0 84 0 63 -2 118 -4 91 rrcurveto",
                        "hintmask 11010000",
                        "-9 225 rlineto",
                        "-7 134 -25 30 -156 0 rrcurveto",
                        "-87 hlineto",
                        "-26 0 -17 23 -5 23 0 0 -59 -16 0 -56 0 -35 31 -41 29 -6 -39 -53 -27 -57 0 -65 0 -47 13 -12 16 0 20 0 13 14 21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57684
     */
    public void testafii57684() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57684");
        assertNotNull(cs);
        assertEquals("afii57684", cs.getName());
        String[] text =
                {
                        "-27 0 100 313 108 hstem",
                        "25 58 307 38 vstem",
                        "390 248 rmoveto",
                        "-97 -29 -51 -78 vhcurveto",
                        "-210 0 -26 -100 189 0 rlineto",
                        "166 26 84 181 169 -43 87 -103 hvcurveto",
                        "-132 hlineto",
                        "-27 0 -16 11 -5 23 0 0 -43 -9 0 -71 0 -28 11 -19 21 -9 -39 -53 -27 -63 0 -65 0 -47 13 -12 16 0 20 0 13 14 21 0 rrcurveto",
                        "56 hlineto",
                        "18 5 21 26 hvcurveto",
                        "0 24 -16 15 -31 6 -47 8 -10 13 0 30 0 24 10 25 18 29 5 0 6 -1 6 0 rrcurveto",
                        "166 hlineto", "87 9 -71 -94 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : afii57685
     */
    public void testafii57685() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57685");
        assertNotNull(cs);
        assertEquals("afii57685", cs.getName());
        String[] text =
                {
                        "-19 120 38 -28 60 -40 8 121 35 hintmask 10010000",
                        "176 81 rmoveto",
                        "0 65 41 84 74 80 18 19 37 38 41 32 18 0 14 -4 18 -9 9 11 4 43 0 10 0 56 -37 10 -42 3 -25 1 -28 10 -4 32 rrcurveto",
                        "0 -35 -6 -80 hvcurveto",
                        "0 -39 26 -24 51 -8 -69 -56 -73 -78 -46 -92 rrcurveto",
                        "-8 0 -2 88 rlineto",
                        "-1 57 51 84 0 40 0 54 -45 11 -40 6 -19 2 -30 14 -6 27 0 0 -35 -15 0 -71 rrcurveto",
                        "hintmask 01010000", "0 -45 26 -14 71 -14 rrcurveto",
                        "hintmask 00110000", "15 -2 5 -12 0 -14 rrcurveto", "",
                        "hintmask 10010000", "0 -40 -31 -60 1 -42 rrcurveto",
                        "hintmask 01010000", "10 -435 rlineto",
                        "1 59 -11 102 hvcurveto", "0 58 -14 80 0 54 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57686
     */
    public void testafii57686() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57686");
        assertNotNull(cs);
        assertEquals("afii57686", cs.getName());
        String[] text =
                {
                        "-21 0 100 hstem",
                        "145 28 105 42 vstem",
                        "200 289 rmoveto",
                        "60 -42 rlineto",
                        "23 62 35 64 30 40 -41 9 -29 29 0 34 0 75 42 -1 0 0 4 -33 37 -4 16 -1 35 -4 32 -4 0 -51 0 -11 -3 -39 -9 -13 rrcurveto",
                        "-15 7 -10 6 -26 -3 -33 -32 -32 -73 0 -43 0 -27 6 -25 23 -21 rrcurveto",
                        "70 -48 rlineto",
                        "54 -38 -62 -94 -29 -8 rrcurveto",
                        "-342 0 31 100 266 0 rlineto",
                        "0 8 -8 8 -7 6 rrcurveto",
                        "-146 102 rlineto",
                        "-21 16 -9 24 0 21 rrcurveto",
                        "3 72 rlineto",
                        "1 34 -10 25 -31 0 rrcurveto",
                        "-50 -33 27 42 70 42 4 0 hvcurveto",
                        "6 -34 30 -3 13 -1 48 -3 20 -6 0 -58 0 -23 -8 -50 0 -23 0 -26 9 -28 18 -15 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57687
     */
    public void testafii57687() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57687");
        assertNotNull(cs);
        assertEquals("afii57687", cs.getName());
        String[] text =
                {
                        "-4 413 108 hstem",
                        "56 47 76 62 166 44 vstem",
                        "241 38 rmoveto",
                        "0 51 39 23 58 36 70 43 43 26 0 127 rrcurveto",
                        "70 -2 107 -120 vhcurveto",
                        "-186 hlineto",
                        "-28 0 -16 11 -5 23 rrcurveto",
                        "0 -51 -1 -66 -41 32 -34 47 hvcurveto",
                        "203 hlineto",
                        "79 3 -59 -44 hvcurveto",
                        "0 -70 -74 -52 -13 -8 -35 -24 -106 -71 0 -77 rrcurveto",
                        "-26 9 -12 20 23 11 11 22 vhcurveto",
                        "0 14 -1 14 0 7 rrcurveto", "-175 -258 rmoveto",
                        "22 13 15 12 0 11 rrcurveto", "508 -9 vlineto",
                        "-23 -20 -15 -25 0 -28 rrcurveto", "-467 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57688
     */
    public void testafii57688() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57688");
        assertNotNull(cs);
        assertEquals("afii57688", cs.getName());
        String[] text =
                {"-12 413 108 hstemhm", "381 54 -45 45 hintmask 11000000",
                        "381 -12 rmoveto", "0 54 3 42 hvcurveto",
                        "hintmask 10100000", "311 vlineto",
                        "143 -39 34 -146 vhcurveto", "-126 hlineto",
                        "-27 0 -16 13 -6 23 rrcurveto",
                        "0 -49 -7 -63 -41 30 -33 47 hvcurveto", "175 hlineto",
                        "88 0 29 -44 -5 -135 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57689
     */
    public void testafii57689() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57689");
        assertNotNull(cs);
        assertEquals("afii57689", cs.getName());
        String[] text =
                {
                        "111 0 100 hstem",
                        "69 32 421 58 vstem",
                        "580 452 rmoveto",
                        "0 57 -44 9 -15 5 -16 6 -20 2 -4 28 0 0 -41 -3 0 -80 0 -28 17 -18 32 -12 9 -3 24 -4 0 -29 0 -17 -9 -22 -17 -24 rrcurveto",
                        "-68 -95 -33 -75 -16 -49 rrcurveto",
                        "-160 hlineto",
                        "46 92 35 107 25 112 22 0 11 -3 14 -9 5 11 7 29 0 13 0 60 -39 5 -25 6 -16 4 -21 -1 -7 33 0 0 -38 -5 0 -71 rrcurveto",
                        "0 -32 20 -24 41 -15 -34 -123 -39 -107 -44 -82 rrcurveto",
                        "-20 hlineto",
                        "-37 73 -24 66 0 53 0 42 7 39 9 34 17 0 11 2 27 0 2 6 3 18 0 11 0 43 -16 26 -33 7 -42 8 -9 7 -7 24 rrcurveto",
                        "0 -37 8 -90 hvcurveto",
                        "0 -33 20 -22 41 -12 -13 -39 -12 -46 0 -49 0 -60 19 -48 21 -82 6 -25 -4 -28 7 -33 rrcurveto",
                        "293 hlineto", "19 221 150 120 0 111 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57690
     */
    public void testafii57690() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57690");
        assertNotNull(cs);
        assertEquals("afii57690", cs.getName());
        String[] text =
                {"14 0 100 313 108 hstemhm",
                        "90 43 282 54 -45 45 hintmask 11110000",
                        "415 -12 rmoveto", "0 54 3 42 hvcurveto",
                        "hintmask 11101000", "311 vlineto",
                        "143 -39 34 -146 vhcurveto", "-126 hlineto",
                        "-27 0 -16 13 -6 23 rrcurveto",
                        "0 -48 -7 -63 -41 29 -33 47 hvcurveto", "21 hlineto",
                        "-34 -54 -34 -59 0 -88 0 -10 6 -67 2 -35 rrcurveto",
                        "-61 0 -17 -100 135 0 6 58 rlineto",
                        "5 40 -33 75 0 83 0 50 33 69 22 38 rrcurveto",
                        "124 hlineto", "88 0 29 -44 -5 -135 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57716
     */
    public void testafii57716() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57716");
        assertNotNull(cs);
        assertEquals("afii57716", cs.getName());
        String[] text =
                {
                        "56 175 54 -44 37 72 51 101 53 -43 36 hintmask 10100000",
                        "175 -6 rmoveto",
                        "1 1 53 -7 0 63 rrcurveto",
                        "hintmask 01100000",
                        "-7 355 rlineto",
                        "0 98 -31 6 -55 9 -21 4 -36 6 -5 30 0 0 -51 -9 0 -56 0 -41 35 -32 49 -8 53 -9 27 -9 -2 -59 rrcurveto",
                        "hintmask 00110000", "", "261 -342 rmoveto",
                        "0 1 54 -7 -1 63 rrcurveto", "hintmask 00101000",
                        "335 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57717
     */
    public void testafii57717() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57717");
        assertNotNull(cs);
        assertEquals("afii57717", cs.getName());
        String[] text =
                {"44 415 106 hstemhm",
                        "27 42 122 37 66 51 101 53 -43 36 hintmask 11111000",
                        "446 -6 rmoveto", "0 1 54 -7 -1 63 rrcurveto",
                        "hintmask 11110100", "335 callsubr",
                        "-304 -93 rmoveto", "334 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57718
     */
    public void testafii57718() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57718");
        assertNotNull(cs);
        assertEquals("afii57718", cs.getName());
        String[] text =
                {
                        "32 415 106 hstem",
                        "27 42 122 37 229 37 vstem",
                        "152 243 rmoveto",
                        "334 callsubr",
                        "271 -7 rmoveto",
                        "67 35 10 91 0 42 0 91 -18 19 -71 0 -30 0 -35 0 -6 38 0 0 -41 -5 0 -67 0 -44 31 -26 54 -2 48 -2 31 -19 0 -33 rrcurveto",
                        "0 -46 -11 -39 -34 -26 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57793
     */
    public void testafii57793() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57793");
        assertNotNull(cs);
        assertEquals("afii57793", cs.getName());
        String[] text =
                {
                        "-501 -147 69 hstem",
                        "131 70 vstem",
                        "131 -112 rmoveto",
                        "-19 16 -16 19 19 16 16 19 19 -16 15 -19 -19 -16 -15 -19 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57794
     */
    public void testafii57794() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57794");
        assertNotNull(cs);
        assertEquals("afii57794", cs.getName());
        String[] text =
                {"-501 -147 69 hstem", "76 69 43 69 vstem", "76 -112 rmoveto",
                        "321 callsubr", "112 hmoveto", "324 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57795
     */
    public void testafii57795() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57795");
        assertNotNull(cs);
        assertEquals("afii57795", cs.getName());
        String[] text =
                {"-501 -216 69 37 69 hstemhm",
                        "77 69 -14 69 -13 69 hintmask 11100000",
                        "77 -75 rmoveto", "323 callsubr", "hintmask 11001000",
                        "111 hmoveto", "326 callsubr", "hintmask 11010000",
                        "-56 -107 rmoveto",
                        "-19 15 -15 20 19 15 15 19 19 -15 16 -19 vhcurveto",
                        "-20 -15 -16 -19 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57796
     */
    public void testafii57796() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57796");
        assertNotNull(cs);
        assertEquals("afii57796", cs.getName());
        String[] text =
                {
                        "-501 -217 70 -17 69 -15 69 hstemhm",
                        "36 69 42 69 44 69 hintmask 00111100",
                        "36 -75 rmoveto",
                        "323 callsubr",
                        "111 -54 rmoveto",
                        "hintmask 01011100",
                        "324 callsubr",
                        "113 -54 rmoveto",
                        "",
                        "hintmask 10011100",
                        "-18 15 -16 19 19 16 16 18 20 -16 16 -19 -19 -15 -16 -20 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57797
     */
    public void testafii57797() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57797");
        assertNotNull(cs);
        assertEquals("afii57797", cs.getName());
        String[] text =
                {"-501 -196 -21 112 42 hstemhm",
                        "133 69 -52 35 hintmask 11010000", "85 -105 rmoveto",
                        "65 -47 hlineto", "hintmask 11100000",
                        "-10 -6 -7 -11 0 -13 rrcurveto",
                        "-19 15 -16 19 20 15 16 19 vhcurveto",
                        "hintmask 11010000", "0 13 -7 11 -10 6 rrcurveto",
                        "47 64 42 -164 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57798
     */
    public void testafii57798() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57798");
        assertNotNull(cs);
        assertEquals("afii57798", cs.getName());
        String[] text =
                {"-501 -129 42 hstem", "85 -129 rmoveto",
                        "164 42 -164 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57799
     */
    public void testafii57799() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57799");
        assertNotNull(cs);
        assertEquals("afii57799", cs.getName());
        String[] text =
                {"-501 -217 70 37 69 hstem", "115 69 vstem", "115 -75 rmoveto",
                        "321 callsubr", "-107 vmoveto", "322 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57800
     */
    public void testafii57800() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57800");
        assertNotNull(cs);
        assertEquals("afii57800", cs.getName());
        String[] text =
                {"-501 -217 70 37 69 -55 41 hstemhm",
                        "272 69 hintmask 11010000", "272 -75 rmoveto",
                        "326 callsubr", "-107 vmoveto", "325 callsubr",
                        "hintmask 10110000", "-235 86 rmoveto",
                        "137 41 -137 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57801
     */
    public void testafii57801() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57801");
        assertNotNull(cs);
        assertEquals("afii57801", cs.getName());
        String[] text =
                {"-501 -216 69 37 69 hstemhm",
                        "46 70 -14 69 -13 69 85 69 hintmask 11100100",
                        "46 -75 rmoveto",
                        "-19 16 -16 19 19 16 16 19 19 -16 15 -19 vhcurveto",
                        "-19 -16 -15 -19 hvcurveto", "hintmask 11001100",
                        "112 hmoveto", "323 callsubr", "hintmask 11010100",
                        "-56 -107 rmoveto",
                        "-19 15 -15 19 19 16 15 19 19 -16 16 -19 vhcurveto",
                        "-19 -15 -16 -19 hvcurveto", "210 107 rmoveto",
                        "324 callsubr", "-107 vmoveto", "325 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57802
     */
    public void testafii57802() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57802");
        assertNotNull(cs);
        assertEquals("afii57802", cs.getName());
        String[] text =
                {"-501 -217 70 37 69 -56 42 hstemhm",
                        "72 69 -52 35 151 69 hintmask 10101100",
                        "24 -97 rmoveto", "65 -46 hlineto",
                        "hintmask 10110100", "-10 -6 -7 -11 0 -13 rrcurveto",
                        "-19 15 -16 19 19 16 16 19 vhcurveto",
                        "hintmask 10101100", "0 13 -7 11 -10 6 rrcurveto",
                        "46 64 42 -164 vlineto", "251 -20 rmoveto",
                        "hintmask 11000100", "324 callsubr", "-107 vmoveto",
                        "325 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57803
     */
    public void testafii57803() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57803");
        assertNotNull(cs);
        assertEquals("afii57803", cs.getName());
        String[] text =
                {"-501 593 70 hstem", "-49 69 vstem", "-49 628 rmoveto",
                        "322 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57804
     */
    public void testafii57804() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57804");
        assertNotNull(cs);
        assertEquals("afii57804", cs.getName());
        String[] text =
                {
                        "-501 593 69 hstem",
                        "317 70 vstem",
                        "317 627 rmoveto",
                        "-19 16 -15 19 19 16 15 19 19 -16 16 -19 -19 -16 -16 -19 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57806
     */
    public void testafii57806() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57806");
        assertNotNull(cs);
        assertEquals("afii57806", cs.getName());
        String[] text =
                {"-501 595 70 hstem", "41 69 vstem", "41 630 rmoveto",
                        "322 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57807
     */
    public void testafii57807() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57807");
        assertNotNull(cs);
        assertEquals("afii57807", cs.getName());
        String[] text =
                {
                        "-501 218 69 hstem",
                        "131 70 vstem",
                        "131 253 rmoveto",
                        "-20 16 -15 19 19 16 15 20 18 -16 16 -19 -19 -16 -16 -18 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57839
     */
    public void testafii57839() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57839");
        assertNotNull(cs);
        assertEquals("afii57839", cs.getName());
        String[] text =
                {"-501 145 37 vstem", "145 -65 rmoveto", "-138 37 138 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57841
     */
    public void testafii57841() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57841");
        assertNotNull(cs);
        assertEquals("afii57841", cs.getName());
        String[] text =
                {"-501 601 42 hstem", "84 601 rmoveto", "164 42 -164 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57842
     */
    public void testafii57842() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57842");
        assertNotNull(cs);
        assertEquals("afii57842", cs.getName());
        String[] text =
                {"-210 14 -21 hstem", "114 57 vstem", "114 -7 rmoveto",
                        "57 579 -57 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii57929
     */
    public void testafii57929() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii57929");
        assertNotNull(cs);
        assertEquals("afii57929", cs.getName());
        String[] text =
                {"-326 577 75 hstem", "89 50 vstem", "79 652 rmoveto",
                        "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii61248
     */
    public void testafii61248() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii61248");
        assertNotNull(cs);
        assertEquals("afii61248", cs.getName());
        String[] text =
                {
                        "254 -13 28 242 27 123 33 239 25 hstem",
                        "55 80 112 75 96 82 134 80 vstem",
                        "418 102 rmoveto",
                        "-35 20 -80 93 90 93 86 103 47 -24 61 -89 -118 -65 -104 -78 vhcurveto",
                        "82 5 rmoveto",
                        "57 24 93 64 38 8 -46 -40 -41 -19 -115 -67 -16 -32 12 80 vhcurveto",
                        "-337 300 rmoveto", "499 callsubr", "504 319 rmoveto",
                        "497 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii61289
     */
    public void testafii61289() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii61289");
        assertNotNull(cs);
        assertEquals("afii61289", cs.getName());
        String[] text =
                {"-180 -14 39 537 24 hstem", "84 70 90 41 vstem",
                        "197 25 rmoveto", "-39 -4 43 72 hvcurveto",
                        "148 vlineto", "79 71 52 65 0 84 rrcurveto",
                        "36 -26 42 -59 -58 -58 -41 -190 vhcurveto",
                        "-97 vlineto", "-24 -21 -26 -20 -24 -19 rrcurveto",
                        "13 -21 61 51 0 -61 rlineto",
                        "-144 20 -37 63 vhcurveto",
                        "39 0 44 26 37 54 rrcurveto", "-17 16 rlineto",
                        "-31 -40 -28 -17 -14 0 rrcurveto", "-43 300 rmoveto",
                        "124 vlineto", "46 9 67 39 21 21 -21 -43 vhcurveto",
                        "0 -58 -38 -59 -52 -56 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii61352
     */
    public void testafii61352() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii61352");
        assertNotNull(cs);
        assertEquals("afii61352", cs.getName());
        String[] text =
                {
                        "424 -12 29 62 44 75 25 229 25 141 28 -18 30 hstemhm",
                        "153 45 323 44 69 59 134 59 hintmask 1111001111000000",
                        "827 314 rmoveto",
                        "-63 -31 -28 -26 -41 -36 42 77 85 31 25 29 vhcurveto",
                        "43 31 -58 -80 hvcurveto",
                        "-67 163 rmoveto",
                        "-101 -25 -90 -56 -64 44 -69 81 85 42 71 64 54 -21 90 -105 hvcurveto",
                        "-607 -330 rmoveto", "-81 -14 -49 -40 vhcurveto",
                        "-7 0 -6 6 -3 10 -5 21 -13 23 -23 0 rrcurveto",
                        "-18 -15 -10 -25 -30 46 -24 48 69 26 54 135 hvcurveto",
                        "262 vlineto", "25 1 12 4 vhcurveto",
                        "3 0 5 -8 8 -13 rrcurveto", "262 -441 rlineto",
                        "13 -20 23 -6 16 0 rrcurveto", "14 18 14 19 hvcurveto",
                        "469 vlineto", "hintmask 1111011111000000",
                        "88 18 50 31 vhcurveto",
                        "8 0 5 -9 6 -12 9 -17 12 -22 26 0 rrcurveto",
                        "17 14 14 25 30 -41 21 -48 -75 -26 -56 -142 hvcurveto",
                        "-282 vlineto", "-29 -3 -12 -6 vhcurveto",
                        "-7 0 -12 19 -29 49 rrcurveto",
                        "hintmask 1111101111000000",
                        "-263 441 -132 0 -2 -1 0 -19 rlineto",
                        "-5 8 -3 5 vhcurveto", "5 hlineto",
                        "33 0 29 -42 6 -26 rrcurveto", "491 -427 rmoveto",
                        "-44 232 44 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : afii64937
     */
    public void testafii64937() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("afii64937");
        assertNotNull(cs);
        assertEquals("afii64937", cs.getName());
        String[] text =
                {"-333 479 18 86 75 hstem", "27 50 vstem", "87 658 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -25 15 -76 91 -5 rrcurveto", "4 18 rlineto",
                        "-42 8 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 17 16 -11 17 -36 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : agrave
     */
    public void testagrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("agrave");
        assertNotNull(cs);
        assertEquals("agrave", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10101110",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01110110",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "-95 425 rmoveto", "52 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : agrave_sc
     */
    public void testagrave_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("agrave.sc");
        assertNotNull(cs);
        assertEquals("agrave.sc", cs.getName());
        String[] text =
                {"15 1 27 170 32 199 29 -24 28 hstemhm", "hintmask 11010000",
                        "163 189 rmoveto", "570 callsubr", "hintmask 11100000",
                        "571 callsubr", "hintmask 11010000", "594 callsubr",
                        "129 483 rmoveto",
                        "-4 1 -6 1 -5 0 -34 0 -23 -17 -8 -6 rrcurveto",
                        "-3 -11 115 -109 rlineto",
                        "16 -14 7 -5 6 0 8 0 7 6 0 4 0 8 -1 7 -6 9 rrcurveto",
                        "hintmask 11100000", "-107 -117 rmoveto",
                        "572 callsubr", "96 -248 rmoveto", "573 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aleph
     */
    public void testaleph() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aleph");
        assertNotNull(cs);
        assertEquals("aleph", cs.getName());
        String[] text =
                {"-20 21 -21 hstemhm", "33 50 -13 112 hintmask 11000000",
                        "453 442 rmoveto", "327 callsubr", "hintmask 10100000",
                        "328 callsubr", "hintmask 11000000", "329 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : alpha
     */
    public void testalpha() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("alpha");
        assertNotNull(cs);
        assertEquals("alpha", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 hstemhm", "34 80 hintmask 01110000",
                        "386 206 rmoveto", "", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 10110000", "239 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : alphatonos
     */
    public void testalphatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("alphatonos");
        assertNotNull(cs);
        assertEquals("alphatonos", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 240 -20 hstemhm",
                        "34 80 hintmask 01111000", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111000", "239 callsubr",
                        "-205 240 rmoveto", "240 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : amacron
     */
    public void testamacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("amacron");
        assertNotNull(cs);
        assertEquals("amacron", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 97 44 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10110111",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01111011",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "42 294 rmoveto", "82 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ampersand
     */
    public void testampersand() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ampersand");
        assertNotNull(cs);
        assertEquals("ampersand", cs.getName());
        String[] text =
                {
                        "204 -12 54 -54 33 375 24 190 34 hstemhm",
                        "44 79 55 72 141 67 hintmask 00111110",
                        "288 411 rmoveto",
                        "-26 49 -12 36 0 23 rrcurveto",
                        "66 50 25 26 41 24 -26 -45 vhcurveto",
                        "0 -36 -39 -50 -64 -42 rrcurveto",
                        "133 -317 rmoveto",
                        "29 -37 rlineto",
                        "hintmask 10111110",
                        "47 -65 37 -4 31 0 35 0 40 32 23 70 rrcurveto",
                        "-16 8 rlineto",
                        "-20 -39 -23 -17 -33 0 -16 0 -30 21 -31 44 rrcurveto",
                        "-34 46 rlineto",
                        "40 61 45 88 0 0 36 66 16 28 32 0 rrcurveto",
                        "28 hlineto",
                        "4 5 2 6 hvcurveto",
                        "0 16 -2 2 rlineto",
                        "0 -53 -2 -34 -34 -53 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto",
                        "-3 0 -4 5 vhcurveto",
                        "28 hlineto",
                        "10 6 -5 -11 hvcurveto",
                        "0 -25 -31 -63 -71 -105 -46 62 -58 83 -18 31 rrcurveto",
                        "-4 8 rlineto",
                        "83 48 65 65 0 55 rrcurveto",
                        "63 -57 42 -70 -100 -53 -68 -59 vhcurveto",
                        "0 -38 13 -40 37 -64 -132 -74 -52 -66 0 -79 rrcurveto",
                        "hintmask 01111110",
                        "-122 84 -46 107 vhcurveto",
                        "85 0 55 43 46 63 rrcurveto",
                        "-171 244 rmoveto",
                        "11 -21 78 -114 57 -75 -49 -67 -34 -40 -71 0 -63 0 -56 37 0 98 0 71 24 54 103 57 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ampersand_alt
     */
    public void testampersand_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ampersand.alt");
        assertNotNull(cs);
        assertEquals("ampersand.alt", cs.getName());
        String[] text =
                {
                        "221 -14 71 290 47 -8 51 -25 39 182 36 hstemhm",
                        "39 53 188 23 -21 22 50 43 -13 40 212 51 hintmask 1101110010100000",
                        "39 177 rmoveto",
                        "-105 85 -86 103 vhcurveto",
                        "158 0 155 143 14 228 15 -8 19 -2 18 0 rrcurveto",
                        "24 57 29 75 27 -18 11 -18 -17 -14 -12 -25 hvcurveto",
                        "0 -10 4 -11 5 -10 4 -7 3 -8 0 -5 0 -5 -3 -2 -8 0 -11 0 -14 7 -18 11 -30 17 -39 22 -47 0 rrcurveto",
                        "-79 -33 -49 -56 -40 22 -11 19 18 18 20 20 hvcurveto",
                        "0 19 -9 7 -8 6 -9 7 -8 6 0 15 0 12 13 5 17 0 43 0 30 -20 24 -20 -6 -132 -68 -183 -193 0 -53 0 -37 22 -26 29 rrcurveto",
                        "258 453 rlineto",
                        "hintmask 1010111001100000",
                        "11 20 14 31 0 11 rrcurveto",
                        "24 -20 22 -35 -54 -35 -31 -51 vhcurveto",
                        "hintmask 1010110100100000",
                        "0 -7 1 -7 1 -8 rrcurveto",
                        "22 2 rlineto",
                        "hintmask 1010111001100000",
                        "0 5 -1 4 0 4 rrcurveto",
                        "30 16 23 28 20 17 -15 -17 vhcurveto",
                        "0 -16 -9 -16 -10 -20 rrcurveto",
                        "-68 -117 rlineto",
                        "-7 3 -8 2 -8 0 rrcurveto",
                        "-94 -141 -68 -192 hvcurveto",
                        "86 -48 rmoveto",
                        "-25 40 -8 45 0 20 0 69 50 83 67 0 22 0 16 -13 9 -14 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : anoteleia
     */
    public void testanoteleia() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("anoteleia");
        assertNotNull(cs);
        assertEquals("anoteleia", cs.getName());
        String[] text =
                {
                        "-248 238 116 hstem",
                        "69 116 vstem",
                        "127 238 rmoveto",
                        "33 25 27 30 33 -29 26 -29 -32 -26 -28 -31 -29 23 -28 35 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aogonek
     */
    public void testaogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aogonek");
        assertNotNull(cs);
        assertEquals("aogonek", cs.getName());
        String[] text =
                {
                        "-49 -213 34 167 41 383 30 hstemhm",
                        "39 72 -61 73 148 59 -34 72 hintmask 11100100",
                        "456 -172 rmoveto",
                        "-17 15 rlineto",
                        "-14 -16 -16 -6 -24 0 -36 0 -19 31 0 32 0 51 62 55 58 54 rrcurveto",
                        "-16 17 rlineto",
                        "-17 -18 -9 -5 -14 0 -8 0 -6 3 -4 4 rrcurveto",
                        "hintmask 11101010",
                        "-7 8 -1 17 0 53 rrcurveto",
                        "147 vlineto",
                        "0 39 -5 32 -12 24 -34 71 -76 6 -31 0 rrcurveto",
                        "-66 -94 -51 -58 -24 16 -16 24 29 10 20 13 hvcurveto",
                        "0 7 -1 7 -2 4 -1 3 -2 6 0 11 0 31 45 17 39 0 21 0 19 -8 16 -15 30 -30 3 -55 0 -26 rrcurveto",
                        "-94 -23 rlineto",
                        "hintmask 11110010",
                        "-104 -26 -59 -46 0 -80 0 -68 49 -47 78 0 36 0 19 8 40 27 rrcurveto",
                        "35 23 rlineto", "4 -22 14 -26 32 -5 rrcurveto",
                        "hintmask 11100100",
                        "-41 -33 -34 -40 0 -45 0 -67 47 -21 44 0 rrcurveto",
                        "34 0 36 9 24 32 rrcurveto", "hintmask 11110010",
                        "-160 420 rmoveto", "-168 vlineto",
                        "-38 -31 -33 -20 -25 0 -76 0 -13 50 0 28 rrcurveto",
                        "0 56 28 47 157 38 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aogonek_sc
     */
    public void testaogonek_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aogonek.sc");
        assertNotNull(cs);
        assertEquals("aogonek.sc", cs.getName());
        String[] text =
                {
                        "15 -224 39 184 29 170 32 199 29 -24 28 hstemhm",
                        "309 60 hintmask 11110100",
                        "254 429 rmoveto",
                        "572 callsubr",
                        "148 -653 rmoveto",
                        "36 0 50 20 24 47 rrcurveto",
                        "-16 8 rlineto",
                        "-19 -21 -20 -15 -30 0 -36 0 -22 27 0 32 0 49 49 70 74 7 rrcurveto",
                        "16 -1 1 2 0 21 rlineto",
                        "3 -3 3 -3 vhcurveto",
                        "-34 0 -18 8 -8 43 rrcurveto",
                        "-61 324 rlineto",
                        "hintmask 11101100",
                        "-4 23 11 5 42 3 rrcurveto",
                        "4 2 3 3 hvcurveto",
                        "-1 20 -1 2 rlineto",
                        "hintmask 11110100",
                        "571 callsubr",
                        "hintmask 11101100",
                        "-46 0 -59 3 -32 1 rrcurveto",
                        "-3 -2 -2 -20 rlineto",
                        "-4 3 -2 6 vhcurveto",
                        "37 -2 10 -3 -3 -28 -7 -58 -43 -179 -33 -98 -10 -28 -27 -10 -27 0 rrcurveto",
                        "-4 -5 -5 -3 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 61 2 28 31 49 -2 0 vhcurveto",
                        "2 2 0 21 rlineto",
                        "3 -3 3 -4 vhcurveto",
                        "-12 hlineto",
                        "-31 0 -9 10 6 21 9 27 13 49 14 54 5 9 15 0 27 0 rrcurveto",
                        "100 hlineto", "27 0 9 -2 3 -10 rrcurveto",
                        "22 -113 rlineto", "6 -32 -7 -13 -40 0 rrcurveto",
                        "-7 hlineto", "-4 -2 -3 -3 hvcurveto",
                        "0 -21 1 -2 rlineto", "0 64 2 28 vhcurveto",
                        "-61 -33 -40 -59 0 -48 0 -54 39 -31 54 0 rrcurveto",
                        "-52 405 rmoveto", "573 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : approxequal
     */
    public void testapproxequal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("approxequal");
        assertNotNull(cs);
        assertEquals("approxequal", cs.getName());
        String[] text =
                {
                        "26 87 59 6 59 22 59 6 59 hstem",
                        "54 396 vstem",
                        "72 226 rmoveto",
                        "23 45 51 27 35 0 25 0 24 -15 24 -17 25 -16 25 -17 26 0 24 0 65 13 31 107 rrcurveto",
                        "-17 6 rlineto",
                        "-22 -50 -49 -17 -29 0 -21 0 -26 17 -25 16 -26 16 -26 16 -22 0 -61 0 -55 -63 -12 -65 rrcurveto",
                        "-5 -146 rmoveto",
                        "13 -4 rlineto",
                        "23 45 51 28 35 0 25 0 24 -16 25 -16 24 -17 25 -16 26 0 24 0 65 13 31 106 rrcurveto",
                        "-17 7 rlineto",
                        "-22 -50 -49 -17 -28 0 -22 0 -26 16 -25 16 -26 17 -25 16 -23 0 -61 0 -55 -64 -12 -64 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aring
     */
    public void testaring() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aring");
        assertNotNull(cs);
        assertEquals("aring", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 26 113 27 hstemhm",
                        "39 72 -61 73 2 31 108 31 -4 74 53 25 hintmask 1011101101100000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111110101100000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-166 338 rmoveto",
                        "-47 39 -36 45 vhcurveto", "hintmask 0011100110100000",
                        "58 callsubr", "85 56 rmoveto", "59 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aring_sc
     */
    public void testaring_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aring.sc");
        assertNotNull(cs);
        assertEquals("aring.sc", cs.getName());
        String[] text =
                {
                        "15 1 27 170 32 199 29 -24 28 36 27 112 27 hstemhm",
                        "202 31 108 32 hintmask 11011111",
                        "163 189 rmoveto",
                        "570 callsubr",
                        "hintmask 11101111",
                        "571 callsubr",
                        "hintmask 11011111",
                        "594 callsubr",
                        "39 392 rmoveto",
                        "-46 39 -37 46 47 39 38 45 46 -40 37 -46 -47 -38 -38 -45 vhcurveto",
                        "85 56 rmoveto", "595 callsubr", "hintmask 11101111",
                        "-33 -208 rmoveto", "572 callsubr", "96 -248 rmoveto",
                        "573 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : aringacute
     */
    public void testaringacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("aringacute");
        assertNotNull(cs);
        assertEquals("aringacute", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 26 113 27 41 -21 hstemhm",
                        "39 72 -61 73 2 31 108 31 -4 74 53 25 hintmask 0011110010010000",
                        "229 830 rmoveto",
                        "-63 -113 rlineto",
                        "-5 -9 0 -6 0 -5 0 -6 6 -5 6 0 5 0 5 4 13 14 rrcurveto",
                        "92 98 -2 9 rlineto",
                        "-2 1 -2 2 -2 2 -6 7 -10 10 -23 0 rrcurveto",
                        "-4 0 -5 -1 -3 -2 rrcurveto",
                        "hintmask 1011110110110000", "126 -842 rmoveto",
                        "-33 callsubr", "hintmask 0111111010110000",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "-166 338 rmoveto", "-47 39 -36 45 vhcurveto",
                        "hintmask 0011110011010000", "58 callsubr",
                        "85 56 rmoveto", "59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowboth
     */
    public void testarrowboth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowboth");
        assertNotNull(cs);
        assertEquals("arrowboth", cs.getName());
        String[] text =
                {
                        "597 239 52 hstem",
                        "895 291 rmoveto",
                        "-691 hlineto",
                        "26 32 18 25 10 16 21 33 15 28 10 23 rrcurveto",
                        "-39 hlineto",
                        "-40 -46 -39 -37 -39 -29 -38 -28 -32 -20 -28 -10 rrcurveto",
                        "-23 vlineto",
                        "40 -16 35 -21 28 -26 63 -57 38 -37 13 -16 rrcurveto",
                        "40 hlineto", "-32 68 -33 52 -37 37 rrcurveto",
                        "691 hlineto", "-37 -36 -33 -53 -32 -67 rrcurveto",
                        "40 hlineto",
                        "13 16 38 37 63 57 29 25 34 21 40 17 rrcurveto",
                        "23 vlineto",
                        "-28 10 -32 19 -38 29 -39 29 -39 37 -40 45 rrcurveto",
                        "-39 hlineto",
                        "10 -23 15 -28 21 -32 10 -16 18 -25 26 -33 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowdblboth
     */
    public void testarrowdblboth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowdblboth");
        assertNotNull(cs);
        assertEquals("arrowdblboth", cs.getName());
        String[] text =
                {
                        "742 150 52 129 50 hstem",
                        "245 331 rmoveto",
                        "754 hlineto",
                        "14 -19 18 -21 23 -24 -22 -17 -21 -21 -19 -27 rrcurveto",
                        "-739 hlineto",
                        "-19 27 -21 22 -23 17 23 24 18 20 14 19 rrcurveto",
                        "32 50 rmoveto",
                        "24 45 12 22 0 1 rrcurveto",
                        "-38 hlineto",
                        "-40 -46 -39 -37 -39 -29 -38 -28 -33 -19 -27 -11 rrcurveto",
                        "-23 vlineto",
                        "40 -16 34 -21 29 -25 63 -58 38 -37 12 -16 rrcurveto",
                        "40 hlineto", "-9 24 -10 22 -11 21 rrcurveto",
                        "675 hlineto", "-11 -21 -11 -23 -9 -24 rrcurveto",
                        "40 hlineto",
                        "12 16 38 37 64 58 28 25 35 21 40 16 rrcurveto",
                        "23 vlineto",
                        "-28 11 -33 19 -38 28 -39 29 -39 37 -40 46 rrcurveto",
                        "-38 hlineto", "0 -1 12 -22 24 -44 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowdbldown
     */
    public void testarrowdbldown() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowdbldown");
        assertNotNull(cs);
        assertEquals("arrowdbldown", cs.getName());
        String[] text =
                {
                        "-39 -193 -21 hstem",
                        "116 53 127 53 vstem",
                        "116 4 rmoveto",
                        "-44 25 -22 12 -1 0 rrcurveto",
                        "-39 vlineto",
                        "45 -40 37 -39 29 -38 29 -38 19 -33 10 -28 rrcurveto",
                        "23 hlineto",
                        "17 41 21 34 25 28 57 64 37 38 17 12 rrcurveto",
                        "40 vlineto",
                        "-24 -9 -21 -10 -20 -10 rrcurveto",
                        "-1 730 -53 0 0 -763 rlineto",
                        "-27 -19 -22 -22 -17 -22 -23 21 -20 18 -18 14 rrcurveto",
                        "-1 773 -52 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowdblleft
     */
    public void testarrowdblleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowdblleft");
        assertNotNull(cs);
        assertEquals("arrowdblleft", cs.getName());
        String[] text =
                {
                        "573 147 53 128 52 hstem",
                        "277 380 rmoveto",
                        "24 44 12 23 0 1 rrcurveto",
                        "-38 hlineto",
                        "-40 -46 -39 -37 -39 -29 -38 -28 -33 -20 -27 -10 rrcurveto",
                        "-23 vlineto",
                        "40 -16 34 -21 29 -26 63 -57 38 -37 12 -16 rrcurveto",
                        "40 hlineto", "-9 23 -10 22 -10 20 rrcurveto",
                        "731 53 -764 hlineto",
                        "-19 28 -21 22 -23 17 22 23 17 20 14 18 rrcurveto",
                        "774 1 0 51 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowdblright
     */
    public void testarrowdblright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowdblright");
        assertNotNull(cs);
        assertEquals("arrowdblright", cs.getName());
        String[] text =
                {
                        "573 149 53 128 52 hstem",
                        "776 149 rmoveto",
                        "-25 -44 -12 -22 0 -1 rrcurveto",
                        "39 hlineto",
                        "40 45 39 37 39 29 38 29 32 20 28 9 rrcurveto",
                        "23 vlineto",
                        "-40 17 -35 21 -28 25 -63 58 -38 37 -13 16 rrcurveto",
                        "-40 hlineto",
                        "10 -24 9 -21 11 -20 rrcurveto",
                        "-731 -1 0 -52 763 0 rlineto",
                        "19 -28 22 -22 22 -17 -21 -23 -18 -20 -13 -18 rrcurveto",
                        "-774 -1 0 -52 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowdblup
     */
    public void testarrowdblup() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowdblup");
        assertNotNull(cs);
        assertEquals("arrowdblup", cs.getName());
        String[] text =
                {
                        "-39 -193 -21 hstem",
                        "114 53 127 53 vstem",
                        "347 526 rmoveto",
                        "44 -25 23 -12 1 0 rrcurveto",
                        "39 vlineto",
                        "-46 40 -37 39 -29 39 -28 38 -20 32 -10 28 rrcurveto",
                        "-23 hlineto",
                        "-16 -40 -21 -35 -26 -28 -57 -63 -37 -38 -16 -13 rrcurveto",
                        "-40 vlineto", "23 10 22 9 20 11 rrcurveto",
                        "-731 53 763 vlineto",
                        "27 19 22 22 17 22 24 -21 20 -18 17 -13 rrcurveto",
                        "1 -774 52 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowdown
     */
    public void testarrowdown() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowdown");
        assertNotNull(cs);
        assertEquals("arrowdown", cs.getName());
        String[] text =
                {"-39 -199 -21 hstem", "206 52 vstem", "49 -3 rmoveto",
                        "97 -86 55 -81 17 -50 rrcurveto", "23 hlineto",
                        "44 108 129 109 1 0 rrcurveto", "40 vlineto",
                        "-84 -39 -46 -41 -27 -33 rrcurveto",
                        "870 -52 -870 vlineto",
                        "-32 32 -53 48 -72 31 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowleft
     */
    public void testarrowleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowleft");
        assertNotNull(cs);
        assertEquals("arrowleft", cs.getName());
        String[] text =
                {"629 239 52 hstem", "275 448 rmoveto",
                        "-86 -97 -81 -56 -49 -17 rrcurveto", "-23 vlineto",
                        "108 -44 108 -128 0 -1 rrcurveto", "40 hlineto",
                        "-39 84 -41 46 -33 27 rrcurveto",
                        "870 52 -870 hlineto", "32 31 49 54 30 72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowright
     */
    public void testarrowright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowright");
        assertNotNull(cs);
        assertEquals("arrowright", cs.getName());
        String[] text =
                {"629 239 52 hstem", "856 82 rmoveto",
                        "85 97 82 55 49 17 rrcurveto", "23 vlineto",
                        "-108 44 -108 129 -1 1 rrcurveto", "-40 hlineto",
                        "39 -84 42 -46 33 -27 rrcurveto",
                        "-870 -52 870 hlineto",
                        "-33 -31 -48 -54 -31 -72 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : arrowup
     */
    public void testarrowup() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowup");
        assertNotNull(cs);
        assertEquals("arrowup", cs.getName());
        String[] text =
                {"-60 195 52 vstem", "404 533 rmoveto",
                        "-97 85 -55 82 -17 49 rrcurveto", "-23 hlineto",
                        "-44 -108 -129 -108 0 -1 rrcurveto", "-40 vlineto",
                        "84 39 45 41 27 33 rrcurveto", "-870 52 870 vlineto",
                        "32 -32 54 -48 71 -31 rrcurveto", "endchar", "", "",
                        null};
        check(cs, text);
    }

    /**
     * test : arrowupdn
     */
    public void testarrowupdn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowupdn");
        assertNotNull(cs);
        assertEquals("arrowupdn", cs.getName());
        String[] text =
                {
                        "-38 -214 -21 hstem",
                        "206 52 vstem",
                        "206 611 rmoveto",
                        "1 -691 rlineto",
                        "-33 26 -25 18 -16 10 -33 21 -28 15 -23 10 rrcurveto",
                        "-39 vlineto",
                        "46 -40 37 -39 29 -39 28 -38 20 -33 10 -27 rrcurveto",
                        "23 hlineto",
                        "16 40 21 34 26 29 57 63 37 38 16 12 rrcurveto",
                        "40 vlineto",
                        "-68 -31 -52 -33 -37 -37 rrcurveto",
                        "691 vlineto",
                        "36 -37 53 -33 68 -32 rrcurveto",
                        "40 vlineto",
                        "-17 13 -37 38 -57 63 -25 28 -21 35 -17 40 rrcurveto",
                        "-23 hlineto",
                        "-10 -28 -19 -32 -29 -39 -29 -38 -37 -39 -45 -40 rrcurveto",
                        "-39 vlineto",
                        "23 10 28 15 32 21 16 10 25 18 33 26 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : arrowupdnbse
     */
    public void testarrowupdnbse() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("arrowupdnbse");
        assertNotNull(cs);
        assertEquals("arrowupdnbse", cs.getName());
        String[] text =
                {"-38 -230 49 hstem", "206 52 vstem", "432 -181 rmoveto",
                        "-396 -49 396 hlineto", "-226 841 rmoveto",
                        "-632 vlineto", "-38 34 -45 34 -74 32 rrcurveto",
                        "-39 vlineto", "97 -85 56 -82 17 -49 rrcurveto",
                        "23 hlineto", "44 108 129 108 0 1 rrcurveto",
                        "40 vlineto", "-68 -32 -52 -33 -37 -37 rrcurveto",
                        "632 vlineto", "36 -37 53 -33 68 -32 rrcurveto",
                        "40 vlineto", "0 0 -129 108 -45 109 rrcurveto",
                        "-23 hlineto", "-17 -49 -55 -82 -97 -85 rrcurveto",
                        "-39 vlineto", "68 30 59 45 30 25 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : asciicircum
     */
    public void testasciicircum() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("asciicircum");
        assertNotNull(cs);
        assertEquals("asciicircum", cs.getName());
        String[] text =
                {"17 347 303 hstem", "112 294 vstem", "259 593 rmoveto",
                        "-34 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : asciitilde
     */
    public void testasciitilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("asciitilde");
        assertNotNull(cs);
        assertEquals("asciitilde", cs.getName());
        String[] text =
                {
                        "-52 213 59 6 59 hstem",
                        "26 391 vstem",
                        "26 209 rmoveto",
                        "13 -3 rlineto",
                        "23 44 51 28 35 0 25 0 24 -15 25 -17 24 -17 25 -16 26 0 24 0 65 13 31 107 rrcurveto",
                        "-17 6 rlineto",
                        "-22 -50 -49 -17 -28 0 -22 0 -26 17 -25 16 -26 16 -25 16 -23 0 -61 0 -54 -63 -13 -65 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : asterisk
     */
    public void testasterisk() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("asterisk");
        assertNotNull(cs);
        assertEquals("asterisk", cs.getName());
        String[] text =
                {
                        "-68 571 67 hstem",
                        "181 63 vstem",
                        "198 567 rmoveto",
                        "-33 -37 -51 -8 0 -43 0 -15 12 -13 17 0 38 0 7 59 25 45 25 -39 7 -65 39 0 14 0 15 11 0 18 0 40 -49 10 -34 37 rrcurveto",
                        "18 3 18 1 19 0 rrcurveto",
                        "34 35 7 30 10 -7 20 -27 hvcurveto",
                        "-33 0 -16 -32 -46 -20 2 30 17 40 0 27 rrcurveto",
                        "24 -15 11 -18 -18 -12 -18 -21 vhcurveto",
                        "0 -26 19 -27 4 -39 -44 18 -18 33 -34 0 rrcurveto",
                        "-24 -9 -16 -14 -30 32 -7 49 hvcurveto",
                        "15 0 14 -1 13 -3 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : asteriskmath
     */
    public void testasteriskmath() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("asteriskmath");
        assertNotNull(cs);
        assertEquals("asteriskmath", cs.getName());
        String[] text =
                {
                        "-160 237 68 hstem",
                        "138 63 vstem",
                        "155 234 rmoveto",
                        "-34 -38 -51 -7 0 -43 0 -15 13 -14 17 0 38 0 7 60 25 45 24 -40 8 -65 39 0 14 0 16 12 0 18 0 40 -50 10 -33 36 rrcurveto",
                        "17 3 18 2 19 0 rrcurveto",
                        "34 35 6 30 11 -7 19 -27 hvcurveto",
                        "-34 0 -15 -32 -46 -19 2 30 17 40 0 27 rrcurveto",
                        "24 -15 10 -18 -18 -12 -17 -22 vhcurveto",
                        "0 -26 19 -26 4 -40 -45 19 -17 33 -35 0 rrcurveto",
                        "-23 -10 -16 -14 -31 33 -7 48 hvcurveto",
                        "16 0 14 -1 13 -2 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : at
     */
    public void testat() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("at");
        assertNotNull(cs);
        assertEquals("at", cs.getName());
        String[] text =
                {
                        "503 -227 39 183 38 -36 42 372 31 207 36 hstemhm",
                        "59 83 163 81 486 76 hintmask 10111111",
                        "659 47 rmoveto",
                        "0 10 8 36 7 32 rrcurveto",
                        "70 304 -18 6 -56 -15 -6 -28 rlineto",
                        "-12 30 -39 20 -40 0 rrcurveto",
                        "-124 -144 -134 -169 -46 21 -96 117 hvcurveto",
                        "31 0 56 18 69 100 -10 -32 -5 -24 0 -19 rrcurveto",
                        "hintmask 11011111",
                        "-19 9 -26 34 255 66 156 134 221 -171 179 -253 -273 -192 -204 -253 -251 187 -204 266 vhcurveto",
                        "133 0 71 42 71 54 rrcurveto",
                        "-16 21 rlineto",
                        "-63 -50 -74 -28 -100 0 rrcurveto",
                        "-314 -78 288 143 278 203 128 179 147 201 -97 -263 -212 -80 -44 -121 hvcurveto",
                        "-2 -10 3 11 hvcurveto",
                        "",
                        "-11 288 rmoveto",
                        "0 -29 -21 -85 -14 -38 rrcurveto",
                        "hintmask 10111111",
                        "-31 -79 -72 -65 -32 0 -74 0 -18 55 0 56 0 73 21 79 57 62 43 47 49 0 21 0 41 0 30 -33 0 -43 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : atilde
     */
    public void testatilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("atilde");
        assertNotNull(cs);
        assertEquals("atilde", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 83 44 5 46 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 1011101110000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111110110000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-8 324 rmoveto",
                        "55 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : atilde_sc
     */
    public void testatilde_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("atilde.sc");
        assertNotNull(cs);
        assertEquals("atilde.sc", cs.getName());
        String[] text =
                {
                        "15 1 27 170 32 199 29 -24 28 65 44 4 46 hstemhm",
                        "hintmask 11011100",
                        "163 189 rmoveto",
                        "570 callsubr",
                        "hintmask 11101100",
                        "571 callsubr",
                        "hintmask 11011100",
                        "594 callsubr",
                        "191 382 rmoveto",
                        "-19 0 -16 11 -17 11 -20 14 -21 14 -32 0 -42 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 34 13 14 26 0 17 0 19 -11 18 -11 21 -13 21 -13 22 0 47 0 28 30 12 60 rrcurveto",
                        "-24 7 rlineto", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "hintmask 11101100", "-100 -142 rmoveto",
                        "572 callsubr", "96 -248 rmoveto", "573 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : b
     */
    public void testb() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("b");
        assertNotNull(cs);
        assertEquals("b", cs.getName());
        String[] text =
                {"-23 -11 34 377 43 255 -20 hstem", "74 75 215 77 vstem",
                        "149 698 rmoveto", "-30 callsubr", "-333 vmoveto",
                        "-29 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : b_sc
     */
    public void testb_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("b.sc");
        assertNotNull(cs);
        assertEquals("b.sc", cs.getName());
        String[] text =
                {
                        "-14 -1 24 -24 29 214 25 167 28 -25 25 hstemhm",
                        "101 75 166 72 -35 81 hintmask 01100101",
                        "32 22 rmoveto",
                        "0 -23 100 2 rlineto",
                        "hintmask 10101101",
                        "23 0 49 -2 56 0 155 0 45 64 0 62 0 65 -36 49 -83 18 rrcurveto",
                        "hintmask 00101110",
                        "40 18 33 38 0 39 0 48 -26 62 -146 0 -27 0 -57 -2 -26 0 rrcurveto",
                        "hintmask 01110101", "-25 0 -41 1 -34 1 rrcurveto",
                        "-24 vlineto", "-2 1 -2 5 vhcurveto", "23 hlineto",
                        "32 8 -9 -24 hvcurveto", "-340 vlineto",
                        "-25 -9 -8 -31 vhcurveto", "-23 hlineto",
                        "-5 -1 -3 -3 hvcurveto", "144 220 rmoveto",
                        "67 hlineto", "92 44 -45 -65 hvcurveto",
                        "hintmask 10100101",
                        "-44 -22 -65 -118 -63 0 12 24 vhcurveto",
                        "352 vmoveto", "hintmask 00101110",
                        "24 2 2 64 44 56 -13 -73 -60 -34 -24 -65 vhcurveto",
                        "-67 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : b_superior
     */
    public void testb_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("b.superior");
        assertNotNull(cs);
        assertEquals("b.superior", cs.getName());
        String[] text =
                {
                        "-204 358 26 216 31 68 -20 hstem",
                        "51 49 119 54 vstem",
                        "100 578 rmoveto",
                        "21 16 12 6 26 0 rrcurveto",
                        "30 30 -38 -73 -93 -41 -12 -23 -22 -33 13 52 hvcurveto",
                        "-49 224 rmoveto", "-259 vlineto",
                        "0 -26 0 -11 -2 -15 rrcurveto", "14 -4 rlineto",
                        "6 7 8 9 6 8 16 -14 25 -10 30 0 rrcurveto",
                        "65 54 69 74 68 -37 62 -62 hvcurveto",
                        "-26 0 -23 -9 -25 -16 rrcurveto", "133 -14 vlineto",
                        "-24 -12 -22 -6 -33 -4 rrcurveto", "2 -22 rlineto",
                        "11 3 10 1 7 0 rrcurveto", "14 0 -11 -15 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : backslash
     */
    public void testbackslash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("backslash");
        assertNotNull(cs);
        assertEquals("backslash", cs.getName());
        String[] text =
                {"-214 698 -20 hstem", "11 274 vstem", "55 698 rmoveto",
                        "230 -746 -44 0 -230 746 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : bar
     */
    public void testbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("bar");
        assertNotNull(cs);
        assertEquals("bar", cs.getName());
        String[] text =
                {"-296 -212 -21 931 -20 hstem", "81 44 vstem",
                        "125 -233 rmoveto", "931 -44 -931 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : beta
     */
    public void testbeta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("beta");
        assertNotNull(cs);
        assertEquals("beta", cs.getName());
        String[] text =
                {
                        "8 -12 24 359 20 -3 29 -3 22 232 30 hstemhm",
                        "73 75 51 22 129 74 -40 82 hintmask 1010111100000000",
                        "73 -208 rmoveto",
                        "11 -18 64 31 0 685 rlineto",
                        "156 62 22 42 60 38 -59 -63 -42 -16 -87 -51 vhcurveto",
                        "hintmask 1101111010000000",
                        "-17 0 -18 19 -21 0 rrcurveto",
                        "-15 -13 -13 -17 -23 9 -12 19 hvcurveto",
                        "hintmask 1010111010000000",
                        "17 0 15 17 22 0 rrcurveto",
                        "80 23 -132 -56 -66 -19 -122 -79 hvcurveto",
                        "-30 0 -29 30 -17 32 rrcurveto",
                        "-21 -15 rlineto",
                        "18 -37 37 -34 48 0 115 0 59 103 0 113 0 159 -123 34 -44 7 rrcurveto",
                        "hintmask 1010111100000000",
                        "64 25 61 44 0 83 rrcurveto",
                        "94 -81 48 -81 -142 -47 -148 -134 vhcurveto",
                        "148 -12 rmoveto", "hintmask 1101111000000000",
                        "9 8 1 2 vhcurveto",
                        "6 0 13 -7 12 -5 -11 -4 -13 -7 -5 0 rrcurveto",
                        "-4 -8 5 8 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : braceleft
     */
    public void testbraceleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("braceleft");
        assertNotNull(cs);
        assertEquals("braceleft", cs.getName());
        String[] text =
                {
                        "-228 106 73 vstem",
                        "179 567 rmoveto",
                        "0 41 6 30 10 18 13 22 16 13 20 6 rrcurveto",
                        "14 vlineto",
                        "-52 -1 -39 -12 -19 -23 -19 -23 -9 -39 0 -54 rrcurveto",
                        "-189 vlineto", "0 -50 -11 -55 -56 -16 rrcurveto",
                        "-5 vlineto", "54 -13 13 -49 0 -61 rrcurveto",
                        "-175 vlineto",
                        "0 -61 9 -42 18 -24 17 -23 40 -12 54 -1 rrcurveto",
                        "14 vlineto",
                        "-10 3 -19 4 -19 34 -11 20 -6 31 0 42 rrcurveto",
                        "164 vlineto",
                        "0 85 -10 42 -58 25 49 21 19 27 0 91 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : braceleft_sc
     */
    public void testbraceleft_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("braceleft.sc");
        assertNotNull(cs);
        assertEquals("braceleft.sc", cs.getName());
        String[] text =
                {
                        "-228 106 73 vstem",
                        "179 595 rmoveto",
                        "0 36 6 25 10 15 13 19 16 12 20 5 rrcurveto",
                        "12 vlineto",
                        "-52 -1 -39 -10 -19 -20 -19 -20 -9 -33 0 -47 rrcurveto",
                        "-163 vlineto", "0 -43 -11 -47 -56 -13 rrcurveto",
                        "-5 vlineto", "54 -11 13 -42 0 -53 rrcurveto",
                        "-150 vlineto",
                        "0 -52 9 -36 18 -21 17 -20 40 -10 54 -2 rrcurveto",
                        "13 vlineto",
                        "-10 2 -19 3 -19 30 -11 17 -6 27 0 36 rrcurveto",
                        "141 vlineto",
                        "0 73 -10 36 -58 21 49 18 19 24 0 78 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : braceright
     */
    public void testbraceright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("braceright");
        assertNotNull(cs);
        assertEquals("braceright", cs.getName());
        String[] text =
                {
                        "-228 94 73 vstem",
                        "94 -73 rmoveto",
                        "0 -41 -5 -30 -10 -18 -13 -22 -17 -13 -20 -6 rrcurveto",
                        "-14 vlineto", "",
                        "52 1 40 12 19 23 18 23 9 39 0 54 rrcurveto",
                        "190 vlineto", "0 49 11 55 56 16 rrcurveto",
                        "5 vlineto", "-54 13 -13 49 0 62 rrcurveto",
                        "174 vlineto",
                        "0 61 -9 42 -17 24 -17 23 -41 12 -54 1 rrcurveto",
                        "-14 vlineto",
                        "10 -3 19 -4 19 -34 11 -20 6 -31 0 -42 rrcurveto",
                        "-164 vlineto",
                        "0 -85 10 -42 58 -24 -49 -21 -19 -28 0 -91 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : braceright_sc
     */
    public void testbraceright_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("braceright.sc");
        assertNotNull(cs);
        assertEquals("braceright.sc", cs.getName());
        String[] text =
                {
                        "-228 94 73 vstem",
                        "94 45 rmoveto",
                        "0 -36 -5 -26 -10 -15 -13 -18 -17 -12 -20 -5 rrcurveto",
                        "-13 vlineto",
                        "52 2 40 10 19 20 18 20 9 33 0 47 rrcurveto",
                        "162 vlineto", "0 43 11 47 56 14 rrcurveto",
                        "5 vlineto", "-54 11 -13 42 0 53 rrcurveto",
                        "150 vlineto",
                        "0 52 -9 36 -17 21 -17 20 -41 10 -54 1 rrcurveto",
                        "-12 vlineto",
                        "10 -2 19 -4 19 -29 11 -17 6 -27 0 -36 rrcurveto",
                        "-141 vlineto",
                        "0 -73 10 -36 58 -22 -49 -18 -19 -24 0 -77 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : bracketleft
     */
    public void testbracketleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("bracketleft");
        assertNotNull(cs);
        assertEquals("bracketleft", cs.getName());
        String[] text =
                {"-167 -200 44 802 43 hstem", "88 68 vstem", "303 689 rmoveto",
                        "-215 -889 215 44 -147 802 147 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : bracketleft_sc
     */
    public void testbracketleft_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("bracketleft.sc");
        assertNotNull(cs);
        assertEquals("bracketleft.sc", cs.getName());
        String[] text =
                {"-167 -65 38 690 37 hstem", "88 68 vstem", "303 700 rmoveto",
                        "-215 -765 215 38 -147 690 147 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : bracketright
     */
    public void testbracketright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("bracketright");
        assertNotNull(cs);
        assertEquals("bracketright", cs.getName());
        String[] text =
                {"-167 -200 44 802 43 hstem", "178 69 vstem",
                        "32 -200 rmoveto",
                        "215 889 -215 -43 146 -802 -146 hlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : bracketright_sc
     */
    public void testbracketright_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("bracketright.sc");
        assertNotNull(cs);
        assertEquals("bracketright.sc", cs.getName());
        String[] text =
                {"-167 -65 38 690 37 hstem", "178 69 vstem", "32 -65 rmoveto",
                        "215 765 -215 -37 146 -690 -146 hlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : breve
     */
    public void testbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("breve");
        assertNotNull(cs);
        assertEquals("breve", cs.getName());
        String[] text =
                {"-184 529 57 hstem", "21 27 217 26 vstem", "48 678 rmoveto",
                        "-27 -14 rlineto",
                        "7 -78 51 -57 78 0 50 0 74 34 10 101 rrcurveto",
                        "-26 14 rlineto",
                        "-3 -62 -59 -30 -46 0 -61 0 -46 40 -2 52 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : breve_cap
     */
    public void testbreve_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("breve.cap");
        assertNotNull(cs);
        assertEquals("breve.cap", cs.getName());
        String[] text =
                {"-501 544 52 61 -20 hstem", "-297 271 vstem",
                        "-26 657 rmoveto", "208 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : breve_cyr
     */
    public void testbreve_cyr() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("breve.cyr");
        assertNotNull(cs);
        assertEquals("breve.cyr", cs.getName());
        String[] text =
                {
                        "-501 500 31 hstem",
                        "-333 73 96 73 vstem",
                        "-91 588 rmoveto",
                        "19 -14 13 -24 -18 -17 -14 -17 vhcurveto",
                        "0 -3 0 -2 1 -2 0 -3 1 -3 0 -3 rrcurveto",
                        "-22 -21 -20 -29 -30 -20 21 22 vhcurveto",
                        "0 2 0 3 1 3 0 3 1 2 0 3 rrcurveto",
                        "16 -12 14 -22 -23 -16 -15 -18 -54 55 -33 65 64 58 33 55 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : breve_cyrcap
     */
    public void testbreve_cyrcap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("breve.cyrcap");
        assertNotNull(cs);
        assertEquals("breve.cyrcap", cs.getName());
        String[] text =
                {
                        "-501 698 31 hstem",
                        "-315 70 109 70 vstem",
                        "-66 775 rmoveto",
                        "20 -12 10 -26 -23 -9 -16 -15 vhcurveto",
                        "-4 vlineto",
                        "0 -2 1 -1 0 -2 rrcurveto",
                        "-22 -25 -14 -30 -33 -23 17 20 vhcurveto",
                        "0 1 1 2 0 1 rrcurveto",
                        "4 vlineto",
                        "15 -10 16 -21 -27 -12 -9 -22 -52 58 -24 66 63 62 25 52 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : breveinvertedcmb_cap
     */
    public void testbreveinvertedcmb_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("breveinvertedcmb.cap");
        assertNotNull(cs);
        assertEquals("breveinvertedcmb.cap", cs.getName());
        String[] text =
                {"-501 605 52 hstem", "-297 271 vstem", "-297 544 rmoveto",
                        "27 hlineto",
                        "7 39 52 22 48 0 54 0 47 -22 8 -39 rrcurveto",
                        "28 hlineto",
                        "-6 70 -57 43 -74 0 -65 0 -63 -42 -6 -71 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : brokenbar
     */
    public void testbrokenbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("brokenbar");
        assertNotNull(cs);
        assertEquals("brokenbar", cs.getName());
        String[] text =
                {"-296 81 48 vstem", "129 161 rmoveto", "-48 -362 48 hlineto",
                        "875 vmoveto", "-48 -362 48 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : bullet
     */
    public void testbullet() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("bullet");
        assertNotNull(cs);
        assertEquals("bullet", cs.getName());
        String[] text =
                {
                        "-150 49 234 rmoveto",
                        "-72 57 -57 69 78 49 64 62 72 -60 56 -67 -65 -61 -56 -69 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : c
     */
    public void testc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("c");
        assertNotNull(cs);
        assertEquals("c", cs.getName());
        String[] text =
                {"-98 -12 44 376 34 hstem", "37 77 vstem", "384 91 rmoveto",
                        "-28 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : c_sc
     */
    public void testc_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("c.sc");
        assertNotNull(cs);
        assertEquals("c.sc", cs.getName());
        String[] text =
                {"-7 -12 34 423 29 hstem", "37 79 vstem", "278 -12 rmoveto",
                        "574 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : c_superior
     */
    public void testc_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("c.superior");
        assertNotNull(cs);
        assertEquals("c.superior", cs.getName());
        String[] text =
                {
                        "-219 358 32 220 27 hstem",
                        "27 54 vstem",
                        "157 637 rmoveto",
                        "-86 -44 -72 -73 -73 40 -61 85 hvcurveto",
                        "45 0 31 24 25 35 rrcurveto",
                        "-19 16 rlineto",
                        "-20 -22 -19 -21 -38 0 -22 0 -24 15 -14 23 -12 19 -4 24 0 25 0 81 42 33 31 0 38 0 5 -24 2 -22 2 -16 13 -7 14 0 rrcurveto",
                        "14 11 9 20 34 -33 33 -63 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : c_h
     */
    public void testc_h() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("c_h");
        assertNotNull(cs);
        assertEquals("c_h", cs.getName());
        String[] text =
                {"373 -9 44 -34 27 367 47 -32 34 254 -20 hstemhm",
                        "37 77 330 75 198 75 hintmask 10011111",
                        "374 94 rmoveto", "569 callsubr", "343 -22 rmoveto",
                        "hintmask 01101111", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 40 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-20 hlineto", "-32 -10 15 29 hvcurveto",
                        "212 vlineto", "103 -25 55 -73 vhcurveto",
                        "-39 0 -69 -16 -67 -67 rrcurveto", "339 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 2 -2 3 vhcurveto", "33 4 rlineto",
                        "20 9 -21 -47 hvcurveto", "-506 vlineto",
                        "-29 -6 -15 -26 vhcurveto", "-2 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 40 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "250 vlineto",
                        "59 56 43 17 29 0 rrcurveto",
                        "46 21 -38 -81 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : c_k
     */
    public void testc_k() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("c_k");
        assertNotNull(cs);
        assertEquals("c_k", cs.getName());
        String[] text =
                {
                        "337 -9 44 -34 27 374 27 -19 34 254 -20 hstemhm",
                        "37 77 339 74 hintmask 10011110",
                        "374 94 rmoveto",
                        "569 callsubr",
                        "153 111 rmoveto",
                        "6 vlineto",
                        "30 5 14 -18 15 -22 rrcurveto",
                        "74 -103 rlineto",
                        "20 -29 3 -12 0 -12 rrcurveto",
                        "0 -17 3 -4 rlineto",
                        "hintmask 01101110",
                        "0 26 2 36 39 50 -2 0 vhcurveto",
                        "2 3 0 18 rlineto",
                        "5 -6 3 -7 vhcurveto",
                        "-3 hlineto",
                        "-25 0 -31 18 -18 27 rrcurveto",
                        "-118 173 rlineto",
                        "-5 8 -2 9 6 7 rrcurveto",
                        "77 84 rlineto",
                        "24 26 44 22 27 0 rrcurveto",
                        "8 hlineto",
                        "hintmask 00011110",
                        "4 6 3 5 hvcurveto",
                        "hintmask 00101110",
                        "0 19 -4 2 rlineto",
                        "0 -54 -2 -39 -35 -48 2 0 vhcurveto",
                        "-3 -2 rlineto",
                        "hintmask 00011110",
                        "-19 vlineto",
                        "hintmask 01101110",
                        "-4 4 -4 5 vhcurveto",
                        "3 hlineto",
                        "24 6 -8 -8 hvcurveto",
                        "0 -10 -5 -13 -15 -16 -55 -58 -33 -31 -44 -22 rrcurveto",
                        "462 -22 vlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-2 2 -3 3 vhcurveto",
                        "1 0 4 1 3 0 10 1 15 2 0 0 rrcurveto",
                        "20 10 -21 -47 hvcurveto", "-506 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 52 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-2 hlineto",
                        "-32 -11 15 29 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : c_t
     */
    public void testc_t() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("c_t");
        assertNotNull(cs);
        assertEquals("c_t", cs.getName());
        String[] text =
                {
                        "213 -12 44 -44 55 348 39 -22 34 73 50 hstemhm",
                        "37 77 35 45 307 75 -57 57 hintmask 1001111010000000",
                        "149 479 rmoveto",
                        "0 -16 10 -15 26 -13 -84 -23 -64 -84 0 -120 0 -129 75 -91 120 0 60 0 48 27 44 76 rrcurveto",
                        "-18 14 rlineto",
                        "-31 -45 -38 -28 -43 0 rrcurveto",
                        "-77 -63 81 117 108 49 70 66 hvcurveto",
                        "59 0 6 -43 4 -33 3 -25 20 -11 21 0 rrcurveto",
                        "21 18 15 29 53 -51 49 -96 hvcurveto",
                        "-4 hlineto",
                        "-24 9 -12 12 0 15 0 29 69 8 67 0 64 0 64 10 61 27 rrcurveto",
                        "-7 vlineto", "hintmask 0110111100000000",
                        "-76 -17 -39 -66 -3 -1 -1 -3 vhcurveto", "-31 vlineto",
                        "-3 2 -1 3 vhcurveto", "64 -304 hlineto",
                        "-71 27 -28 46 vhcurveto",
                        "46 0 40 22 39 44 rrcurveto", "-18 17 rlineto",
                        "-26 -20 -20 -8 -26 0 rrcurveto",
                        "-26 -7 30 62 hvcurveto", "256 94 vlineto",
                        "10 14 4 9 hvcurveto", "20 vlineto",
                        "4 -3 2 -5 vhcurveto", "hintmask 1010111010000000",
                        "-110 154 -1 33 hlineto",
                        "-73 -36 -90 -16 -87 0 rrcurveto",
                        "-108 -68 -28 -58 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : cacute
     */
    public void testcacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("cacute");
        assertNotNull(cs);
        assertEquals("cacute", cs.getName());
        String[] text =
                {"-98 -12 44 376 34 hstem", "37 77 vstem", "384 91 rmoveto",
                        "-28 callsubr", "-130 579 rmoveto", "79 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : cacute_sc
     */
    public void testcacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("cacute.sc");
        assertNotNull(cs);
        assertEquals("cacute.sc", cs.getName());
        String[] text =
                {
                        "-7 -12 34 423 29 hstem",
                        "37 79 vstem",
                        "278 -12 rmoveto",
                        "574 callsubr",
                        "4 686 rmoveto",
                        "-79 -126 rlineto",
                        "-7 -9 0 -8 0 -5 0 -7 7 -5 8 0 6 0 7 5 16 14 rrcurveto",
                        "114 109 -2 11 rlineto",
                        "-2 1 -2 2 -2 2 -9 8 -12 10 -28 0 -5 0 -6 -1 -4 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : caron
     */
    public void testcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("caron");
        assertNotNull(cs);
        assertEquals("caron", cs.getName());
        String[] text =
                {
                        "-152 519 143 hstem",
                        "48 253 vstem",
                        "149 519 rmoveto",
                        "50 hlineto",
                        "30 45 38 45 34 39 rrcurveto",
                        "-19 14 rlineto",
                        "-37 -27 -34 -26 -37 -38 -34 36 -32 26 -39 29 rrcurveto",
                        "-21 -14 rlineto", "35 -37 38 -46 28 -46 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : caron_cap
     */
    public void testcaron_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("caron.cap");
        assertNotNull(cs);
        assertEquals("caron.cap", cs.getName());
        String[] text =
                {
                        "-501 524 115 hstem",
                        "-306 244 vstem",
                        "-205 524 rmoveto",
                        "43 hlineto",
                        "30 34 32 32 38 29 rrcurveto",
                        "-15 20 rlineto",
                        "-38 -16 -32 -19 -37 -26 -33 25 -34 19 -39 17 rrcurveto",
                        "-16 -20 rlineto", "36 -28 35 -30 30 -37 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ccaron
     */
    public void testccaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ccaron");
        assertNotNull(cs);
        assertEquals("ccaron", cs.getName());
        String[] text =
                {
                        "-98 -12 44 376 34 hstem",
                        "37 77 vstem",
                        "384 91 rmoveto",
                        "-28 callsubr",
                        "-182 411 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 14 rlineto",
                        "-37 -27 -34 -26 -37 -38 -34 36 -32 26 -39 29 rrcurveto",
                        "-21 -14 rlineto", "35 -37 37 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ccaron_sc
     */
    public void testccaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ccaron.sc");
        assertNotNull(cs);
        assertEquals("ccaron.sc", cs.getName());
        String[] text =
                {
                        "-7 -12 34 423 29 hstem",
                        "37 79 vstem",
                        "278 -12 rmoveto",
                        "574 callsubr",
                        "-32 525 rmoveto",
                        "49 hlineto",
                        "30 46 38 45 34 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -33 -25 -37 -38 -35 36 -32 25 -39 29 rrcurveto",
                        "-20 -13 rlineto", "34 -38 38 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ccedilla
     */
    public void testccedilla() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ccedilla");
        assertNotNull(cs);
        assertEquals("ccedilla", cs.getName());
        String[] text =
                {"-98 -179 26 76 31 34 44 376 34 hstem", "37 77 137 54 vstem",
                        "210 -77 rmoveto", "66 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ccedilla_sc
     */
    public void testccedilla_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ccedilla.sc");
        assertNotNull(cs);
        assertEquals("ccedilla.sc", cs.getName());
        String[] text =
                {
                        "-7 -182 26 76 31 37 34 423 29 hstem",
                        "37 79 196 53 vstem",
                        "271 -80 rmoveto",
                        "22 19 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-20 0 -10 4 -27 9 rrcurveto",
                        "-11 -22 rlineto",
                        "25 -11 18 -6 32 0 rrcurveto",
                        "61 45 29 42 39 -31 23 -40 hvcurveto",
                        "-9 0 -9 -1 -7 -2 rrcurveto",
                        "16 40 rlineto",
                        "74 2 47 29 45 61 rrcurveto",
                        "-20 16 rlineto",
                        "-46 -54 -35 -20 -67 0 rrcurveto",
                        "-121 -46 113 99 168 88 43 75 hvcurveto",
                        "81 0 50 -50 12 -70 rrcurveto",
                        "26 3 rlineto",
                        "-6 41 -5 42 -1 45 -37 -3 -46 21 -81 0 -131 0 -104 -104 0 -146 0 -108 76 -114 138 -13 rrcurveto",
                        "-32 -70 7 -6 rlineto", "16 5 9 2 20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ccircumflex
     */
    public void testccircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ccircumflex");
        assertNotNull(cs);
        assertEquals("ccircumflex", cs.getName());
        String[] text =
                {"-98 -12 44 376 34 204 -20 hstem", "", "37 77 vstem",
                        "384 91 rmoveto", "-28 callsubr", "-135 555 rmoveto",
                        "74 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : cdotaccent
     */
    public void testcdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("cdotaccent");
        assertNotNull(cs);
        assertEquals("cdotaccent", cs.getName());
        String[] text =
                {"-98 -12 44 376 34 81 96 hstem", "37 77 67 95 vstem",
                        "384 91 rmoveto", "-28 callsubr", "-203 480 rmoveto",
                        "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : cedilla
     */
    public void testcedilla() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("cedilla");
        assertNotNull(cs);
        assertEquals("cedilla", cs.getName());
        String[] text =
                {"40 -181 25 76 32 hstem", "335 53 vstem", "293 -80 rmoveto",
                        "23 19 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-20 0 -10 4 -27 10 rrcurveto", "-11 -22 rlineto",
                        "25 -11 18 -6 32 0 rrcurveto",
                        "61 45 28 43 38 -31 24 -40 hvcurveto",
                        "-9 0 -9 -1 -7 -2 rrcurveto",
                        "23 58 -33 0 -40 -87 7 -6 rlineto",
                        "16 5 9 1 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : cent
     */
    public void testcent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("cent");
        assertNotNull(cs);
        assertEquals("cent", cs.getName());
        String[] text =
                {
                        "-63 9 -21 hstem",
                        "46 78 98 34 vstem",
                        "222 111 rmoveto",
                        "-57 24 -41 71 0 95 0 98 41 67 57 11 rrcurveto",
                        "107 vmoveto",
                        "-73 vlineto",
                        "-97 -11 -79 -89 0 -132 0 -122 68 -88 108 -9 rrcurveto",
                        "-72 34 71 vlineto",
                        "54 4 43 29 41 70 rrcurveto",
                        "-18 14 rlineto",
                        "-31 -45 -38 -28 -43 0 rrcurveto",
                        "-8 374 hlineto",
                        "43 -8 6 -37 3 -30 3 -25 20 -10 21 0 21 0 18 14 0 30 0 50 -47 47 -88 4 rrcurveto",
                        "72 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : centigrade
     */
    public void testcentigrade() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("centigrade");
        assertNotNull(cs);
        assertEquals("centigrade", cs.getName());
        String[] text =
                {
                        "298 -16 42 432 28 60 34 50 28 hstem",
                        "44 33 133 33 1 87 vstem",
                        "44 558 rmoveto",
                        "-55 44 -45 56 55 44 45 55 55 -44 45 -55 -56 -44 -45 -55 vhcurveto",
                        "166 -1 rmoveto", "498 callsubr", "332 -573 rmoveto",
                        "97 0 64 49 60 88 rrcurveto", "-23 15 rlineto",
                        "-66 -83 -48 -27 -84 0 rrcurveto",
                        "-128 -83 125 137 212 123 46 79 hvcurveto",
                        "108 0 54 -65 26 -93 rrcurveto", "29 4 rlineto",
                        "-11 48 -7 46 -3 56 -31 1 -30 37 -138 0 rrcurveto",
                        "-159 -127 -113 -193 -145 112 -145 186 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : chi
     */
    public void testchi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("chi");
        assertNotNull(cs);
        assertEquals("chi", cs.getName());
        String[] text =
                {
                        "-11 -179 50 528 43 hstem",
                        "7 481 vstem",
                        "170 248 rmoveto",
                        "47 -137 -176 -254 -9 -14 18 -19 36 -11 69 110 79 142 20 -59 rlineto",
                        "43 -130 30 -55 77 0 24 0 32 20 22 36 rrcurveto",
                        "-16 14 rlineto",
                        "-13 -16 -19 -4 -18 0 -41 0 -16 20 -42 118 rrcurveto",
                        "-41 118 138 205 74 110 -60 -7 -18 4 -149 -267 -28 82 rlineto",
                        "-40 117 -39 71 -66 0 -38 0 -23 -12 -20 -27 rrcurveto",
                        "14 -16 rlineto",
                        "18 9 19 3 11 0 47 0 20 -54 34 -97 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : circle
     */
    public void testcircle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("circle");
        assertNotNull(cs);
        assertEquals("circle", cs.getName());
        String[] text =
                {"63 -15 26 415 26 hstem", "49 26 415 26 vstem",
                        "282 426 rmoveto", "544 callsubr", "-441 vmoveto",
                        "545 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : circlemultiply
     */
    public void testcirclemultiply() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("circlemultiply");
        assertNotNull(cs);
        assertEquals("circlemultiply", cs.getName());
        String[] text =
                {"63 125 314 vstem", "137 326 rmoveto",
                        "115 -115 -112 -112 rlineto",
                        "-54 66 -2 94 53 67 rrcurveto", "258 -258 rmoveto",
                        "-68 -51 -94 1 -66 53 rrcurveto", "113 112 rlineto",
                        "149 -79 rmoveto", "-115 114 111 111 rlineto",
                        "54 -66 0 -93 -50 -66 rrcurveto", "-258 256 rmoveto",
                        "67 52 94 -1 66 -55 rrcurveto", "-111 -110 rlineto",
                        "152 -189 rmoveto", "514 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : circleplus
     */
    public void testcircleplus() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("circleplus");
        assertNotNull(cs);
        assertEquals("circleplus", cs.getName());
        String[] text =
                {"63 13 -21 202 39 203 -20 hstem", "259 49 vstem",
                        "259 396 rmoveto", "-163 -159 vlineto",
                        "8 85 66 67 85 11 rrcurveto", "-364 vmoveto",
                        "-85 10 -65 68 -9 84 rrcurveto", "159 hlineto",
                        "49 -162 rmoveto", "162 157 vlineto",
                        "-9 -84 -66 -67 -82 -11 rrcurveto", "364 vmoveto",
                        "83 -12 65 -67 9 -84 rrcurveto", "-157 hlineto",
                        "-26 -241 rmoveto", "513 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : circumflex
     */
    public void testcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("circumflex");
        assertNotNull(cs);
        assertEquals("circumflex", cs.getName());
        String[] text =
                {"", "-152 525 143 hstem", "51 253 vstem", "203 668 rmoveto",
                        "119 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : circumflex_cap
     */
    public void testcircumflex_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("circumflex.cap");
        assertNotNull(cs);
        assertEquals("circumflex.cap", cs.getName());
        String[] text =
                {"-501 524 115 hstem", "-253 243 vstem", "-111 639 rmoveto",
                        "207 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : colon
     */
    public void testcolon() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("colon");
        assertNotNull(cs);
        assertEquals("colon", cs.getName());
        String[] text =
                {"-282 37 107 156 106 hstem", "64 107 vstem", "64 90 rmoveto",
                        "-89 callsubr", "263 vmoveto", "-88 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : comma
     */
    public void testcomma() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("comma");
        assertNotNull(cs);
        assertEquals("comma", cs.getName());
        String[] text =
                {"-282 -118 213 hstem", "131 39 vstem", "104 95 rmoveto",
                        "-99 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : congruent
     */
    public void testcongruent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("congruent");
        assertNotNull(cs);
        assertEquals("congruent", cs.getName());
        String[] text =
                {
                        "26 145 49 77 49 49 59 6 59 hstem",
                        "462 194 rmoveto",
                        "-396 -49 396 hlineto",
                        "175 vmoveto",
                        "-396 -49 396 hlineto",
                        "-393 94 rmoveto",
                        "13 -4 rlineto",
                        "23 45 51 28 35 0 25 0 24 -16 25 -17 24 -16 25 -16 26 0 24 0 65 12 31 107 rrcurveto",
                        "-17 7 rlineto",
                        "-22 -51 -49 -16 -28 0 -22 0 -26 16 -25 16 -26 16 -25 17 -23 0 -61 0 -54 -64 -13 -64 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : copyright
     */
    public void testcopyright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("copyright");
        assertNotNull(cs);
        assertEquals("copyright", cs.getName());
        String[] text =
                {"132 23 32 98 27 255 21 101 31 hstem",
                        "34 31 103 56 344 31 vstem", "317 557 rmoveto",
                        "9 callsubr", "-534 vmoveto", "10 callsubr",
                        "120 194 rmoveto", "-21 14 rlineto",
                        "-11 -16 -29 -35 -51 0 rrcurveto",
                        "-68 -33 58 67 105 59 25 37 hvcurveto",
                        "73 0 6 -31 8 -44 rrcurveto", "27 4 -12 78 rlineto",
                        "-34 0 1 14 -70 0 rrcurveto",
                        "-94 -57 -76 -73 -80 58 -74 96 hvcurveto",
                        "55 0 40 33 20 31 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : currency
     */
    public void testcurrency() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("currency");
        assertNotNull(cs);
        assertEquals("currency", cs.getName());
        String[] text =
                {
                        "-63 113 42 266 42 hstem",
                        "41 60 233 61 vstem",
                        "218 113 rmoveto",
                        "41 0 36 12 33 25 rrcurveto",
                        "46 -51 36 38 -52 44 rlineto",
                        "24 31 13 36 0 40 0 42 -13 36 -25 30 rrcurveto",
                        "55 44 -39 41 -46 -55 rlineto",
                        "-32 25 -36 12 -41 0 -39 0 -35 -11 -33 -24 rrcurveto",
                        "-46 51 -37 -40 52 -41 rlineto",
                        "-26 -30 -13 -37 0 -43 0 -41 13 -37 26 -31 rrcurveto",
                        "-54 -43 41 -40 43 53 rlineto",
                        "32 -24 36 -12 40 0 rrcurveto",
                        "-117 176 rmoveto",
                        "71 49 61 70 62 52 -58 -75 -71 -46 -62 -70 -71 -46 61 73 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : d
     */
    public void testd() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("d");
        assertNotNull(cs);
        assertEquals("d", cs.getName());
        String[] text =
                {"-7 -12 42 -3 28 352 35 256 -20 hstemhm",
                        "34 78 222 75 hintmask 10111100", "336 57 rmoveto",
                        "-27 callsubr", "hintmask 01111100", "-26 callsubr",
                        "hintmask 10111100", "-25 callsubr", "-2 32 rmoveto",
                        "-24 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : d_sc
     */
    public void testd_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("d.sc");
        assertNotNull(cs);
        assertEquals("d.sc", cs.getName());
        String[] text =
                {"65 -1 28 407 28 hstem", "101 75 276 78 vstem",
                        "176 71 rmoveto", "575 callsubr", "-144 -50 rmoveto",
                        "576 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : d_superior
     */
    public void testd_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("d.superior");
        assertNotNull(cs);
        assertEquals("d.superior", cs.getName());
        String[] text =
                {"-193 362 25 -7 22 203 26 68 -20 hstemhm",
                        "29 54 125 49 hintmask 01111100", "208 391 rmoveto",
                        "-33 14 vlineto", "24 13 22 5 33 4 rrcurveto",
                        "-2 22 rlineto", "-11 -3 -10 -1 -7 0 rrcurveto",
                        "-14 0 11 15 hvcurveto", "315 -14 vlineto",
                        "-24 -12 -22 -6 -33 -4 rrcurveto", "2 -22 rlineto",
                        "11 3 10 1 6 0 rrcurveto", "15 0 -11 -15 hvcurveto",
                        "-63 vlineto", "-15 14 -24 7 -26 0 rrcurveto",
                        "-77 -37 -78 -64 hvcurveto", "hintmask 10111100",
                        "-77 48 -50 66 vhcurveto",
                        "24 0 22 13 19 16 rrcurveto", "27 vmoveto",
                        "-20 -21 -17 -10 -22 0 rrcurveto",
                        "-34 -32 27 90 74 28 27 34 hvcurveto",
                        "25 0 22 -20 16 -19 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dagger
     */
    public void testdagger() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dagger");
        assertNotNull(cs);
        assertEquals("dagger", cs.getName());
        String[] text =
                {
                        "87 391 100 206 -20 hstemhm",
                        "264 89 -53 17 hintmask 11100000",
                        "309 697 rmoveto",
                        "-26 -19 -29 -31 hvcurveto",
                        "hintmask 11010000",
                        "0 -75 12 -62 24 -50 -39 24 -53 17 -73 0 rrcurveto",
                        "-29 -24 -23 -28 -28 23 -21 30 hvcurveto",
                        "69 0 55 13 41 26 0 -89 -15 -62 -31 -34 31 -84 15 -151 0 -217 rrcurveto",
                        "17 hlineto",
                        "0 209 16 151 31 92 -32 40 -16 62 1 83 43 -26 56 -13 66 0 rrcurveto",
                        "30 24 21 28 28 -24 23 -30 hvcurveto",
                        "-66 0 -56 -14 -43 -27 rrcurveto", "hintmask 11100000",
                        "24 49 12 62 0 76 rrcurveto",
                        "32 -20 28 -24 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : daggerdbl
     */
    public void testdaggerdbl() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("daggerdbl");
        assertNotNull(cs);
        assertEquals("daggerdbl", cs.getName());
        String[] text =
                {
                        "87 0 99 292 100 206 -20 hstemhm",
                        "264 89 -53 17 hintmask 11101000",
                        "536 440 rmoveto",
                        "28 -23 23 -31 vhcurveto",
                        "-66 0 -56 -14 -43 -27 rrcurveto",
                        "hintmask 11110000",
                        "24 49 12 62 0 76 rrcurveto",
                        "32 -20 28 -24 -26 -19 -29 -31 vhcurveto",
                        "hintmask 11101000",
                        "0 -75 12 -62 24 -50 -39 24 -53 17 -73 0 rrcurveto",
                        "-29 -24 -23 -28 -28 23 -21 30 hvcurveto",
                        "69 0 55 13 41 26 0 -89 -15 -62 -31 -34 31 -37 15 -62 0 -86 -38 23 -55 16 -72 0 rrcurveto",
                        "-25 -28 -19 -30 -29 25 -21 28 hvcurveto",
                        "67 0 55 13 43 27 rrcurveto",
                        "hintmask 11110000",
                        "-24 -51 -12 -62 0 -74 rrcurveto",
                        "-34 21 -26 24 26 18 30 30 vhcurveto",
                        "hintmask 11101000",
                        "0 74 -12 62 -24 51 45 -27 55 -13 65 0 rrcurveto",
                        "29 25 21 29 30 -26 19 -28 hvcurveto",
                        "-65 0 -55 -13 -45 -26 0 83 16 62 31 40 -32 40 -16 62 1 83 43 -26 56 -13 66 0 rrcurveto",
                        "30 24 21 28 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dcaron
     */
    public void testdcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dcaron");
        assertNotNull(cs);
        assertEquals("dcaron", cs.getName());
        String[] text =
                {"27 -12 42 -3 28 352 35 181 75 hstemhm",
                        "34 78 222 75 104 50 hintmask 10111110",
                        "336 57 rmoveto", "-27 callsubr", "hintmask 01111110",
                        "-26 callsubr", "hintmask 10111110", "-25 callsubr",
                        "-2 32 rmoveto", "-24 callsubr", "169 350 rmoveto",
                        "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dcaron_sc
     */
    public void testdcaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dcaron.sc");
        assertNotNull(cs);
        assertEquals("dcaron.sc", cs.getName());
        String[] text =
                {
                        "50 -1 28 407 28 hstem",
                        "101 75 276 78 vstem",
                        "176 71 rmoveto",
                        "575 callsubr",
                        "-144 -50 rmoveto",
                        "576 callsubr",
                        "214 493 rmoveto",
                        "50 hlineto",
                        "29 46 38 44 35 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -26 -37 -38 -34 37 -32 25 -39 29 rrcurveto",
                        "-21 -13 rlineto", "35 -38 37 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dcroat
     */
    public void testdcroat() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dcroat");
        assertNotNull(cs);
        assertEquals("dcroat", cs.getName());
        String[] text =
                {"-7 -12 42 -3 28 352 35 91 39 126 -20 hstemhm",
                        "34 78 222 75 hintmask 10111110", "334 89 rmoveto",
                        "-24 callsubr", "152 224 rmoveto", "89 callsubr",
                        "hintmask 01111110", "90 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dcroat_sc
     */
    public void testdcroat_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dcroat.sc");
        assertNotNull(cs);
        assertEquals("dcroat.sc", cs.getName());
        String[] text =
                {"50 -1 29 180 39 187 28 hstem", "101 75 276 78 vstem",
                        "32 21 rmoveto", "596 callsubr", "207 226 rmoveto",
                        "597 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : degree
     */
    public void testdegree() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("degree");
        assertNotNull(cs);
        assertEquals("degree", cs.getName());
        String[] text =
                {
                        "-234 426 28 143 28 hstem",
                        "34 33 133 33 vstem",
                        "34 525 rmoveto",
                        "-55 45 -44 55 55 44 44 55 56 -44 44 -55 -55 -45 -44 -56 vhcurveto",
                        "166 -1 rmoveto",
                        "-34 -25 -36 -41 -42 -25 35 35 36 24 37 43 45 21 -40 -33 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : delta
     */
    public void testdelta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("delta");
        assertNotNull(cs);
        assertEquals("delta", cs.getName());
        String[] text =
                {
                        "-11 -12 30 647 33 hstemhm",
                        "34 76 -8 51 224 80 hintmask 11101000",
                        "231 428 rmoveto",
                        "-89 -31 -108 -64 0 -135 rrcurveto",
                        "-116 77 -94 124 106 116 73 163 vhcurveto",
                        "0 110 -85 74 -116 89 rrcurveto",
                        "hintmask 11011000",
                        "-53 40 -50 37 0 26 0 43 32 22 52 0 26 0 29 -14 20 -38 20 -36 21 -8 10 0 rrcurveto",
                        "14 24 8 29 33 -64 59 -99 -70 -66 -31 -77 hvcurveto",
                        "0 -51 36 -36 75 -61 rrcurveto", "45 -36 rmoveto",
                        "31 -25 rlineto", "54 -44 34 -73 0 -52 rrcurveto",
                        "-163 -80 -31 -51 vhcurveto", "hintmask 11101000", "",
                        "-93 -43 117 81 hvcurveto",
                        "0 114 73 48 67 24 rrcurveto", "-8 16 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dieresis
     */
    public void testdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dieresis");
        assertNotNull(cs);
        assertEquals("dieresis", cs.getName());
        String[] text =
                {"-126 529 91 hstem", "55 91 69 91 vstem", "55 575 rmoveto",
                        "7 callsubr", "160 hmoveto", "8 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : dieresis_cap
     */
    public void testdieresis_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dieresis.cap");
        assertNotNull(cs);
        assertEquals("dieresis.cap", cs.getName());
        String[] text =
                {
                        "-501 704 90 hstem",
                        "-378 90 99 91 vstem",
                        "-378 749 rmoveto",
                        "209 callsubr",
                        "189 1 rmoveto",
                        "-25 21 -21 24 25 21 21 25 24 -21 21 -25 -24 -21 -21 -24 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dieresistonos
     */
    public void testdieresistonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dieresistonos");
        assertNotNull(cs);
        assertEquals("dieresistonos", cs.getName());
        String[] text =
                {"-133 529 91 hstem", "55 91 69 91 vstem", "55 575 rmoveto",
                        "7 callsubr", "160 hmoveto", "8 callsubr",
                        "29 211 rmoveto", "212 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : divide
     */
    public void testdivide() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("divide");
        assertNotNull(cs);
        assertEquals("divide", cs.getName());
        String[] text =
                {
                        "26 51 90 67 49 63 89 hstem",
                        "221 89 vstem",
                        "461 257 rmoveto",
                        "-85 callsubr",
                        "-240 -112 rmoveto",
                        "-25 20 -20 25 24 20 20 25 25 -20 20 -24 -25 -20 -20 -25 vhcurveto",
                        "268 vmoveto",
                        "-24 20 -20 25 24 20 20 24 25 -20 20 -24 -25 -20 -20 -25 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dollar
     */
    public void testdollar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dollar");
        assertNotNull(cs);
        assertEquals("dollar", cs.getName());
        String[] text =
                {"-63 45 64 88 34 96 72 vstem", "197 341 rmoveto",
                        "-39 18 -49 32 0 47 0 59 40 36 48 8 rrcurveto",
                        "34 -291 rmoveto",
                        "40 -15 56 -28 0 -80 0 -73 -56 -26 -40 -6 rrcurveto",
                        "-140 -12 rmoveto", "20 0 31 -19 55 -3 rrcurveto",
                        "-69 34 69 vlineto",
                        "160 9 8 126 0 33 0 101 -111 49 -57 22 rrcurveto",
                        "213 vlineto", "55 -5 30 -36 20 -65 rrcurveto",
                        "5 -18 26 4 rlineto",
                        "-8 49 -9 49 -3 45 -25 -3 -41 8 -50 2 rrcurveto",
                        "56 -34 -56 vlineto",
                        "-67 -7 -85 -43 0 -87 0 -98 93 -45 59 -27 rrcurveto",
                        "-243 vlineto", "-69 8 -45 59 -16 61 rrcurveto",
                        "-26 -3 rlineto",
                        "8 -56 8 -54 0 -37 21 0 -3 11 16 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dong
     */
    public void testdong() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dong");
        assertNotNull(cs);
        assertEquals("dong", cs.getName());
        String[] text =
                {"-7 -95 46 37 42 -3 28 352 35 91 39 126 -20 hstemhm",
                        "34 78 222 75 hintmask 11011111", "334 89 rmoveto",
                        "-24 callsubr", "152 224 rmoveto", "89 callsubr",
                        "hintmask 10111111", "90 callsubr",
                        "-457 -582 rmoveto", "-46 456 46 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : dotaccent
     */
    public void testdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dotaccent");
        assertNotNull(cs);
        assertEquals("dotaccent", cs.getName());
        String[] text =
                {"-210 592 96 hstem", "98 96 vstem", "98 640 rmoveto",
                        "199 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dotbelowcomb
     */
    public void testdotbelowcomb() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dotbelowcomb");
        assertNotNull(cs);
        assertEquals("dotbelowcomb", cs.getName());
        String[] text =
                {"-501 -167 108 hstem", "-271 109 vstem", "-271 -113 rmoveto",
                        "203 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dotlessi
     */
    public void testdotlessi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dotlessi");
        assertNotNull(cs);
        assertEquals("dotlessi", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 hstem", "99 74 vstem", "173 72 rmoveto",
                        "-18 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dotlessj
     */
    public void testdotlessj() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dotlessj");
        assertNotNull(cs);
        assertEquals("dotlessj", cs.getName());
        String[] text =
                {"-224 -213 29 626 -20 hstem", "125 75 vstem",
                        "51 -184 rmoveto", "-16 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : dotmath
     */
    public void testdotmath() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("dotmath");
        assertNotNull(cs);
        assertEquals("dotmath", cs.getName());
        String[] text =
                {"-248 204 108 hstem", "71 108 vstem", "125 204 rmoveto",
                        "19 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : e
     */
    public void teste() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("e");
        assertNotNull(cs);
        assertEquals("e", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : e_inferior
     */
    public void teste_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("e.inferior");
        assertNotNull(cs);
        assertEquals("e.inferior", cs.getName());
        String[] text =
                {
                        "-194 -117 31 128 28 66 25 hstem",
                        "34 54 114 57 vstem",
                        "202 70 rmoveto",
                        "-110 hlineto",
                        "5 29 25 37 31 0 rrcurveto",
                        "24 25 -13 -53 hvcurveto",
                        "-38 -156 rmoveto",
                        "-21 0 -24 16 -15 22 -12 19 -4 25 0 25 0 2 0 15 1 4 rrcurveto",
                        "170 hlineto", "-3 62 -17 57 -85 0 rrcurveto",
                        "-72 -48 -71 -74 -73 40 -60 85 hvcurveto",
                        "46 0 30 23 26 35 rrcurveto", "-20 16 rlineto",
                        "-19 -22 -20 -21 -38 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : e_sc
     */
    public void teste_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("e.sc");
        assertNotNull(cs);
        assertEquals("e.sc", cs.getName());
        String[] text =
                {"-38 0 28 202 32 172 28 hstem", "101 75 132 19 vstem",
                        "405 462 rmoveto", "577 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : e_superior
     */
    public void teste_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("e.superior");
        assertNotNull(cs);
        assertEquals("e.superior", cs.getName());
        String[] text =
                {
                        "-221 358 32 128 28 65 26 hstem",
                        "27 54 113 57 vstem",
                        "194 546 rmoveto",
                        "-109 hlineto",
                        "5 29 25 36 31 0 rrcurveto",
                        "23 25 -13 -52 hvcurveto",
                        "-37 -156 rmoveto",
                        "-22 0 -24 15 -14 23 -12 19 -4 24 0 25 0 3 0 15 1 4 rrcurveto",
                        "169 hlineto", "-2 61 -17 58 -86 0 rrcurveto",
                        "-71 -48 -72 -73 -73 40 -61 85 hvcurveto",
                        "45 0 31 24 25 35 rrcurveto", "-19 16 rlineto",
                        "-20 -22 -19 -21 -38 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eacute
     */
    public void testeacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eacute");
        assertNotNull(cs);
        assertEquals("eacute", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "-28 393 rmoveto", "68 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eacute_sc
     */
    public void testeacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eacute.sc");
        assertNotNull(cs);
        assertEquals("eacute.sc", cs.getName());
        String[] text =
                {
                        "-42 0 28 202 32 172 28 203 -20 hstem",
                        "101 75 132 19 vstem",
                        "259 662 rmoveto",
                        "-79 -125 rlineto",
                        "-7 -10 0 -7 0 -6 0 -7 7 -5 8 0 6 0 7 5 16 14 rrcurveto",
                        "115 109 -3 11 rlineto",
                        "-2 1 -2 2 -3 2 -8 8 -12 11 -29 0 -4 0 -6 -1 -4 -2 rrcurveto",
                        "146 -200 rmoveto", "577 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ebreve
     */
    public void testebreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ebreve");
        assertNotNull(cs);
        assertEquals("ebreve", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 58 58 hstemhm",
                        "34 76 -17 27 192 80 -56 27 hintmask 11111010",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "hintmask 11110101",
                        "-178 372 rmoveto", "-27 -13 rlineto",
                        "7 -78 51 -58 78 0 49 0 75 35 10 101 rrcurveto",
                        "-27 13 rlineto", "-2 -62 -60 -29 -45 0 rrcurveto", "",
                        "-61 0 -46 40 -2 51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ecaron
     */
    public void testecaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ecaron");
        assertNotNull(cs);
        assertEquals("ecaron", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 hstem",
                        "34 76 202 80 vstem",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "-99 225 rmoveto",
                        "50 hlineto",
                        "29 46 38 44 35 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -32 25 -39 29 rrcurveto",
                        "-21 -13 rlineto", "35 -38 37 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ecaron_sc
     */
    public void testecaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ecaron.sc");
        assertNotNull(cs);
        assertEquals("ecaron.sc", cs.getName());
        String[] text =
                {
                        "-42 0 28 202 32 172 28 hstem",
                        "101 75 132 19 vstem",
                        "405 462 rmoveto",
                        "577 callsubr",
                        "-182 47 rmoveto",
                        "49 hlineto",
                        "30 46 38 45 35 39 rrcurveto",
                        "-20 13 rlineto",
                        "-37 -27 -33 -25 -37 -38 -35 36 -32 26 -39 28 rrcurveto",
                        "-20 -13 rlineto", "34 -37 38 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ecircumflex
     */
    public void testecircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ecircumflex");
        assertNotNull(cs);
        assertEquals("ecircumflex", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 204 -20 hstem",
                        "34 76 202 80 vstem", "378 93 rmoveto", "-23 callsubr",
                        "-284 200 rmoveto", "-22 callsubr", "-40 369 rmoveto",
                        "54 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ecircumflex_sc
     */
    public void testecircumflex_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ecircumflex.sc");
        assertNotNull(cs);
        assertEquals("ecircumflex.sc", cs.getName());
        String[] text =
                {"-42 0 28 202 32 172 28 188 -20 hstem", "101 75 132 19 vstem",
                        "271 650 rmoveto", "-50 hlineto",
                        "-30 -46 -38 -43 -35 -40 rrcurveto", "20 -14 rlineto",
                        "37 27 32 25 37 38 34 -36 34 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 41 -37 42 -28 46 rrcurveto",
                        "134 -188 rmoveto", "577 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : edieresis
     */
    public void testedieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("edieresis");
        assertNotNull(cs);
        assertEquals("edieresis", cs.getName());
        String[] text =
                {"-73 -8 49 201 39 131 34 81 91 hstemhm",
                        "34 76 -6 90 70 91 -43 80 hintmask 11111001",
                        "378 97 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "69 callsubr", "hintmask 11110100", "-194 291 rmoveto",
                        "", "57 callsubr", "hintmask 11110010", "160 hmoveto",
                        "70 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : edieresis_sc
     */
    public void testedieresis_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("edieresis.sc");
        assertNotNull(cs);
        assertEquals("edieresis.sc", cs.getName());
        String[] text =
                {"-42 0 28 202 32 172 28 66 91 hstemhm",
                        "101 75 -56 91 70 91 -64 19 hintmask 11110100",
                        "120 574 rmoveto", "315 callsubr", "hintmask 11110010",
                        "161 hmoveto", "316 callsubr", "124 -112 rmoveto",
                        "-200 0 -72 -2 -100 2 -1 -2 0 -22 rlineto",
                        "-1 0 -3 6 vhcurveto", "23 hlineto",
                        "hintmask 11111001", "29 11 -10 -23 hvcurveto",
                        "-341 vlineto", "-20 -9 -12 -31 vhcurveto",
                        "-23 hlineto", "-5 -1 -3 -2 hvcurveto",
                        "0 -22 1 -2 99 2 73 -1 201 0 rlineto",
                        "2 32 7 41 12 49 rrcurveto", "-25 3 rlineto",
                        "-16 -51 -23 -46 -60 0 rrcurveto", "-99 hlineto",
                        "-17 -11 4 19 hvcurveto", "179 87 vlineto",
                        "26 0 9 -11 4 -20 rrcurveto", "5 -22 rlineto",
                        "-3 2 -3 4 vhcurveto", "18 0 2 3 rlineto",
                        "-2 23 -4 21 0 25 0 24 4 27 2 23 rrcurveto",
                        "2 0 1 -2 vhcurveto", "-18 hlineto",
                        "-3 -2 -2 -4 hvcurveto", "-6 -21 rlineto",
                        "-5 -20 -6 -11 -28 0 rrcurveto", "-87 148 hlineto",
                        "17 9 7 19 vhcurveto", "98 hlineto",
                        "63 0 19 -59 11 -36 rrcurveto", "25 3 rlineto",
                        "-7 38 -7 38 -1 44 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : edotaccent
     */
    public void testedotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("edotaccent");
        assertNotNull(cs);
        assertEquals("edotaccent", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 81 96 hstem",
                        "34 76 72 96 34 80 vstem", "378 93 rmoveto",
                        "-23 callsubr", "-284 200 rmoveto", "-22 callsubr",
                        "-116 294 rmoveto", "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : egrave
     */
    public void testegrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("egrave");
        assertNotNull(cs);
        assertEquals("egrave", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "-89 393 rmoveto", "67 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : egrave_sc
     */
    public void testegrave_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("egrave.sc");
        assertNotNull(cs);
        assertEquals("egrave.sc", cs.getName());
        String[] text =
                {"-42 0 28 202 32 172 28 222 -20 hstem", "101 75 132 19 vstem",
                        "229 682 rmoveto",
                        "-3 1 -7 1 -5 0 -34 0 -23 -17 -8 -6 rrcurveto",
                        "-3 -11 116 -109 rlineto",
                        "15 -15 7 -5 6 0 8 0 7 6 0 5 0 8 -1 6 -5 10 rrcurveto",
                        "106 -94 rmoveto", "577 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eight
     */
    public void testeight() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eight");
        assertNotNull(cs);
        assertEquals("eight", cs.getName());
        String[] text =
                {"-63 -12 28 538 24 hstemhm",
                        "44 59 -39 64 188 59 -42 63 hintmask 11100100",
                        "215 16 rmoveto", "-92 callsubr", "hintmask 11011000",
                        "160 443 rmoveto",
                        "68 -55 51 -93 -97 -66 -58 -73 vhcurveto",
                        "0 -53 29 -38 57 -38 rrcurveto", "17 -11 rlineto",
                        "-24 -17 -20 -17 -24 -21 rrcurveto",
                        "hintmask 11100100", "-39 -34 -16 -43 0 -37 rrcurveto",
                        "-97 69 -53 100 124 59 93 72 vhcurveto",
                        "0 55 -26 43 -48 32 rrcurveto", "-58 40 rlineto",
                        "42 28 69 47 0 61 rrcurveto", "-153 95 rmoveto",
                        "hintmask 11011000", "-91 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : eight_fitted
     */
    public void testeight_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eight.fitted");
        assertNotNull(cs);
        assertEquals("eight.fitted", cs.getName());
        String[] text =
                {"-54 -12 28 538 24 hstemhm",
                        "57 58 -38 64 188 58 -41 62 hintmask 11100100",
                        "228 16 rmoveto", "-43 -70 37 85 hvcurveto",
                        "0 28 19 66 80 55 rrcurveto", "46 -27 rlineto",
                        "60 -36 26 -45 0 -45 rrcurveto",
                        "-95 -75 -23 -43 vhcurveto", "hintmask 11011000",
                        "159 443 rmoveto",
                        "68 -54 51 -93 -97 -66 -58 -73 vhcurveto",
                        "0 -53 29 -38 57 -38 rrcurveto", "16 -11 rlineto",
                        "-24 -17 -19 -17 -25 -21 rrcurveto",
                        "hintmask 11100100", "-38 -34 -16 -43 0 -37 rrcurveto",
                        "-97 69 -53 100 124 58 93 72 vhcurveto",
                        "0 55 -25 43 -48 32 rrcurveto", "-58 40 rlineto",
                        "41 28 69 47 0 61 rrcurveto", "-153 95 rmoveto",
                        "hintmask 11011000", "62 33 -50 -44 hvcurveto",
                        "0 -51 -59 -46 -26 -19 rrcurveto", "-29 19 rlineto",
                        "-60 39 -14 34 0 29 rrcurveto",
                        "44 36 45 57 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eight_inferior
     */
    public void testeight_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eight.inferior");
        assertNotNull(cs);
        assertEquals("eight.inferior", cs.getName());
        String[] text =
                {"-194 -117 22 285 22 hstemhm",
                        "42 47 -32 44 103 44 -28 53 hintmask 11100100",
                        "146 47 rmoveto", "29 -14 rlineto",
                        "40 -20 5 -26 0 -25 rrcurveto",
                        "-41 -30 -16 -36 -24 -41 15 45 vhcurveto",
                        "0 34 41 39 16 9 rrcurveto", "hintmask 11011000",
                        "102 98 rmoveto",
                        "40 -46 27 -45 -53 -47 -29 -45 vhcurveto",
                        "0 -29 15 -26 40 -19 rrcurveto", "12 -6 rlineto",
                        "hintmask 11100100", "-38 -20 -44 -37 0 -36 rrcurveto",
                        "-66 67 -16 44 90 30 57 32 vhcurveto",
                        "0 31 -17 25 -31 17 rrcurveto", "-39 21 rlineto",
                        "59 34 3 30 0 15 rrcurveto", "-95 45 rmoveto",
                        "hintmask 11011000", "35 16 -18 -27 hvcurveto",
                        "0 -29 -23 -28 -16 -9 rrcurveto", "-20 10 rlineto",
                        "-37 20 -7 23 0 15 rrcurveto", "30 23 13 29 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eight_oldstyle
     */
    public void testeight_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eight.oldstyle");
        assertNotNull(cs);
        assertEquals("eight.oldstyle", cs.getName());
        String[] text =
                {"-63 -12 28 538 24 hstemhm",
                        "44 58 -38 63 189 58 -41 62 hintmask 11100100",
                        "215 16 rmoveto", "-44 -69 37 85 hvcurveto",
                        "0 28 19 66 80 55 rrcurveto", "46 -27 rlineto",
                        "60 -36 26 -45 0 -45 rrcurveto",
                        "-95 -75 -23 -43 vhcurveto", "hintmask 11011000",
                        "159 443 rmoveto",
                        "68 -55 51 -92 -97 -66 -58 -73 vhcurveto",
                        "0 -53 28 -38 58 -38 rrcurveto", "16 -11 rlineto",
                        "-24 -17 -20 -17 -24 -21 rrcurveto",
                        "hintmask 11100100", "-38 -34 -16 -43 0 -37 rrcurveto",
                        "-97 69 -53 100 123 59 93 72 vhcurveto",
                        "0 55 -26 43 -47 32 rrcurveto", "-58 40 rlineto",
                        "41 28 69 47 0 61 rrcurveto", "-153 95 rmoveto",
                        "hintmask 11011000", "532 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : eight_superior
     */
    public void testeight_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eight.superior");
        assertNotNull(cs);
        assertEquals("eight.superior", cs.getName());
        String[] text =
                {"-194 358 22 286 22 hstemhm",
                        "48 47 -33 44 103 44 -27 53 hintmask 11100100",
                        "151 522 rmoveto", "30 -14 rlineto",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-42 -30 -16 -36 -24 -41 16 44 vhcurveto",
                        "0 34 41 40 15 8 rrcurveto", "hintmask 11011000",
                        "102 99 rmoveto",
                        "39 -45 28 -45 -53 -48 -29 -45 vhcurveto",
                        "0 -30 16 -25 40 -19 rrcurveto", "12 -6 rlineto",
                        "hintmask 11100100", "-38 -21 -44 -36 0 -37 rrcurveto",
                        "-65 67 -17 44 90 30 58 32 vhcurveto",
                        "0 31 -17 25 -32 17 rrcurveto", "-39 21 rlineto",
                        "59 34 3 29 0 16 rrcurveto", "-94 45 rmoveto",
                        "hintmask 11011000", "35 15 -19 -26 hvcurveto",
                        "0 -30 -22 -27 -16 -10 rrcurveto", "-21 11 rlineto",
                        "-36 20 -8 22 0 16 rrcurveto", "29 24 14 29 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eight_taboldstyle
     */
    public void testeight_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eight.taboldstyle");
        assertNotNull(cs);
        assertEquals("eight.taboldstyle", cs.getName());
        String[] text =
                {"-63 -12 28 538 24 hstemhm",
                        "46 58 -38 64 188 58 -41 62 hintmask 11100100",
                        "217 16 rmoveto", "-43 -70 37 85 hvcurveto",
                        "0 28 19 66 81 55 rrcurveto", "45 -27 rlineto",
                        "60 -36 26 -45 0 -45 rrcurveto",
                        "-95 -75 -23 -43 vhcurveto", "hintmask 11011000",
                        "159 443 rmoveto",
                        "68 -54 51 -93 -97 -66 -58 -73 vhcurveto",
                        "0 -53 29 -38 57 -38 rrcurveto", "16 -11 rlineto",
                        "-23 -17 -20 -17 -24 -21 rrcurveto",
                        "hintmask 11100100", "-39 -34 -16 -43 0 -37 rrcurveto",
                        "-97 69 -53 100 124 58 93 72 vhcurveto",
                        "0 55 -25 43 -48 32 rrcurveto", "-58 40 rlineto",
                        "42 28 68 47 0 61 rrcurveto", "-152 95 rmoveto",
                        "hintmask 11011000", "-91 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : eightroman
     */
    public void testeightroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eightroman");
        assertNotNull(cs);
        assertEquals("eightroman", cs.getName());
        String[] text =
                {
                        "580 1 27 374 28 93 96 hstemhm",
                        "523 96 -87 74 106 96 -87 75 113 96 -87 75 hintmask 1110100010000000",
                        "532 358 rmoveto", "-286 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 vhcurveto", "25 0 37 -1 24 0 rrcurveto",
                        "0 -1 11 1 11 -1 0 1 rlineto",
                        "23 0 36 1 23 0 28 0 43 -1 22 0 rrcurveto",
                        "-1 7 vlineto", "7 0 1 1 rlineto",
                        "22 0 41 1 26 0 rrcurveto", "39 68 -2 0 hvcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "286 vlineto", "28 10 16 33 vhcurveto", "19 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -39 vhcurveto",
                        "-26 0 -41 1 -22 0 rrcurveto",
                        "-1 1 -7 0 -7 0 0 -1 rlineto",
                        "-22 0 -43 -1 -28 0 -23 0 -36 1 -23 0 rrcurveto",
                        "1 vlineto", "0 0 -4 0 -7 -1 rrcurveto",
                        "-11 1 0 -1 rlineto",
                        "-24 0 -37 -1 -25 0 -23 0 -38 1 -23 0 rrcurveto",
                        "0 1 -7 -1 -12 1 -1 -1 rlineto",
                        "-14 -1 -19 0 -15 0 rrcurveto",
                        "-37 -57 2 0 hvcurveto", "-4 -2 0 -20 rlineto",
                        "-3 3 -4 5 vhcurveto", "5 hlineto",
                        "34 11 -6 -15 hvcurveto",
                        "0 -7 -3 -9 -5 -11 rrcurveto",
                        "-89 -219 -17 -43 -17 46 -86 218 rlineto",
                        "-6 14 -4 8 0 7 0 10 9 6 20 1 rrcurveto", "17 hlineto",
                        "3 6 1 7 hvcurveto", "0 19 -4 2 rlineto",
                        "0 -61 -2 -39 -34 -53 2 0 vhcurveto",
                        "-3 -2 0 -20 rlineto", "-5 5 -2 5 vhcurveto",
                        "29 0 21 -12 14 -36 rrcurveto", "136 -345 rlineto",
                        "6 -15 6 -6 13 0 10 0 7 6 7 17 rrcurveto",
                        "138 339 rlineto", "16 39 23 13 29 0 rrcurveto",
                        "15 hlineto", "33 10 -16 -28 hvcurveto",
                        "hintmask 1111000000000000", "-9 213 rmoveto",
                        "-15 callsubr", "hintmask 1110101000000000",
                        "198 -213 rmoveto", "508 callsubr",
                        "hintmask 1110010000000000", "-9 213 rmoveto",
                        "300 callsubr", "hintmask 1110001010000000",
                        "206 -213 rmoveto", "509 callsubr",
                        "hintmask 1110000100000000", "-9 213 rmoveto",
                        "149 callsubr", "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : element
     */
    public void testelement() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("element");
        assertNotNull(cs);
        assertEquals("element", cs.getName());
        String[] text =
                {"5 0 57 201 56 201 57 hstem", "cntrmask 11100000",
                        "462 hmoveto", "57 -155 vlineto",
                        "-104 0 -89 87 -15 114 rrcurveto",
                        "354 56 -354 hlineto", "13 108 79 93 116 0 rrcurveto",
                        "155 57 -150 hlineto",
                        "-157 -126 -131 -155 -154 124 -132 159 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : elevenroman
     */
    public void testelevenroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("elevenroman");
        assertNotNull(cs);
        assertEquals("elevenroman", cs.getName());
        String[] text =
                {"178 1 27 374 28 93 96 hstemhm",
                        "508 96 -87 74 hintmask 11101000", "517 358 rmoveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto",
                        "-8 hlineto", "-32 0 -13 1 -46 65 rrcurveto",
                        "-90 127 rlineto", "-4 6 -1 3 5 6 rrcurveto",
                        "84 107 rlineto", "36 46 15 12 35 1 rrcurveto",
                        "3 0 16 0 rlineto", "33 10 -16 -28 hvcurveto",
                        "hintmask 11110000", "-9 213 rmoveto", "-15 callsubr",
                        "-311 -169 rmoveto", "15 hlineto", "4 4 3 5 hvcurveto",
                        "0 18 -3 3 -111 -2 -79 2 -2 -3 0 -19 rlineto",
                        "-4 7 -3 7 vhcurveto", "35 0 18 -24 28 -41 rrcurveto",
                        "87 -127 rlineto", "3 -5 1 -5 -3 -5 rrcurveto",
                        "-84 -108 rlineto", "-42 -54 -23 -5 -24 0 rrcurveto",
                        "-9 -4 -4 -6 hvcurveto", "0 -17 2 -2 rlineto",
                        "0 46 2 29 32 52 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -2 3 -5 vhcurveto", "-14 hlineto",
                        "-34 0 14 19 17 24 rrcurveto", "63 91 rlineto",
                        "8 12 2 0 8 -10 rrcurveto", "58 -80 rlineto",
                        "28 -38 13 -18 -37 0 rrcurveto", "-12 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 63 2 41 vhcurveto", "17 0 22 -1 18 0 rrcurveto",
                        "1 -1 16 1 rlineto", "8 -1 6 0 0 0 rrcurveto",
                        "1 vlineto", "23 0 30 1 20 0 rrcurveto",
                        "39 69 -2 0 hvcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "hintmask 11101000", "-32 -11 15 29 hvcurveto", "",
                        "286 vlineto", "28 11 16 32 vhcurveto", "19 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -69 -2 -39 vhcurveto",
                        "-23 0 -37 1 -23 0 rrcurveto",
                        "0 1 -9 -1 -11 1 -1 -1 rlineto",
                        "-17 -1 -25 0 -18 0 rrcurveto",
                        "-31 -47 2 0 hvcurveto", "-3 -3 0 -19 rlineto",
                        "-5 3 -2 3 vhcurveto", "16 hlineto",
                        "28 0 -3 -16 -21 -29 rrcurveto", "-65 -91 rlineto",
                        "-8 -10 -5 2 -6 10 rrcurveto", "-61 90 rlineto",
                        "-11 18 -4 9 0 5 rrcurveto", "7 4 5 20 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ellipsis
     */
    public void testellipsis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ellipsis");
        assertNotNull(cs);
        assertEquals("ellipsis", cs.getName());
        String[] text =
                {"248 -12 106 hstem", "57 106 157 107 159 106 vstem",
                        "586 41 rmoveto", "-97 callsubr", "-266 hmoveto",
                        "-88 callsubr", "-263 hmoveto", "-97 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : emacron
     */
    public void testemacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("emacron");
        assertNotNull(cs);
        assertEquals("emacron", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 97 44 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "50 262 rmoveto", "82 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : emdash
     */
    public void testemdash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("emdash");
        assertNotNull(cs);
        assertEquals("emdash", cs.getName());
        String[] text =
                {"241 238 49 hstem", "29 287 rmoveto", "-49 684 49 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : emptyset
     */
    public void testemptyset() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("emptyset");
        assertNotNull(cs);
        assertEquals("emptyset", cs.getName());
        String[] text =
                {
                        "141 -9 51 488 51 hstem",
                        "26 51 488 51 vstem",
                        "468 481 rmoveto",
                        "59 -44 38 -71 0 -80 0 -134 -108 -110 -136 0 -33 0 -32 7 -29 12 rrcurveto",
                        "233 485 rmoveto",
                        "-41 22 -47 13 -51 0 -163 0 -132 -132 0 -163 0 -107 57 -93 84 -52 rrcurveto",
                        "-47 -83 33 -18 48 83 rlineto",
                        "37 -16 40 -9 43 0 164 0 131 133 0 162 0 99 -48 87 -75 54 rrcurveto",
                        "39 68 -34 17 rlineto", "-177 -81 rmoveto",
                        "42 0 38 -10 35 -18 rrcurveto", "-243 -423 rlineto",
                        "-69 43 -47 76 0 88 0 135 110 109 134 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : emquad
     */
    public void testemquad() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("emquad");
        assertNotNull(cs);
        assertEquals("emquad", cs.getName());
        String[] text = {"498 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : emspace
     */
    public void testemspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("emspace");
        assertNotNull(cs);
        assertEquals("emspace", cs.getName());
        String[] text = {"255 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : endash
     */
    public void testendash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("endash");
        assertNotNull(cs);
        assertEquals("endash", cs.getName());
        String[] text =
                {"33 238 49 hstem", "40 287 rmoveto", "-49 455 49 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eng
     */
    public void testeng() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eng");
        assertNotNull(cs);
        assertEquals("eng", cs.getName());
        String[] text =
                {"19 -219 30 190 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 276 rmoveto", "-221 vlineto",
                        "-141 -30 -103 -44 vhcurveto",
                        "-11 0 -5 4 -3 10 -5 16 -11 24 -23 0 rrcurveto",
                        "-3 -25 -3 -32 -34 60 -15 29 hvcurveto",
                        "25 0 29 12 27 27 55 55 9 80 0 130 rrcurveto",
                        "199 vlineto", "115 -45 43 -69 vhcurveto",
                        "-95 0 -48 -66 -15 -23 rrcurveto",
                        "-3 0 3 89 -22 0 rlineto",
                        "-45 -27 -58 -8 -19 -2 rrcurveto", "-30 vlineto",
                        "16 3 21 3 10 0 rrcurveto", "22 0 -23 -38 hvcurveto",
                        "-248 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "245 vlineto",
                        "9 20 23 25 15 12 19 13 29 7 27 0 rrcurveto",
                        "61 15 -53 -65 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eng_sc
     */
    public void testeng_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eng.sc");
        assertNotNull(cs);
        assertEquals("eng.sc", cs.getName());
        String[] text =
                {
                        "112 -162 22 140 27 408 25 hstemhm",
                        "103 46 291 75 -47 47 hintmask 11111000",
                        "440 27 rmoveto",
                        "-2 -145 -25 -22 -37 0 -22 0 -2 10 -2 8 -2 9 -6 20 -22 0 rrcurveto",
                        "-12 -13 -4 -18 -38 62 -9 26 hvcurveto",
                        "23 0 31 12 21 18 43 43 14 67 0 83 rrcurveto",
                        "hintmask 11110100", "0 1 0 329 rlineto",
                        "22 11 22 31 vhcurveto", "21 hlineto",
                        "3 3 2 3 hvcurveto", "0 21 -1 1 rlineto",
                        "0 -57 -2 -30 -28 -68 2 0 vhcurveto",
                        "-5 -1 0 -21 rlineto", "-3 6 -2 4 vhcurveto",
                        "21 hlineto", "32 10 -24 -20 hvcurveto",
                        "0 -264 0 -16 rlineto", "-8 -1 -3 -3 vhcurveto",
                        "-6 0 -1 20 -21 26 -103 126 -170 190 0 0 rrcurveto",
                        "-125 0 -2 -3 0 -11 rlineto", "-4 5 -3 4 vhcurveto",
                        "4 hlineto", "26 0 23 -29 5 -18 rrcurveto",
                        "-324 vlineto", "-19 -11 -24 -32 vhcurveto",
                        "-20 hlineto", "-4 -7 -2 -4 hvcurveto",
                        "0 -21 6 -1 rlineto", "0 56 1 28 30 68 -1 0 vhcurveto",
                        "2 1 0 21 rlineto", "4 -4 2 -3 vhcurveto",
                        "-21 hlineto", "-30 -12 21 22 hvcurveto",
                        "244 vlineto", "24 1 11 7 vhcurveto",
                        "5 0 8 -8 13 -16 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : enquad
     */
    public void testenquad() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("enquad");
        assertNotNull(cs);
        assertEquals("enquad", cs.getName());
        String[] text = {"-2 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : enspace
     */
    public void testenspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("enspace");
        assertNotNull(cs);
        assertEquals("enspace", cs.getName());
        String[] text = {"17 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eogonek
     */
    public void testeogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eogonek");
        assertNotNull(cs);
        assertEquals("eogonek", cs.getName());
        String[] text =
                {
                        "-73 -216 38 166 49 201 39 131 34 hstem",
                        "34 76 84 59 59 80 vstem",
                        "378 93 rmoveto",
                        "-35 -38 -35 -18 -55 0 -72 0 -71 79 0 102 0 8 0 6 1 6 rrcurveto",
                        "263 hlineto",
                        "11 7 6 11 84 -31 103 -132 -95 -100 -91 -152 -109 58 -102 137 hvcurveto",
                        "12 0 11 1 12 2 -39 -36 -31 -43 0 -44 0 -55 42 -29 54 0 41 0 36 22 29 45 rrcurveto",
                        "-15 7 rlineto",
                        "-22 -22 -16 -14 -30 0 -36 0 -24 27 0 25 0 65 50 47 46 41 19 14 16 17 14 19 rrcurveto",
                        "-284 200 rmoveto", "-22 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eogonek_sc
     */
    public void testeogonek_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eogonek.sc");
        assertNotNull(cs);
        assertEquals("eogonek.sc", cs.getName());
        String[] text =
                {"-42 -224 39 185 28 202 32 172 28 hstem",
                        "101 75 31 60 41 19 vstem", "300 -224 rmoveto",
                        "35 0 51 20 23 47 rrcurveto", "-14 8 rlineto",
                        "-20 -21 -21 -15 -29 0 rrcurveto",
                        "-36 -22 27 32 51 54 75 80 hvcurveto", "5 hlineto",
                        "2 32 7 41 12 49 rrcurveto", "-25 3 rlineto",
                        "-16 -51 -23 -46 -60 0 rrcurveto", "-99 hlineto",
                        "-17 -11 4 19 hvcurveto", "179 87 vlineto",
                        "26 0 9 -11 4 -20 rrcurveto", "5 -22 rlineto",
                        "-3 2 -3 4 vhcurveto", "18 0 2 3 rlineto",
                        "-2 23 -4 21 0 25 0 24 4 27 2 23 rrcurveto",
                        "2 0 1 -2 vhcurveto", "-18 hlineto",
                        "-3 -2 -2 -4 hvcurveto", "-6 -21 rlineto",
                        "-5 -20 -6 -11 -28 0 rrcurveto", "-87 148 hlineto",
                        "17 9 7 19 vhcurveto", "98 hlineto",
                        "63 0 19 -59 11 -36 rrcurveto", "25 3 rlineto",
                        "-7 38 -7 38 -1 44 rrcurveto",
                        "-200 0 -72 -2 -100 2 -1 -2 0 -22 rlineto",
                        "-1 0 -3 6 vhcurveto", "23 hlineto",
                        "29 11 -10 -23 hvcurveto", "-341 vlineto",
                        "-20 -9 -12 -31 vhcurveto", "-23 hlineto",
                        "-5 -1 -3 -2 hvcurveto",
                        "0 -22 1 -2 99 2 73 -1 101 0 rlineto",
                        "-59 -34 -40 -57 0 -48 0 -54 39 -31 54 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : epsilon
     */
    public void testepsilon() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("epsilon");
        assertNotNull(cs);
        assertEquals("epsilon", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 hstemhm",
                        "44 79 -60 71 hintmask 10111000", "123 119 rmoveto",
                        "172 callsubr", "hintmask 11010100", "173 callsubr",
                        "hintmask 10110100", "174 callsubr",
                        "hintmask 10111000", "175 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : epsilontonos
     */
    public void testepsilontonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("epsilontonos");
        assertNotNull(cs);
        assertEquals("epsilontonos", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 238 -20 hstemhm",
                        "44 79 -60 71 hintmask 10111100", "123 119 rmoveto",
                        "172 callsubr", "hintmask 11011010", "173 callsubr",
                        "hintmask 10111010", "174 callsubr",
                        "hintmask 10111100", "175 callsubr", "127 561 rmoveto",
                        "241 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : equal
     */
    public void testequal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("equal");
        assertNotNull(cs);
        assertEquals("equal", cs.getName());
        String[] text =
                {"26 144 49 76 49 hstem", "461 193 rmoveto", "-85 callsubr",
                        "174 vmoveto", "-85 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : equal_inferior
     */
    public void testequal_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("equal.inferior");
        assertNotNull(cs);
        assertEquals("equal.inferior", cs.getName());
        String[] text =
                {"-194 -3 34 38 35 hstem", "269 31 rmoveto",
                        "-230 -34 230 hlineto", "107 vmoveto",
                        "-230 -35 230 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : equal_superior
     */
    public void testequal_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("equal.superior");
        assertNotNull(cs);
        assertEquals("equal.superior", cs.getName());
        String[] text =
                {"-194 474 34 39 34 hstem", "", "269 508 rmoveto",
                        "-230 -34 230 hlineto", "107 vmoveto",
                        "-230 -34 230 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : equivalence
     */
    public void testequivalence() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("equivalence");
        assertNotNull(cs);
        assertEquals("equivalence", cs.getName());
        String[] text =
                {"26 105 44 63 44 64 44 hstem", "461 149 rmoveto",
                        "-395 -44 395 hlineto", "151 vmoveto",
                        "-395 -44 395 hlineto", "152 vmoveto",
                        "-395 -44 395 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : estimated
     */
    public void testestimated() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("estimated");
        assertNotNull(cs);
        assertEquals("estimated", cs.getName());
        String[] text =
                {
                        "12 -8 29 186 28 178 29 hstem",
                        "30 83 284 83 vstem",
                        "113 207 rmoveto",
                        "367 hlineto",
                        "149 -117 86 -108 -124 -101 -101 -124 -125 101 -100 124 vhcurveto",
                        "73 0 65 35 41 52 rrcurveto", "-34 11 rlineto",
                        "-35 -45 -51 -24 -58 0 rrcurveto",
                        "-82 -61 53 23 hvcurveto", "138 vmoveto",
                        "100 vlineto", "19 61 59 82 80 61 -57 -18 vhcurveto",
                        "-103 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eta
     */
    public void testeta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eta");
        assertNotNull(cs);
        assertEquals("eta", cs.getName());
        String[] text =
                {"27 394 48 hstem", "99 71 201 75 vstem", "173 442 rmoveto",
                        "242 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : etatonos
     */
    public void testetatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("etatonos");
        assertNotNull(cs);
        assertEquals("etatonos", cs.getName());
        String[] text =
                {"27 394 48 239 -20 hstem", "99 71 201 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "165 328 rmoveto",
                        "213 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eth
     */
    public void testeth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eth");
        assertNotNull(cs);
        assertEquals("eth", cs.getName());
        String[] text =
                {"-23 -12 39 380 35 hstem", "34 78 246 81 vstem",
                        "34 208 rmoveto",
                        "-104 65 -116 124 112 104 80 169 vhcurveto",
                        "0 146 -65 119 -86 87 rrcurveto",
                        "-18 17 97 66 -22 32 -106 -71 rlineto",
                        "-35 28 -36 23 -35 19 rrcurveto", "-16 -21 rlineto",
                        "24 -17 23 -19 21 -22 rrcurveto",
                        "16 -17 -105 -70 22 -32 109 73 rlineto",
                        "37 -46 31 -51 22 -53 -25 10 -26 4 -26 0 rrcurveto",
                        "-82 -124 -61 -173 hvcurveto", "206 -181 rmoveto",
                        "-71 -57 84 114 76 25 106 101 hvcurveto",
                        "43 0 36 -19 23 -29 12 -43 6 -47 0 -46 rrcurveto",
                        "-162 -71 -34 -47 vhcurveto", "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : eth_sc
     */
    public void testeth_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("eth.sc");
        assertNotNull(cs);
        assertEquals("eth.sc", cs.getName());
        String[] text =
                {"50 -1 29 180 39 187 28 hstem", "101 75 276 78 vstem",
                        "32 21 rmoveto", "596 callsubr", "207 226 rmoveto",
                        "597 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : exclam
     */
    public void testexclam() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("exclam");
        assertNotNull(cs);
        assertEquals("exclam", cs.getName());
        String[] text =
                {"-274 -12 106 564 -20 hstem", "60 106 vstem", "60 41 rmoveto",
                        "-107 callsubr", "53 617 rmoveto", "-106 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : exclam_question
     */
    public void testexclam_question() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("exclam_question");
        assertNotNull(cs);
        assertEquals("exclam_question", cs.getName());
        String[] text =
                {
                        "86 -14 106 535 30 hstemhm",
                        "60 106 45 67 31 106 -66 26 101 74 hintmask 11111010",
                        "309 39 rmoveto",
                        "-87 callsubr",
                        "-31 531 rmoveto",
                        "hintmask 11110110",
                        "30 40 27 57 58 43 -60 -65 vhcurveto",
                        "0 -47 -20 -29 -40 -37 -65 -59 -2 -59 0 -43 rrcurveto",
                        "-46 vlineto",
                        "-7 5 -3 7 8 6 3 7 vhcurveto",
                        "44 vlineto",
                        "0 24 4 24 14 25 8 17 20 16 24 17 47 34 58 44 0 79 0 91 -63 60 -102 0 -52 0 -42 -14 -30 -25 -29 -24 -21 -28 0 -38 rrcurveto",
                        "-35 25 -8 15 20 20 12 23 vhcurveto",
                        "0 13 -2 6 -4 5 -4 5 -3 6 0 15 rrcurveto",
                        "-218 -529 rmoveto", "-107 callsubr", "53 617 rmoveto",
                        "-106 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : exclamdbl
     */
    public void testexclamdbl() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("exclamdbl");
        assertNotNull(cs);
        assertEquals("exclamdbl", cs.getName());
        String[] text =
                {
                        "-90 -12 106 564 -20 hstem",
                        "60 106 77 107 vstem",
                        "60 41 rmoveto",
                        "-107 callsubr",
                        "53 617 rmoveto",
                        "-106 callsubr",
                        "130 -615 rmoveto",
                        "-29 24 -24 29 30 24 24 29 30 -24 24 -30 -29 -24 -24 -30 vhcurveto",
                        "54 617 rmoveto",
                        "-23 -32 -18 -55 hvcurveto",
                        "0 -70 16 -34 10 -89 7 -78 6 -90 2 -20 0 -6 2 -7 12 0 10 0 3 8 1 12 1 14 2 60 13 107 10 86 16 42 0 65 rrcurveto",
                        "50 -29 23 -27 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : exclamdown
     */
    public void testexclamdown() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("exclamdown");
        assertNotNull(cs);
        assertEquals("exclamdown", cs.getName());
        String[] text =
                {
                        "-274 -207 -21 563 107 hstemhm",
                        "59 110 -107 106 hintmask 11010000",
                        "168 389 rmoveto",
                        "29 -24 24 -29 -30 -23 -24 -29 -30 23 -24 30 vhcurveto",
                        "29 24 24 30 hvcurveto",
                        "-54 -617 rmoveto",
                        "hintmask 11100000",
                        "23 32 19 54 hvcurveto",
                        "0 70 -16 34 -9 89 -8 78 -6 90 -2 21 0 5 -2 7 -12 0 -10 0 -3 -8 -1 -12 -1 -13 -2 -60 -13 -108 -10 -86 -15 -42 0 -65 rrcurveto",
                        "-50 28 -23 27 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : exclamdown_sc
     */
    public void testexclamdown_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("exclamdown.sc");
        assertNotNull(cs);
        assertEquals("exclamdown.sc", cs.getName());
        String[] text =
                {
                        "-274 9 -21 563 107 hstemhm",
                        "59 110 -107 106 hintmask 11010000",
                        "168 604 rmoveto",
                        "30 -24 24 -29 -30 -23 -24 -30 -29 23 -24 30 vhcurveto",
                        "29 24 24 29 hvcurveto",
                        "-54 -616 rmoveto",
                        "hintmask 11100000",
                        "23 32 18 55 hvcurveto",
                        "0 70 -16 34 -9 89 -8 78 -6 90 -2 20 0 6 -2 7 -12 0 -10 0 -3 -8 -1 -12 -1 -14 -2 -60 -13 -107 -10 -86 -15 -43 0 -64 rrcurveto",
                        "-50 28 -23 27 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : existential
     */
    public void testexistential() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("existential");
        assertNotNull(cs);
        assertEquals("existential", cs.getName());
        String[] text =
                {
                        "-101 0 65 207 65 170 65 hstem",
                        "297 69 vstem",
                        "366 572 rmoveto",
                        "-325 -65 256 -170 -246 -65 246 -207 -262 -65 331 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f
     */
    public void testf() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f");
        assertNotNull(cs);
        assertEquals("f", cs.getName());
        String[] text =
                {"-197 1 27 363 39 234 34 hstem", "92 75 vstem",
                        "92 72 rmoveto", "-21 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_sc
     */
    public void testf_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f.sc");
        assertNotNull(cs);
        assertEquals("f.sc", cs.getName());
        String[] text =
                {"-55 1 27 202 32 171 -20 21 28 hstem", "99 74 vstem",
                        "173 410 rmoveto", "578 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_superior
     */
    public void testf_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f.superior");
        assertNotNull(cs);
        assertEquals("f.superior", cs.getName());
        String[] text =
                {
                        "-248 365 22 182 29 91 -21 46 25 hstem",
                        "72 49 vstem",
                        "72 415 rmoveto",
                        "-18 -6 -10 -20 vhcurveto",
                        "-12 hlineto",
                        "-3 -2 -1 -4 hvcurveto",
                        "0 -17 2 -1 rlineto",
                        "0 41 1 22 24 54 -1 0 vhcurveto",
                        "1 1 0 17 rlineto",
                        "4 -3 1 -2 vhcurveto",
                        "-21 hlineto",
                        "-20 -6 10 18 hvcurveto",
                        "154 59 vlineto",
                        "6 8 2 6 hvcurveto",
                        "18 vlineto",
                        "2 -2 1 -3 vhcurveto",
                        "-68 10 hlineto",
                        "",
                        "95 24 11 20 vhcurveto",
                        "18 0 10 -7 8 -20 5 -11 10 -8 12 0 12 0 11 11 0 12 0 11 -7 11 -13 9 -15 11 -16 6 -23 0 rrcurveto",
                        "-52 -53 -45 -96 hvcurveto", "-31 hlineto",
                        "-11 -3 -7 -5 hvcurveto", "-14 vlineto",
                        "-2 0 -1 3 vhcurveto", "42 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : f_b
     */
    public void testf_b() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_b");
        assertNotNull(cs);
        assertEquals("f_b", cs.getName());
        String[] text =
                {
                        "269 -10 28 -17 27 363 39 -30 44 222 34 hstemhm",
                        "92 75 194 75 220 77 hintmask 10011111",
                        "361 578 rmoveto",
                        "-506 vlineto",
                        "0 -39 -1 -16 -2 -23 rrcurveto",
                        "20 -5 rlineto",
                        "11 11 11 17 10 10 29 -25 36 -12 42 0 39 0 32 11 25 16 18 10 16 13 14 13 48 47 24 61 0 78 0 67 -23 55 -49 44 rrcurveto",
                        "-30 28 -34 11 -35 0 -31 0 -29 -8 -29 -18 -13 -7 -12 -11 -12 -13 rrcurveto",
                        "311 -22 vlineto",
                        "-17 -8 -11 -8 -14 -5 -22 15 -26 8 -35 0 rrcurveto",
                        "-84 -113 -72 -156 hvcurveto",
                        "hintmask 01101111",
                        "-42 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 67 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-18 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 95 vlineto",
                        "9 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 59 hlineto",
                        "154 70 23 33 vhcurveto",
                        "30 0 19 -16 13 -32 6 -14 10 -9 12 -4 rrcurveto",
                        "1 -4 0 -4 0 -5 rrcurveto",
                        "75 -522 rmoveto",
                        "566 callsubr",
                        "hintmask 10011111",
                        "17 8 20 3 21 0 34 0 24 -19 22 -30 31 -45 3 -54 0 -26 0 -64 -15 -48 -24 -38 -33 -53 -52 -5 -20 0 -31 0 -25 14 -20 24 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f
     */
    public void testf_f() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f");
        assertNotNull(cs);
        assertEquals("f_f", cs.getName());
        String[] text =
                {
                        "67 1 27 363 39 132 119 -28 28 -18 35 hstemhm",
                        "92 75 191 75 hintmask 11010110",
                        "368 564 rmoveto",
                        "-9 -36 -1 -39 0 -20 rrcurveto",
                        "-39 -191 8 vlineto",
                        "0 68 5 35 6 19 21 80 42 13 15 0 11 0 8 -2 16 -10 rrcurveto",
                        "hintmask 11100110",
                        "568 callsubr",
                        "275 62 rmoveto",
                        "hintmask 11001110",
                        "41 -46 33 -74 vhcurveto",
                        "-37 0 -55 -22 -34 -53 rrcurveto",
                        "hintmask 11100110",
                        "-13 24 -43 34 -80 0 -27 0 -23 -7 -21 -12 -69 -41 -26 -69 0 -122 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 81 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-32 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 94 vlineto",
                        "10 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 52 hlineto",
                        "0 20 1 45 6 34 rrcurveto",
                        "hintmask 11001110",
                        "14 73 28 9 22 0 24 0 21 -14 9 -20 10 -21 10 -19 27 0 rrcurveto",
                        "20 15 15 20 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_b
     */
    public void testf_f_b() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_b");
        assertNotNull(cs);
        assertEquals("f_f_b", cs.getName());
        String[] text =
                {
                        "530 -10 28 -17 27 363 39 -30 44 121 119 -28 28 -18 35 hstemhm",
                        "92 75 191 75 189 75 220 78 hintmask 0010010111100000",
                        "368 567 rmoveto",
                        "567 callsubr",
                        "hintmask 0010100111100000",
                        "568 callsubr",
                        "332 -509 rmoveto",
                        "566 callsubr",
                        "hintmask 1001000111100000",
                        "18 8 19 3 21 0 34 0 24 -19 22 -30 32 -45 2 -54 0 -26 0 -64 -15 -48 -24 -38 -33 -53 -52 -5 -20 0 -31 0 -25 14 -20 24 rrcurveto",
                        "640 vmoveto",
                        "-22 hlineto",
                        "-20 -8 -15 -5 -18 -3 -2 -1 -2 0 -2 0 rrcurveto",
                        "hintmask 0000001111100000",
                        "-23 13 -31 9 -36 0 -37 0 -61 -22 -34 -54 rrcurveto",
                        "hintmask 0110100111100000",
                        "-13 25 -43 34 -80 0 -27 0 -23 -7 -21 -12 -69 -41 -26 -72 0 -122 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 75 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-25 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 94 vlineto",
                        "10 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 55 hlineto",
                        "0 20 1 45 6 34 rrcurveto",
                        "hintmask 1001001111100000",
                        "14 73 34 9 23 0 24 0 26 -14 10 -20 10 -21 9 -22 28 0 rrcurveto",
                        "4 -12 hlineto",
                        "-505 vlineto",
                        "0 -39 0 -16 -3 -23 rrcurveto",
                        "21 -5 rlineto",
                        "10 11 12 17 9 10 29 -25 36 -12 42 0 39 0 32 11 26 16 18 10 15 13 14 13 48 47 25 61 0 78 0 67 -23 55 -50 44 rrcurveto",
                        "-30 28 -34 11 -35 0 -31 0 -29 -8 -29 -18 -12 -7 -13 -11 -12 -13 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_h
     */
    public void testf_f_h() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_h");
        assertNotNull(cs);
        assertEquals("f_f_h", cs.getName());
        String[] text =
                {
                        "551 1 27 363 39 -37 47 125 119 -28 28 -16 35 hstemhm",
                        "92 75 191 75 190 75 198 74 hintmask 1100101111000000",
                        "368 567 rmoveto",
                        "567 callsubr",
                        "hintmask 1101001111000000",
                        "568 callsubr",
                        "531 -493 rmoveto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-20 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "210 vlineto",
                        "hintmask 1010011111000000",
                        "103 -25 55 -72 vhcurveto",
                        "-39 0 -69 -16 -67 -67 rrcurveto",
                        "341 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -2 0 -3 -1 -3 0 -22 13 -31 10 -37 0 -36 0 -61 -24 -34 -54 rrcurveto",
                        "hintmask 1101001111000000",
                        "-13 25 -43 34 -80 0 -27 0 -23 -7 -21 -12 -69 -41 -26 -72 0 -122 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 94 vlineto",
                        "10 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 55 hlineto",
                        "0 20 1 45 6 34 rrcurveto",
                        "hintmask 1010011111000000",
                        "14 73 34 11 22 0 24 0 26 -16 10 -20 10 -21 9 -22 28 0 rrcurveto",
                        "6 -11 hlineto", "-506 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-11 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 60 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "248 vlineto",
                        "59 56 43 17 29 0 rrcurveto",
                        "46 21 -38 -81 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_i
     */
    public void testf_f_i() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_i");
        assertNotNull(cs);
        assertEquals("f_f_i", cs.getName());
        String[] text =
                {
                        "307 1 27 363 39 226 28 -17 33 hstemhm",
                        "92 75 191 74 211 75 hintmask 11001110",
                        "",
                        "92 72 rmoveto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 81 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-32 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 181 vlineto",
                        "26 3 -12 -40 hvcurveto",
                        "-267 vlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "372 -15 vlineto",
                        "-13 0 -32 -14 -35 0 rrcurveto",
                        "-189 56 hlineto",
                        "154 67 25 33 vhcurveto",
                        "33 0 31 -12 8 -43 12 -54 16 -24 32 0 20 0 20 18 0 20 0 37 -34 39 -37 25 -25 16 -27 11 -37 0 -66 0 -58 -40 -27 -35 rrcurveto",
                        "-13 25 -43 33 -80 0 -27 0 -23 -6 -21 -13 -69 -40 -26 -70 0 -122 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 hlineto",
                        "276 174 rmoveto",
                        "-9 -36 -1 -39 0 -21 rrcurveto",
                        "-39 -191 11 vlineto",
                        "0 68 5 33 6 19 21 80 42 12 15 0 11 0 8 -2 16 -9 35 -23 -11 -56 50 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_j
     */
    public void testf_f_j() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_j");
        assertNotNull(cs);
        assertEquals("f_f_j", cs.getName());
        String[] text =
                {
                        "293 -220 29 192 27 363 39 226 28 -17 33 hstemhm",
                        "92 75 191 75 210 74 hintmask 11101111",
                        "643 29 rmoveto",
                        "-141 -30 -79 -45 vhcurveto",
                        "-10 0 -5 5 -4 10 -5 16 -10 24 -23 0 rrcurveto",
                        "-3 -26 -4 -31 -34 61 -15 29 hvcurveto",
                        "25 0 29 12 26 26 56 56 9 55 0 131 rrcurveto",
                        "384 -15 vlineto",
                        "-13 0 -32 -14 -35 0 rrcurveto",
                        "-189 59 hlineto",
                        "154 67 24 33 vhcurveto",
                        "33 0 31 -12 8 -42 12 -55 16 -24 32 0 20 0 20 18 0 21 0 37 -34 39 -37 24 -25 17 -27 10 -37 0 -66 0 -58 -40 -27 -35 rrcurveto",
                        "hintmask 11110111",
                        "-13 25 -43 34 -80 0 -27 0 -23 -7 -21 -12 -69 -41 -26 -72 0 -122 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 81 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-32 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 181 vlineto",
                        "26 3 -12 -40 hvcurveto",
                        "-275 228 rmoveto",
                        "-9 -36 -1 -39 0 -20 rrcurveto",
                        "-42 -191 11 vlineto",
                        "0 68 5 35 6 19 21 80 42 13 15 0 11 0 8 -2 16 -10 35 -22 -11 -57 50 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_k
     */
    public void testf_f_k() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_k");
        assertNotNull(cs);
        assertEquals("f_f_k", cs.getName());
        String[] text =
                {
                        "517 1 27 363 39 -28 27 227 28 -18 35 hstemhm",
                        "92 75 191 75 190 74 hintmask 10101111",
                        "697 211 rmoveto",
                        "30 5 13 -18 16 -22 rrcurveto",
                        "73 -103 rlineto",
                        "20 -29 3 -12 0 -12 rrcurveto",
                        "0 -17 3 -4 rlineto",
                        "0 26 2 36 39 50 -2 0 vhcurveto",
                        "2 3 0 18 rlineto",
                        "5 -6 3 -6 vhcurveto",
                        "-3 hlineto",
                        "-26 0 -30 18 -19 27 rrcurveto",
                        "-118 173 rlineto",
                        "-5 8 -1 9 6 7 rrcurveto",
                        "76 84 rlineto",
                        "24 26 45 22 27 0 rrcurveto",
                        "7 hlineto",
                        "4 7 3 5 hvcurveto",
                        "0 19 -4 2 rlineto",
                        "0 -54 -2 -39 -36 -47 2 0 vhcurveto",
                        "-3 -2 0 -19 rlineto",
                        "",
                        "-4 3 -4 5 vhcurveto",
                        "4 hlineto",
                        "24 5 -8 -8 hvcurveto",
                        "0 -10 -5 -13 -15 -16 -54 -58 -33 -31 -44 -22 rrcurveto",
                        "462 -22 vlineto",
                        "-20 -9 -14 -4 -19 -4 -20 12 -30 8 -32 0 -57 0 -62 -20 -27 -56 rrcurveto",
                        "hintmask 11010111",
                        "-13 25 -43 34 -80 0 -27 0 -23 -7 -21 -12 -69 -41 -26 -72 0 -122 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 94 vlineto",
                        "10 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 55 hlineto",
                        "0 20 1 45 6 34 rrcurveto",
                        "hintmask 10101111",
                        "14 73 46 9 22 0 24 0 22 -14 10 -20 10 -20 9 -21 26 -2 rrcurveto",
                        "0 -11 0 -506 rlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "-329 495 rmoveto",
                        "-9 -36 -1 -39 0 -20 rrcurveto",
                        "hintmask 11010111",
                        "-42 -191 11 vlineto",
                        "0 68 5 35 6 19 21 80 42 13 15 0 11 0 8 -2 16 -10 35 -22 -11 -57 50 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_l
     */
    public void testf_f_l() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_l");
        assertNotNull(cs);
        assertEquals("f_f_l", cs.getName());
        String[] text =
                {
                        "283 1 27 363 39 216 35 -17 34 hstemhm",
                        "92 75 191 75 190 75 hintmask 11011110",
                        "433 391 rmoveto",
                        "94 hlineto",
                        "10 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 52 hlineto",
                        "0 20 1 45 6 34 10 56 29 27 26 0 37 0 14 -38 4 -12 7 -18 13 -10 21 0 8 0 8 2 6 5 rrcurveto",
                        "-521 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "626 -22 vlineto",
                        "-10 -8 -29 -22 -20 -6 -9 10 -44 26 -56 0 -56 0 -45 -39 -17 -31 rrcurveto",
                        "hintmask 11101110",
                        "-13 19 -40 34 -79 0 -71 0 -47 -49 -22 -46 -14 -27 -12 -47 0 -82 rrcurveto",
                        "-51 hlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "-66 490 rmoveto",
                        "-8 -36 -1 -37 0 -20 rrcurveto",
                        "-39 -191 8 vlineto",
                        "0 68 5 35 6 19 16 60 32 26 31 0 40 0 16 -29 11 -26 6 -14 10 -15 25 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_f_t
     */
    public void testf_f_t() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_f_t");
        assertNotNull(cs);
        assertEquals("f_f_t", cs.getName());
        String[] text =
                {
                        "343 -11 56 -44 27 363 39 135 119 -28 28 -18 35 hstemhm",
                        "92 75 191 75 201 74 -57 57 hintmask 0010101100000000",
                        "368 567 rmoveto",
                        "567 callsubr",
                        "hintmask 0011001100000000",
                        "568 callsubr",
                        "199 -174 rmoveto",
                        "hintmask 1010011110000000",
                        "70 -302 hlineto",
                        "",
                        "-72 31 -28 46 vhcurveto",
                        "50 0 42 29 26 40 rrcurveto",
                        "-16 14 rlineto",
                        "-15 -12 -27 -15 -29 0 rrcurveto",
                        "-27 -7 29 62 hvcurveto",
                        "255 112 39 vlineto",
                        "hintmask 0010011101000000",
                        "-112 154 hlineto",
                        "-57 -20 0 -19 rlineto",
                        "-79 -9 -36 -78 vhcurveto",
                        "-131 55 hlineto",
                        "0 20 1 45 6 34 14 73 28 9 22 0 24 0 20 -14 10 -20 10 -21 10 -22 27 0 rrcurveto",
                        "20 15 15 20 41 -46 36 -74 hvcurveto",
                        "-37 0 -55 -22 -34 -54 rrcurveto",
                        "hintmask 0111001110000000",
                        "-13 25 -43 34 -80 0 -27 0 -23 -7 -21 -12 -69 -41 -26 -72 0 -122 rrcurveto",
                        "-51 hlineto", "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto", "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "319 191 -319 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 81 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-32 hlineto", "-33 -10 15 29 hvcurveto",
                        "319 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_h
     */
    public void testf_h() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_h");
        assertNotNull(cs);
        assertEquals("f_h", cs.getName());
        String[] text =
                {
                        "289 1 27 363 39 -37 47 226 34 hstemhm",
                        "92 75 194 75 197 75 hintmask 11011110",
                        "436 357 rmoveto",
                        "341 -22 vlineto",
                        "-17 -8 -11 -8 -14 -5 -22 15 -26 8 -35 0 rrcurveto",
                        "-84 -113 -72 -156 hvcurveto",
                        "-42 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 67 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-18 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 95 vlineto",
                        "9 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 59 hlineto",
                        "154 70 23 33 vhcurveto",
                        "30 0 19 -16 13 -32 6 -14 10 -9 12 -4 1 -4 0 -4 0 -5 rrcurveto",
                        "-506 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 40 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "248 vlineto", "hintmask 10111110",
                        "59 56 43 17 28 0 rrcurveto",
                        "47 20 -38 -81 hvcurveto", "-202 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "210 vlineto",
                        "103 -25 55 -72 vhcurveto",
                        "-39 0 -70 -16 -66 -67 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_i
     */
    public void testf_i() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_i");
        assertNotNull(cs);
        assertEquals("f_i", cs.getName());
        String[] text =
                {
                        "41 1 27 363 39 235 33 hstem",
                        "92 75 210 75 vstem",
                        "348 391 rmoveto",
                        "26 3 -13 -57 hvcurveto",
                        "-249 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "370 -15 vlineto",
                        "-14 0 -32 -12 -35 0 rrcurveto",
                        "-189 56 hlineto",
                        "154 68 25 33 vhcurveto",
                        "32 0 31 -12 9 -43 11 -54 17 -24 31 0 20 0 20 18 0 20 0 37 -33 39 -37 25 -25 16 -26 11 -38 0 rrcurveto",
                        "-84 -104 -56 -198 hvcurveto", "-14 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto", "-14 vlineto",
                        "-4 1 -1 4 vhcurveto", "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto", "", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 82 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-33 hlineto",
                        "-33 -10 15 29 hvcurveto", "319 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : f_i_sc
     */
    public void testf_i_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_i.sc");
        assertNotNull(cs);
        assertEquals("f_i.sc", cs.getName());
        String[] text =
                {"213 1 27 202 32 171 -20 21 28 hstem", "99 74 366 75 vstem",
                        "173 410 rmoveto", "578 callsubr", "441 140 rmoveto",
                        "20 11 12 31 vhcurveto", "21 hlineto",
                        "4 2 2 3 hvcurveto", "0 21 -1 2 rlineto",
                        "0 -73 -2 -28 -31 -79 2 0 vhcurveto",
                        "-2 -2 0 -22 rlineto", "-3 4 -1 3 vhcurveto",
                        "21 hlineto", "30 12 -10 -22 hvcurveto",
                        "-337 vlineto", "-19 -11 -18 -31 vhcurveto",
                        "-21 hlineto", "-4 -2 -2 -4 hvcurveto",
                        "0 -21 1 -2 rlineto", "0 85 2 27 31 68 -2 0 vhcurveto",
                        "1 2 0 21 rlineto", "4 -3 2 -3 vhcurveto",
                        "-21 hlineto", "-31 -11 15 22 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : f_j
     */
    public void testf_j() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_j");
        assertNotNull(cs);
        assertEquals("f_j", cs.getName());
        String[] text =
                {
                        "28 -213 29 185 27 363 39 237 33 hstem",
                        "92 75 210 75 vstem",
                        "377 37 rmoveto",
                        "-141 -30 -80 -44 vhcurveto",
                        "-11 0 -5 5 -3 10 -5 16 -10 24 -23 0 rrcurveto",
                        "-4 -25 -3 -32 -34 60 -15 30 hvcurveto",
                        "24 0 29 12 27 27 55 55 10 56 0 130 rrcurveto",
                        "377 -15 vlineto",
                        "-14 0 -32 -14 -35 0 rrcurveto",
                        "-189 59 hlineto",
                        "154 68 24 33 vhcurveto",
                        "32 0 31 -12 9 -42 11 -55 17 -24 31 0 20 0 20 18 0 21 0 37 -33 39 -37 24 -25 17 -26 10 -38 0 rrcurveto",
                        "-84 -104 -56 -197 hvcurveto", "-17 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto", "-14 vlineto",
                        "-4 1 -1 4 vhcurveto", "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 82 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "", "-33 hlineto",
                        "-33 -10 15 29 hvcurveto", "319 181 vlineto",
                        "26 3 -12 -40 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_k
     */
    public void testf_k() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_k");
        assertNotNull(cs);
        assertEquals("f_k", cs.getName());
        String[] text =
                {
                        "260 1 27 363 39 -28 27 237 34 hstemhm",
                        "92 75 194 75 hintmask 10111100",
                        "436 210 rmoveto",
                        "31 8 14 -19 17 -23 rrcurveto",
                        "73 -103 rlineto",
                        "20 -29 3 -12 0 -12 rrcurveto",
                        "0 -17 3 -4 rlineto",
                        "0 26 2 36 39 50 -2 0 vhcurveto",
                        "2 3 0 18 rlineto",
                        "5 -6 3 -7 vhcurveto",
                        "-3 hlineto",
                        "-25 0 -31 18 -18 27 rrcurveto",
                        "-118 173 rlineto",
                        "-5 8 -2 9 6 7 rrcurveto",
                        "77 84 rlineto",
                        "24 26 45 22 26 0 rrcurveto",
                        "8 hlineto",
                        "4 6 3 5 hvcurveto",
                        "0 19 -3 2 rlineto",
                        "0 -55 -2 -39 -35 -48 2 0 vhcurveto",
                        "-3 -2 0 -19 rlineto",
                        "-4 4 -4 5 vhcurveto",
                        "4 hlineto",
                        "23 6 -8 -8 hvcurveto",
                        "0 -10 -5 -13 -15 -16 -56 -60 -33 -31 -45 -21 rrcurveto",
                        "463 -22 vlineto",
                        "-17 -8 -11 -8 -14 -5 -22 15 -26 8 -35 0 rrcurveto",
                        "-84 -113 -72 -156 hvcurveto",
                        "hintmask 11011100",
                        "-42 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 67 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-18 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 95 vlineto",
                        "9 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 59 hlineto",
                        "154 70 23 33 vhcurveto",
                        "30 0 19 -16 13 -32 6 -14 10 -9 12 -4 1 -4 0 -4 0 -5 rrcurveto",
                        "-506 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 40 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : f_l
     */
    public void testf_l() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_l");
        assertNotNull(cs);
        assertEquals("f_l", cs.getName());
        String[] text =
                {
                        "25 1 27 363 39 234 34 hstem",
                        "92 75 194 75 vstem",
                        "361 72 rmoveto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-9 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 58 2 35 40 72 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-23 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "626 -22 vlineto",
                        "-17 -8 -11 -10 -14 -5 -22 15 -26 8 -35 0 rrcurveto",
                        "-84 -113 -73 -156 hvcurveto",
                        "-39 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 67 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-18 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 95 vlineto",
                        "9 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 56 hlineto",
                        "154 70 24 33 vhcurveto",
                        "30 0 19 -16 13 -33 6 -13 10 -10 12 -4 1 -4 0 -4 0 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_l_sc
     */
    public void testf_l_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_l.sc");
        assertNotNull(cs);
        assertEquals("f_l.sc", cs.getName());
        String[] text =
                {"362 1 27 202 32 171 -20 21 28 hstem",
                        "99 74 366 75 206 26 vstem", "173 410 rmoveto",
                        "578 callsubr", "397 -261 rmoveto",
                        "73 -1 196 0 7 122 -26 3 rlineto",
                        "-11 -56 -23 -40 -48 0 rrcurveto", "-96 hlineto",
                        "-17 -11 6 19 hvcurveto", "348 vlineto",
                        "20 11 12 31 vhcurveto", "21 hlineto",
                        "4 2 2 4 hvcurveto", "0 20 -1 2 rlineto",
                        "0 -85 -2 -28 -30 -68 2 0 vhcurveto",
                        "-2 -2 0 -20 rlineto", "-4 4 -2 3 vhcurveto",
                        "21 hlineto", "30 12 -10 -22 hvcurveto",
                        "-342 vlineto", "-25 -7 -7 -33 vhcurveto",
                        "-23 hlineto", "-4 -3 -2 -4 hvcurveto", "",
                        "0 -21 2 -2 rlineto", "79 1 11 1 9 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : f_t
     */
    public void testf_t() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("f_t");
        assertNotNull(cs);
        assertEquals("f_t", cs.getName());
        String[] text =
                {
                        "74 -11 56 -44 27 363 39 236 34 hstemhm",
                        "92 75 198 74 -57 57 hintmask 01111100",
                        "92 72 rmoveto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 82 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-33 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "319 198 -302 vlineto",
                        "hintmask 10111100",
                        "-72 31 -28 46 vhcurveto",
                        "50 0 42 29 26 40 rrcurveto",
                        "-16 14 rlineto",
                        "-15 -12 -28 -15 -28 0 rrcurveto",
                        "-27 -7 29 62 hvcurveto",
                        "255 112 39 vlineto",
                        "hintmask 01111010",
                        "-112 154 hlineto",
                        "-57 -20 0 -19 rlineto",
                        "-79 -9 -36 -78 vhcurveto",
                        "-128 59 hlineto",
                        "154 38 23 33 vhcurveto",
                        "30 0 19 -16 13 -32 8 -18 13 -11 20 0 19 0 15 15 0 21 0 17 -9 16 -20 15 -25 18 -26 9 -38 0 rrcurveto",
                        "-84 -81 -72 -156 hvcurveto", "-42 -51 vlineto",
                        "-18 -5 -12 -8 hvcurveto", "-14 vlineto",
                        "-4 1 -1 4 vhcurveto", "69 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : fahrenheit
     */
    public void testfahrenheit() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fahrenheit");
        assertNotNull(cs);
        assertEquals("fahrenheit", cs.getName());
        String[] text =
                {"301 -1 29 246 34 150 28 51 39 -28 29 53 28 hstemhm",
                        "44 33 133 33 153 80 190 24 hintmask 1110011111000000",
                        "44 558 rmoveto",
                        "-55 44 -45 56 55 44 45 55 55 -44 45 -55 vhcurveto",
                        "-56 -44 -45 -55 hvcurveto", "166 -1 rmoveto",
                        "498 callsubr", "266 -53 rmoveto",
                        "hintmask 1111011111000000", "24 12 9 24 vhcurveto",
                        "122 hlineto", "75 0 18 -52 22 -68 rrcurveto",
                        "29 4 rlineto", "hintmask 1110111111000000",
                        "-7 41 -9 61 -5 54 rrcurveto",
                        "hintmask 1111011111000000", "-248 -1 -74 -1 rlineto",
                        "hintmask 1110111111000000",
                        "-125 2 -4 -2 0 -20 rlineto", "-2 1 -5 7 vhcurveto",
                        "30 hlineto", "43 9 -15 -29 hvcurveto", "-432 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 vhcurveto", "125 -2 2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "202 132 vlineto",
                        "34 0 11 -15 6 -29 rrcurveto", "6 -31 rlineto",
                        "-3 2 -4 6 vhcurveto", "23 0 2 3 rlineto",
                        "-4 32 -4 30 0 34 0 34 5 38 3 23 rrcurveto",
                        "3 -1 2 -2 vhcurveto", "-22 hlineto",
                        "-4 -3 -4 -5 hvcurveto", "-7 -29 rlineto",
                        "-7 -28 -8 -17 -36 0 rrcurveto", "-132 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : female
     */
    public void testfemale() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("female");
        assertNotNull(cs);
        assertEquals("female", cs.getName());
        String[] text =
                {
                        "56 -46 204 -204 46 500 50 hstemhm",
                        "58 50 141 59 -56 52 146 50 hintmask 10110010",
                        "279 500 rmoveto",
                        "98 73 -79 -91 -93 -72 -79 -99 -99 -72 79 93 hvcurveto",
                        "93 75 77 96 vhcurveto", "hintmask 01111010",
                        "-30 -389 rmoveto", "551 callsubr",
                        "hintmask 10110110", "552 callsubr",
                        "hintmask 01111010", "107 46 -106 hlineto",
                        "3 111 rlineto", "117 16 75 98 0 105 rrcurveto",
                        "108 -83 112 -137 -129 -93 -101 -119 vhcurveto",
                        "0 -95 65 -106 126 -18 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : figuredash
     */
    public void testfiguredash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("figuredash");
        assertNotNull(cs);
        assertEquals("figuredash", cs.getName());
        String[] text =
                {"-63 287 48 hstem", "378 287 rmoveto",
                        "13 13 21 12 9 -3 6 -11 hvcurveto", "-332 hlineto",
                        "-12 -13 -17 -16 -9 6 -6 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : figurespace
     */
    public void testfigurespace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("figurespace");
        assertNotNull(cs);
        assertEquals("figurespace", cs.getName());
        String[] text = {"-63 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : filledbox
     */
    public void testfilledbox() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("filledbox");
        assertNotNull(cs);
        assertEquals("filledbox", cs.getName());
        String[] text =
                {"75 21 -21 430 -20 hstem", "73 430 vstem", "73 430 rmoveto",
                        "-430 430 430 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : five
     */
    public void testfive() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("five");
        assertNotNull(cs);
        assertEquals("five", cs.getName());
        String[] text =
                {
                        "-63 -12 34 301 47 135 63 hstem",
                        "309 72 vstem",
                        "309 169 rmoveto",
                        "-87 -53 -60 -64 vhcurveto",
                        "-32 0 -16 20 -15 18 -12 16 -13 15 -20 0 rrcurveto",
                        "-18 -16 -13 -19 -39 83 -32 57 113 78 86 112 92 -59 92 -106 hvcurveto",
                        "-39 0 -36 -7 -21 -8 rrcurveto", "19 158 rlineto",
                        "35 -4 34 -4 45 0 28 0 32 1 39 4 rrcurveto",
                        "15 65 -6 3 rlineto",
                        "-54 -6 -52 -4 -50 0 -35 0 -34 2 -33 3 rrcurveto",
                        "-32 -273 rlineto", "39 16 35 7 46 0 rrcurveto",
                        "62 56 -51 -103 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : five_fitted
     */
    public void testfive_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("five.fitted");
        assertNotNull(cs);
        assertEquals("five.fitted", cs.getName());
        String[] text =
                {
                        "-79 -12 34 301 47 135 63 hstem",
                        "305 72 vstem",
                        "305 169 rmoveto",
                        "-87 -53 -60 -64 vhcurveto",
                        "-32 0 -17 20 -14 18 -13 16 -12 15 -20 0 rrcurveto",
                        "-18 -16 -13 -19 -39 83 -32 57 113 78 86 112 92 -59 92 -107 hvcurveto",
                        "-38 0 -36 -7 -21 -8 rrcurveto", "18 158 rlineto",
                        "35 -4 35 -4 45 0 27 0 33 1 39 4 rrcurveto",
                        "15 65 -6 3 rlineto",
                        "-54 -6 -53 -4 -49 0 -35 0 -35 2 -32 3 rrcurveto",
                        "-33 -273 rlineto", "39 16 36 7 46 0 rrcurveto",
                        "62 56 -51 -103 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : five_inferior
     */
    public void testfive_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("five.inferior");
        assertNotNull(cs);
        assertEquals("five.inferior", cs.getName());
        String[] text =
                {
                        "-194 -117 24 168 27 70 35 hstem",
                        "203 57 vstem",
                        "203 -14 rmoveto",
                        "-41 -17 -38 -45 vhcurveto",
                        "-22 0 -11 10 -9 9 -8 8 -8 7 -13 0 rrcurveto",
                        "-10 -12 -8 -13 -24 60 -13 34 69 49 53 60 54 -36 52 -78 hvcurveto",
                        "-14 0 -25 -5 -9 -6 rrcurveto",
                        "12 81 125 0 0 1 5 34 -153 0 -22 -143 6 -3 rlineto",
                        "14 7 21 7 22 0 rrcurveto", "72 3 -59 -30 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : five_oldstyle
     */
    public void testfive_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("five.oldstyle");
        assertNotNull(cs);
        assertEquals("five.oldstyle", cs.getName());
        String[] text =
                {"-56 -148 34 301 47 135 63 hstem", "319 73 vstem",
                        "319 33 rmoveto", "562 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : five_superior
     */
    public void testfive_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("five.superior");
        assertNotNull(cs);
        assertEquals("five.superior", cs.getName());
        String[] text =
                {
                        "-194 358 25 167 27 71 34 hstem",
                        "203 57 vstem",
                        "203 462 rmoveto",
                        "-42 -17 -37 -45 vhcurveto",
                        "-22 0 -11 10 -9 9 -8 8 -8 7 -13 0 rrcurveto",
                        "-10 -12 -9 -12 -24 60 -14 34 69 49 54 59 54 -36 52 -78 hvcurveto",
                        "-14 0 -25 -5 -9 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -22 -142 6 -4 rlineto",
                        "14 7 21 7 22 0 rrcurveto", "72 3 -59 -29 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : five_taboldstyle
     */
    public void testfive_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("five.taboldstyle");
        assertNotNull(cs);
        assertEquals("five.taboldstyle", cs.getName());
        String[] text =
                {"-63 -148 34 301 47 135 63 hstem", "319 73 vstem",
                        "319 33 rmoveto", "562 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fiveeighths
     */
    public void testfiveeighths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fiveeighths");
        assertNotNull(cs);
        assertEquals("fiveeighths", cs.getName());
        String[] text =
                {
                        "159 -86 22 286 22 67 24 167 27 71 34 hstemhm",
                        "199 57 134 47 -33 44 103 44 -28 54 hintmask 1111111001000000",
                        "493 78 rmoveto", "29 -14 rlineto",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-42 -29 -16 -36 -24 -41 15 45 vhcurveto",
                        "0 34 41 39 15 9 rrcurveto",
                        "hintmask 1111110110000000", "102 98 rmoveto",
                        "505 callsubr", "hintmask 1111111001000000",
                        "-38 -20 -44 -36 0 -37 rrcurveto",
                        "-65 67 -17 44 90 30 57 32 vhcurveto",
                        "0 31 -17 26 -32 16 rrcurveto", "-39 22 rlineto",
                        "59 33 3 30 0 15 rrcurveto", "-94 46 rmoveto",
                        "hintmask 1111110110000000", "35 15 -19 -27 hvcurveto",
                        "0 -29 -23 -27 -15 -10 rrcurveto", "-21 11 rlineto",
                        "-36 20 -8 22 0 16 rrcurveto", "29 24 14 29 vhcurveto",
                        "-302 192 rmoveto", "503 callsubr", "333 187 rmoveto",
                        "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fiveroman
     */
    public void testfiveroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fiveroman");
        assertNotNull(cs);
        assertEquals("fiveroman", cs.getName());
        String[] text =
                {"-3 9 -21 414 27 hstem", "330 402 rmoveto", "2 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fivesixths
     */
    public void testfivesixths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fivesixths");
        assertNotNull(cs);
        assertEquals("fivesixths", cs.getName());
        String[] text =
                {
                        "159 -85 24 149 24 198 24 168 27 71 34 hstem",
                        "202 57 129 54 119 56 vstem",
                        "617 16 rmoveto",
                        "504 callsubr",
                        "-56 -5 rmoveto",
                        "-37 -7 -35 -44 -29 -39 23 84 vhcurveto",
                        "19 vlineto",
                        "22 17 22 6 14 0 rrcurveto",
                        "56 5 -55 -22 hvcurveto",
                        "-359 403 rmoveto",
                        "",
                        "-42 -17 -38 -45 vhcurveto",
                        "-22 0 -11 10 -9 10 -8 7 -7 7 -14 0 rrcurveto",
                        "-10 -12 -8 -13 -23 60 -14 34 69 49 53 60 54 -36 52 -77 hvcurveto",
                        "-15 0 -25 -5 -9 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -22 -143 6 -3 rlineto",
                        "14 7 21 7 22 0 rrcurveto", "72 3 -59 -29 hvcurveto",
                        "330 187 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : florin
     */
    public void testflorin() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("florin");
        assertNotNull(cs);
        assertEquals("florin", cs.getName());
        String[] text =
                {
                        "-51 -172 37 526 39 239 29 hstem",
                        "326 698 rmoveto",
                        "-58 0 -62 -67 -19 -148 -4 -29 -15 -24 -36 0 rrcurveto",
                        "-36 0 -6 -39 83 0 -12 -113 rlineto",
                        "-19 -182 12 -231 -84 0 -21 0 7 19 -7 12 -6 13 -10 8 -17 0 rrcurveto",
                        "-19 -12 -18 -15 -18 18 -38 56 hvcurveto",
                        "120 0 18 147 45 399 rrcurveto",
                        "2 17 106 0 5 39 -105 0 14 111 rlineto",
                        "15 106 28 22 18 0 24 0 4 -36 7 -15 8 -16 12 -9 20 0 rrcurveto",
                        "20 12 17 20 29 -26 39 -80 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : four
     */
    public void testfour() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("four");
        assertNotNull(cs);
        assertEquals("four", cs.getName());
        String[] text =
                {"-63 1 27 125 47 378 -20 hstem", "258 68 vstem",
                        "258 355 rmoveto", "-94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : four_fitted
     */
    public void testfour_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("four.fitted");
        assertNotNull(cs);
        assertEquals("four.fitted", cs.getName());
        String[] text =
                {
                        "-70 1 27 125 47 378 -20 hstem",
                        "249 67 vstem",
                        "249 355 rmoveto",
                        "-155 -159 vlineto",
                        "74 116 73 130 45 121 -11 2 -22 9 -1 0 -4 0 -2 -1 -1 -4 -36 -82 -116 -223 -65 -72 -1 -1 0 -1 0 -1 rrcurveto",
                        "0 -2 13 -21 8 -11 rlineto", "3 -4 1 -2 4 0 rrcurveto",
                        "197 -83 hlineto", "-29 -3 -13 -31 vhcurveto",
                        "-27 hlineto", "-6 -1 -5 -2 hvcurveto", "-22 vlineto",
                        "0 59 2 38 41 65 -2 0 vhcurveto", "22 vlineto",
                        "2 -2 5 -6 vhcurveto", "-26 hlineto",
                        "-29 -5 14 28 hvcurveto", "83 76 vlineto",
                        "5 47 -81 0 0 161 rlineto", "20 0 11 -14 vhcurveto",
                        "-14 0 -18 -9 -12 -8 -8 -5 -1 -8 0 -7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : four_inferior
     */
    public void testfour_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("four.inferior");
        assertNotNull(cs);
        assertEquals("four.inferior", cs.getName());
        String[] text =
                {"", "-194 -110 23 75 34 hstem", "181 46 vstem",
                        "227 127 rmoveto", "9 -7 1 -6 vhcurveto",
                        "-7 0 -12 -12 -7 -9 -2 -3 -5 -8 0 -6 rrcurveto",
                        "-77 -91 vlineto",
                        "126 186 -29 10 -154 -218 4 -12 144 0 0 -50 rlineto",
                        "-22 -5 -3 -18 vhcurveto", "-14 hlineto",
                        "-4 -1 -2 -2 hvcurveto", "-20 vlineto",
                        "0 37 1 24 27 43 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 2 -4 vhcurveto", "-16 hlineto",
                        "-19 -3 6 19 hvcurveto", "50 51 vlineto",
                        "3 34 -54 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : four_oldstyle
     */
    public void testfour_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("four.oldstyle");
        assertNotNull(cs);
        assertEquals("four.oldstyle", cs.getName());
        String[] text =
                {
                        "-37 42 49 351 -20 hstem",
                        "289 70 vstem",
                        "289 -141 rmoveto",
                        "173 vlineto",
                        "8 0 2 -9 vhcurveto",
                        "-205 hlineto",
                        "-4 0 -1 1 -3 4 rrcurveto",
                        "-8 12 -13 21 0 2 rlineto",
                        "0 1 0 1 1 1 80 88 115 186 40 78 2 3 2 2 4 0 1 0 25 -14 12 -2 -48 -100 -111 -182 -47 -53 rrcurveto",
                        "157 hlineto",
                        "9 1 2 8 hvcurveto",
                        "130 vlineto",
                        "0 7 1 8 8 5 12 8 20 8 15 1 14 1 0 -12 0 -20 rrcurveto",
                        "-136 vlineto", "-6 1 -4 7 vhcurveto",
                        "68 0 -6 -49 -62 0 rlineto", "-7 -1 -1 -7 hvcurveto",
                        "0 -162 -59 -31 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : four_superior
     */
    public void testfour_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("four.superior");
        assertNotNull(cs);
        assertEquals("four.superior", cs.getName());
        String[] text =
                {"-194 365 24 74 35 hstem", "181 46 vstem", "227 603 rmoveto",
                        "8 -7 2 -6 vhcurveto",
                        "-7 0 -12 -12 -7 -9 -2 -3 -5 -8 0 -7 rrcurveto",
                        "-76 -91 vlineto", "22 34 59 82 45 70 rrcurveto",
                        "-29 9 -154 -218 4 -12 144 0 0 -50 rlineto",
                        "-21 -5 -3 -18 vhcurveto", "-14 hlineto",
                        "-4 -1 -3 -1 hvcurveto", "-21 vlineto",
                        "0 37 1 24 27 43 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 3 -4 vhcurveto", "-16 hlineto",
                        "-19 -3 6 19 hvcurveto", "49 51 vlineto",
                        "3 35 -54 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : four_taboldstyle
     */
    public void testfour_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("four.taboldstyle");
        assertNotNull(cs);
        assertEquals("four.taboldstyle", cs.getName());
        String[] text =
                {
                        "-63 42 49 351 -20 hstem",
                        "271 71 vstem",
                        "271 -141 rmoveto",
                        "173 vlineto",
                        "8 0 2 -8 vhcurveto",
                        "-205 hlineto",
                        "-4 0 -2 1 -3 4 rrcurveto",
                        "-8 12 -12 21 rlineto",
                        "-1 0 1 1 hvcurveto",
                        "0 1 1 1 1 1 80 88 114 186 41 78 2 3 1 2 4 0 1 0 26 -14 12 -2 -48 -100 -112 -182 -47 -53 rrcurveto",
                        "157 hlineto",
                        "9 1 2 8 hvcurveto",
                        "130 vlineto",
                        "0 7 1 8 9 5 11 8 20 8 16 1 14 1 0 -12 0 -20 rrcurveto",
                        "-136 vlineto", "-6 1 -4 6 vhcurveto",
                        "68 0 -5 -49 -62 0 rlineto", "-8 0 -1 -7 hvcurveto",
                        "0 -162 -60 -31 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fourfifths
     */
    public void testfourfifths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fourfifths");
        assertNotNull(cs);
        assertEquals("fourfifths", cs.getName());
        String[] text =
                {
                        "159 -85 24 167 27 71 34 79 23 75 34 hstem",
                        "172 46 338 57 vstem",
                        "556 18 rmoveto",
                        "-41 -17 -38 -45 vhcurveto",
                        "-22 0 -11 10 -9 9 -8 8 -7 7 -14 0 rrcurveto",
                        "-10 -12 -9 -12 -24 60 -13 34 69 49 53 59 55 -36 51 -77 hvcurveto",
                        "-15 0 -25 -5 -9 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -22 -142 6 -4 rlineto",
                        "14 8 21 6 22 0 rrcurveto", "72 3 -59 -29 hvcurveto",
                        "-338 537 rmoveto", "8 -7 1 -6 vhcurveto",
                        "-7 0 -11 -12 -8 -9 -2 -2 -5 -8 0 -7 rrcurveto",
                        "-77 -91 vlineto",
                        "127 186 -30 10 -154 -218 4 -12 144 0 0 -50 rlineto",
                        "-22 -5 -3 -18 vhcurveto", "-14 hlineto",
                        "-4 -1 -2 -2 hvcurveto", "-20 vlineto",
                        "0 37 1 24 27 43 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 2 -4 vhcurveto", "-16 hlineto",
                        "-18 -4 7 18 hvcurveto", "50 52 vlineto",
                        "2 34 -54 0 rlineto", "314 152 rmoveto", "20 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fourperemspace
     */
    public void testfourperemspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fourperemspace");
        assertNotNull(cs);
        assertEquals("fourperemspace", cs.getName());
        String[] text = {"-252 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fourroman
     */
    public void testfourroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fourroman");
        assertNotNull(cs);
        assertEquals("fourroman", cs.getName());
        String[] text =
                {"201 1 27 374 27 94 96 hstemhm",
                        "88 96 -87 74 hintmask 11101000", "97 358 rmoveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto", "",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-19 hlineto", "-32 -11 15 29 hvcurveto",
                        "286 vlineto", "28 11 16 32 vhcurveto",
                        "19 0 1 0 1 0 rlineto", "29 0 22 -12 13 -36 rrcurveto",
                        "136 -345 rlineto",
                        "6 -15 7 -6 12 0 11 0 7 6 6 17 rrcurveto",
                        "138 339 rlineto", "16 39 24 13 28 0 rrcurveto",
                        "7 5 4 5 hvcurveto", "0 18 -3 2 rlineto",
                        "0 -41 -2 -27 -36 -57 2 0 vhcurveto",
                        "-4 -2 0 -20 rlineto", "-3 3 -4 5 vhcurveto",
                        "4 hlineto", "34 12 -6 -15 hvcurveto",
                        "0 -7 -4 -9 -4 -11 rrcurveto",
                        "-89 -219 -18 -43 -17 46 -86 218 rlineto",
                        "-6 14 -3 8 0 7 0 10 8 6 21 1 rrcurveto", "17 hlineto",
                        "2 6 1 7 hvcurveto", "0 19 -4 2 rlineto",
                        "0 -61 -2 -39 vhcurveto",
                        "-24 0 -33 1 -18 0 rrcurveto", "1 -7 vlineto",
                        "-5 -1 hlineto", "-22 0 -45 -1 -29 0 rrcurveto",
                        "-35 -68 2 0 hvcurveto", "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto", "19 hlineto",
                        "33 10 -16 -28 hvcurveto", "hintmask 11110000",
                        "-9 213 rmoveto", "-15 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : fraction
     */
    public void testfraction() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("fraction");
        assertNotNull(cs);
        assertEquals("fraction", cs.getName());
        String[] text =
                {"-457 224 601 rmoveto", "-458 -655 41 0 459 655 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : franc
     */
    public void testfranc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("franc");
        assertNotNull(cs);
        assertEquals("franc", cs.getName());
        String[] text =
                {"-63 1 27 206 39 47 39 174 39 -26 26 hstemhm",
                        "109 80 216 27 hintmask 11110110", "305 359 rmoveto",
                        "-116 142 hlineto", "26 15 6 22 vhcurveto",
                        "70 hlineto", "65 0 29 -53 15 -72 rrcurveto",
                        "27 4 rlineto", "hintmask 11101110", "-20 160 rlineto",
                        "hintmask 11110110", "-185 0 rlineto",
                        "hintmask 11101110", "-78 hlineto",
                        "-13 -115 2 0 hvcurveto", "-1 -2 0 -18 rlineto",
                        "-5 3 -3 4 vhcurveto", "30 hlineto",
                        "43 9 -10 -35 hvcurveto",
                        "-142 -87 -39 87 -47 -87 -39 87 -162 vlineto",
                        "-31 -15 -13 -40 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 87 2 39 36 93 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -3 3 -4 vhcurveto", "-27 hlineto",
                        "-41 -14 16 28 hvcurveto",
                        "162 116 39 -116 47 116 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : g
     */
    public void testg() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("g");
        assertNotNull(cs);
        assertEquals("g", cs.getName());
        String[] text =
                {
                        "-17 -235 37 191 57 86 30 246 28 hstemhm",
                        "33 59 -32 71 -63 49 199 73 21 48 hintmask 1111010110000000",
                        "433 388 rmoveto",
                        "20 14 14 22 21 -18 17 -26 hvcurveto",
                        "-25 0 -45 -17 -25 -34 -11 8 -35 23 -56 0 -85 0 -81 -59 0 -92 0 -55 23 -34 27 -27 rrcurveto",
                        "hintmask 1111001110000000",
                        "-20 callsubr",
                        "hintmask 1111100110000000",
                        "-51 -32 -27 -46 0 -43 rrcurveto",
                        "-87 81 -27 73 129 142 57 108 vhcurveto",
                        "0 32 -15 24 -27 25 -40 34 -66 7 -35 0 -17 0 -25 -2 -23 -3 -14 -1 -12 -1 -5 0 -28 0 -33 11 0 43 0 20 6 21 11 17 rrcurveto",
                        "23 -14 30 -7 37 0 84 0 80 53 0 98 0 47 -13 29 -28 30 7 10 19 14 12 0 7 0 4 -3 6 -9 rrcurveto",
                        "4 -8 10 -9 16 0 rrcurveto",
                        "-304 -395 rmoveto",
                        "14 -3 8 -2 16 0 11 0 15 0 14 1 14 1 11 1 8 0 48 0 41 -11 28 -14 39 -19 14 -17 0 -26 rrcurveto",
                        "-72 -109 -30 -86 -34 -90 22 75 vhcurveto",
                        "0 34 7 31 31 29 rrcurveto",
                        "187 290 rmoveto",
                        "-100 -51 -17 -35 -80 -20 82 52 78 35 36 52 60 39 -48 -83 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : g_sc
     */
    public void testg_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("g.sc");
        assertNotNull(cs);
        assertEquals("g.sc", cs.getName());
        String[] text =
                {"38 -12 27 178 25 229 27 hstem", "38 78 277 74 vstem",
                        "393 162 rmoveto", "579 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : g_superior
     */
    public void testg_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("g.superior");
        assertNotNull(cs);
        assertEquals("g.superior", cs.getName());
        String[] text =
                {
                        "-186 220 30 105 40 -38 42 50 22 144 22 hstemhm",
                        "17 41 -25 50 -46 37 117 51 5 34 hintmask 1001101011000000",
                        "191 539 rmoveto",
                        "-61 -28 -7 -22 -49 -9 46 33 48 18 17 32 vhcurveto",
                        "37 21 -25 -51 hvcurveto",
                        "-112 -179 rmoveto",
                        "hintmask 1101110011000000",
                        "6 -3 10 -2 7 0 7 0 9 0 9 1 rrcurveto",
                        "hintmask 1011110011000000",
                        "8 0 7 1 5 0 30 0 20 -6 17 -9 25 -12 8 -8 0 -16 rrcurveto",
                        "-45 -62 -11 -53 -21 -53 7 46 vhcurveto",
                        "0 21 2 19 19 17 rrcurveto",
                        "187 240 rmoveto",
                        "12 11 10 14 12 -13 13 -25 hvcurveto",
                        "-22 0 -18 -9 -16 -18 -9 6 -19 9 -29 0 rrcurveto",
                        "hintmask 1011101011000000",
                        "-52 -53 -36 -57 hvcurveto",
                        "0 -34 17 -21 17 -16 rrcurveto",
                        "hintmask 1011100111000000",
                        "-16 -15 -14 -27 0 -21 0 -22 16 -15 15 -8 rrcurveto",
                        "hintmask 1011110011000000",
                        "-31 -20 -20 -28 0 -26 rrcurveto",
                        "-54 53 -17 45 79 87 35 67 vhcurveto",
                        "0 20 -9 17 -17 15 -24 22 -41 3 -22 0 -10 0 -15 -1 -14 -2 rrcurveto",
                        "hintmask 1101100111000000",
                        "-9 0 -7 -1 -3 0 -17 0 -19 4 0 27 rrcurveto",
                        "hintmask 1011101011000000",
                        "0 12 2 13 7 10 14 -8 18 -4 23 0 51 0 53 32 0 61 0 29 -11 17 -17 19 3 5 6 9 7 0 9 0 6 -3 3 -6 rrcurveto",
                        "2 -7 6 -5 10 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gamma
     */
    public void testgamma() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gamma");
        assertNotNull(cs);
        assertEquals("gamma", cs.getName());
        String[] text =
                {
                        "-1 379 63 hstem",
                        "184 54 32 34 121 48 vstem",
                        "269 -55 rmoveto",
                        "1 -7 0 -6 0 -7 rrcurveto",
                        "-100 -13 -22 -8 -4 -7 5 19 vhcurveto",
                        "0 25 8 52 23 41 rrcurveto",
                        "204 442 rmoveto",
                        "31 -27 24 -33 -24 -21 -13 -29 vhcurveto",
                        "0 -25 21 -19 12 -5 14 -7 10 -8 0 -21 0 -58 -62 -117 -72 -115 -18 138 -29 101 -35 98 -16 47 -17 33 -64 0 -62 0 -36 -67 -17 -51 rrcurveto",
                        "28 -9 rlineto",
                        "16 35 20 29 24 0 18 0 13 -8 11 -17 58 -95 44 -119 32 -145 -51 -70 -26 -58 0 -47 rrcurveto",
                        "-29 10 -57 41 59 10 130 35 vhcurveto",
                        "0 28 -2 29 -5 30 121 170 55 152 0 79 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gammalatin
     */
    public void testgammalatin() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gammalatin");
        assertNotNull(cs);
        assertEquals("gammalatin", cs.getName());
        String[] text =
                {"22 -202 36 568 27 hstem", "170 47 69 59 vstem",
                        "217 -129 rmoveto",
                        "0 16 16 30 23 41 27 -69 3 -11 0 -12 rrcurveto",
                        "-18 -16 -14 -18 -22 -13 13 24 vhcurveto",
                        "31 -73 rmoveto", "58 39 36 41 hvcurveto",
                        "0 36 -9 45 -41 80 rrcurveto", "138 320 rlineto",
                        "15 37 14 9 30 0 rrcurveto", "7 hlineto",
                        "6 4 3 5 hvcurveto", "21 vlineto",
                        "0 -43 -2 -28 -33 -52 2 0 vhcurveto", "-22 vlineto",
                        "-3 1 -4 4 vhcurveto", "16 hlineto",
                        "19 7 -5 -10 hvcurveto",
                        "0 -7 -3 -10 -5 -14 rrcurveto",
                        "-121 -275 -18 42 -95 233 rlineto",
                        "-4 11 -3 8 0 8 rrcurveto", "12 7 7 19 vhcurveto",
                        "16 hlineto", "2 4 1 7 hvcurveto", "21 vlineto",
                        "0 -61 -2 -39 -35 -54 2 0 vhcurveto", "-22 vlineto",
                        "-4 4 -3 5 vhcurveto", "7 hlineto",
                        "36 0 10 -19 11 -29 rrcurveto",
                        "150 -355 -46 -82 rlineto",
                        "-9 -17 -8 -16 0 -23 rrcurveto",
                        "-38 33 -25 45 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gammalatin_superior
     */
    public void testgammalatin_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gammalatin.superior");
        assertNotNull(cs);
        assertEquals("gammalatin.superior", cs.getName());
        String[] text =
                {"-196 358 24 277 22 hstem", "87 35 60 40 vstem",
                        "122 411 rmoveto", "0 12 13 22 19 31 rrcurveto",
                        "5 -8 rlineto", "20 -29 3 -14 0 -9 rrcurveto",
                        "-19 -11 -15 -20 -17 -12 10 19 vhcurveto",
                        "25 -53 rmoveto", "58 17 42 16 hvcurveto",
                        "0 9 0 26 -41 63 rrcurveto", "2 6 76 125 rlineto",
                        "7 11 14 3 15 0 rrcurveto", "0 22 -1 2 rlineto",
                        "-18 -1 -14 -1 -17 0 -15 0 -23 1 -17 1 rrcurveto",
                        "-1 -2 0 -22 rlineto", "26 0 14 -2 -8 -17 rrcurveto",
                        "-59 -99 -54 100 rlineto", "-6 12 -3 6 34 0 rrcurveto",
                        "0 22 -1 2 rlineto",
                        "-29 -2 -27 0 -15 0 -18 0 -12 1 -15 1 rrcurveto",
                        "-1 -2 0 -19 rlineto", "-3 2 0 2 vhcurveto",
                        "16 0 19 -5 8 -16 rrcurveto",
                        "75 -139 -33 -50 rlineto",
                        "-7 -12 -10 -18 0 -16 rrcurveto",
                        "-29 25 -16 35 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gbreve
     */
    public void testgbreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gbreve");
        assertNotNull(cs);
        assertEquals("gbreve", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 35 57 hstemhm",
                        "33 58 -31 70 -62 50 -33 27 204 73 -60 26 55 48 hintmask 1001011010000100",
                        "433 388 rmoveto", "96 callsubr",
                        "hintmask 1011101010000100", "97 callsubr",
                        "hintmask 1011001001000100", "-20 callsubr",
                        "hintmask 1011001100000100", "98 callsubr",
                        "hintmask 1101011001010100", "99 callsubr",
                        "-304 -395 rmoveto", "100 callsubr",
                        "hintmask 1011001100000100", "101 callsubr",
                        "hintmask 1001101010010100", "187 290 rmoveto",
                        "-100 -51 -17 -35 -80 -20 82 52 78 35 36 52 vhcurveto",
                        "60 39 -48 -83 hvcurveto", "hintmask 1001001000101100",
                        "-204 363 rmoveto", "-27 -14 rlineto",
                        "8 -78 51 -57 77 0 50 0 75 34 9 101 rrcurveto",
                        "-26 14 rlineto", "-2 -63 -60 -29 -46 0 rrcurveto",
                        "-60 0 -47 40 -2 52 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gbreve_sc
     */
    public void testgbreve_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gbreve.sc");
        assertNotNull(cs);
        assertEquals("gbreve.sc", cs.getName());
        String[] text =
                {"38 -12 27 178 25 229 27 39 57 hstemhm",
                        "38 78 36 27 214 74 -71 27 hintmask 11111110",
                        "393 162 rmoveto", "579 callsubr", "-214 500 rmoveto",
                        "-27 -14 rlineto", "8 -77 51 -58 77 0 rrcurveto",
                        "hintmask 11111101", "50 0 75 35 10 100 rrcurveto",
                        "-27 14 rlineto",
                        "-2 -62 -60 -30 -46 0 -60 0 -47 41 -2 51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gcaron
     */
    public void testgcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gcaron");
        assertNotNull(cs);
        assertEquals("gcaron", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 hstemhm",
                        "33 58 -31 70 -62 50 198 73 21 48 hintmask 1001010101100000",
                        "433 388 rmoveto",
                        "96 callsubr",
                        "hintmask 1011100101100000",
                        "97 callsubr",
                        "hintmask 1011000011100000",
                        "-20 callsubr",
                        "hintmask 1011001001100000",
                        "98 callsubr",
                        "hintmask 1101010011100000",
                        "99 callsubr",
                        "-304 -395 rmoveto",
                        "100 callsubr",
                        "hintmask 1011001001100000",
                        "101 callsubr",
                        "187 290 rmoveto",
                        "102 callsubr",
                        "hintmask 1001100101100000",
                        "103 callsubr",
                        "-121 225 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -26 -34 -26 -37 -38 -34 36 -32 26 -39 28 rrcurveto",
                        "-21 -13 rlineto", "35 -37 38 -46 28 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gcircumflex
     */
    public void testgcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gcircumflex");
        assertNotNull(cs);
        assertEquals("gcircumflex", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 183 -20 hstemhm",
                        "33 58 -31 70 -62 50 198 73 21 48 hintmask 1001011010110000",
                        "433 388 rmoveto", "96 callsubr",
                        "hintmask 1011101010110000", "97 callsubr",
                        "hintmask 1011001001110000", "-20 callsubr",
                        "hintmask 1011001100110000", "98 callsubr",
                        "hintmask 1101011001110000", "99 callsubr",
                        "-304 -395 rmoveto", "100 callsubr",
                        "hintmask 1011001100110000", "101 callsubr",
                        "187 290 rmoveto", "102 callsubr",
                        "hintmask 1001101010110000", "103 callsubr",
                        "-61 362 rmoveto", "-50 hlineto",
                        "-29 -46 -38 -43 -35 -40 rrcurveto", "20 -14 rlineto",
                        "37 27 32 25 37 38 34 -36 33 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 40 -36 42 -29 47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gcommaaccent
     */
    public void testgcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gcommaaccent");
        assertNotNull(cs);
        assertEquals("gcommaaccent", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 50 81 hstemhm",
                        "33 58 -31 70 -62 50 48 32 118 73 21 48 hintmask 1001011010111000",
                        "433 388 rmoveto",
                        "96 callsubr",
                        "hintmask 1011101010111000",
                        "97 callsubr",
                        "hintmask 1011001001111000",
                        "-20 callsubr",
                        "hintmask 1011001100111000",
                        "98 callsubr",
                        "hintmask 1101011001111000",
                        "99 callsubr",
                        "-304 -395 rmoveto",
                        "100 callsubr",
                        "hintmask 1011001100111000",
                        "101 callsubr",
                        "187 290 rmoveto",
                        "102 callsubr",
                        "hintmask 1001101010111000",
                        "103 callsubr",
                        "-88 229 rmoveto",
                        "36 15 24 16 16 -9 25 -41 hvcurveto",
                        "-8 0 -10 -3 -11 -6 -1 3 -1 3 0 4 0 4 2 60 77 15 rrcurveto",
                        "-4 17 rlineto", "-90 -4 -17 -76 0 -26 rrcurveto",
                        "-35 23 -37 39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gdotaccent
     */
    public void testgdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gdotaccent");
        assertNotNull(cs);
        assertEquals("gdotaccent", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 61 96 hstemhm",
                        "33 58 -31 70 -62 50 52 96 50 73 21 48 hintmask 1001011010111000",
                        "433 388 rmoveto", "96 callsubr",
                        "hintmask 1011101010111000", "97 callsubr",
                        "hintmask 1011001001111000", "-20 callsubr",
                        "hintmask 1011001100111000", "98 callsubr",
                        "hintmask 1101011001111000", "99 callsubr",
                        "-304 -395 rmoveto", "100 callsubr",
                        "hintmask 1011001100111000", "101 callsubr",
                        "187 290 rmoveto", "102 callsubr",
                        "hintmask 1001101010111000", "103 callsubr",
                        "-146 288 rmoveto", "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : germandbls
     */
    public void testgermandbls() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("germandbls");
        assertNotNull(cs);
        assertEquals("germandbls", cs.getName());
        String[] text =
                {
                        "34 -12 32 -19 27 368 34 236 32 hstemhm",
                        "92 75 69 51 74 79 -34 88 hintmask 01111110",
                        "92 477 rmoveto",
                        "-27 -11 -20 -31 -17 -6 -12 -8 vhcurveto",
                        "-9 vlineto",
                        "-4 1 -1 5 vhcurveto",
                        "44 hlineto",
                        "14 1 -4 -12 hvcurveto",
                        "-308 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "hintmask 10111110",
                        "-5 -3 -3 -5 hvcurveto",
                        "hintmask 01111110",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 40 50 -2 0 vhcurveto",
                        "2 2 rlineto",
                        "hintmask 10111110",
                        "19 vlineto",
                        "hintmask 01111110",
                        "5 -4 3 -5 -27 -16 23 35 vhcurveto",
                        "356 vlineto",
                        "108 12 116 104 53 25 -38 -54 vhcurveto",
                        "0 -73 -38 -40 -67 -52 rrcurveto",
                        "-13 vlineto",
                        "hintmask 10111101",
                        "84 -64 66 -83 0 -93 rrcurveto",
                        "-91 -36 -45 -30 -23 -30 1 30 vhcurveto",
                        "0 12 8 9 0 17 rrcurveto",
                        "20 -8 10 -20 -16 -15 -19 -16 -44 20 -52 84 92 62 80 105 vhcurveto",
                        "", "0 116 -99 68 -79 52 rrcurveto", "2 vlineto",
                        "hintmask 01111110", "70 53 54 46 0 77 rrcurveto",
                        "48 -44 63 -104 vhcurveto",
                        "-79 -121 -56 -165 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : germandbls_alt
     */
    public void testgermandbls_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("germandbls.alt");
        assertNotNull(cs);
        assertEquals("germandbls.alt", cs.getName());
        String[] text =
                {
                        "52 -12 31 -18 27 363 39 240 28 hstemhm",
                        "92 75 81 58 -47 64 58 63 14 61 hintmask 0111101110000000",
                        "92 477 rmoveto",
                        "-27 -11 -20 -40 -18 -5 -12 -8 vhcurveto",
                        "-14 vlineto",
                        "-4 1 -1 4 vhcurveto",
                        "69 -319 hlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-24 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 72 2 35 40 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-20 hlineto",
                        "-32 -10 15 29 hvcurveto",
                        "432 vlineto",
                        "0 33 5 31 15 31 23 46 34 25 49 0 46 0 42 -37 0 -54 0 -38 -16 -22 -46 -39 -39 -32 -21 -37 0 -42 0 -53 39 -37 62 -42 rrcurveto",
                        "50 -34 48 -34 0 -69 rrcurveto",
                        "hintmask 1011110110000000",
                        "-66 -50 -15 -31 vhcurveto",
                        "-24 0 -23 10 -17 18 -4 5 -3 7 0 10 rrcurveto",
                        "20 -9 17 -20 -16 -13 -11 -15 -37 42 -55 83 92 54 69 71 vhcurveto",
                        "0 87 -55 37 -47 32 rrcurveto",
                        "hintmask 0111101110000000",
                        "-79 52 -15 25 0 30 0 38 22 20 27 24 31 26 41 39 0 50 0 48 -43 62 -105 0 -31 0 -32 -5 -30 -16 rrcurveto",
                        "-109 -58 -2 -100 0 -42 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : germandbls_sc
     */
    public void testgermandbls_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("germandbls.sc");
        assertNotNull(cs);
        assertEquals("germandbls.sc", cs.getName());
        String[] text =
                {
                        "41 0 28 -25 17 220 22 182 30 hstemhm",
                        "77 74 272 78 hintmask 10111100",
                        "77 71 rmoveto",
                        "-19 -10 -24 -30 vhcurveto",
                        "-17 hlineto",
                        "-3 -2 -2 -4 hvcurveto",
                        "-22 1 vlineto",
                        "108 0 83 0 1 0 0 22 rlineto",
                        "4 -2 2 -4 vhcurveto",
                        "-12 hlineto",
                        "-28 -11 21 22 hvcurveto",
                        "185 vlineto",
                        "136 57 52 85 31 53 -13 -11 vhcurveto",
                        "0 -17 -70 -99 -36 -48 rrcurveto",
                        "4 -18 rlineto",
                        "5 1 4 1 4 0 rrcurveto",
                        "",
                        "114 21 -87 -26 hvcurveto",
                        "hintmask 01111100",
                        "-84 -43 -23 -36 vhcurveto",
                        "-49 0 -22 33 -13 58 rrcurveto",
                        "-26 -2 rlineto",
                        "8 -57 4 -36 0 -17 7 0 11 4 6 0 23 0 39 -12 23 0 95 0 51 69 0 70 0 69 -45 59 -89 4 -3 0 -2 2 0 2 rrcurveto",
                        "0 2 1 1 1 2 rrcurveto", "111 162 0 16 rlineto",
                        "-41 14 -83 11 -44 0 rrcurveto",
                        "-177 -53 -96 -140 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : germandbls_scalt
     */
    public void testgermandbls_scalt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("germandbls.scalt");
        assertNotNull(cs);
        assertEquals("germandbls.scalt", cs.getName());
        String[] text =
                {
                        "268 -12 29 427 30 hstemhm",
                        "40 65 181 74 -51 25 91 66 180 75 -52 26 hintmask 11110100",
                        "324 448 rmoveto",
                        "588 callsubr",
                        "hintmask 11101100",
                        "589 callsubr",
                        "375 108 rmoveto",
                        "-27 -1 -25 27 -81 0 -70 0 -81 -41 0 -82 0 -78 90 -34 43 -16 rrcurveto",
                        "hintmask 11100110",
                        "62 -22 51 -25 0 -69 0 -58 -31 -32 -60 0 -56 0 -56 36 -15 89 rrcurveto",
                        "-28 -2 rlineto",
                        "8 -68 3 -44 0 -29 14 2 7 4 12 0 19 0 33 -17 77 0 90 0 58 59 0 82 0 88 -91 42 -51 16 -25 8 -88 30 0 56 rrcurveto",
                        "43 35 32 51 vhcurveto", "hintmask 11100101",
                        "49 0 60 -36 8 -70 rrcurveto", "26 2 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : germandbls_ss03
     */
    public void testgermandbls_ss03() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("germandbls.ss03");
        assertNotNull(cs);
        assertEquals("germandbls.ss03", cs.getName());
        String[] text =
                {
                        "245 -12 28 396 30 hstem",
                        "53 61 153 67 94 61 153 67 vstem",
                        "43 140 rmoveto",
                        "-4 callsubr",
                        "348 -1 rmoveto",
                        "4 -49 3 -51 0 -42 10 2 8 1 5 0 7 0 5 -1 7 -1 26 -7 29 -4 35 0 47 0 105 29 0 99 0 80 -65 36 -82 30 rrcurveto",
                        "-54 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -31 16 -37 9 -50 0 -79 0 -59 -48 0 -67 0 -75 38 -21 73 -32 79 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 rrcurveto",
                        "-37 0 -27 18 -10 11 -22 23 -11 48 -3 25 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : glottalstopreversed
     */
    public void testglottalstopreversed() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("glottalstopreversed");
        assertNotNull(cs);
        assertEquals("glottalstopreversed", cs.getName());
        String[] text =
                {
                        "-117 1 27 602 28 hstem",
                        "24 73 68 75 37 86 vstem",
                        "277 28 rmoveto",
                        "-36 -1 14 30 hvcurveto",
                        "",
                        "171 vlineto",
                        "0 74 -40 46 -38 40 -34 35 -31 36 0 50 rrcurveto",
                        "49 32 57 59 48 46 -35 -40 vhcurveto",
                        "0 -7 -1 -6 -2 -6 -1 -5 -1 -5 0 -5 rrcurveto",
                        "-31 28 -8 15 21 22 17 28 85 -91 46 -86 -103 -59 -52 -82 vhcurveto",
                        "0 -73 37 -33 36 -32 35 -30 33 -29 0 -64 rrcurveto",
                        "-188 vlineto", "0 -30 0 -16 -38 -1 rrcurveto",
                        "-19 hlineto", "-6 -1 -4 -3 hvcurveto", "-22 vlineto",
                        "0 60 2 39 41 63 -2 0 vhcurveto", "21 vlineto",
                        "6 -5 2 -3 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : glottalstopreversed_superior
     */
    public void testglottalstopreversed_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("glottalstopreversed.superior");
        assertNotNull(cs);
        assertEquals("glottalstopreversed.superior", cs.getName());
        String[] text =
                {
                        "-254 365 22 330 22 hstem",
                        "26 48 39 49 18 56 vstem",
                        "185 387 rmoveto",
                        "-23 0 9 18 hvcurveto",
                        "69 vlineto",
                        "0 46 -25 28 -24 25 -20 21 -19 22 0 32 rrcurveto",
                        "30 16 30 37 30 26 -17 -25 vhcurveto",
                        "0 -4 -1 -4 -1 -3 0 -3 -1 -3 0 -4 rrcurveto",
                        "-19 17 -4 10 12 17 10 17 52 -58 29 -53 -63 -36 -32 -50 vhcurveto",
                        "0 -46 23 -20 22 -20 21 -18 21 -18 0 -39 rrcurveto",
                        "-80 vlineto", "0 -18 -1 -10 -23 -1 rrcurveto",
                        "-11 hlineto", "-4 -1 -2 -3 hvcurveto", "-18 vlineto",
                        "0 39 1 25 25 39 -1 0 vhcurveto", "18 vlineto",
                        "4 -3 1 -2 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gradient
     */
    public void testgradient() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gradient");
        assertNotNull(cs);
        assertEquals("gradient", cs.getName());
        String[] text =
                {"83 8 -21 590 26 hstem", "260 -13 rmoveto",
                        "-246 601 rlineto", "-3 6 -1 3 0 2 rrcurveto",
                        "3 5 1 11 vhcurveto", "533 0 12 0 rlineto",
                        "3 -1 1 -1 0 -2 0 -2 -1 -3 -3 -6 rrcurveto",
                        "-253 -601 rlineto", "-48 80 rmoveto",
                        "213 510 -418 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : grave
     */
    public void testgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("grave");
        assertNotNull(cs);
        assertEquals("grave", cs.getName());
        String[] text =
                {"-109 538 163 hstem", "96 158 vstem", "178 698 rmoveto",
                        "-3 2 -7 1 -4 0 -35 0 -23 -17 -7 -7 rrcurveto",
                        "-3 -10 115 -109 rlineto",
                        "16 -15 6 -5 7 0 8 0 6 6 0 5 0 7 -1 7 -5 10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : grave_cap
     */
    public void testgrave_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("grave.cap");
        assertNotNull(cs);
        assertEquals("grave.cap", cs.getName());
        String[] text =
                {
                        "-501 571 120 hstem",
                        "-293 212 vstem",
                        "-217 691 rmoveto",
                        "-76 -45 154 -63 rlineto",
                        "21 -9 14 -3 8 0 10 0 5 5 0 10 0 7 -4 6 -11 8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : gravecomb
     */
    public void testgravecomb() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("gravecomb");
        assertNotNull(cs);
        assertEquals("gravecomb", cs.getName());
        String[] text =
                {"-501 547 163 hstem", "-238 158 vstem", "-156 708 rmoveto",
                        "-4 1 -6 1 -5 0 -34 0 -23 -17 -8 -6 rrcurveto",
                        "-2 -11 114 -109 rlineto",
                        "16 -15 7 -5 6 0 8 0 7 6 0 5 0 7 -1 7 -5 10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : greater
     */
    public void testgreater() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("greater");
        assertNotNull(cs);
        assertEquals("greater", cs.getName());
        String[] text =
                {"-14 71 331 hstem", "49 390 vstem", "366 236 rmoveto",
                        "-317 -115 0 -50 390 141 0 48 -390 142 0 -50 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : greaterequal
     */
    public void testgreaterequal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("greaterequal");
        assertNotNull(cs);
        assertEquals("greaterequal", cs.getName());
        String[] text =
                {"26 11 47 hstem", "385 251 rmoveto",
                        "-317 -115 0 -50 390 142 0 47 -390 142 0 -50 rlineto",
                        "-356 vmoveto", "390 47 -390 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : guillemotleft
     */
    public void testguillemotleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guillemotleft");
        assertNotNull(cs);
        assertEquals("guillemotleft", cs.getName());
        String[] text =
                {"35 1 428 hstem", "68 400 vstem", "288 429 rmoveto",
                        "-76 -80 -73 -65 -71 -50 rrcurveto", "-38 vlineto",
                        "66 -37 73 -65 81 -93 rrcurveto", "51 vlineto",
                        "-48 72 -48 54 -48 37 51 42 48 55 45 66 rrcurveto",
                        "180 51 rmoveto", "-75 -80 -73 -65 -70 -50 rrcurveto",
                        "-38 vlineto", "65 -37 73 -65 80 -93 rrcurveto",
                        "51 vlineto",
                        "-47 72 -47 54 -49 37 51 42 48 55 44 66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guillemotleft_sc
     */
    public void testguillemotleft_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guillemotleft.sc");
        assertNotNull(cs);
        assertEquals("guillemotleft.sc", cs.getName());
        String[] text =
                {"35 76 428 hstem", "68 400 vstem", "288 504 rmoveto",
                        "-76 -81 -73 -65 -71 -49 rrcurveto", "-38 vlineto",
                        "66 -37 73 -65 81 -93 rrcurveto", "50 vlineto",
                        "-48 73 -48 54 -48 37 51 42 48 55 45 66 rrcurveto",
                        "180 51 rmoveto", "-75 -81 -73 -65 -70 -49 rrcurveto",
                        "-38 vlineto", "65 -37 73 -65 80 -93 rrcurveto",
                        "50 vlineto", "",
                        "-47 73 -47 54 -49 37 51 42 48 55 44 66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guillemotright
     */
    public void testguillemotright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guillemotright");
        assertNotNull(cs);
        assertEquals("guillemotright", cs.getName());
        String[] text =
                {
                        "35 1 428 hstem",
                        "48 400 vstem",
                        "229 1 rmoveto",
                        "75 81 73 64 71 50 rrcurveto",
                        "38 vlineto",
                        "-66 37 -73 65 -80 93 rrcurveto",
                        "-51 vlineto",
                        "47 -72 48 -54 49 -37 -52 -42 -48 -55 -44 -66 rrcurveto",
                        "-181 -51 rmoveto",
                        "75 81 73 64 71 50 rrcurveto",
                        "38 vlineto",
                        "-66 37 -73 65 -80 93 rrcurveto",
                        "-51 vlineto",
                        "47 -72 48 -54 48 -37 -51 -42 -48 -55 -44 -66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guillemotright_sc
     */
    public void testguillemotright_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guillemotright.sc");
        assertNotNull(cs);
        assertEquals("guillemotright.sc", cs.getName());
        String[] text =
                {"35 75 428 hstem", "69 400 vstem", "250 503 rmoveto",
                        "75 -81 73 -65 71 -49 rrcurveto", "-38 vlineto",
                        "-66 -37 -73 -65 -80 -93 rrcurveto", "50 vlineto",
                        "47 73 48 54 49 37 -52 42 -48 55 -44 66 rrcurveto",
                        "-181 51 rmoveto", "75 -81 73 -65 71 -49 rrcurveto",
                        "-38 vlineto", "-66 -37 -73 -65 -80 -93 rrcurveto",
                        "50 vlineto",
                        "47 73 48 54 48 37 -51 42 -48 55 -44 66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guilsinglleft
     */
    public void testguilsinglleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guilsinglleft");
        assertNotNull(cs);
        assertEquals("guilsinglleft", cs.getName());
        String[] text =
                {"-146 1 429 hstem", "68 220 vstem", "288 430 rmoveto",
                        "-76 -81 -73 -65 -71 -49 rrcurveto", "-39 vlineto",
                        "66 -36 73 -65 81 -94 rrcurveto", "54 vlineto",
                        "-49 70 -46 54 -45 36 47 41 46 54 47 66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guilsinglleft_sc
     */
    public void testguilsinglleft_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guilsinglleft.sc");
        assertNotNull(cs);
        assertEquals("guilsinglleft.sc", cs.getName());
        String[] text =
                {"-146 75 428 hstem", "68 220 vstem", "288 503 rmoveto",
                        "-76 -81 -73 -65 -71 -49 rrcurveto", "-38 vlineto",
                        "66 -37 73 -65 81 -93 rrcurveto", "53 vlineto",
                        "-49 71 -46 53 -45 37 47 40 46 54 47 66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guilsinglright
     */
    public void testguilsinglright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guilsinglright");
        assertNotNull(cs);
        assertEquals("guilsinglright", cs.getName());
        String[] text =
                {
                        "-146 68 220 vstem",
                        "68 hmoveto",
                        "76 81 73 65 71 49 rrcurveto",
                        "39 vlineto",
                        "-66 37 -73 64 -81 94 rrcurveto",
                        "-54 vlineto",
                        "49 -70 46 -54 45 -36 -47 -41 -46 -53 -47 -67 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : guilsinglright_sc
     */
    public void testguilsinglright_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("guilsinglright.sc");
        assertNotNull(cs);
        assertEquals("guilsinglright.sc", cs.getName());
        String[] text =
                {
                        "-146 72 428 hstem",
                        "68 220 vstem",
                        "68 72 rmoveto",
                        "76 80 73 65 71 50 rrcurveto",
                        "38 vlineto",
                        "-66 37 -73 65 -81 93 rrcurveto",
                        "-54 vlineto",
                        "49 -70 46 -53 45 -37 -47 -40 -46 -54 -47 -67 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : h
     */
    public void testh() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("h");
        assertNotNull(cs);
        assertEquals("h", cs.getName());
        String[] text =
                {"17 1 27 367 47 256 -20 hstem", "88 75 198 75 vstem",
                        "361 72 rmoveto", "-19 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : h_alt
     */
    public void testh_alt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("h.alt");
        assertNotNull(cs);
        assertEquals("h.alt", cs.getName());
        String[] text =
                {
                        "26 1 27 370 44 256 -20 hstem",
                        "109 75 212 78 vstem",
                        "109 573 rmoveto",
                        "-501 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "261 vlineto",
                        "52 54 33 11 26 0 45 0 56 -52 0 -133 0 -250 -68 -104 -105 -74 rrcurveto",
                        "11 -24 rlineto",
                        "121 53 119 129 0 273 0 176 -80 50 -77 0 -46 0 -36 -19 -51 -46 rrcurveto",
                        "321 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -37 -6 -15 0 rrcurveto",
                        "2 -25 rlineto", "-2 2 -3 3 vhcurveto", "32 4 rlineto",
                        "20 10 -16 -57 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : h_sc
     */
    public void testh_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("h.sc");
        assertNotNull(cs);
        assertEquals("h.sc", cs.getName());
        String[] text =
                {"94 1 27 201 32 173 27 hstem", "102 74 243 75 vstem",
                        "419 59 rmoveto", "-20 -10 -11 -33 vhcurveto",
                        "-20 hlineto", "-4 -2 -3 -3 hvcurveto",
                        "0 -21 2 -2 rlineto", "0 72 2 28 30 80 -2 0 vhcurveto",
                        "1 2 0 21 rlineto", "3 -2 3 -4 vhcurveto",
                        "-20 hlineto", "-32 -11 9 22 hvcurveto", "344 vlineto",
                        "20 10 11 33 vhcurveto", "20 hlineto",
                        "4 2 2 4 hvcurveto", "0 20 -1 2 rlineto",
                        "0 -85 -2 -28 -30 -68 2 0 vhcurveto",
                        "-1 -2 0 -20 rlineto", "-4 3 -2 3 vhcurveto",
                        "20 hlineto", "31 12 -9 -22 hvcurveto",
                        "-142 -243 142 vlineto", "20 11 11 32 vhcurveto",
                        "20 hlineto", "4 3 2 4 hvcurveto", "0 20 -2 2 rlineto",
                        "0 -84 -1 -28 -31 -67 1 0 vhcurveto",
                        "-2 -2 0 -20 rlineto", "-4 3 -2 4 vhcurveto",
                        "20 hlineto", "31 12 -9 -22 hvcurveto", "-344 vlineto",
                        "-20 -11 -11 -32 vhcurveto", "-20 hlineto",
                        "-4 -3 -3 -3 hvcurveto", "0 -21 2 -2 rlineto",
                        "0 72 2 28 31 79 -2 0 vhcurveto", "2 2 0 21 rlineto",
                        "3 -3 3 -4 vhcurveto", "-20 hlineto",
                        "-31 -12 9 22 hvcurveto", "170 243 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : h_superior
     */
    public void testh_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("h.superior");
        assertNotNull(cs);
        assertEquals("h.superior", cs.getName());
        String[] text =
                {"-194 365 22 210 34 68 -20 hstem", "55 49 111 49 vstem",
                        "11 717 rmoveto", "2 -22 rlineto",
                        "10 3 10 1 7 0 rrcurveto", "14 1 -11 -15 hvcurveto",
                        "-259 vlineto", "0 -21 -1 -5 -24 -1 rrcurveto",
                        "-8 hlineto", "-4 0 -3 -2 hvcurveto", "-18 vlineto",
                        "0 37 1 24 25 41 -1 0 vhcurveto", "18 vlineto",
                        "4 -3 1 -2 vhcurveto", "-11 hlineto",
                        "-17 -8 5 22 hvcurveto", "138 vlineto",
                        "19 23 21 22 21 0 rrcurveto",
                        "30 20 -17 -51 hvcurveto", "-115 vlineto",
                        "0 -24 -6 -2 -19 -1 rrcurveto", "-11 hlineto",
                        "-4 -1 -3 -2 hvcurveto", "-18 vlineto",
                        "0 40 1 25 24 38 -1 0 vhcurveto", "18 vlineto",
                        "2 -1 3 -4 vhcurveto", "-6 hlineto",
                        "-20 1 -6 1 0 25 rrcurveto", "125 vlineto",
                        "67 -30 25 -45 vhcurveto",
                        "-36 0 -35 -35 -14 -16 rrcurveto", "159 -14 vlineto",
                        "-25 -12 -22 -6 -32 -4 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hairspace
     */
    public void testhairspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hairspace");
        assertNotNull(cs);
        assertEquals("hairspace", cs.getName());
        String[] text = {"-475 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hbar
     */
    public void testhbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hbar");
        assertNotNull(cs);
        assertEquals("hbar", cs.getName());
        String[] text =
                {"17 1 27 367 47 88 39 129 -20 hstem", "88 75 198 75 vstem",
                        "361 72 rmoveto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 40 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "212 vlineto", "103 -36 55 -72 vhcurveto",
                        "-39 0 -59 -16 -67 -67 rrcurveto",
                        "171 178 39 -178 129 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-2 2 -3 3 vhcurveto", "33 4 rlineto",
                        "20 9 -16 -57 hvcurveto", "-4 -62 -39 62 -458 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "250 vlineto",
                        "48 47 43 26 29 0 rrcurveto",
                        "56 22 -19 -81 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hcircumflex
     */
    public void testhcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hcircumflex");
        assertNotNull(cs);
        assertEquals("hcircumflex", cs.getName());
        String[] text =
                {"17 1 27 367 47 256 -20 hstem", "88 75 198 75 vstem",
                        "361 72 rmoveto", "-19 callsubr", "-75 537 rmoveto",
                        "-43 hlineto", "-31 -34 -31 -32 -37 -28 rrcurveto",
                        "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 34 -20 39 -17 rrcurveto",
                        "16 21 rlineto", "-36 27 -35 30 -30 37 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hhook
     */
    public void testhhook() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hhook");
        assertNotNull(cs);
        assertEquals("hhook", cs.getName());
        String[] text =
                {
                        "16 1 27 367 47 224 32 hstem",
                        "88 75 197 75 vstem",
                        "88 72 rmoveto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "250 vlineto",
                        "47 47 44 26 29 0 rrcurveto",
                        "46 31 -38 -81 hvcurveto",
                        "-204 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "212 vlineto",
                        "103 -36 55 -72 vhcurveto",
                        "-39 0 -59 -16 -66 -67 rrcurveto",
                        "123 vlineto",
                        "0 38 2 34 4 27 11 54 28 31 26 0 21 0 19 -15 12 -29 8 -18 8 -18 29 0 rrcurveto",
                        "20 14 14 22 38 -50 38 -76 hvcurveto",
                        "-28 0 -22 -9 -28 -20 -54 -38 -19 -59 0 -103 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hhook_superior
     */
    public void testhhook_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hhook.superior");
        assertNotNull(cs);
        assertEquals("hhook.superior", cs.getName());
        String[] text =
                {
                        "16 359 22 221 29 85 22 hstem",
                        "46 49 113 48 vstem",
                        "46 404 rmoveto",
                        "-15 -4 -8 -18 vhcurveto",
                        "-10 hlineto",
                        "-3 -1 -2 -3 hvcurveto",
                        "0 -17 1 -1 rlineto",
                        "0 35 1 19 20 46 -1 0 vhcurveto",
                        "1 1 0 17 rlineto",
                        "3 -2 2 -3 vhcurveto",
                        "-9 hlineto",
                        "-17 -6 8 15 hvcurveto",
                        "159 vlineto",
                        "25 25 32 14 15 0 rrcurveto",
                        "24 17 -20 -42 hvcurveto",
                        "-136 vlineto",
                        "-15 -5 -8 -18 vhcurveto",
                        "-10 hlineto",
                        "-3 -1 -2 -3 hvcurveto",
                        "0 -17 1 -1 rlineto",
                        "0 36 1 18 21 45 -1 0 vhcurveto",
                        "1 1 0 17 rlineto",
                        "3 -2 2 -2 vhcurveto",
                        "-10 hlineto",
                        "-17 -6 8 15 hvcurveto",
                        "144 vlineto",
                        "54 -27 29 -39 vhcurveto",
                        "-20 0 -40 -8 -35 -35 rrcurveto",
                        "44 vlineto",
                        "0 20 1 11 3 14 5 28 15 11 14 0 11 0 13 -4 6 -15 4 -10 4 -11 15 0 rrcurveto",
                        "11 10 10 10 20 -19 22 -58 -28 -56 -17 -96 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hookabovecomb
     */
    public void testhookabovecomb() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hookabovecomb");
        assertNotNull(cs);
        assertEquals("hookabovecomb", cs.getName());
        String[] text =
                {
                        "-501 718 -21 57 27 hstemhm",
                        "-232 49 -49 43 13 28 10 50 hintmask 11101100",
                        "-88 723 rmoveto",
                        "17 -16 41 -55 -42 -31 -35 -22 -12 8 -15 19 9 13 10 11 vhcurveto",
                        "0 8 -3 6 -1 3 rrcurveto", "hintmask 11011100",
                        "-1 2 -1 2 0 4 rrcurveto",
                        "5 3 6 19 21 8 -10 -23 vhcurveto",
                        "0 -12 -5 -12 -8 -12 -11 -17 -13 -22 -1 -34 rrcurveto",
                        "28 hlineto", "2 26 10 17 17 16 rrcurveto",
                        "16 16 15 16 0 20 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hookabovecomb_cap
     */
    public void testhookabovecomb_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hookabovecomb.cap");
        assertNotNull(cs);
        assertEquals("hookabovecomb.cap", cs.getName());
        String[] text =
                {
                        "-501 720 -21 58 24 hstem",
                        "-247 45 22 26 16 52 vstem",
                        "-86 725 rmoveto",
                        "16 -15 40 -64 -54 -28 -34 -21 -12 7 -15 20 16 11 9 12 vhcurveto",
                        "0 7 -4 5 -2 3 -2 2 -1 3 0 3 rrcurveto",
                        "5 9 9 19 22 14 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -12 -13 -14 0 -33 rrcurveto",
                        "26 hlineto",
                        "2 25 15 12 18 12 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : horizontalbar
     */
    public void testhorizontalbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("horizontalbar");
        assertNotNull(cs);
        assertEquals("horizontalbar", cs.getName());
        String[] text =
                {"421 238 49 hstem", "29 287 rmoveto", "-49 865 49 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hungarumlaut
     */
    public void testhungarumlaut() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hungarumlaut");
        assertNotNull(cs);
        assertEquals("hungarumlaut", cs.getName());
        String[] text =
                {"-151 557 176 hstem", "54 261 vstem", "167 727 rmoveto",
                        "194 callsubr", "134 -8 rmoveto", "195 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hungarumlaut_cap
     */
    public void testhungarumlaut_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hungarumlaut.cap");
        assertNotNull(cs);
        assertEquals("hungarumlaut.cap", cs.getName());
        String[] text =
                {
                        "-501 598 149 hstem",
                        "-355 254 vstem",
                        "-247 738 rmoveto",
                        "-5 4 -9 5 -9 0 -15 0 -7 -4 -5 -8 rrcurveto",
                        "-57 -115 rlineto",
                        "-1 -1 0 -2 0 -1 0 -4 2 -4 4 -3 2 -1 3 -2 3 0 2 0 3 1 3 1 rrcurveto",
                        "94 86 rlineto",
                        "5 4 2 7 0 8 0 11 -5 11 -10 7 rrcurveto",
                        "133 -6 rmoveto",
                        "-11 9 -9 1 -8 0 -11 0 -7 -4 -5 -8 rrcurveto",
                        "-62 -114 rlineto",
                        "-1 -1 0 -2 0 -2 0 -8 9 -5 5 0 3 0 2 0 2 2 rrcurveto",
                        "99 84 rlineto",
                        "4 4 3 7 0 9 0 10 -4 11 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : hyphen
     */
    public void testhyphen() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hyphen");
        assertNotNull(cs);
        assertEquals("hyphen", cs.getName());
        String[] text =
                {"-168 236 54 hstem", "274 236 rmoveto", "-98 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hyphen_sc
     */
    public void testhyphen_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hyphen.sc");
        assertNotNull(cs);
        assertEquals("hyphen.sc", cs.getName());
        String[] text =
                {"-168 217 54 hstem", "274 217 rmoveto",
                        "13 14 25 12 9 -4 8 -10 hvcurveto", "-229 hlineto",
                        "-12 -13 -21 -16 -8 6 -9 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : hyphendot
     */
    public void testhyphendot() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hyphendot");
        assertNotNull(cs);
        assertEquals("hyphendot", cs.getName());
        String[] text =
                {"-282 211 106 hstem", "57 106 vstem", "57 264 rmoveto",
                        "-97 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hyphennobreak
     */
    public void testhyphennobreak() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hyphennobreak");
        assertNotNull(cs);
        assertEquals("hyphennobreak", cs.getName());
        String[] text =
                {"-168 236 54 hstem", "274 236 rmoveto", "-98 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : hyphentwo
     */
    public void testhyphentwo() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("hyphentwo");
        assertNotNull(cs);
        assertEquals("hyphentwo", cs.getName());
        String[] text =
                {"-168 236 54 hstem", "274 236 rmoveto", "-98 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : i
     */
    public void testi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("i");
        assertNotNull(cs);
        assertEquals("i", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 101 96 hstemhm",
                        "78 95 -74 74 hintmask 11101000", "173 72 rmoveto",
                        "-18 callsubr", "hintmask 11110000", "-95 499 rmoveto",
                        "-17 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : i_sc
     */
    public void testi_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("i.sc");
        assertNotNull(cs);
        assertEquals("i.sc", cs.getName());
        String[] text =
                {"-224 1 27 406 26 hstem", "102 74 vstem", "176 402 rmoveto",
                        "580 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : i_superior
     */
    public void testi_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("i.superior");
        assertNotNull(cs);
        assertEquals("i.superior", cs.getName());
        String[] text =
                {
                        "-307 365 24 293 57 hstemhm",
                        "68 60 -49 49 hintmask 11010000",
                        "128 414 rmoveto",
                        "223 -14 vlineto",
                        "-24 -11 -24 -6 -39 -8 rrcurveto",
                        "2 -20 rlineto",
                        "12 4 11 3 12 0 rrcurveto",
                        "12 3 -13 -14 hvcurveto",
                        "-158 vlineto",
                        "-19 -1 -6 -24 vhcurveto",
                        "-18 hlineto",
                        "-5 -1 -2 -3 hvcurveto",
                        "0 -19 73 1 74 -1 0 19 rlineto",
                        "3 -3 2 -2 vhcurveto",
                        "-18 hlineto",
                        "-17 -9 1 24 hvcurveto",
                        "-29 325 rmoveto",
                        "hintmask 11100000",
                        "-20 -11 -13 -16 -15 14 -13 17 17 12 13 15 14 -8 15 -21 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iacute
     */
    public void testiacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iacute");
        assertNotNull(cs);
        assertEquals("iacute", cs.getName());
        String[] text =
                {
                        "-237 1 27 414 -20 hstem",
                        "99 74 vstem",
                        "173 72 rmoveto",
                        "-18 callsubr",
                        "-10 598 rmoveto",
                        "-80 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -6 6 -6 8 0 7 0 6 5 16 15 rrcurveto",
                        "115 109 -3 10 rlineto",
                        "-2 2 -1 1 -3 2 -8 8 -13 11 -28 0 -5 0 -6 -1 -3 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iacute_sc
     */
    public void testiacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iacute.sc");
        assertNotNull(cs);
        assertEquals("iacute.sc", cs.getName());
        String[] text =
                {
                        "-224 1 27 406 26 205 -20 hstem",
                        "102 74 vstem",
                        "173 662 rmoveto",
                        "-80 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -7 7 -5 8 0 6 0 7 5 15 14 rrcurveto",
                        "115 109 -2 11 rlineto",
                        "-2 1 -2 2 -3 2 -8 8 -13 11 -27 0 -5 0 -7 -1 -3 -2 rrcurveto",
                        "3 -260 rmoveto", "580 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ibreve
     */
    public void testibreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ibreve");
        assertNotNull(cs);
        assertEquals("ibreve", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 80 58 hstem", "4 24 71 74 50 24 vstem",
                        "173 72 rmoveto", "-18 callsubr", "-145 579 rmoveto",
                        "-24 -13 rlineto",
                        "6 -78 46 -58 70 0 45 0 67 35 9 101 rrcurveto",
                        "-24 13 rlineto",
                        "-2 -62 -54 -29 -41 0 -55 0 -41 40 -2 51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : icircumflex
     */
    public void testicircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("icircumflex");
        assertNotNull(cs);
        assertEquals("icircumflex", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 224 -20 hstem", "99 74 vstem",
                        "173 72 rmoveto", "-18 callsubr", "-23 574 rmoveto",
                        "-50 hlineto", "-29 -46 -38 -44 -35 -39 rrcurveto",
                        "20 -15 rlineto",
                        "37 27 32 25 37 38 34 -36 33 -25 39 -29 rrcurveto",
                        "21 15 rlineto", "-36 40 -36 42 -29 47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : icircumflex_sc
     */
    public void testicircumflex_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("icircumflex.sc");
        assertNotNull(cs);
        assertEquals("icircumflex.sc", cs.getName());
        String[] text =
                {"-224 1 27 406 26 191 -20 hstem", "102 74 vstem",
                        "166 651 rmoveto", "349 callsubr", "10 -249 rmoveto",
                        "580 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : idieresis
     */
    public void testidieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("idieresis");
        assertNotNull(cs);
        assertEquals("idieresis", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 105 91 hstemhm",
                        "0 91 8 74 -12 91 hintmask 11111000", "173 72 rmoveto",
                        "-18 callsubr", "-173 500 rmoveto", "72 callsubr",
                        "hintmask 11110100", "161 hmoveto", "70 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : idieresis_sc
     */
    public void testidieresis_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("idieresis.sc");
        assertNotNull(cs);
        assertEquals("idieresis.sc", cs.getName());
        String[] text =
                {"", "-224 1 27 406 26 68 91 hstemhm",
                        "10 91 1 74 -6 91 hintmask 11110000", "10 574 rmoveto",
                        "316 callsubr", "hintmask 11110100", "160 hmoveto",
                        "319 callsubr", "hintmask 11111000", "6 -172 rmoveto",
                        "580 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : igrave
     */
    public void testigrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("igrave");
        assertNotNull(cs);
        assertEquals("igrave", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 hstem", "99 74 vstem", "173 72 rmoveto",
                        "-18 callsubr", "-74 598 rmoveto", "71 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : igrave_sc
     */
    public void testigrave_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("igrave.sc");
        assertNotNull(cs);
        assertEquals("igrave.sc", cs.getName());
        String[] text =
                {"-224 1 27 406 26 207 -20 hstem", "102 74 vstem",
                        "111 664 rmoveto",
                        "-3 2 -6 1 -5 0 -35 0 -22 -18 -8 -6 rrcurveto",
                        "-3 -11 115 -109 rlineto",
                        "16 -14 7 -5 6 0 8 0 7 6 0 5 0 7 -1 7 -6 10 rrcurveto",
                        "-5 -137 rmoveto", "580 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ij
     */
    public void testij() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ij");
        assertNotNull(cs);
        assertEquals("ij", cs.getName());
        String[] text =
                {"14 -213 29 185 27 414 -20 101 96 hstemhm",
                        "78 95 -74 74 190 95 -74 74 hintmask 11110100",
                        "173 72 rmoveto", "-18 callsubr", "hintmask 11111000",
                        "-95 499 rmoveto", "-17 callsubr", "232 -755 rmoveto",
                        "-8 0 -6 6 -2 11 -5 21 -14 22 -23 0 rrcurveto",
                        "-17 -15 -13 -25 -30 52 -21 41 hvcurveto",
                        "25 0 29 12 27 27 rrcurveto", "hintmask 11110001",
                        "55 55 9 56 0 130 rrcurveto", "375 -15 vlineto",
                        "-9 0 -4 -3 -8 -3 -12 -7 -22 -12 -74 -12 rrcurveto",
                        "6 -28 rlineto", "16 4 12 1 13 0 rrcurveto",
                        "14 9 -8 -53 hvcurveto", "-284 vlineto",
                        "-141 -30 -80 -44 vhcurveto", "hintmask 11110010",
                        "53 755 rmoveto", "107 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ij_sc
     */
    public void testij_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ij.sc");
        assertNotNull(cs);
        assertEquals("ij.sc", cs.getName());
        String[] text =
                {"39 -200 27 174 27 406 26 hstem", "100 75 200 74 vstem",
                        "175 402 rmoveto", "20 11 12 31 vhcurveto",
                        "21 hlineto", "4 2 2 3 hvcurveto", "0 21 -1 2 rlineto",
                        "0 -73 -2 -28 -31 -79 2 0 vhcurveto", "",
                        "-2 -2 0 -22 rlineto", "-3 4 -1 3 vhcurveto",
                        "21 hlineto", "30 12 -10 -22 hvcurveto",
                        "-337 vlineto", "-19 -11 -18 -31 vhcurveto",
                        "-21 hlineto", "-4 -2 -2 -4 hvcurveto",
                        "0 -21 1 -2 rlineto", "0 85 2 28 30 68 -2 0 vhcurveto",
                        "1 2 0 21 rlineto", "4 -3 2 -3 vhcurveto",
                        "-21 hlineto", "-30 -12 15 22 hvcurveto",
                        "141 -238 rmoveto",
                        "-22 0 -1 10 -1 8 -1 16 -12 25 -24 0 rrcurveto",
                        "-18 -12 -13 -23 -35 43 -15 46 hvcurveto",
                        "28 0 29 14 21 21 36 35 21 61 0 98 rrcurveto",
                        "374 vlineto", "20 11 11 32 vhcurveto", "13 hlineto",
                        "4 2 2 3 hvcurveto", "0 21 -2 2 rlineto",
                        "0 -72 -2 -28 -30 -81 2 0 vhcurveto",
                        "-1 -2 0 -21 rlineto", "-3 3 -2 3 vhcurveto",
                        "29 hlineto", "30 13 -9 -22 hvcurveto", "-389 vlineto",
                        "-151 -27 -36 -32 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : imacron
     */
    public void testimacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("imacron");
        assertNotNull(cs);
        assertEquals("imacron", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 117 44 hstem", "99 74 vstem",
                        "173 72 rmoveto", "-18 callsubr", "56 467 rmoveto",
                        "12 9 17 12 7 -3 8 -9 hvcurveto", "-220 hlineto",
                        "-10 -9 -18 -12 -7 2 -7 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : infinity
     */
    public void testinfinity() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("infinity");
        assertNotNull(cs);
        assertEquals("infinity", cs.getName());
        String[] text =
                {"284 78 57 -56 46 258 53 -42 42 hstemhm",
                        "37 63 588 61 hintmask 00101100", "749 277 rmoveto",
                        "89 -50 70 -92 vhcurveto",
                        "-79 0 -75 -76 -47 -57 rrcurveto", "hintmask 10011100",
                        "-41 66 -78 67 -79 0 rrcurveto",
                        "-105 -66 -103 -95 -110 71 -50 73 hvcurveto",
                        "74 0 85 78 41 58 rrcurveto", "hintmask 01101100",
                        "45 -66 69 -69 85 0 rrcurveto",
                        "103 66 102 96 hvcurveto", "-61 -43 rmoveto",
                        "-61 -31 -48 -64 vhcurveto",
                        "-58 0 -73 103 -33 46 26 41 72 68 51 0 rrcurveto",
                        "73 37 -89 -60 hvcurveto", "-330 7 rmoveto",
                        "hintmask 10011100", "-25 -41 -74 -65 -51 0 rrcurveto",
                        "", "-71 -37 82 66 63 32 48 64 hvcurveto",
                        "61 0 75 -102 26 -51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : integral
     */
    public void testintegral() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("integral");
        assertNotNull(cs);
        assertEquals("integral", cs.getName());
        String[] text =
                {"-122 -173 55 834 -21 33 49 hstemhm",
                        "153 78 -73 78 hintmask 11101000", "158 43 rmoveto",
                        "1 -129 -18 -32 -24 0 -18 0 -16 35 -30 0 rrcurveto",
                        "-21 -22 -19 -23 -27 24 -21 36 hvcurveto",
                        "108 0 62 106 -4 305 rrcurveto", "hintmask 11110000",
                        "-5 320 rlineto",
                        "-2 138 18 32 21 0 24 0 2 -33 32 0 rrcurveto",
                        "24 20 17 22 25 -24 18 -29 hvcurveto",
                        "-106 0 -61 -106 3 -237 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : interrobang
     */
    public void testinterrobang() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("interrobang");
        assertNotNull(cs);
        assertEquals("interrobang", cs.getName());
        String[] text =
                {
                        "-62 -12 106 564 -20 hstem",
                        "42 68 51 107 53 75 vstem",
                        "271 575 rmoveto",
                        "30 -19 20 -34 0 -32 0 -42 -13 -31 -40 -33 -11 -9 -8 -8 -8 -9 rrcurveto",
                        "4 31 rlineto",
                        "9 82 15 44 2 60 rrcurveto",
                        "-110 -534 rmoveto",
                        "487 callsubr",
                        "-51 497 rmoveto",
                        "0 17 20 17 30 10 1 -68 15 -37 10 -88 7 -77 6 -91 2 -20 0 -6 2 -7 12 0 10 0 3 8 1 12 1 8 0 24 4 39 rrcurveto",
                        "2 8 4 8 5 9 9 14 20 15 23 15 47 31 52 43 0 72 0 64 -50 45 -79 12 -9 29 -22 14 -21 0 -19 0 -25 -13 -8 -35 rrcurveto",
                        "-28 -6 -25 -10 -17 -13 -30 -22 -21 -24 0 -35 rrcurveto",
                        "-32 25 -7 16 20 20 11 21 vhcurveto",
                        "0 12 -3 5 -4 4 -4 5 -2 5 0 14 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : intersection
     */
    public void testintersection() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("intersection");
        assertNotNull(cs);
        assertEquals("intersection", cs.getName());
        String[] text =
                {"-17 21 -21 403 36 hstem", "68 49 255 49 vstem",
                        "117 hmoveto", "212 vlineto",
                        "111 18 80 117 103 17 -89 -102 vhcurveto",
                        "-212 49 212 vlineto",
                        "128 -24 99 -147 -154 -28 -104 -123 vhcurveto",
                        "-212 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iogonek
     */
    public void testiogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iogonek");
        assertNotNull(cs);
        assertEquals("iogonek", cs.getName());
        String[] text =
                {"-237 -225 39 185 29 414 -20 101 96 hstemhm",
                        "46 60 -28 95 -74 74 hintmask 11110100",
                        "78 571 rmoveto", "-17 callsubr", "61 -796 rmoveto",
                        "35 0 51 20 24 47 rrcurveto", "", "-16 8 rlineto",
                        "-19 -21 -21 -15 -29 0 rrcurveto", "hintmask 11111000",
                        "-36 -22 27 32 51 54 75 80 hvcurveto",
                        "2 0 2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-19 hlineto", "hintmask 11110010",
                        "-32 -11 15 29 hvcurveto", "370 -15 vlineto",
                        "-7 0 -7 -4 -11 -4 -29 -14 -11 -4 -64 -11 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "14 9 -8 -53 hvcurveto", "-249 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 vhcurveto", "15 hlineto",
                        "hintmask 11111000",
                        "-62 -33 -41 -59 0 -49 0 -54 39 -31 54 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iota
     */
    public void testiota() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iota");
        assertNotNull(cs);
        assertEquals("iota", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 hstem", "94 74 vstem", "168 442 rmoveto",
                        "179 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iotadieresis
     */
    public void testiotadieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iotadieresis");
        assertNotNull(cs);
        assertEquals("iotadieresis", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 105 91 hstemhm",
                        "5 91 -2 74 -2 91 hintmask 11101000",
                        "168 442 rmoveto", "179 callsubr", "hintmask 11110000",
                        "-163 486 rmoveto", "222 callsubr",
                        "hintmask 11100100", "161 hmoveto", "252 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iotadieresistonos
     */
    public void testiotadieresistonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iotadieresistonos");
        assertNotNull(cs);
        assertEquals("iotadieresistonos", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 105 91 hstemhm",
                        "9 91 -6 74 2 91 hintmask 11101100", "168 442 rmoveto",
                        "179 callsubr", "hintmask 11110100",
                        "-159 486 rmoveto", "222 callsubr", "161 hmoveto",
                        "223 callsubr", "29 212 rmoveto", "213 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : iotatonos
     */
    public void testiotatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("iotatonos");
        assertNotNull(cs);
        assertEquals("iotatonos", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 261 -20 hstem", "94 74 vstem",
                        "168 442 rmoveto", "179 callsubr", "-4 597 rmoveto",
                        "243 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : itilde
     */
    public void testitilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("itilde");
        assertNotNull(cs);
        assertEquals("itilde", cs.getName());
        String[] text =
                {
                        "-237 1 27 414 -20 103 44 5 46 hstem",
                        "99 74 vstem",
                        "173 72 rmoveto",
                        "-18 callsubr",
                        "11 497 rmoveto",
                        "-17 0 -15 11 -15 12 -18 13 -20 15 -27 0 -39 0 -20 -30 -13 -59 rrcurveto",
                        "21 -5 rlineto",
                        "9 33 12 15 23 0 16 0 17 -11 17 -12 18 -13 19 -13 20 0 41 0 26 31 11 60 rrcurveto",
                        "-21 6 rlineto", "-13 -42 -13 -11 -19 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : j
     */
    public void testj() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("j");
        assertNotNull(cs);
        assertEquals("j", cs.getName());
        String[] text =
                {"-224 -213 29 626 -20 101 96 hstemhm",
                        "104 96 -75 75 hintmask 11101000", "51 -184 rmoveto",
                        "-16 callsubr", "hintmask 11110000", "53 755 rmoveto",
                        "-15 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : j_sc
     */
    public void testj_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("j.sc");
        assertNotNull(cs);
        assertEquals("j.sc", cs.getName());
        String[] text =
                {"-203 -200 27 607 26 hstem", "130 75 vstem",
                        "72 -173 rmoveto",
                        "-22 0 -1 10 -1 8 -2 16 -11 25 -24 0 rrcurveto",
                        "-18 -13 -13 -23 -35 43 -15 47 hvcurveto",
                        "28 0 29 14 21 21 36 35 21 61 0 98 rrcurveto",
                        "374 vlineto", "20 11 11 32 vhcurveto", "13 hlineto",
                        "4 2 2 3 hvcurveto", "0 21 -2 2 rlineto",
                        "0 -72 -2 -28 -30 -81 2 0 vhcurveto",
                        "-1 -2 0 -21 rlineto", "-3 3 -2 3 vhcurveto",
                        "28 hlineto", "31 12 -9 -22 hvcurveto", "-389 vlineto",
                        "-151 -26 -36 -32 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : j_superior
     */
    public void testj_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("j.superior");
        assertNotNull(cs);
        assertEquals("j.superior", cs.getName());
        String[] text =
                {
                        "-294 263 19 400 57 hstemhm",
                        "85 60 -49 49 hintmask 11010000",
                        "96 410 rmoveto",
                        "-93 -9 -35 -29 vhcurveto",
                        "-5 0 -4 4 -1 6 -4 14 -8 15 -15 0 rrcurveto",
                        "-12 -9 -9 -16 -20 34 -13 27 hvcurveto",
                        "16 0 20 7 16 18 27 30 5 27 0 85 rrcurveto",
                        "207 -14 vlineto",
                        "-25 -11 -23 -6 -40 -8 rrcurveto",
                        "3 -20 rlineto",
                        "11 4 12 3 12 0 rrcurveto",
                        "11 4 -13 -14 hvcurveto",
                        "19 167 rmoveto",
                        "hintmask 11100000",
                        "-19 -11 -13 -16 -15 13 -13 17 17 13 13 15 14 -8 15 -22 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : jcircumflex
     */
    public void testjcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("jcircumflex");
        assertNotNull(cs);
        assertEquals("jcircumflex", cs.getName());
        String[] text =
                {"-224 -213 29 626 -20 hstem", "125 75 vstem",
                        "51 -184 rmoveto", "-16 callsubr", "125 828 rmoveto",
                        "108 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : k
     */
    public void testk() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("k");
        assertNotNull(cs);
        assertEquals("k", cs.getName());
        String[] text =
                {"-22 1 27 374 27 269 -20 hstem", "88 75 vstem",
                        "163 205 rmoveto", "-14 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : k_sc
     */
    public void testk_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("k.sc");
        assertNotNull(cs);
        assertEquals("k.sc", cs.getName());
        String[] text =
                {"22 1 27 406 26 hstem", "102 74 vstem", "176 215 rmoveto",
                        "19 -2 13 -5 15 -18 rrcurveto", "120 -138 rlineto",
                        "14 -15 1 -11 0 -13 rrcurveto", "-13 1 vlineto",
                        "61 0 81 0 3 0 0 22 rlineto", "3 -4 3 -3 vhcurveto",
                        "-5 hlineto", "-21 0 -16 3 -19 21 rrcurveto",
                        "-161 182 rlineto", "-12 14 -3 9 30 31 rrcurveto",
                        "95 99 rlineto", "38 40 26 7 38 0 rrcurveto",
                        "5 3 2 3 hvcurveto", "0 22 -3 1 rlineto",
                        "0 -44 -1 -26 -27 -73 1 0 vhcurveto",
                        "-1 -1 0 -22 rlineto", "-3 2 -2 4 vhcurveto",
                        "33 0 9 -6 -25 -26 rrcurveto", "-124 -129 rlineto",
                        "-16 -16 -13 -7 -15 -1 rrcurveto", "153 vlineto",
                        "20 11 12 32 vhcurveto", "10 hlineto",
                        "4 3 2 3 hvcurveto", "0 21 -2 2 rlineto",
                        "0 -63 -2 -27 -31 -80 2 0 vhcurveto",
                        "-1 -2 0 -22 rlineto", "-3 3 -1 4 vhcurveto",
                        "20 hlineto", "31 12 -10 -22 hvcurveto",
                        "-337 vlineto", "-19 -11 -18 -32 vhcurveto",
                        "-20 hlineto", "-4 -3 -2 -4 hvcurveto",
                        "0 -21 2 -2 rlineto", "0 84 2 28 31 57 -2 0 vhcurveto",
                        "2 2 0 21 rlineto", "4 -3 2 -4 vhcurveto",
                        "-10 hlineto", "-31 -12 15 22 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : k_superior
     */
    public void testk_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("k.superior");
        assertNotNull(cs);
        assertEquals("k.superior", cs.getName());
        String[] text =
                {"-183 365 22 221 22 69 -20 hstem", "55 49 vstem",
                        "104 494 rmoveto",
                        "1 1 2 0 2 0 15 0 7 -11 9 -11 rrcurveto",
                        "45 -64 rlineto", "12 -17 2 -4 0 -6 rrcurveto",
                        "0 -16 2 -2 rlineto", "",
                        "0 16 1 22 24 37 -1 0 vhcurveto", "2 2 0 16 rlineto",
                        "3 -4 2 -4 vhcurveto", "-33 0 -17 26 -7 10 rrcurveto",
                        "-63 93 rlineto", "-4 5 -1 5 4 5 rrcurveto",
                        "37 42 rlineto", "22 24 28 11 24 0 rrcurveto",
                        "2 4 2 3 hvcurveto", "0 17 -2 1 rlineto",
                        "0 -40 -1 -24 -22 -30 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto",
                        "-2 2 -3 3 8 11 -1 -8 vhcurveto",
                        "0 -4 -3 -7 -8 -8 -32 -37 -21 -15 -27 -12 rrcurveto",
                        "223 -14 vlineto", "-25 -12 -22 -6 -32 -4 rrcurveto",
                        "2 -22 rlineto", "10 3 10 1 7 0 rrcurveto",
                        "14 1 -11 -15 hvcurveto", "-259 vlineto",
                        "0 -21 -1 -5 -24 -1 rrcurveto", "-8 hlineto",
                        "-4 0 -3 -2 hvcurveto", "-18 vlineto",
                        "0 37 1 24 25 38 -1 0 vhcurveto", "18 vlineto",
                        "4 -3 1 -2 vhcurveto", "-8 hlineto",
                        "-17 -8 5 22 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : kappa
     */
    public void testkappa() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("kappa");
        assertNotNull(cs);
        assertEquals("kappa", cs.getName());
        String[] text =
                {
                        "4 -12 51 351 52 hstem",
                        "99 74 vstem",
                        "471 392 rmoveto",
                        "43 -30 7 -29 vhcurveto",
                        "-62 0 -39 -55 -47 -65 rrcurveto",
                        "-91 -126 0 246 -15 0 rlineto",
                        "-8 0 -5 -2 -7 -4 -13 -7 -22 -12 -74 -12 rrcurveto",
                        "5 -28 rlineto",
                        "17 4 12 1 13 0 rrcurveto",
                        "14 9 -7 -38 hvcurveto",
                        "0 -338 11 -18 63 31 0 137 47 64 76 -150 rlineto",
                        "32 -62 20 -13 24 0 34 0 23 14 50 61 rrcurveto",
                        "-19 17 rlineto",
                        "-22 -26 -15 -15 -14 0 -22 0 -14 18 -27 50 rrcurveto",
                        "-86 164 35 46 rlineto",
                        "36 49 20 24 21 0 6 0 7 -6 6 -8 8 -10 17 -8 17 0 rrcurveto",
                        "19 19 13 21 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : kcommaaccent
     */
    public void testkcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("kcommaaccent");
        assertNotNull(cs);
        assertEquals("kcommaaccent", cs.getName());
        String[] text =
                {
                        "-22 -108 81 28 27 374 27 269 -20 hstem",
                        "88 75 132 33 vstem",
                        "163 205 rmoveto",
                        "-14 callsubr",
                        "103 -99 rmoveto",
                        "-36 -16 -24 -16 -16 10 -25 41 hvcurveto",
                        "7 0 10 3 12 5 1 -3 0 -2 0 -4 0 -6 -3 -58 -76 -15 rrcurveto",
                        "4 -17 rlineto", "91 4 17 76 0 25 rrcurveto",
                        "36 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : kgreenlandic
     */
    public void testkgreenlandic() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("kgreenlandic");
        assertNotNull(cs);
        assertEquals("kgreenlandic", cs.getName());
        String[] text =
                {
                        "-19 1 27 374 27 hstem",
                        "91 75 vstem",
                        "91 321 rmoveto",
                        "-249 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 51 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-2 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "0 133 0 6 rlineto",
                        "30 5 13 -18 16 -22 rrcurveto",
                        "73 -103 rlineto",
                        "20 -29 3 -12 0 -12 rrcurveto",
                        "0 -17 3 -4 rlineto",
                        "0 27 2 35 39 51 -2 0 vhcurveto",
                        "2 3 0 18 rlineto",
                        "5 -6 3 -7 vhcurveto",
                        "-3 hlineto",
                        "-25 0 -32 18 -18 27 rrcurveto",
                        "-117 173 rlineto",
                        "-6 8 -1 9 6 7 rrcurveto",
                        "76 84 rlineto",
                        "25 26 44 22 27 0 rrcurveto",
                        "7 hlineto",
                        "5 6 3 5 hvcurveto",
                        "0 19 -4 2 rlineto",
                        "0 -54 -2 -39 -35 -48 2 0 vhcurveto",
                        "-3 -2 0 -19 rlineto",
                        "-4 3 -4 5 vhcurveto",
                        "4 hlineto",
                        "24 5 -8 -8 hvcurveto",
                        "0 -10 -5 -13 -15 -16 -54 -58 -33 -31 -44 -22 rrcurveto",
                        "206 -15 vlineto",
                        "-7 0 -8 -3 -11 -5 -31 -17 -30 -5 -42 -7 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "14 8 -7 -54 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : kreis
     */
    public void testkreis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("kreis");
        assertNotNull(cs);
        assertEquals("kreis", cs.getName());
        String[] text =
                {"132 23 32 502 31 hstem", "34 31 503 31 vstem",
                        "317 557 rmoveto", "9 callsubr", "-534 vmoveto",
                        "10 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : l
     */
    public void testl() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("l");
        assertNotNull(cs);
        assertEquals("l", cs.getName());
        String[] text =
                {"-241 1 27 hstem", "95 75 vstem", "95 72 rmoveto",
                        "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : l_sc
     */
    public void testl_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("l.sc");
        assertNotNull(cs);
        assertEquals("l.sc", cs.getName());
        String[] text =
                {"-71 -1 29 406 26 hstem", "102 74 206 27 vstem",
                        "133 1 rmoveto", "581 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : l_superior
     */
    public void testl_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("l.superior");
        assertNotNull(cs);
        assertEquals("l.superior", cs.getName());
        String[] text =
                {"-340 365 22 312 -20 hstem", "55 49 vstem", "104 739 rmoveto",
                        "-14 hlineto", "-25 -12 -22 -6 -32 -4 rrcurveto",
                        "2 -22 rlineto", "10 3 10 1 7 0 rrcurveto",
                        "14 1 -11 -15 hvcurveto", "-259 vlineto",
                        "0 -21 -1 -5 -24 -1 rrcurveto", "-8 hlineto",
                        "-4 0 -3 -2 hvcurveto", "-18 vlineto",
                        "0 37 1 24 25 41 -1 0 vhcurveto", "18 vlineto",
                        "4 -3 1 -2 vhcurveto", "-11 hlineto",
                        "-17 -8 5 22 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lacute
     */
    public void testlacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lacute");
        assertNotNull(cs);
        assertEquals("lacute", cs.getName());
        String[] text =
                {
                        "-241 1 27 670 -20 hstem",
                        "95 74 vstem",
                        "203 848 rmoveto",
                        "-124 -87 rlineto",
                        "-13 -9 -2 -5 0 -7 0 -10 5 -4 10 0 8 0 13 3 22 8 rrcurveto",
                        "144 58 rlineto", "-171 -723 rmoveto", "-13 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lacute_sc
     */
    public void testlacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lacute.sc");
        assertNotNull(cs);
        assertEquals("lacute.sc", cs.getName());
        String[] text =
                {"-71 -1 29 406 26 hstem", "102 74 206 27 vstem",
                        "133 1 rmoveto", "581 callsubr", "75 668 rmoveto",
                        "68 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lambda
     */
    public void testlambda() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lambda");
        assertNotNull(cs);
        assertEquals("lambda", cs.getName());
        String[] text =
                {"30 -12 66 583 61 hstem", "532 98 rmoveto", "-23 13 rlineto",
                        "-20 -46 -21 -11 -21 0 -34 0 -21 52 -49 162 rrcurveto",
                        "-91 301 rlineto",
                        "-33 112 -61 17 -22 0 -32 0 -42 -23 -25 -38 rrcurveto",
                        "14 -25 rlineto",
                        "20 15 23 10 28 0 28 0 38 -27 42 -132 rrcurveto",
                        "15 -48 -233 -435 20 -8 79 22 157 353 68 -236 rlineto",
                        "28 -93 29 -45 50 0 37 0 33 49 19 61 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lcaron
     */
    public void testlcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lcaron");
        assertNotNull(cs);
        assertEquals("lcaron", cs.getName());
        String[] text =
                {"-211 1 27 595 75 hstem", "95 74 106 50 vstem",
                        "95 72 rmoveto", "-13 callsubr", "170 125 rmoveto",
                        "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lcaron_sc
     */
    public void testlcaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lcaron.sc");
        assertNotNull(cs);
        assertEquals("lcaron.sc", cs.getName());
        String[] text =
                {"-71 -1 29 406 26 15 75 hstemhm",
                        "102 74 173 50 -17 27 hintmask 11110100", "",
                        "133 1 rmoveto", "581 callsubr", "206 549 rmoveto",
                        "113 callsubr", "hintmask 11111000", "430 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lcommaaccent
     */
    public void testlcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lcommaaccent");
        assertNotNull(cs);
        assertEquals("lcommaaccent", cs.getName());
        String[] text =
                {
                        "-241 -122 81 42 27 670 -20 hstemhm",
                        "95 74 -9 32 hintmask 11101000",
                        "130 -41 rmoveto",
                        "-35 -16 -23 -17 -16 10 -25 40 hvcurveto",
                        "8 0 10 3 12 6 1 -3 0 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "35 -23 37 -39 vhcurveto", "hintmask 11110000",
                        "-35 113 rmoveto", "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ldot
     */
    public void testldot() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ldot");
        assertNotNull(cs);
        assertEquals("ldot", cs.getName());
        String[] text =
                {
                        "-241 1 27 285 96 289 -20 hstem",
                        "95 74 44 95 vstem",
                        "95 72 rmoveto",
                        "-13 callsubr",
                        "118 -213 rmoveto",
                        "-24 18 -23 30 27 20 22 25 27 -24 22 -23 -27 -21 -24 -25 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : less
     */
    public void testless() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("less");
        assertNotNull(cs);
        assertEquals("less", cs.getName());
        String[] text =
                {"-14 73 331 hstem", "49 390 vstem", "122 239 rmoveto",
                        "-86 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lessequal
     */
    public void testlessequal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lessequal");
        assertNotNull(cs);
        assertEquals("lessequal", cs.getName());
        String[] text =
                {"26 11 47 hstem", "142 252 rmoveto",
                        "316 116 0 49 -390 -141 0 -47 390 -143 0 50 rlineto",
                        "-390 -125 rmoveto", "390 47 -390 hlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : lira
     */
    public void testlira() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lira");
        assertNotNull(cs);
        assertEquals("lira", cs.getName());
        String[] text =
                {
                        "-63 -12 50 8 39 145 39 47 39 178 42 hstem",
                        "133 73 vstem",
                        "147 85 rmoveto",
                        "-2 0 -4 0 -3 -1 rrcurveto",
                        "5 4 rlineto",
                        "30 23 23 40 7 79 rrcurveto",
                        "121 39 -118 18 hlineto",
                        "29 118 39 -118 33 vlineto",
                        "82 39 63 44 vhcurveto",
                        "21 0 14 -11 12 -11 11 -10 9 -8 14 0 rrcurveto",
                        "23 16 14 24 33 -54 11 -22 hvcurveto",
                        "-50 0 -43 -18 -33 -34 -48 -48 -23 -48 -2 -72 rrcurveto",
                        "-92 -39 91 -47 -91 -39 90 hlineto",
                        "-3 -55 -11 -58 -37 -40 -6 -6 -4 -5 -5 -4 -27 -14 -22 -18 0 -23 rrcurveto",
                        "-12 13 -12 13 18 22 11 26 10 9 16 33 vhcurveto",
                        "26 0 23 -12 25 -14 28 -16 30 -16 37 0 70 0 44 35 18 49 rrcurveto",
                        "-7 6 rlineto",
                        "-24 -33 -56 -7 -28 0 -26 0 -15 8 -17 11 -21 14 -26 14 -59 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : logicaland
     */
    public void testlogicaland() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("logicaland");
        assertNotNull(cs);
        assertEquals("logicaland", cs.getName());
        String[] text =
                {"178 21 -21 443 -20 hstem", "112 441 vstem",
                        "332 387 rmoveto",
                        "173 -387 48 0 -199 443 -42 0 -200 -443 48 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : logicalnot
     */
    public void testlogicalnot() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("logicalnot");
        assertNotNull(cs);
        assertEquals("logicalnot", cs.getName());
        String[] text =
                {"59 357 44 hstem", "483 54 vstem", "483 133 rmoveto",
                        "54 268 -513 -44 459 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : logicalor
     */
    public void testlogicalor() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("logicalor");
        assertNotNull(cs);
        assertEquals("logicalor", cs.getName());
        String[] text =
                {"178 14 -21 444 -20 hstem", "112 441 vstem", "333 50 rmoveto",
                        "-173 387 -48 0 199 -444 42 0 200 444 -49 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : longs
     */
    public void testlongs() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("longs");
        assertNotNull(cs);
        assertEquals("longs", cs.getName());
        String[] text =
                {"-202 1 27 363 39 231 37 hstem", "93 75 vstem",
                        "93 72 rmoveto", "131 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : longs_t
     */
    public void testlongs_t() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("longs_t");
        assertNotNull(cs);
        assertEquals("longs_t", cs.getName());
        String[] text =
                {"26 -12 55 -42 27 363 39 231 37 hstemhm",
                        "93 75 146 74 -57 57 hintmask 01111000",
                        "93 72 rmoveto", "131 callsubr", "hintmask 10111100",
                        "295 hmoveto", "556 callsubr", "hintmask 10111010",
                        "-111 154 hlineto", "-57 -20 0 -19 rlineto",
                        "-76 -16 -39 -67 -3 -1 -1 -3 vhcurveto", "-31 vlineto",
                        "-3 2 -1 3 vhcurveto", "hintmask 10111100",
                        "65 -304 hlineto", "-71 26 -28 47 vhcurveto",
                        "45 0 41 22 38 44 rrcurveto", "-18 17 rlineto",
                        "-26 -20 -19 -8 -26 0 rrcurveto",
                        "-27 -7 30 62 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lozenge
     */
    public void testlozenge() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lozenge");
        assertNotNull(cs);
        assertEquals("lozenge", cs.getName());
        String[] text =
                {"166 66 208 rmoveto", "259 -345 258 345 -258 346 rlineto",
                        "-200 -346 rmoveto",
                        "200 266 199 -266 -199 -265 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : lslash
     */
    public void testlslash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lslash");
        assertNotNull(cs);
        assertEquals("lslash", cs.getName());
        String[] text =
                {"-241 1 27 670 -20 hstem", "95 74 vstem", "243 438 rmoveto",
                        "-74 -43 0 303 -22 0 rlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "0 -221 -89 -53 17 -29 72 41 0 -239 rlineto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-32 -11 15 29 hvcurveto", "0 283 91 53 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : lslash_sc
     */
    public void testlslash_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("lslash.sc");
        assertNotNull(cs);
        assertEquals("lslash.sc", cs.getName());
        String[] text =
                {"-71 0 29 405 26 hstem", "102 74 206 27 vstem",
                        "244 333 rmoveto", "-68 -40 0 109 rlineto",
                        "20 11 12 32 vhcurveto", "20 hlineto",
                        "4 3 2 4 hvcurveto", "0 20 -2 2 rlineto",
                        "0 -84 -2 -28 -31 -68 2 0 vhcurveto",
                        "-1 -2 0 -20 rlineto", "-4 3 -2 4 vhcurveto",
                        "20 hlineto", "31 12 -10 -22 hvcurveto",
                        "0 -152 -95 -56 17 -30 78 45 0 -149 rlineto",
                        "-25 -8 -7 -33 vhcurveto", "-23 hlineto",
                        "-3 -3 -2 -4 hvcurveto", "0 -21 1 -2 rlineto",
                        "80 1 10 1 10 0 rrcurveto",
                        "72 -1 197 0 7 122 -27 3 rlineto",
                        "-10 -56 -23 -40 -48 0 rrcurveto", "-97 hlineto",
                        "-17 -11 6 19 hvcurveto", "0 199 85 50 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : m
     */
    public void testm() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("m");
        assertNotNull(cs);
        assertEquals("m", cs.getName());
        String[] text =
                {"259 1 27 366 48 hstem", "93 75 179 73 183 74 vstem",
                        "603 72 rmoveto", "-12 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : m_sc
     */
    public void testm_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("m.sc");
        assertNotNull(cs);
        assertEquals("m.sc", cs.getName());
        String[] text =
                {
                        "149 1 27 406 28 hstem",
                        "468 382 rmoveto",
                        "-4 31 -317 0 vhcurveto",
                        "2 -24 -7 -9 -21 0 rrcurveto",
                        "-21 hlineto",
                        "-4 -3 -2 -4 hvcurveto",
                        "0 -21 2 -2 rlineto",
                        "0 68 2 27 31 56 -2 0 vhcurveto",
                        "2 2 0 21 rlineto",
                        "4 -5 2 -3 vhcurveto",
                        "-35 0 -16 2 -4 39 rrcurveto",
                        "-32 335 rlineto",
                        "-3 25 4 5 49 0 rrcurveto",
                        "5 3 2 6 hvcurveto",
                        "0 18 -2 2 -126 -2 -135 -356 -147 356 -130 2 -3 -3 0 -21 rlineto",
                        "-2 3 -2 5 vhcurveto", "40 0 14 -3 -2 -21 rrcurveto",
                        "-28 -336 rlineto", "-3 -40 -12 -6 -38 0 rrcurveto",
                        "-4 -4 -2 -4 hvcurveto", "0 -21 1 -2 rlineto",
                        "0 43 2 28 30 47 -2 0 vhcurveto", "1 2 0 21 rlineto",
                        "4 -4 2 -3 vhcurveto", "-40 0 -11 3 3 38 rrcurveto",
                        "26 306 155 -372 rlineto",
                        "3 -5 4 -2 5 0 5 0 4 2 3 5 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : m_superior
     */
    public void testm_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("m.superior");
        assertNotNull(cs);
        assertEquals("m.superior", cs.getName());
        String[] text =
                {
                        "-16 365 22 216 34 hstem",
                        "66 49 112 48 107 49 vstem",
                        "22 615 rmoveto",
                        "2 -22 rlineto",
                        "11 3 9 1 7 0 rrcurveto",
                        "14 1 -11 -15 hvcurveto",
                        "-157 vlineto",
                        "0 -21 -1 -5 -24 -1 rrcurveto",
                        "-7 hlineto",
                        "-5 0 -3 -2 hvcurveto",
                        "-18 vlineto",
                        "0 37 1 24 26 40 -1 0 vhcurveto",
                        "18 vlineto",
                        "4 -3 1 -2 vhcurveto",
                        "-11 hlineto",
                        "-16 -9 5 22 hvcurveto",
                        "144 vlineto",
                        "19 23 21 22 21 0 rrcurveto",
                        "31 20 -17 -51 hvcurveto",
                        "-121 vlineto",
                        "0 -24 -6 -2 -20 -1 rrcurveto",
                        "-11 hlineto",
                        "-3 -1 -3 -2 hvcurveto",
                        "-18 vlineto",
                        "0 39 1 25 24 38 -1 0 vhcurveto",
                        "18 vlineto",
                        "2 0 3 -5 vhcurveto",
                        "-6 hlineto",
                        "-20 1 -6 1 0 25 rrcurveto",
                        "131 vlineto",
                        "0 6 0 6 -1 6 18 20 20 20 20 0 rrcurveto",
                        "30 20 -17 -51 hvcurveto",
                        "-121 vlineto",
                        "0 -24 -6 -2 -19 -1 rrcurveto",
                        "-11 hlineto",
                        "-4 -1 -3 -2 hvcurveto",
                        "-18 vlineto",
                        "0 40 1 25 24 38 -1 0 vhcurveto",
                        "18 vlineto",
                        "2 -1 3 -4 vhcurveto",
                        "-6 hlineto",
                        "-20 1 -6 1 0 25 rrcurveto",
                        "131 vlineto",
                        "67 -30 25 -45 vhcurveto",
                        "-36 0 -35 -34 -14 -17 -11 37 -25 14 -35 0 -36 0 -35 -35 -14 -17 rrcurveto",
                        "52 -14 vlineto", "-24 -12 -22 -6 -33 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : macron
     */
    public void testmacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("macron");
        assertNotNull(cs);
        assertEquals("macron", cs.getName());
        String[] text =
                {"-104 529 44 hstem", "315 529 rmoveto", "14 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : male
     */
    public void testmale() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("male");
        assertNotNull(cs);
        assertEquals("male", cs.getName());
        String[] text =
                {
                        "166 -22 46 343 49 hstem",
                        "58 50 342 50 vstem",
                        "500 195 rmoveto",
                        "0 90 -42 68 -68 35 rrcurveto",
                        "109 216 rlineto",
                        "9 -61 9 -37 28 -60 rrcurveto",
                        "44 -4 rlineto",
                        "-34 94 -13 52 -12 99 rrcurveto",
                        "-21 10 rlineto",
                        "-91 -56 -50 -20 -97 -28 rrcurveto",
                        "30 -34 rlineto",
                        "68 15 37 17 56 32 rrcurveto",
                        "-118 -215 rlineto",
                        "-25 8 -17 0 -22 0 rrcurveto",
                        "-129 -93 -99 -122 -122 99 -95 120 121 102 98 119 hvcurveto",
                        "-221 172 rmoveto",
                        "98 73 -80 -92 -92 -72 -79 -99 -99 -72 79 92 94 75 78 96 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : minus
     */
    public void testminus() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("minus");
        assertNotNull(cs);
        assertEquals("minus", cs.getName());
        String[] text =
                {"26 207 49 hstem", "461 256 rmoveto", "-85 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : minus_inferior
     */
    public void testminus_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("minus.inferior");
        assertNotNull(cs);
        assertEquals("minus.inferior", cs.getName());
        String[] text =
                {"-194 11 39 hstem", "273 50 rmoveto", "-238 -39 238 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : minus_superior
     */
    public void testminus_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("minus.superior");
        assertNotNull(cs);
        assertEquals("minus.superior", cs.getName());
        String[] text =
                {"-194 488 39 hstem", "273 527 rmoveto",
                        "-238 -39 238 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : minute
     */
    public void testminute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("minute");
        assertNotNull(cs);
        assertEquals("minute", cs.getName());
        String[] text =
                {"-252 516 183 hstem", "66 123 vstem", "148 699 rmoveto",
                        "490 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : mu
     */
    public void testmu() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("mu");
        assertNotNull(cs);
        assertEquals("mu", cs.getName());
        String[] text =
                {"-16 -213 -21 222 45 hstemhm",
                        "47 95 -88 75 -66 47 214 75 hintmask 11100100",
                        "101 -234 rmoveto", "23 18 19 41 hvcurveto",
                        "hintmask 11001100", "16 callsubr",
                        "hintmask 11010100", "17 callsubr",
                        "hintmask 11001100", "0 -58 9 -51 0 -33 rrcurveto",
                        "hintmask 11100100", "18 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : multiply
     */
    public void testmultiply() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("multiply");
        assertNotNull(cs);
        assertEquals("multiply", cs.getName());
        String[] text =
                {
                        "26 73 315 hstem",
                        "106 315 vstem",
                        "298 230 rmoveto",
                        "123 123 -35 35 -122 -123 -122 123 -36 -35 123 -123 -123 -122 36 -35 122 122 122 -122 35 35 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : musicalnote
     */
    public void testmusicalnote() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("musicalnote");
        assertNotNull(cs);
        assertEquals("musicalnote", cs.getName());
        String[] text =
                {
                        "33 10 -21 698 -20 hstem",
                        "259 46 144 57 vstem",
                        "39 58 rmoveto",
                        "-45 56 -24 55 68 87 46 65 vhcurveto",
                        "480 vlineto",
                        "43 -44 45 10 42 -62 8 -13 6 -18 0 -19 0 -31 -18 -35 -52 -14 rrcurveto",
                        "10 -16 rlineto",
                        "81 20 36 53 0 46 0 24 -16 58 -56 31 -67 36 -42 39 -20 42 rrcurveto",
                        "-46 -543 hlineto", "-17 6 -26 4 -35 0 rrcurveto",
                        "-35 -107 -29 -67 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : musicalnotedbl
     */
    public void testmusicalnotedbl() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("musicalnotedbl");
        assertNotNull(cs);
        assertEquals("musicalnotedbl", cs.getName());
        String[] text =
                {"222 10 -21 hstem", "259 46 323 47 vstem", "547 -23 rmoveto",
                        "-35 -104 -30 -67 -46 56 -23 55 68 88 47 64 hvcurveto",
                        "0 579 -416 205 0 -562 rlineto",
                        "-17 6 -28 4 -35 0 rrcurveto",
                        "-35 -105 -29 -67 -45 56 -24 55 68 87 46 65 hvcurveto",
                        "0 484 323 -164 0 -454 rlineto",
                        "-17 7 -28 4 -36 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : n
     */
    public void testn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("n");
        assertNotNull(cs);
        assertEquals("n", cs.getName());
        String[] text =
                {"19 1 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : n_sc
     */
    public void testn_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("n.sc");
        assertNotNull(cs);
        assertEquals("n.sc", cs.getName());
        String[] text =
                {"95 1 27 406 28 hstem", "105 46 307 47 vstem",
                        "505 390 rmoveto", "582 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : n_superior
     */
    public void testn_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("n.superior");
        assertNotNull(cs);
        assertEquals("n.superior", cs.getName());
        String[] text =
                {"-172 365 22 216 34 hstem", "66 49 112 48 vstem",
                        "22 615 rmoveto", "2 -22 rlineto",
                        "11 3 9 1 7 0 rrcurveto", "14 1 -11 -15 hvcurveto",
                        "-157 vlineto", "0 -21 -1 -5 -24 -1 rrcurveto",
                        "-7 hlineto", "-5 0 -3 -2 hvcurveto",
                        "0 -17 1 -1 rlineto", "0 36 1 24 25 40 -1 0 vhcurveto",
                        "1 1 0 17 rlineto", "4 -3 1 -2 vhcurveto",
                        "-11 hlineto", "-16 -9 5 22 hvcurveto", "144 vlineto",
                        "19 23 21 22 21 0 rrcurveto",
                        "31 20 -17 -51 hvcurveto", "-121 vlineto",
                        "0 -24 -6 -2 -20 -1 rrcurveto", "-11 hlineto",
                        "-3 -1 -3 -2 hvcurveto", "0 -17 1 -1 rlineto",
                        "0 38 1 25 24 38 -1 0 vhcurveto", "0 1 0 17 rlineto",
                        "2 0 3 -5 vhcurveto", "-6 hlineto",
                        "-20 1 -6 1 0 25 rrcurveto", "131 vlineto",
                        "67 -29 25 -46 vhcurveto",
                        "-36 0 -35 -35 -14 -17 rrcurveto", "52 -14 vlineto",
                        "-24 -12 -22 -6 -33 -4 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nacute
     */
    public void testnacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nacute");
        assertNotNull(cs);
        assertEquals("nacute", cs.getName());
        String[] text =
                {"19 1 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-50 379 rmoveto",
                        "79 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nacute_sc
     */
    public void testnacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nacute.sc");
        assertNotNull(cs);
        assertEquals("nacute.sc", cs.getName());
        String[] text =
                {
                        "92 1 27 406 28 hstem",
                        "105 46 307 47 vstem",
                        "505 390 rmoveto",
                        "582 callsubr",
                        "-128 655 rmoveto",
                        "-79 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -6 6 -6 8 0 6 0 7 5 16 15 rrcurveto",
                        "115 109 -3 10 rlineto",
                        "-2 2 -2 1 -2 2 -8 8 -13 11 -28 0 -5 0 -6 -1 -4 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : napostrophe
     */
    public void testnapostrophe() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("napostrophe");
        assertNotNull(cs);
        assertEquals("napostrophe", cs.getName());
        String[] text =
                {"32 1 27 366 48 181 75 hstemhm",
                        "82 50 -28 75 197 75 hintmask 11101100",
                        "376 72 rmoveto", "-29 -9 -15 -34 vhcurveto",
                        "-14 hlineto", "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -2 rlineto", "0 63 2 36 39 69 -2 0 vhcurveto",
                        "1 2 0 19 rlineto", "5 -3 3 -5 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "212 vlineto", "89 -19 69 -90 vhcurveto",
                        "-51 0 -48 -14 -64 -75 rrcurveto",
                        "-3 0 3 89 -15 0 rlineto",
                        "-8 0 -8 -3 -10 -5 -31 -17 -30 -5 -42 -7 rrcurveto",
                        "5 -28 rlineto", "hintmask 11110100",
                        "17 4 11 1 14 0 rrcurveto", "hintmask 11101100", "",
                        "13 9 -7 -54 hvcurveto", "-249 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 63 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-14 hlineto",
                        "-33 -10 15 29 hvcurveto", "245 vlineto",
                        "51 60 38 17 44 0 rrcurveto",
                        "52 12 -33 -70 hvcurveto", "-304 407 rmoveto",
                        "113 callsubr", "hintmask 11110100", "114 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ncaron
     */
    public void testncaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ncaron");
        assertNotNull(cs);
        assertEquals("ncaron", cs.getName());
        String[] text =
                {"19 1 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-118 212 rmoveto",
                        "112 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ncaron_sc
     */
    public void testncaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ncaron.sc");
        assertNotNull(cs);
        assertEquals("ncaron.sc", cs.getName());
        String[] text =
                {
                        "92 1 27 406 28 hstem",
                        "105 46 307 47 vstem",
                        "505 390 rmoveto",
                        "582 callsubr",
                        "-224 494 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -32 26 -39 28 rrcurveto",
                        "-21 -13 rlineto", "35 -37 37 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ncommaaccent
     */
    public void testncommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ncommaaccent");
        assertNotNull(cs);
        assertEquals("ncommaaccent", cs.getName());
        String[] text =
                {
                        "19 -113 81 33 27 366 48 hstem",
                        "91 75 125 32 41 74 vstem",
                        "364 72 rmoveto",
                        "-11 callsubr",
                        "-103 -323 rmoveto",
                        "-36 -16 -24 -16 -16 10 -25 41 hvcurveto",
                        "8 0 9 3 12 6 1 -3 1 -3 0 -4 0 -6 -3 -58 -77 -15 rrcurveto",
                        "4 -17 rlineto", "91 4 17 76 0 26 rrcurveto",
                        "35 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nine
     */
    public void testnine() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nine");
        assertNotNull(cs);
        assertEquals("nine", cs.getName());
        String[] text =
                {
                        "-63 -12 26 213 32 290 29 hstem",
                        "32 68 220 69 vstem",
                        "56 14 rmoveto",
                        "3 -26 rlineto",
                        "98 5 68 27 64 65 68 69 32 90 0 92 rrcurveto",
                        "199 -111 43 -74 -138 -34 -115 -68 -46 20 -122 148 vhcurveto",
                        "37 0 56 21 23 28 -12 -80 -33 -67 -45 -45 -49 -47 -55 -17 -66 -6 rrcurveto",
                        "263 290 rmoveto", "", "-90 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : nine_fitted
     */
    public void testnine_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nine.fitted");
        assertNotNull(cs);
        assertEquals("nine.fitted", cs.getName());
        String[] text =
                {
                        "-63 -12 26 213 32 290 29 hstem",
                        "41 67 220 69 vstem",
                        "64 14 rmoveto",
                        "3 -26 rlineto",
                        "99 5 67 27 64 65 69 69 31 90 0 92 rrcurveto",
                        "199 -111 43 -74 -137 -34 -115 -68 -46 19 -122 148 vhcurveto",
                        "38 0 55 21 23 28 -12 -80 -32 -67 -46 -45 -48 -47 -56 -17 -66 -6 rrcurveto",
                        "263 290 rmoveto", "527 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nine_inferior
     */
    public void testnine_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nine.inferior");
        assertNotNull(cs);
        assertEquals("nine.inferior", cs.getName());
        String[] text =
                {"-194 15 25 148 24 hstem", "33 56 119 56 vstem",
                        "33 111 rmoveto", "-17 9 -79 97 vhcurveto",
                        "25 0 27 17 15 14 -12 -58 -34 -67 -109 -19 rrcurveto",
                        "-19 vlineto", "153 12 60 103 0 82 rrcurveto",
                        "104 -74 28 -50 -79 -28 -65 -36 vhcurveto",
                        "56 5 rmoveto", "38 7 34 44 28 40 -23 -83 vhcurveto",
                        "-20 vlineto", "-22 -17 -22 -5 -14 0 rrcurveto",
                        "-56 -5 54 22 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nine_oldstyle
     */
    public void testnine_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nine.oldstyle");
        assertNotNull(cs);
        assertEquals("nine.oldstyle", cs.getName());
        String[] text =
                {"-61 -148 25 213 33 290 29 hstem", "45 67 221 68 vstem",
                        "69 -123 rmoveto", "564 callsubr", "263 291 rmoveto",
                        "565 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nine_superior
     */
    public void testnine_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nine.superior");
        assertNotNull(cs);
        assertEquals("nine.superior", cs.getName());
        String[] text =
                {"-194 491 24 149 24 hstem", "40 56 119 56 vstem",
                        "40 587 rmoveto", "-17 10 -79 96 vhcurveto",
                        "25 0 28 16 14 15 -11 -59 -35 -66 -109 -19 rrcurveto",
                        "-20 vlineto", "153 12 60 103 0 82 rrcurveto",
                        "104 -74 29 -50 -79 -28 -65 -36 vhcurveto",
                        "56 5 rmoveto", "37 8 35 43 29 39 -23 -84 vhcurveto",
                        "-19 vlineto", "-22 -17 -22 -6 -13 0 rrcurveto",
                        "-57 -5 55 22 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nine_taboldstyle
     */
    public void testnine_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nine.taboldstyle");
        assertNotNull(cs);
        assertEquals("nine.taboldstyle", cs.getName());
        String[] text =
                {"-63 -148 25 213 33 290 29 hstem", "45 67 221 68 vstem",
                        "69 -123 rmoveto", "564 callsubr", "263 291 rmoveto",
                        "", "565 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nineroman
     */
    public void testnineroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nineroman");
        assertNotNull(cs);
        assertEquals("nineroman", cs.getName());
        String[] text =
                {"173 0 28 374 29 92 96 hstemhm",
                        "88 96 -87 74 hintmask 11101000", "233 28 rmoveto",
                        "-2 0 -17 0 rlineto", "-32 -11 15 29 hvcurveto",
                        "286 vlineto", "28 11 16 32 vhcurveto",
                        "19 0 1 0 1 0 rlineto", "36 0 17 -24 28 -41 rrcurveto",
                        "87 -127 rlineto", "4 -5 1 -5 -4 -5 rrcurveto",
                        "-84 -108 rlineto", "-41 -53 -22 -6 -24 0 rrcurveto",
                        "hintmask 11110000", "-145 543 rmoveto",
                        "-15 callsubr", "305 -169 rmoveto", "16 hlineto",
                        "4 3 3 5 hvcurveto",
                        "0 18 -3 3 -110 -2 -63 1 0 1 -8 0 -8 0 -1 -1 rlineto",
                        "-22 0 -41 -1 -28 0 rrcurveto",
                        "-35 -68 2 0 hvcurveto", "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto", "19 hlineto",
                        "hintmask 11101000", "33 10 -16 -28 hvcurveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 vhcurveto",
                        "26 0 39 -1 23 0 rrcurveto",
                        "1 -1 8 1 11 -1 1 1 rlineto",
                        "15 0 22 1 17 0 rrcurveto", "33 51 -2 0 hvcurveto",
                        "2 2 0 19 rlineto", "5 -2 3 -5 vhcurveto",
                        "-14 hlineto", "-33 0 13 19 17 24 rrcurveto",
                        "63 91 rlineto", "9 12 2 0 7 -10 rrcurveto",
                        "59 -80 rlineto", "27 -38 13 -18 -37 0 rrcurveto",
                        "-11 hlineto", "-6 -2 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 63 2 41 34 54 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "6 -5 2 -9 vhcurveto",
                        "-33 0 -13 1 -46 65 rrcurveto", "-90 127 rlineto",
                        "-3 6 -2 3 5 6 rrcurveto", "84 107 rlineto",
                        "38 47 14 12 37 0 rrcurveto", "7 6 1 7 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -49 -2 -32 -30 -48 2 0 vhcurveto",
                        "-3 -3 0 -19 rlineto", "-5 3 -2 4 vhcurveto",
                        "15 hlineto", "29 0 -4 -16 -20 -29 rrcurveto",
                        "-66 -91 rlineto", "-7 -10 -6 2 -6 10 rrcurveto",
                        "-60 90 rlineto", "-12 18 -3 9 0 5 rrcurveto",
                        "7 3 5 20 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : notelement
     */
    public void testnotelement() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("notelement");
        assertNotNull(cs);
        assertEquals("notelement", cs.getName());
        String[] text =
                {
                        "5 0 57 201 56 201 57 hstem",
                        "cntrmask 11100000",
                        "308 314 rmoveto",
                        "-209 hlineto",
                        "13 108 79 93 116 0 rrcurveto",
                        "73 hlineto",
                        "-158 -438 rmoveto",
                        "-64 32 -49 67 -10 82 rrcurveto",
                        "189 hlineto",
                        "174 -258 rmoveto",
                        "57 -155 vlineto",
                        "-16 0 -17 2 -16 4 rrcurveto",
                        "70 195 125 0 0 56 -104 0 72 201 41 0 0 57 -21 0 24 65 -37 11 -28 -76 -88 0 rlineto",
                        "-157 -126 -131 -155 hvcurveto",
                        "0 -116 71 -104 103 -44 rrcurveto",
                        "-33 -90 37 -12 32 90 rlineto",
                        "23 -7 24 -3 26 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : notequal
     */
    public void testnotequal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("notequal");
        assertNotNull(cs);
        assertEquals("notequal", cs.getName());
        String[] text =
                {
                        "26 144 49 76 49 hstem",
                        "461 318 rmoveto",
                        "-150 0 80 239 -38 10 -84 -249 -203 0 0 -49 186 0 -25 -76 -161 0 0 -49 144 0 -62 -185 38 -12 66 197 209 0 rlineto",
                        "49 -192 vlineto", "25 76 167 0 rlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : notsubset
     */
    public void testnotsubset() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("notsubset");
        assertNotNull(cs);
        assertEquals("notsubset", cs.getName());
        String[] text =
                {
                        "21 43 42 269 42 hstem",
                        "37 48 vstem",
                        "255 85 rmoveto",
                        "-102 3 -68 28 0 111 rrcurveto",
                        "104 89 23 97 vhcurveto",
                        "76 hlineto",
                        "136 -269 rmoveto",
                        "-186 0 92 269 94 0 0 42 -80 0 31 90 -38 11 -35 -101 -90 0 rlineto",
                        "-128 -106 -23 -147 hvcurveto",
                        "0 -143 93 -34 111 -5 rrcurveto",
                        "-35 -103 38 -12 39 114 200 0 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : ntilde
     */
    public void testntilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ntilde");
        assertNotNull(cs);
        assertEquals("ntilde", cs.getName());
        String[] text =
                {"19 1 27 366 48 83 44 5 46 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-18 278 rmoveto",
                        "55 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ntilde_sc
     */
    public void testntilde_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ntilde.sc");
        assertNotNull(cs);
        assertEquals("ntilde.sc", cs.getName());
        String[] text =
                {
                        "92 1 27 406 28 64 44 5 46 hstem",
                        "105 46 307 47 vstem",
                        "",
                        "505 390 rmoveto",
                        "582 callsubr",
                        "-130 555 rmoveto",
                        "-19 0 -17 11 -16 12 -20 13 -22 15 -31 0 -42 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 18 -12 21 -13 21 -13 22 0 46 0 29 31 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -15 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : nu
     */
    public void testnu() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("nu");
        assertNotNull(cs);
        assertEquals("nu", cs.getName());
        String[] text =
                {
                        "-17 9 -21 399 55 hstem",
                        "357 93 vstem",
                        "400 442 rmoveto",
                        "-30 -13 -24 -17 hvcurveto",
                        "0 -19 6 -10 8 -10 8 -11 9 -13 0 -29 0 -35 -33 -72 -88 -146 -7 55 -18 71 -20 62 -32 98 -36 100 -59 0 -33 0 -31 -32 -24 -33 rrcurveto",
                        "19 -11 rlineto",
                        "9 12 20 9 19 0 49 0 79 -256 5 -143 rrcurveto",
                        "46 hlineto",
                        "114 166 42 78 29 93 7 25 5 21 0 18 rrcurveto",
                        "28 -19 25 -31 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : numbersign
     */
    public void testnumbersign() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("numbersign");
        assertNotNull(cs);
        assertEquals("numbersign", cs.getName());
        String[] text =
                {
                        "-63 183 49 109 49 hstem",
                        "316 341 rmoveto",
                        "90 0 8 49 -91 0 27 170 -33 0 -26 -170 -111 0 28 170 -34 0 -27 -170 -90 0 -8 -49 90 0 -17 -110 -91 0 rlineto",
                        "-7 -48 90 0 -27 -170 33 0 28 170 109 0 -26 -170 33 0 28 170 89 0 7 48 -90 0 rlineto",
                        "-32 hmoveto", "-111 0 18 110 110 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : o
     */
    public void testo() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("o");
        assertNotNull(cs);
        assertEquals("o", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : o_inferior
     */
    public void testo_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("o.inferior");
        assertNotNull(cs);
        assertEquals("o.inferior", cs.getName());
        String[] text =
                {
                        "-194 -117 25 228 25 hstem",
                        "26 59 134 59 vstem",
                        "219 -1 rmoveto",
                        "-63 -31 -28 -26 -41 -36 41 78 84 31 25 30 42 31 -58 -79 vhcurveto",
                        "-67 162 rmoveto",
                        "-101 -25 -89 -57 -64 44 -68 81 85 42 70 65 54 -21 89 -105 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : o_sc
     */
    public void testo_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("o.sc");
        assertNotNull(cs);
        assertEquals("o.sc", cs.getName());
        String[] text =
                {"51 -12 32 422 32 hstem", "37 80 319 80 vstem",
                        "516 235 rmoveto", "583 callsubr", "-253 207 rmoveto",
                        "584 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : o_superior
     */
    public void testo_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("o.superior");
        assertNotNull(cs);
        assertEquals("o.superior", cs.getName());
        String[] text =
                {
                        "-196 358 25 229 25 hstem",
                        "27 58 135 58 vstem",
                        "220 474 rmoveto",
                        "-63 -31 -28 -27 -40 -37 42 77 85 32 25 29 42 32 -58 -80 vhcurveto",
                        "-68 163 rmoveto",
                        "-101 -24 -90 -56 -64 44 -69 80 86 41 71 64 54 -21 90 -105 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oacute
     */
    public void testoacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oacute");
        assertNotNull(cs);
        assertEquals("oacute", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "236 465 rmoveto", "73 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oacute_sc
     */
    public void testoacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oacute.sc");
        assertNotNull(cs);
        assertEquals("oacute.sc", cs.getName());
        String[] text =
                {
                        "51 -12 32 422 32 191 -20 hstem",
                        "37 80 319 80 vstem",
                        "309 662 rmoveto",
                        "-80 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -7 7 -5 8 0 6 0 7 5 16 14 rrcurveto",
                        "114 109 -2 11 rlineto",
                        "-2 1 -2 2 -2 2 -9 8 -12 11 -28 0 -5 0 -7 -1 -3 -2 rrcurveto",
                        "207 -427 rmoveto", "583 callsubr", "-253 207 rmoveto",
                        "584 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : obreve
     */
    public void testobreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("obreve");
        assertNotNull(cs);
        assertEquals("obreve", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 56 57 hstemhm",
                        "34 79 -9 27 217 26 -7 79 hintmask 11110010",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "hintmask 11101100", "97 441 rmoveto",
                        "-27 -13 rlineto",
                        "7 -78 51 -57 78 0 50 0 74 34 10 101 rrcurveto",
                        "-26 13 rlineto", "-3 -62 -59 -29 -46 0 rrcurveto",
                        "-61 0 -46 40 -2 51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ocircumflex
     */
    public void testocircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ocircumflex");
        assertNotNull(cs);
        assertEquals("ocircumflex", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 204 -20 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "234 441 rmoveto", "74 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ocircumflex_sc
     */
    public void testocircumflex_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ocircumflex.sc");
        assertNotNull(cs);
        assertEquals("ocircumflex.sc", cs.getName());
        String[] text =
                {"51 -12 32 422 32 172 -20 hstem", "37 80 319 80 vstem",
                        "309 646 rmoveto", "-50 hlineto",
                        "-30 -45 -38 -44 -35 -39 rrcurveto", "21 -15 rlineto",
                        "37 27 32 25 37 38 33 -36 35 -25 39 -29 rrcurveto",
                        "20 15 rlineto", "-36 40 -36 42 -29 46 rrcurveto",
                        "207 -411 rmoveto", "583 callsubr", "-253 207 rmoveto",
                        "584 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : odieresis
     */
    public void testodieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("odieresis");
        assertNotNull(cs);
        assertEquals("odieresis", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 85 91 hstemhm",
                        "34 79 3 91 70 91 -1 79 hintmask 11111010",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "82 367 rmoveto", "72 callsubr",
                        "hintmask 11111100", "161 hmoveto", "56 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : odieresis_sc
     */
    public void testodieresis_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("odieresis.sc");
        assertNotNull(cs);
        assertEquals("odieresis.sc", cs.getName());
        String[] text =
                {
                        "51 -12 32 422 32 53 91 hstem",
                        "37 80 38 91 70 91 29 80 vstem",
                        "155 573 rmoveto",
                        "8 callsubr",
                        "161 hmoveto",
                        "-25 21 -21 24 26 20 21 25 25 -20 20 -26 -24 -21 -20 -25 vhcurveto",
                        "200 -338 rmoveto", "583 callsubr", "-253 207 rmoveto",
                        "584 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oe
     */
    public void testoe() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oe");
        assertNotNull(cs);
        assertEquals("oe", cs.getName());
        String[] text =
                {
                        "274 -12 47 -47 32 218 39 131 34 hstemhm",
                        "34 80 256 80 214 75 hintmask 00111110",
                        "664 277 rmoveto",
                        "-210 hlineto",
                        "2 16 27 115 86 0 rrcurveto",
                        "76 0 18 -90 1 -41 rrcurveto",
                        "-550 -35 rmoveto",
                        "0 38 7 38 23 41 21 35 33 15 44 0 39 0 32 -24 27 -45 14 -24 16 -39 0 -77 0 -56 -10 -40 -16 -26 rrcurveto",
                        "hintmask 01111110",
                        "-25 -41 -32 -17 -34 0 -93 0 -46 111 0 111 rrcurveto",
                        "298 107 rmoveto",
                        "-28 47 -44 46 -97 0 rrcurveto",
                        "-111 -98 -80 -156 -123 83 -95 122 hvcurveto",
                        "70 0 61 37 36 54 rrcurveto",
                        "hintmask 10111110",
                        "28 -47 46 -44 92 0 95 0 41 57 21 30 rrcurveto",
                        "-16 12 rlineto",
                        "-31 -33 -61 -19 -38 0 -55 0 -78 49 0 134 0 10 0 1 1 9 rrcurveto",
                        "", "288 hlineto", "117 -51 87 -117 vhcurveto",
                        "-69 0 -56 -43 -34 -50 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oe_sc
     */
    public void testoe_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oe.sc");
        assertNotNull(cs);
        assertEquals("oe.sc", cs.getName());
        String[] text =
                {"187 0 28 202 32 172 27 hstem", "29 78 219 75 vstem",
                        "629 461 rmoveto", "-199 0 -72 0 -63 1 -29 0 rlineto",
                        "-141 -96 -100 -140 -140 103 -82 135 hvcurveto",
                        "28 0 62 0 73 0 212 0 20 115 -25 3 rlineto",
                        "-12 -52 -23 -38 -52 0 rrcurveto", "-121 hlineto",
                        "-17 -11 4 19 hvcurveto", "179 87 vlineto",
                        "26 0 8 -11 5 -20 rrcurveto", "4 -22 rlineto",
                        "1 -3 2 -3 4 0 rrcurveto", "18 0 2 3 rlineto",
                        "-3 23 -3 21 0 25 0 24 4 27 2 23 rrcurveto",
                        "2 -1 1 -2 vhcurveto", "-17 hlineto",
                        "-3 0 -2 -2 -1 -4 rrcurveto", "-5 -21 rlineto",
                        "-5 -20 -7 -11 -27 0 rrcurveto", "-87 148 hlineto",
                        "17 9 7 19 vhcurveto", "113 hlineto",
                        "50 0 19 -48 7 -40 rrcurveto", "26 3 rlineto",
                        "-362 -323 rmoveto",
                        "-103 -72 70 138 150 74 51 75 43 27 -2 -30 hvcurveto",
                        "-344 vlineto", "-23 -9 -10 -35 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : ogonek
     */
    public void testogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ogonek");
        assertNotNull(cs);
        assertEquals("ogonek", cs.getName());
        String[] text =
                {
                        "-167 -223 39 hstem",
                        "77 59 vstem",
                        "279 -155 rmoveto",
                        "-15 7 rlineto",
                        "-22 -22 -16 -14 -30 0 -36 0 -24 26 0 26 0 66 52 47 45 41 rrcurveto",
                        "-15 17 rlineto",
                        "-63 -40 -78 -67 0 -71 0 -54 42 -30 53 0 41 0 37 23 29 45 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ograve
     */
    public void testograve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ograve");
        assertNotNull(cs);
        assertEquals("ograve", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "190 465 rmoveto", "71 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ograve_sc
     */
    public void testograve_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ograve.sc");
        assertNotNull(cs);
        assertEquals("ograve.sc", cs.getName());
        String[] text =
                {"51 -12 32 422 32 hstem", "37 80 319 80 vstem",
                        "265 668 rmoveto",
                        "-3 1 -7 1 -5 0 -34 0 -23 -17 -7 -6 rrcurveto",
                        "-3 -11 115 -109 rlineto",
                        "15 -14 7 -5 7 0 7 0 7 6 0 5 0 7 -1 7 -5 9 rrcurveto",
                        "181 -307 rmoveto", "583 callsubr", "-253 207 rmoveto",
                        "584 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ohorn
     */
    public void testohorn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ohorn");
        assertNotNull(cs);
        assertEquals("ohorn", cs.getName());
        String[] text =
                {"0 -12 35 386 33 hstemhm",
                        "34 79 254 79 -16 34 hintmask 11110000",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "137 callsubr", "hintmask 11101000", "138 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ohungarumlaut
     */
    public void testohungarumlaut() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ohungarumlaut");
        assertNotNull(cs);
        assertEquals("ohungarumlaut", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 211 -20 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "214 441 rmoveto",
                        "-7 5 -7 2 -7 0 -5 0 -16 -1 -6 -13 rrcurveto",
                        "-64 -146 0 -3 rlineto", "-8 8 -5 6 vhcurveto",
                        "2 0 3 1 2 2 rrcurveto", "102 121 rlineto",
                        "5 5 1 6 0 5 0 12 -7 11 -10 6 rrcurveto",
                        "135 -7 rmoveto",
                        "-8 6 -8 2 -9 0 -11 0 -8 -2 -5 -9 rrcurveto",
                        "-78 -139 rlineto",
                        "-1 -1 0 -2 0 -1 0 -8 10 -6 5 0 1 0 3 1 1 2 rrcurveto",
                        "115 110 rlineto",
                        "6 6 0 7 0 6 0 10 -4 11 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : ohungarumlaut_sc
     */
    public void testohungarumlaut_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ohungarumlaut.sc");
        assertNotNull(cs);
        assertEquals("ohungarumlaut.sc", cs.getName());
        String[] text =
                {"51 -12 32 422 32 212 -20 hstem", "37 80 319 80 vstem",
                        "516 235 rmoveto", "583 callsubr", "-253 207 rmoveto",
                        "584 callsubr", "24 237 rmoveto",
                        "-7 4 -7 3 -7 0 -5 0 -16 -1 -6 -14 rrcurveto",
                        "-64 -146 0 -3 rlineto", "-8 8 -5 6 vhcurveto",
                        "2 0 3 1 2 2 rrcurveto", "102 121 rlineto",
                        "5 5 1 6 0 5 0 12 -7 11 -10 7 rrcurveto",
                        "135 -8 rmoveto",
                        "-7 6 -9 3 -9 0 -11 0 -8 -3 -4 -9 rrcurveto",
                        "-79 -139 rlineto",
                        "-1 -1 0 -2 0 -1 0 -8 10 -5 5 0 2 0 2 0 1 3 rrcurveto",
                        "115 109 rlineto",
                        "6 6 1 7 0 6 0 10 -5 11 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : omacron
     */
    public void testomacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("omacron");
        assertNotNull(cs);
        assertEquals("omacron", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 97 44 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "326 334 rmoveto", "116 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : omega
     */
    public void testomega() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("omega");
        assertNotNull(cs);
        assertEquals("omega", cs.getName());
        String[] text =
                {"194 -12 35 243 38 hstem", "34 74 200 26 27 27 195 79 vstem",
                        "662 206 rmoveto", "250 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : omega1
     */
    public void testomega1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("omega1");
        assertNotNull(cs);
        assertEquals("omega1", cs.getName());
        String[] text =
                {
                        "240 -12 35 243 38 70 68 hstem",
                        "74 74 200 26 27 27 195 79 vstem",
                        "554 374 rmoveto",
                        "60 -68 9 -56 0 -38 0 -97 -21 -92 -95 0 -56 0 -31 39 -20 69 20 52 8 45 0 24 rrcurveto",
                        "31 -11 21 -30 -32 -7 -28 -30 vhcurveto",
                        "0 -20 3 -41 21 -54 -21 -72 -31 -36 -53 0 -75 0 -44 36 0 125 0 83 35 65 34 42 rrcurveto",
                        "485 -168 rmoveto",
                        "0 74 -38 55 -41 39 rrcurveto",
                        "89 68 -195 hlineto",
                        "-258 0 -117 0 rlineto",
                        "-93 0 -14 -59 -18 -89 rrcurveto",
                        "20 hlineto",
                        "13 36 18 44 57 0 rrcurveto",
                        "42 hlineto",
                        "-59 -58 -34 -69 0 -70 0 -144 87 -45 89 0 66 0 47 33 27 69 29 -79 50 -23 51 0 123 0 59 91 0 127 rrcurveto",
                        "-301 31 rmoveto", "251 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : omegatonos
     */
    public void testomegatonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("omegatonos");
        assertNotNull(cs);
        assertEquals("omegatonos", cs.getName());
        String[] text =
                {"194 -12 35 243 38 380 -20 hstem",
                        "34 74 200 26 27 27 195 79 vstem", "662 206 rmoveto",
                        "250 callsubr", "-301 31 rmoveto", "251 callsubr",
                        "34 447 rmoveto", "243 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : omicron
     */
    public void testomicron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("omicron");
        assertNotNull(cs);
        assertEquals("omicron", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : omicrontonos
     */
    public void testomicrontonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("omicrontonos");
        assertNotNull(cs);
        assertEquals("omicrontonos", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 240 -20 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "247 477 rmoveto", "254 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : one
     */
    public void testone() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("one");
        assertNotNull(cs);
        assertEquals("one", cs.getName());
        String[] text =
                {"-63 -1 30 549 -20 hstem", "210 72 vstem", "188 477 rmoveto",
                        "22 0 -24 -34 hvcurveto", "-344 vlineto",
                        "-29 0 -17 -38 vhcurveto", "-60 hlineto",
                        "-6 0 -1 -5 -1 -3 rrcurveto",
                        "0 -22 139 2 137 -2 0 22 rlineto",
                        "6 -5 2 -3 vhcurveto", "-52 hlineto",
                        "-33 -5 10 36 hvcurveto", "503 -19 vlineto",
                        "-50 -36 -34 -21 -88 -41 rrcurveto", "12 -31 rlineto",
                        "22 10 44 18 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : one_fitted
     */
    public void testone_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("one.fitted");
        assertNotNull(cs);
        assertEquals("one.fitted", cs.getName());
        String[] text =
                {"-138 -1 30 549 -20 hstem", "168 72 vstem", "146 477 rmoveto",
                        "22 0 -24 -34 hvcurveto", "-344 vlineto",
                        "-29 0 -17 -38 vhcurveto", "-59 hlineto",
                        "-7 -1 -5 -3 hvcurveto",
                        "0 -22 139 2 137 -2 0 22 rlineto",
                        "6 -5 2 -3 vhcurveto", "-53 hlineto",
                        "-33 -5 10 36 hvcurveto", "503 -19 vlineto",
                        "-50 -36 -34 -21 -87 -41 rrcurveto", "12 -31 rlineto",
                        "21 10 44 18 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : one_inferior
     */
    public void testone_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("one.inferior");
        assertNotNull(cs);
        assertEquals("one.inferior", cs.getName());
        String[] text =
                {"-194 -109 24 hstem", "144 51 vstem", "129 146 rmoveto",
                        "13 2 -9 -33 hvcurveto", "-152 vlineto",
                        "-22 -15 -15 -16 vhcurveto", "-35 hlineto",
                        "-4 -4 -2 -2 hvcurveto", "-21 vlineto",
                        "0 60 1 38 34 52 -1 0 vhcurveto", "20 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-13 -12 15 22 hvcurveto", "261 -16 vlineto",
                        "-44 -27 -26 -11 -47 -18 rrcurveto", "10 -26 rlineto",
                        "14 6 30 9 13 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : one_oldstyle
     */
    public void testone_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("one.oldstyle");
        assertNotNull(cs);
        assertEquals("one.oldstyle", cs.getName());
        String[] text =
                {"-167 1 27 414 -20 hstem", "153 75 vstem", "153 311 rmoveto",
                        "-238 vlineto", "-34 -2 -11 -36 vhcurveto", "",
                        "-36 hlineto", "-7 -1 -4 -4 hvcurveto", "-21 vlineto",
                        "24 1 88 1 5 0 15 0 74 -1 19 -1 rrcurveto",
                        "21 vlineto", "6 -4 2 -4 vhcurveto", "-22 hlineto",
                        "-33 -5 9 36 hvcurveto", "369 -23 vlineto",
                        "-49 -22 -51 -16 -51 -12 rrcurveto", "7 -34 rlineto",
                        "26 9 23 7 20 0 rrcurveto", "20 3 -13 -50 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : one_superior
     */
    public void testone_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("one.superior");
        assertNotNull(cs);
        assertEquals("one.superior", cs.getName());
        String[] text =
                {"-194 365 25 298 -20 hstem", "142 51 vstem",
                        "127 621 rmoveto", "13 2 -10 -32 hvcurveto",
                        "-152 vlineto", "-22 -15 -15 -16 vhcurveto",
                        "-35 hlineto", "-4 -4 -3 -2 hvcurveto", "-21 vlineto",
                        "0 60 1 38 34 52 -1 0 vhcurveto", "21 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-13 -12 15 22 hvcurveto", "261 -16 vlineto",
                        "-44 -27 -26 -12 -46 -17 rrcurveto", "9 -27 rlineto",
                        "14 7 30 9 13 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : one_taboldstyle
     */
    public void testone_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("one.taboldstyle");
        assertNotNull(cs);
        assertEquals("one.taboldstyle", cs.getName());
        String[] text =
                {"-63 1 27 414 -20 hstem", "207 75 vstem", "207 311 rmoveto",
                        "-238 vlineto", "-34 -2 -11 -36 vhcurveto",
                        "-36 hlineto", "-7 -1 -4 -4 hvcurveto", "-21 vlineto",
                        "24 1 88 1 6 0 14 0 75 -1 18 -1 rrcurveto",
                        "21 vlineto", "6 -4 2 -4 vhcurveto", "-22 hlineto",
                        "-33 -5 9 36 hvcurveto", "369 -23 vlineto",
                        "-49 -22 -50 -16 -52 -12 rrcurveto", "7 -34 rlineto",
                        "27 9 22 7 21 0 rrcurveto", "19 3 -13 -50 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : onedotenleader
     */
    public void testonedotenleader() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onedotenleader");
        assertNotNull(cs);
        assertEquals("onedotenleader", cs.getName());
        String[] text =
                {"-282 -12 106 hstem", "57 106 vstem", "57 41 rmoveto",
                        "-97 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oneeighth
     */
    public void testoneeighth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oneeighth");
        assertNotNull(cs);
        assertEquals("oneeighth", cs.getName());
        String[] text =
                {"159 -87 22 286 22 73 24 hstemhm",
                        "135 51 210 48 -33 44 103 44 -28 54 hintmask 11110000",
                        "120 572 rmoveto", "13 2 -10 -33 hvcurveto", "",
                        "-152 vlineto", "-22 -14 -15 -17 vhcurveto",
                        "-35 hlineto", "-4 -3 -2 -2 hvcurveto", "-21 vlineto",
                        "0 59 1 38 34 52 -1 0 vhcurveto", "20 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-13 -12 15 22 hvcurveto", "262 -16 vlineto",
                        "-44 -28 -25 -11 -47 -17 rrcurveto", "9 -27 rlineto",
                        "15 6 29 10 13 0 rrcurveto", "380 -495 rmoveto",
                        "29 -14 rlineto", "hintmask 11111001",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-42 -29 -16 -36 -24 -41 15 45 vhcurveto",
                        "0 34 40 39 16 9 rrcurveto", "hintmask 11110110",
                        "102 98 rmoveto", "505 callsubr", "hintmask 11111001",
                        "-39 -20 -44 -36 0 -37 rrcurveto",
                        "-65 68 -17 44 90 30 57 32 vhcurveto",
                        "0 31 -18 26 -31 16 rrcurveto", "-39 22 rlineto",
                        "59 33 3 30 0 15 rrcurveto", "-94 46 rmoveto",
                        "hintmask 11110110", "34 16 -19 -27 hvcurveto",
                        "0 -29 -23 -27 -15 -10 rrcurveto", "-21 11 rlineto",
                        "-36 20 -8 22 0 16 rrcurveto", "29 24 14 29 vhcurveto",
                        "24 380 rmoveto", "-458 -655 41 -8 rlineto",
                        "hintmask 11110001", "459 655 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : onefifth
     */
    public void testonefifth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onefifth");
        assertNotNull(cs);
        assertEquals("onefifth", cs.getName());
        String[] text =
                {
                        "159 -86 24 167 27 71 34 80 25 hstem",
                        "135 51 368 57 vstem",
                        "120 573 rmoveto",
                        "13 2 -10 -32 hvcurveto",
                        "-152 vlineto",
                        "-22 -14 -15 -17 vhcurveto",
                        "-35 hlineto",
                        "-4 -3 -3 -2 hvcurveto",
                        "-21 vlineto",
                        "0 59 1 38 34 52 -1 0 vhcurveto",
                        "21 vlineto",
                        "4 -3 1 -3 vhcurveto",
                        "-28 hlineto",
                        "-13 -12 15 22 hvcurveto",
                        "261 -16 vlineto",
                        "-44 -27 -25 -11 -47 -18 rrcurveto",
                        "9 -26 rlineto",
                        "15 6 29 9 13 0 rrcurveto",
                        "434 -556 rmoveto",
                        "-41 -17 -38 -45 vhcurveto",
                        "-22 0 -11 10 -9 9 -8 8 -7 7 -14 0 rrcurveto",
                        "-10 -12 -9 -12 -24 60 -13 34 69 49 53 59 55 -36 51 -77 hvcurveto",
                        "-15 0 -25 -5 -9 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -21 -142 5 -4 rlineto",
                        "15 8 21 6 21 0 rrcurveto", "72 3 -59 -29 hvcurveto",
                        "-22 584 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : onehalf
     */
    public void testonehalf() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onehalf");
        assertNotNull(cs);
        assertEquals("onehalf", cs.getName());
        String[] text =
                {"159 -79 32 268 24 71 24 hstemhm",
                        "141 51 211 62 -60 54 103 58 hintmask 11110010",
                        "126 572 rmoveto", "13 2 -10 -33 hvcurveto",
                        "-152 vlineto", "-22 -15 -15 -16 vhcurveto",
                        "-35 hlineto", "-4 -4 -2 -2 hvcurveto", "-21 vlineto",
                        "0 60 1 38 34 52 -1 0 vhcurveto", "20 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-13 -12 15 22 hvcurveto", "262 -16 vlineto",
                        "-44 -28 -26 -11 -46 -17 rrcurveto", "9 -27 rlineto",
                        "14 6 30 10 13 0 rrcurveto", "306 -428 rmoveto",
                        "hintmask 11110110", "21 callsubr",
                        "hintmask 11111010", "-47 -37 -44 -42 0 -48 rrcurveto",
                        "206 hlineto", "4 29 7 35 8 30 rrcurveto",
                        "-24 6 rlineto", "-10 -29 -16 -39 -32 0 rrcurveto",
                        "-81 hlineto",
                        "0 31 24 29 42 30 56 40 33 33 0 47 rrcurveto",
                        "63 -58 19 -49 vhcurveto", "hintmask 11110110",
                        "-79 -29 -51 -26 -13 14 -11 13 hvcurveto",
                        "100 457 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : onenumerator
     */
    public void testonenumerator() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onenumerator");
        assertNotNull(cs);
        assertEquals("onenumerator", cs.getName());
        String[] text =
                {"-149 317 25 hstem", "131 52 vstem", "117 573 rmoveto",
                        "12 2 -10 -32 hvcurveto", "-152 vlineto",
                        "-22 -14 -15 -16 vhcurveto", "-36 hlineto",
                        "-3 -4 -3 -2 hvcurveto", "-21 vlineto",
                        "0 60 1 38 33 53 -1 0 vhcurveto", "21 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-14 -11 15 22 hvcurveto", "261 -16 vlineto",
                        "-44 -27 -26 -11 -47 -18 rrcurveto", "10 -26 rlineto",
                        "14 6 30 9 13 0 rrcurveto", "415 28 rmoveto",
                        "20 callsubr", "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : onequarter
     */
    public void testonequarter() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onequarter");
        assertNotNull(cs);
        assertEquals("onequarter", cs.getName());
        String[] text =
                {"159 -81 24 75 34 264 24 hstem", "138 51 339 46 vstem",
                        "124 572 rmoveto", "12 2 -10 -33 hvcurveto",
                        "-152 vlineto", "-22 -14 -15 -16 vhcurveto",
                        "-36 hlineto", "-4 -3 -2 -2 hvcurveto", "-21 vlineto",
                        "0 60 1 38 33 53 -1 0 vhcurveto", "20 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-14 -12 15 22 hvcurveto", "262 -16 vlineto",
                        "-43 -28 -26 -11 -47 -17 rrcurveto", "9 -27 rlineto",
                        "15 6 30 10 13 0 rrcurveto", "450 -415 rmoveto",
                        "9 -7 1 -5 vhcurveto",
                        "-8 0 -11 -12 -8 -9 -2 -3 -5 -7 0 -8 rrcurveto",
                        "-76 -90 vlineto", "22 34 59 82 45 70 rrcurveto",
                        "-30 10 -154 -219 4 -11 144 0 0 -51 rlineto",
                        "-21 -4 -3 -18 vhcurveto", "-15 hlineto",
                        "-4 -1 -3 -1 hvcurveto", "-21 vlineto",
                        "0 38 1 24 27 42 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 3 -4 vhcurveto", "-15 hlineto",
                        "-19 -4 6 19 hvcurveto", "50 52 vlineto",
                        "3 34 -55 0 rlineto", "-42 549 rmoveto", "20 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oneroman
     */
    public void testoneroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oneroman");
        assertNotNull(cs);
        assertEquals("oneroman", cs.getName());
        String[] text =
                {"-237 1 27 374 27 94 96 hstemhm",
                        "88 96 -87 74 hintmask 11101000", "97 358 rmoveto",
                        "180 callsubr", "hintmask 11110000", "-9 213 rmoveto",
                        "-15 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : onesixth
     */
    public void testonesixth() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onesixth");
        assertNotNull(cs);
        assertEquals("onesixth", cs.getName());
        String[] text =
                {"159 -86 24 149 24 206 25 hstem",
                        "139 51 199 54 119 56 vstem", "125 573 rmoveto",
                        "12 2 -10 -32 hvcurveto", "-152 vlineto",
                        "-22 -14 -15 -16 vhcurveto", "-36 hlineto",
                        "-4 -3 -3 -2 hvcurveto", "-21 vlineto",
                        "0 59 1 39 33 53 -1 0 vhcurveto", "21 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-14 -12 15 22 hvcurveto", "261 -16 vlineto",
                        "-43 -27 -26 -11 -47 -18 rrcurveto", "9 -26 rlineto",
                        "15 6 30 9 13 0 rrcurveto", "493 -558 rmoveto",
                        "504 callsubr", "-56 -5 rmoveto",
                        "-37 -7 -35 -44 -29 -39 23 84 vhcurveto", "19 vlineto",
                        "22 17 22 6 13 0 rrcurveto", "57 5 -55 -22 hvcurveto",
                        "-30 591 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : onethird
     */
    public void testonethird() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("onethird");
        assertNotNull(cs);
        assertEquals("onethird", cs.getName());
        String[] text =
                {"159 -85 24 144 25 112 25 71 24 hstemhm",
                        "128 51 223 49 95 57 -30 59 hintmask 11111100",
                        "113 572 rmoveto", "13 2 -10 -33 hvcurveto",
                        "-152 vlineto", "-22 -14 -15 -16 vhcurveto",
                        "-36 hlineto", "-4 -3 -2 -2 hvcurveto", "-21 vlineto",
                        "0 59 1 38 34 52 -1 0 vhcurveto", "20 vlineto",
                        "4 -3 1 -3 vhcurveto", "-27 hlineto",
                        "-14 -12 15 22 hvcurveto", "262 -16 vlineto",
                        "-43 -28 -26 -11 -47 -17 rrcurveto", "9 -27 rlineto",
                        "15 6 30 10 12 0 rrcurveto", "hintmask 11111110",
                        "433 -392 rmoveto", "0 -41 -29 -25 -44 -6 rrcurveto",
                        "2 -25 rlineto", "7 2 6 0 7 0 rrcurveto",
                        "hintmask 11111101",
                        "24 54 -6 -57 -69 -57 -14 -19 hvcurveto",
                        "-32 0 -10 8 -9 11 -6 7 -5 6 -14 0 rrcurveto",
                        "-11 -14 -9 -10 -21 53 -16 37 79 67 45 69 hvcurveto",
                        "0 58 -47 27 -33 4 rrcurveto", "hintmask 11111110",
                        "29 15 22 24 0 29 rrcurveto",
                        "36 -33 23 -52 -87 -29 -53 -17 -4 4 -15 19 vhcurveto",
                        "23 0 2 18 1 12 1 24 34 10 20 0 rrcurveto",
                        "19 21 -9 -31 hvcurveto", "-14 421 rmoveto",
                        "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ordfeminine
     */
    public void testordfeminine() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ordfeminine");
        assertNotNull(cs);
        assertEquals("ordfeminine", cs.getName());
        String[] text =
                {"-204 358 32 222 25 hstemhm",
                        "27 52 -47 48 108 54 hintmask 11011000",
                        "231 358 rmoveto", "11 callsubr", "hintmask 11101000",
                        "12 callsubr", "-43 144 rmoveto", "13 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ordmasculine
     */
    public void testordmasculine() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ordmasculine");
        assertNotNull(cs);
        assertEquals("ordmasculine", cs.getName());
        String[] text =
                {
                        "-152 303 28 210 25 hstem",
                        "39 58 157 57 vstem",
                        "171 541 rmoveto",
                        "50 33 -42 -80 -72 -44 -16 -27 -60 -26 59 49 54 24 48 50 hvcurveto",
                        "-132 -112 rmoveto",
                        "-72 59 -54 74 94 45 64 68 67 -36 64 -98 -86 -52 -52 -85 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : orthogonal
     */
    public void testorthogonal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("orthogonal");
        assertNotNull(cs);
        assertEquals("orthogonal", cs.getName());
        String[] text =
                {"40 0 42 400 -20 hstem", "63 49 vstem", "63 442 rmoveto",
                        "-1 -442 420 0 0 42 -370 0 0 400 rlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : oslash
     */
    public void testoslash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oslash");
        assertNotNull(cs);
        assertEquals("oslash", cs.getName());
        String[] text =
                {"-22 -10 36 385 33 hstem", "34 80 254 78 vstem",
                        "348 312 rmoveto", "76 callsubr", "72 328 rmoveto",
                        "77 callsubr", "184 45 rmoveto", "78 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oslash_sc
     */
    public void testoslash_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oslash.sc");
        assertNotNull(cs);
        assertEquals("oslash.sc", cs.getName());
        String[] text =
                {
                        "51 -12 32 422 32 hstem",
                        "37 80 319 80 vstem",
                        "401 366 rmoveto",
                        "22 -35 13 -49 0 -61 0 -127 -57 -74 -90 0 -42 0 -37 12 -28 25 rrcurveto",
                        "334 178 rmoveto",
                        "0 75 -31 62 -49 42 rrcurveto",
                        "42 60 -29 19 -41 -58 rlineto",
                        "-39 25 -47 14 -49 0 -140 0 -96 -112 0 -140 0 -80 33 -65 54 -41 rrcurveto",
                        "-44 -63 29 -19 44 63 rlineto",
                        "35 -19 41 -10 45 0 149 0 93 104 0 143 rrcurveto",
                        "-253 207 rmoveto", "46 0 40 -16 30 -31 rrcurveto",
                        "-221 -312 rlineto",
                        "-26 37 -15 50 0 64 0 150 71 58 75 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : oslashacute
     */
    public void testoslashacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("oslashacute");
        assertNotNull(cs);
        assertEquals("oslashacute", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 hstem", "34 79 254 79 vstem",
                        "348 312 rmoveto", "76 callsubr", "72 328 rmoveto",
                        "77 callsubr", "184 45 rmoveto", "78 callsubr",
                        "-156 239 rmoveto", "68 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : otilde
     */
    public void testotilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("otilde");
        assertNotNull(cs);
        assertEquals("otilde", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 83 44 5 46 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "270 364 rmoveto", "55 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : otilde_sc
     */
    public void testotilde_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("otilde.sc");
        assertNotNull(cs);
        assertEquals("otilde.sc", cs.getName());
        String[] text =
                {"51 -12 32 422 32 52 44 5 46 hstem", "37 80 319 80 vstem",
                        "339 570 rmoveto", "104 callsubr", "177 -335 rmoveto",
                        "583 callsubr", "-253 207 rmoveto", "584 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : p
     */
    public void testp() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("p");
        assertNotNull(cs);
        assertEquals("p", cs.getName());
        String[] text =
                {"-22 -229 27 190 34 374 46 hstem", "75 74 215 78 vstem",
                        "75 -158 rmoveto", "-8 callsubr", "74 -23 rmoveto",
                        "-7 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : p_sc
     */
    public void testp_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("p.sc");
        assertNotNull(cs);
        assertEquals("p.sc", cs.getName());
        String[] text =
                {"-62 1 27 160 27 219 28 hstem", "101 75 164 76 vstem",
                        "101 59 rmoveto", "-19 -11 -12 -31 vhcurveto",
                        "-21 hlineto", "-4 -2 -2 -4 hvcurveto",
                        "0 -21 1 -2 rlineto", "0 73 2 28 31 79 -2 0 vhcurveto",
                        "2 2 0 21 rlineto", "4 -4 2 -3 vhcurveto",
                        "-21 hlineto", "-30 -12 9 22 hvcurveto", "140 vlineto",
                        "18 -8 24 -3 24 0 rrcurveto",
                        "142 32 92 60 52 -29 70 -141 hvcurveto",
                        "-38 0 -42 -2 -28 0 -29 0 -64 2 -12 0 rrcurveto",
                        "-24 vlineto", "-2 1 -2 6 46 15 0 -31 vhcurveto",
                        "75 26 rmoveto", "15 4 34 1 15 0 rrcurveto",
                        "54 46 -20 -86 -77 -35 -36 -60 hvcurveto",
                        "-21 0 -28 1 -20 8 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : p_superior
     */
    public void testp_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("p.superior");
        assertNotNull(cs);
        assertEquals("p.superior", cs.getName());
        String[] text =
                {"-196 223 22 119 26 210 31 hstem", "56 49 119 54 vstem",
                        "105 455 rmoveto", "113 vlineto",
                        "19 18 19 14 25 0 rrcurveto",
                        "28 28 -38 -73 -93 -41 -6 -23 -22 -33 13 52 hvcurveto",
                        "-49 116 rmoveto", "-300 vlineto",
                        "0 -20 0 -5 -25 -1 rrcurveto", "-7 hlineto",
                        "-4 -1 -3 -2 hvcurveto", "-18 vlineto",
                        "0 37 1 24 26 40 -1 0 vhcurveto", "18 vlineto",
                        "4 -2 1 -3 vhcurveto", "-11 hlineto",
                        "-16 -9 5 21 hvcurveto", "113 vlineto",
                        "14 -12 20 -8 20 0 rrcurveto",
                        "65 54 63 74 68 -40 62 -58 hvcurveto",
                        "-29 0 -25 -15 -21 -15 rrcurveto",
                        "0 31 0 5 -14 0 rlineto",
                        "-24 -12 -22 -6 -33 -4 rrcurveto", "2 -22 rlineto",
                        "11 3 10 1 7 0 rrcurveto", "14 0 -11 -15 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : paragraph
     */
    public void testparagraph() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("paragraph");
        assertNotNull(cs);
        assertEquals("paragraph", cs.getName());
        String[] text =
                {"101 -234 27 823 25 -23 28 hstemhm",
                        "318 59 62 59 hintmask 11011000", "407 -207 rmoveto",
                        "-26 -4 35 29 hvcurveto", "696 vlineto",
                        "31 1 32 32 vhcurveto", "16 -1 13 -1 0 -58 rrcurveto",
                        "-701 vlineto", "-42 -3 -20 -29 vhcurveto",
                        "91 63 rmoveto", "700 vlineto", "hintmask 10111000",
                        "46 4 16 36 vhcurveto", "29 hlineto",
                        "4 2 3 4 hvcurveto", "0 21 -111 -2 rlineto",
                        "hintmask 11011000", "0 -34 -3 -35 vhcurveto",
                        "hintmask 10111000", "-27 0 -61 5 -75 0 rrcurveto",
                        "-132 -71 -84 -123 -178 131 -46 83 hvcurveto",
                        "32 0 31 5 14 7 rrcurveto", "-370 vlineto",
                        "0 -52 -6 -10 -33 -1 rrcurveto", "-29 hlineto",
                        "-4 -2 -2 -5 hvcurveto", "-21 329 21 vlineto",
                        "4 -2 3 -4 vhcurveto", "-29 hlineto",
                        "-32 1 -8 5 0 56 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenleft
     */
    public void testparenleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenleft");
        assertNotNull(cs);
        assertEquals("parenleft", cs.getName());
        String[] text =
                {"-206 44 78 vstem", "44 252 rmoveto",
                        "0 -45 4 -231 208 -180 rrcurveto", "18 17 rlineto",
                        "-33 38 -119 138 0 263 0 263 120 138 32 36 rrcurveto",
                        "-18 18 rlineto",
                        "-119 -102 -93 -167 0 -186 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : parenleft_inferior
     */
    public void testparenleft_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenleft.inferior");
        assertNotNull(cs);
        assertEquals("parenleft.inferior", cs.getName());
        String[] text =
                {"-304 -147 391 hstem", "36 53 vstem", "36 47 rmoveto",
                        "0 -72 31 -64 90 -58 rrcurveto", "15 10 rlineto",
                        "-68 72 -15 37 0 75 0 74 19 45 64 67 rrcurveto",
                        "-15 11 rlineto", "-77 -49 -44 -77 0 -71 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenleft_sc
     */
    public void testparenleft_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenleft.sc");
        assertNotNull(cs);
        assertEquals("parenleft.sc", cs.getName());
        String[] text =
                {"-206 44 78 vstem", "44 325 rmoveto",
                        "0 -39 4 -198 208 -155 rrcurveto", "18 15 rlineto",
                        "-33 31 -119 120 0 226 0 226 120 119 32 31 rrcurveto",
                        "-18 15 rlineto", "-119 -87 -93 -143 0 -161 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenleft_superior
     */
    public void testparenleft_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenleft.superior");
        assertNotNull(cs);
        assertEquals("parenleft.superior", cs.getName());
        String[] text =
                {"-304 326 390 hstem", "36 53 vstem", "36 520 rmoveto",
                        "0 -73 31 -64 90 -57 rrcurveto", "15 10 rlineto",
                        "-68 71 -15 38 0 75 0 73 19 46 64 67 rrcurveto",
                        "-15 10 rlineto", "-77 -49 -44 -76 0 -71 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenright
     */
    public void testparenright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenright");
        assertNotNull(cs);
        assertEquals("parenright", cs.getName());
        String[] text =
                {
                        "-206 174 78 vstem",
                        "252 252 rmoveto",
                        "0 45 -4 231 -208 180 rrcurveto",
                        "-18 -17 rlineto",
                        "33 -38 119 -138 0 -263 0 -263 -120 -138 -32 -37 rrcurveto",
                        "18 -17 rlineto", "119 101 93 167 0 187 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenright_inferior
     */
    public void testparenright_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenright.inferior");
        assertNotNull(cs);
        assertEquals("parenright.inferior", cs.getName());
        String[] text =
                {"-304 -147 391 hstem", "108 54 vstem", "162 47 rmoveto",
                        "0 71 -44 77 -77 49 rrcurveto", "-15 -11 rlineto",
                        "63 -67 19 -45 0 -74 0 -75 -14 -37 -68 -72 rrcurveto",
                        "15 -10 rlineto", "90 58 31 64 0 72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenright_sc
     */
    public void testparenright_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenright.sc");
        assertNotNull(cs);
        assertEquals("parenright.sc", cs.getName());
        String[] text =
                {
                        "-206 174 78 vstem",
                        "252 325 rmoveto",
                        "0 39 -4 198 -208 155 rrcurveto",
                        "-18 -14 rlineto",
                        "33 -33 119 -118 0 -227 0 -226 -120 -119 -32 -31 rrcurveto",
                        "18 -15 rlineto", "119 87 93 144 0 160 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : parenright_superior
     */
    public void testparenright_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("parenright.superior");
        assertNotNull(cs);
        assertEquals("parenright.superior", cs.getName());
        String[] text =
                {"-304 328 390 hstem", "108 54 vstem", "162 522 rmoveto",
                        "0 71 -44 76 -77 49 rrcurveto", "-15 -10 rlineto",
                        "63 -67 19 -46 0 -73 0 -75 -14 -38 -68 -71 rrcurveto",
                        "15 -10 rlineto", "90 57 31 64 0 73 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : partialdiff
     */
    public void testpartialdiff() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("partialdiff");
        assertNotNull(cs);
        assertEquals("partialdiff", cs.getName());
        String[] text =
                {
                        "-39 -11 33 309 38 215 32 hstem",
                        "29 80 238 79 vstem",
                        "",
                        "226 369 rmoveto",
                        "-95 -102 -79 -124 -107 81 -70 96 155 65 180 158 160 -86 129 -124 -74 -62 -27 -33 -17 12 -11 18 hvcurveto",
                        "19 0 15 18 10 18 5 9 13 11 49 0 87 0 39 -149 0 -81 0 -17 -1 -13 -2 -10 -32 38 -39 17 -47 0 rrcurveto",
                        "22 -38 rmoveto",
                        "44 0 31 -34 15 -19 -12 -110 -36 -146 -82 0 rrcurveto",
                        "-56 -43 63 53 95 63 98 76 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : percent
     */
    public void testpercent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("percent");
        assertNotNull(cs);
        assertEquals("percent", cs.getName());
        String[] text =
                {"136 -19 29 208 32 47 29 152 37 18 32 hstem",
                        "59 51 136 31 103 52 136 30 vstem", "110 392 rmoveto",
                        "-104 callsubr", "254 123 rmoveto", "-103 callsubr",
                        "16 -424 rmoveto", "-102 callsubr", "52 -14 rmoveto",
                        "-101 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : period
     */
    public void testperiod() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("period");
        assertNotNull(cs);
        assertEquals("period", cs.getName());
        String[] text =
                {"-282 -12 106 hstem", "57 106 vstem", "57 41 rmoveto",
                        "-97 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : periodcentered
     */
    public void testperiodcentered() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("periodcentered");
        assertNotNull(cs);
        assertEquals("periodcentered", cs.getName());
        String[] text =
                {"-251 204 108 hstem", "71 108 vstem", "125 204 rmoveto",
                        "19 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : perthousand
     */
    public void testperthousand() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("perthousand");
        assertNotNull(cs);
        assertEquals("perthousand", cs.getName());
        String[] text =
                {"410 -19 29 208 32 47 29 152 37 18 32 hstem",
                        "59 51 136 31 103 52 136 30 56 51 137 30 vstem",
                        "110 392 rmoveto", "-104 callsubr", "254 123 rmoveto",
                        "-103 callsubr", "16 -424 rmoveto", "-102 callsubr",
                        "52 -14 rmoveto", "-101 callsubr", "317 -66 rmoveto",
                        "488 callsubr", "123 147 rmoveto", "489 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : perthousandzero
     */
    public void testperthousandzero() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("perthousandzero");
        assertNotNull(cs);
        assertEquals("perthousandzero", cs.getName());
        String[] text =
                {
                        "-230 -19 29 208 32 hstem",
                        "15 51 136 30 vstem",
                        "15 91 rmoveto",
                        "-52 29 -58 61 83 44 110 68 72 -45 19 -41 -73 -58 -83 -76 vhcurveto",
                        "51 -14 rmoveto",
                        "57 42 84 49 14 31 -9 -52 -55 -35 -92 -56 -18 -27 15 52 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : peseta
     */
    public void testpeseta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("peseta");
        assertNotNull(cs);
        assertEquals("peseta", cs.getName());
        String[] text =
                {
                        "389 -10 51 -50 25 -15 24 228 30 69 35 -14 26 158 22 -21 30 hstemhm",
                        "95 72 166 70 35 66 -51 51 87 55 146 61 hintmask 0011100011101100",
                        "95 64 rmoveto",
                        "-25 -12 -14 -37 vhcurveto",
                        "-24 hlineto",
                        "-4 -2 -3 -4 hvcurveto",
                        "0 -17 1 -2 rlineto",
                        "0 84 2 32 35 79 -2 0 vhcurveto",
                        "1 2 0 17 rlineto",
                        "4 -3 3 -4 vhcurveto",
                        "-24 hlineto",
                        "-35 -15 12 27 hvcurveto",
                        "199 vlineto",
                        "12 -6 10 -4 24 0 96 0 51 46 24 53 rrcurveto",
                        "54 -272 hlineto",
                        "hintmask 1001000011101100",
                        "-64 23 -26 42 vhcurveto",
                        "hintmask 0011000011101100",
                        "31 0 29 12 27 23 rrcurveto",
                        "1 -25 rlineto",
                        "9 2 8 0 5 0 6 0 5 0 6 -2 rrcurveto",
                        "hintmask 0101010011101100",
                        "23 -6 28 -3 32 0 51 0 89 22 0 90 0 73 -62 27 -73 33 -49 21 -23 11 0 38 0 51 41 16 35 0 19 0 54 -11 27 -96 rrcurveto",
                        "21 1 -11 108 rlineto",
                        "-17 10 -48 14 -46 0 -72 0 -58 -45 0 -62 0 -67 39 -17 66 -28 73 -32 23 -26 0 -39 0 -46 -47 -21 -35 0 -33 0 -28 17 -9 9 rrcurveto",
                        "-24 23 -8 43 -2 21 rrcurveto",
                        "-21 -1 4 -70 rlineto",
                        "hintmask 1001100111101100",
                        "-19 -13 -16 -4 -19 0 rrcurveto",
                        "-25 -6 26 56 hvcurveto",
                        "229 85 vlineto",
                        "9 12 3 8 hvcurveto",
                        "18 vlineto",
                        "4 -2 2 -4 vhcurveto",
                        "hintmask 0001100111011100",
                        "-100 138 hlineto",
                        "-51 -17 0 -18 rlineto",
                        "0 -60 -12 -35 -44 -7 4 17 2 17 0 16 0 52 -29 98 -150 0 -21 0 -32 -1 -46 -3 rrcurveto",
                        "hintmask 0011101011101100",
                        "-44 -2 -53 -3 -12 0 rrcurveto", "-17 vlineto",
                        "-3 0 -3 6 vhcurveto", "4 0 22 1 7 0 rrcurveto",
                        "16 24 -5 -35 hvcurveto", "72 29 rmoveto",
                        "hintmask 0001000111001100",
                        "16 6 19 6 16 0 rrcurveto",
                        "56 59 -23 -114 -97 -45 -41 -79 hvcurveto",
                        "-20 0 -11 3 -11 2 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : phi
     */
    public void testphi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("phi");
        assertNotNull(cs);
        assertEquals("phi", cs.getName());
        String[] text =
                {
                        "113 415 27 hstem",
                        "39 80 153 59 164 80 vstem",
                        "272 -10 rmoveto",
                        "0 -202 12 -18 47 22 0 198 rlineto",
                        "67 6 177 46 0 195 0 102 -67 103 -113 0 -26 0 -30 -7 -21 -21 -39 -39 -7 -42 0 -73 rrcurveto",
                        "-244 vlineto",
                        "-114 10 -39 89 0 103 0 121 50 47 36 28 rrcurveto",
                        "-19 21 rlineto",
                        "-46 -22 -101 -68 0 -118 0 -141 82 -86 151 -10 rrcurveto",
                        "223 233 rmoveto", "0 -100 -64 -93 -100 -13 rrcurveto",
                        "230 vlineto", "114 25 54 39 61 39 -54 -138 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : phi1
     */
    public void testphi1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("phi1");
        assertNotNull(cs);
        assertEquals("phi1", cs.getName());
        String[] text =
                {
                        "78 -202 -21 869 -20 hstemhm",
                        "35 75 139 79 -72 65 -50 38 -31 24 168 75 hintmask 11100101",
                        "110 211 rmoveto",
                        "0 70 25 53 37 38 32 31 29 9 38 2 rrcurveto",
                        "hintmask 11101001",
                        "-15 -404 rlineto",
                        "-30 4 -28 10 -25 25 rrcurveto",
                        "-39 39 -24 54 0 69 rrcurveto",
                        "-6 -163 rmoveto",
                        "44 -42 46 -18 61 -5 rrcurveto",
                        "hintmask 11110001",
                        "-6 -206 79 0 rlineto",
                        "hintmask 11101001",
                        "-7 205 rlineto",
                        "44 3 56 11 55 52 46 45 23 53 0 65 0 64 -22 53 -47 46 -48 46 -50 17 -70 2 rrcurveto",
                        "hintmask 11100011",
                        "-6 207 -24 0 rlineto",
                        "hintmask 11100101",
                        "-7 -206 rlineto",
                        "-45 -1 -62 -8 -60 -57 -46 -45 -23 -53 0 -65 0 -64 22 -53 47 -46 rrcurveto",
                        "205 366 rmoveto",
                        "32 -2 34 -7 32 -32 39 -39 24 -53 0 -70 0 -69 -24 -54 -36 -36 rrcurveto",
                        "hintmask 11101001",
                        "-30 -30 -28 -10 -31 -3 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : pi
     */
    public void testpi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("pi");
        assertNotNull(cs);
        assertEquals("pi", cs.getName());
        String[] text =
                {
                        "81 -12 53 320 69 hstem",
                        "167 52 140 53 vstem",
                        "438 430 rmoveto",
                        "37 0 48 1 5 9 rrcurveto",
                        "19 -13 rlineto",
                        "-28 -52 -41 -14 -63 0 -3 -35 0 -82 0 -138 0 -42 10 -23 23 0 13 0 36 4 40 41 rrcurveto",
                        "17 -16 rlineto",
                        "-23 -31 -40 -51 -47 0 -68 0 -17 57 0 61 0 59 0 82 3 114 rrcurveto",
                        "-140 hlineto",
                        "-242 -36 -131 -98 -12 -20 7 27 vhcurveto",
                        "0 10 8 28 26 6 28 6 52 18 0 271 rrcurveto",
                        "-18 hlineto", "-50 0 -32 -22 -18 -57 rrcurveto",
                        "-20 3 rlineto", "8 60 37 85 53 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : plus
     */
    public void testplus() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("plus");
        assertNotNull(cs);
        assertEquals("plus", cs.getName());
        String[] text =
                {"26 207 49 174 -20 hstem", "239 50 vstem", "289 256 rmoveto",
                        "-100 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : plus_inferior
     */
    public void testplus_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("plus.inferior");
        assertNotNull(cs);
        assertEquals("plus.inferior", cs.getName());
        String[] text =
                {"-194 11 39 hstem", "134 39 vstem", "173 50 rmoveto",
                        "107 -39 -107 -106 -39 106 -106 39 106 107 39 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : plus_superior
     */
    public void testplus_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("plus.superior");
        assertNotNull(cs);
        assertEquals("plus.superior", cs.getName());
        String[] text =
                {"-194 488 39 hstem", "135 39 vstem", "174 527 rmoveto",
                        "107 -39 -107 -107 -39 107 -106 39 106 106 39 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : plusminus
     */
    public void testplusminus() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("plusminus");
        assertNotNull(cs);
        assertEquals("plusminus", cs.getName());
        String[] text =
                {"26 18 49 225 49 hstem", "239 50 vstem", "461 67 rmoveto",
                        "-85 callsubr", "-172 323 rmoveto", "-100 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : primereversed
     */
    public void testprimereversed() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("primereversed");
        assertNotNull(cs);
        assertEquals("primereversed", cs.getName());
        String[] text =
                {"-257 530 178 hstem", "56 127 vstem", "75 703 rmoveto",
                        "492 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : primetriple
     */
    public void testprimetriple() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("primetriple");
        assertNotNull(cs);
        assertEquals("primetriple", cs.getName());
        String[] text =
                {"18 516 183 hstem", "66 383 vstem", "148 699 rmoveto",
                        "490 callsubr", "130 hmoveto", "491 callsubr",
                        "130 hmoveto", "-11 0 -13 -7 -4 -10 rrcurveto",
                        "-52 -143 rlineto",
                        "-1 -3 -1 -5 0 -1 0 -8 7 -6 8 0 5 0 4 4 3 4 rrcurveto",
                        "91 122 rlineto",
                        "4 5 1 5 0 5 0 20 -21 18 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : product
     */
    public void testproduct() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("product");
        assertNotNull(cs);
        assertEquals("product", cs.getName());
        String[] text =
                {
                        "195 -108 26 628 39 -24 26 hstemhm",
                        "118 81 299 80 hintmask 10111000",
                        "498 -38 rmoveto",
                        "-27 -14 -17 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -2 -6 hvcurveto",
                        "0 -18 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "1 2 0 18 rlineto",
                        "6 -3 2 -5 vhcurveto",
                        "",
                        "-26 hlineto",
                        "-40 -15 14 30 hvcurveto",
                        "554 vlineto",
                        "0 30 24 14 28 1 rrcurveto",
                        "29 hlineto",
                        "5 3 4 4 hvcurveto",
                        "18 vlineto",
                        "hintmask 11011000",
                        "-1 0 -125 -2 -6 0 -71 -1 -57 0 -62 0 -71 0 -56 0 -62 1 rrcurveto",
                        "hintmask 10111000", "-14 0 -105 2 -8 0 rrcurveto",
                        "-19 vlineto", "-3 2 -4 6 vhcurveto", "30 hlineto",
                        "32 19 -8 -37 hvcurveto", "-554 vlineto",
                        "-27 -14 -17 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -2 -6 hvcurveto", "0 -18 2 -2 rlineto",
                        "0 94 2 35 39 87 -2 0 vhcurveto", "2 2 0 18 rlineto",
                        "6 -4 2 -4 vhcurveto", "-27 hlineto",
                        "-39 -15 14 30 hvcurveto", "539 vlineto",
                        "hintmask 11011000", "34 5 11 31 vhcurveto",
                        "226 hlineto", "32 5 -16 -28 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : propersubset
     */
    public void testpropersubset() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("propersubset");
        assertNotNull(cs);
        assertEquals("propersubset", cs.getName());
        String[] text =
                {"21 43 42 269 42 hstem", "37 48 vstem", "483 85 rmoveto",
                        "-212 hlineto",
                        "-110 -76 25 117 104 89 23 97 hvcurveto",
                        "212 42 -212 hlineto",
                        "-128 -106 -23 -147 -155 111 -28 123 hvcurveto",
                        "212 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : propersuperset
     */
    public void testpropersuperset() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("propersuperset");
        assertNotNull(cs);
        assertEquals("propersuperset", cs.getName());
        String[] text =
                {"21 43 42 269 42 hstem", "437 49 vstem", "39 354 rmoveto",
                        "212 hlineto",
                        "111 75 -24 -118 -103 -89 -24 -97 hvcurveto",
                        "-212 -42 212 hlineto",
                        "128 107 24 147 155 -111 27 -124 hvcurveto",
                        "-212 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : psi
     */
    public void testpsi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("psi");
        assertNotNull(cs);
        assertEquals("psi", cs.getName());
        String[] text =
                {
                        "162 -202 -21 663 -20 hstemhm",
                        "76 68 -31 70 109 90 -80 72 -45 23 188 57 hintmask 11100011",
                        "373 14 rmoveto",
                        "-21 522 -23 0 -26 -521 rlineto",
                        "-111 13 -48 93 0 52 rrcurveto",
                        "hintmask 11010001",
                        "0 119 39 41 0 65 0 19 -13 18 -36 0 -21 0 -37 -17 -36 -18 rrcurveto",
                        "2 -25 rlineto",
                        "24 8 12 3 9 0 14 0 12 -10 0 -11 rrcurveto",
                        "hintmask 11100101",
                        "0 -34 -37 -19 0 -130 0 -78 50 -108 176 -6 rrcurveto",
                        "hintmask 11001001", "-10 -213 90 0 rlineto",
                        "hintmask 11000101", "-8 213 rlineto",
                        "163 17 60 152 0 169 rrcurveto",
                        "57 -8 55 -58 -21 -19 -21 -20 vhcurveto",
                        "0 -29 11 -29 12 -29 13 -32 13 -33 0 -37 rrcurveto",
                        "0 -58 -36 -123 -131 -15 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : punctuationspace
     */
    public void testpunctuationspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("punctuationspace");
        assertNotNull(cs);
        assertEquals("punctuationspace", cs.getName());
        String[] text = {"-335 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : q
     */
    public void testq() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("q");
        assertNotNull(cs);
        assertEquals("q", cs.getName());
        String[] text =
                {"-8 -229 27 190 44 376 34 hstem", "36 76 226 75 vstem",
                        "338 -158 rmoveto", "-29 -9 -15 -34 vhcurveto",
                        "-29 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 78 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "575 vlineto", "14 -2 11 -11 vhcurveto",
                        "-7 0 -7 -7 -7 -12 rrcurveto", "-15 -24 rlineto",
                        "-33 29 -43 14 -49 0 rrcurveto",
                        "-122 -81 -103 -132 -93 54 -126 144 hvcurveto",
                        "57 0 32 20 15 13 rrcurveto", "315 vmoveto",
                        "-6 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : q_sc
     */
    public void testq_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("q.sc");
        assertNotNull(cs);
        assertEquals("q.sc", cs.getName());
        String[] text =
                {
                        "51 -151 43 46 36 14 32 422 32 hstem",
                        "37 80 319 80 vstem",
                        "516 235 rmoveto",
                        "142 -113 97 -130 -140 -96 -112 -140 vhcurveto",
                        "0 -124 80 -87 111 -19 rrcurveto",
                        "-23 -20 rlineto",
                        "-29 -5 -39 -22 -22 -29 10 -4 12 -9 8 -7 17 29 38 13 12 0 42 0 27 -21 27 -21 29 -23 30 -24 52 0 56 0 37 28 25 32 rrcurveto",
                        "-21 13 rlineto",
                        "-13 -15 -29 -15 -23 0 -44 0 -24 19 -24 19 -26 21 -27 21 -53 2 rrcurveto",
                        "15 14 6 0 rlineto", "149 93 104 143 hvcurveto",
                        "-253 207 rmoveto", "584 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : q_superior
     */
    public void testq_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("q.superior");
        assertNotNull(cs);
        assertEquals("q.superior", cs.getName());
        String[] text =
                {"-193 223 22 119 26 215 26 hstem", "29 54 125 49 vstem",
                        "238 629 rmoveto", "-25 -24 rlineto",
                        "-15 17 -26 9 -29 0 rrcurveto",
                        "-77 -37 -78 -64 -77 52 -48 66 hvcurveto",
                        "23 0 19 11 19 16 rrcurveto", "-120 vlineto",
                        "-21 -9 -5 -16 vhcurveto", "-11 hlineto",
                        "-3 -2 -1 -4 hvcurveto", "-18 vlineto",
                        "0 40 1 26 24 37 -1 0 vhcurveto", "18 vlineto",
                        "2 -1 3 -4 vhcurveto", "-7 hlineto",
                        "-25 1 0 5 0 20 rrcurveto", "357 vlineto",
                        "6 -2 3 -3 vhcurveto", "-4 0 -6 -5 -4 -3 rrcurveto",
                        "-30 -211 rmoveto", "-20 -21 -13 -7 -22 0 rrcurveto",
                        "-34 -36 24 90 74 28 27 34 hvcurveto",
                        "25 0 22 -20 16 -19 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : question
     */
    public void testquestion() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("question");
        assertNotNull(cs);
        assertEquals("question", cs.getName());
        String[] text =
                {"-96 -12 106 535 30 hstemhm",
                        "29 68 30 106 -66 26 101 75 hintmask 11110100",
                        "127 41 rmoveto", "-87 callsubr", "-30 531 rmoveto",
                        "-84 callsubr", "hintmask 11101100", "-83 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : question_exclam
     */
    public void testquestion_exclam() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("question_exclam");
        assertNotNull(cs);
        assertEquals("question_exclam", cs.getName());
        String[] text =
                {
                        "93 -12 106 535 30 hstemhm",
                        "29 68 30 106 -66 26 101 75 58 106 hintmask 11110110",
                        "127 41 rmoveto",
                        "-87 callsubr",
                        "-30 531 rmoveto",
                        "-84 callsubr",
                        "hintmask 11101110",
                        "-83 callsubr",
                        "330 -529 rmoveto",
                        "-97 callsubr",
                        "53 617 rmoveto",
                        "-22 -32 -19 -54 hvcurveto",
                        "0 -70 16 -35 9 -88 8 -78 5 -90 2 -21 1 -6 2 -7 11 0 10 0 4 9 1 11 1 14 2 60 12 108 11 85 15 43 0 65 rrcurveto",
                        "50 -29 23 -27 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : question_question
     */
    public void testquestion_question() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("question_question");
        assertNotNull(cs);
        assertEquals("question_question", cs.getName());
        String[] text =
                {
                        "280 -12 106 535 30 hstemhm",
                        "29 68 30 106 -66 26 101 75 36 68 30 106 -66 26 101 75 hintmask 1111011001000000",
                        "127 41 rmoveto",
                        "-87 callsubr",
                        "-30 531 rmoveto",
                        "-84 callsubr",
                        "hintmask 1110111001000000",
                        "-83 callsubr",
                        "hintmask 1110011101000000",
                        "406 -531 rmoveto",
                        "-87 callsubr",
                        "-30 531 rmoveto",
                        "-84 callsubr",
                        "hintmask 1110011011000000",
                        "-65 -59 -2 -59 0 -43 rrcurveto",
                        "-46 vlineto",
                        "-7 5 -3 8 7 6 3 7 vhcurveto",
                        "44 vlineto",
                        "0 24 5 24 13 25 9 17 20 16 23 17 47 34 59 44 0 79 0 91 -63 60 -102 0 -53 0 -42 -14 -29 -25 -30 -24 -21 -28 0 -38 rrcurveto",
                        "-35 25 -8 16 19 20 12 23 vhcurveto",
                        "0 13 -2 6 -4 5 -4 5 -2 6 0 15 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : questiondown
     */
    public void testquestiondown() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("questiondown");
        assertNotNull(cs);
        assertEquals("questiondown", cs.getName());
        String[] text =
                {
                        "-96 -229 29 535 107 hstemhm",
                        "37 74 61 107 -66 25 71 67 hintmask 11110100",
                        "279 389 rmoveto",
                        "29 -24 24 -29 -30 -24 -24 -29 -30 24 -24 30 vhcurveto",
                        "29 24 24 30 hvcurveto",
                        "30 -531 rmoveto",
                        "-30 -40 -28 -57 -58 -43 61 64 vhcurveto",
                        "0 48 21 29 40 37 rrcurveto",
                        "hintmask 11101100",
                        "65 59 1 59 0 43 rrcurveto",
                        "46 vlineto",
                        "6 -5 4 -7 -8 -5 -4 -6 vhcurveto",
                        "-44 vlineto",
                        "0 -24 -5 -25 -13 -25 -9 -16 -20 -16 -23 -17 -47 -35 -59 -44 0 -79 0 -90 63 -60 102 0 53 0 41 14 30 25 30 24 20 27 0 39 rrcurveto",
                        "35 -24 8 -16 -20 -20 -12 -23 vhcurveto",
                        "0 -13 3 -6 4 -5 4 -6 2 -5 0 -15 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : questiondown_sc
     */
    public void testquestiondown_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("questiondown.sc");
        assertNotNull(cs);
        assertEquals("questiondown.sc", cs.getName());
        String[] text =
                {
                        "-96 -12 29 535 107 hstemhm",
                        "37 74 61 107 -66 25 71 67 hintmask 11110100",
                        "279 605 rmoveto",
                        "30 -24 24 -29 -30 -24 -24 -30 -29 24 -24 30 vhcurveto",
                        "29 24 24 29 hvcurveto",
                        "30 -530 rmoveto",
                        "-30 -40 -28 -57 -58 -43 61 64 vhcurveto",
                        "0 47 21 30 40 36 rrcurveto",
                        "hintmask 11101100",
                        "65 60 1 59 0 43 rrcurveto",
                        "45 vlineto",
                        "7 -5 4 -7 -8 -5 -4 -7 vhcurveto",
                        "-44 vlineto",
                        "0 -23 -5 -25 -13 -25 -9 -16 -20 -17 -23 -17 -47 -34 -59 -44 0 -79 0 -90 63 -60 102 0 53 0 41 14 30 24 30 25 20 27 0 39 rrcurveto",
                        "35 -24 8 -16 -20 -20 -13 -22 vhcurveto",
                        "0 -14 3 -5 4 -5 4 -6 2 -6 0 -14 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : quotedbl
     */
    public void testquotedbl() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotedbl");
        assertNotNull(cs);
        assertEquals("quotedbl", cs.getName());
        String[] text =
                {
                        "-165 426 219 hstem",
                        "89 426 rmoveto",
                        "27 4 rlineto",
                        "0 32 165 16 16 -8 17 -26 -31 -21 -28 -22 -9 27 -159 0 hvcurveto",
                        "126 1 rmoveto", "-105 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quotedblbase
     */
    public void testquotedblbase() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotedblbase");
        assertNotNull(cs);
        assertEquals("quotedblbase", cs.getName());
        String[] text =
                {"-126 -119 213 hstem", "132 39 118 39 vstem",
                        "262 94 rmoveto", "485 callsubr", "-157 hmoveto",
                        "486 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quotedblleft
     */
    public void testquotedblleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotedblleft");
        assertNotNull(cs);
        assertEquals("quotedblleft", cs.getName());
        String[] text =
                {
                        "-126 508 213 hstem",
                        "48 39 118 39 vstem",
                        "114 508 rmoveto",
                        "32 21 23 28 hvcurveto",
                        "0 32 -26 8 -18 3 -19 2 -17 4 0 24 0 20 24 31 53 12 rrcurveto",
                        "-6 26 rlineto",
                        "-59 -11 -51 -33 0 -70 rrcurveto",
                        "-60 27 -39 39 vhcurveto",
                        "157 hmoveto",
                        "31 22 23 28 hvcurveto",
                        "0 32 -26 8 -18 3 -19 2 -17 4 0 24 0 20 24 31 52 12 rrcurveto",
                        "-5 26 rlineto", "-60 -11 -50 -33 0 -70 rrcurveto",
                        "-60 26 -39 40 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quotedblrev
     */
    public void testquotedblrev() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotedblrev");
        assertNotNull(cs);
        assertEquals("quotedblrev", cs.getName());
        String[] text =
                {
                        "-128 594 104 hstem",
                        "52 35 122 36 vstem",
                        "271 698 rmoveto",
                        "-39 -23 -39 -55 hvcurveto",
                        "0 -61 47 -44 60 -11 rrcurveto",
                        "5 20 rlineto",
                        "-53 13 -23 32 0 21 0 9 1 10 2 8 6 -4 11 -3 8 0 rrcurveto",
                        "30 22 24 29 28 -22 23 -32 hvcurveto",
                        "-157 hmoveto",
                        "-39 -23 -40 -55 hvcurveto",
                        "0 -60 47 -45 59 -10 rrcurveto",
                        "6 20 rlineto",
                        "-53 13 -24 32 0 21 0 8 1 11 2 8 7 -5 10 -2 9 0 rrcurveto",
                        "29 22 23 29 29 -21 23 -32 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : quotedblright
     */
    public void testquotedblright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotedblright");
        assertNotNull(cs);
        assertEquals("quotedblright", cs.getName());
        String[] text =
                {"-126 485 213 hstem", "132 39 118 39 vstem",
                        "262 698 rmoveto", "485 callsubr", "-157 hmoveto",
                        "486 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quoteleft
     */
    public void testquoteleft() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quoteleft");
        assertNotNull(cs);
        assertEquals("quoteleft", cs.getName());
        String[] text =
                {
                        "-233 507 213 hstem",
                        "73 38 vstem",
                        "",
                        "138 507 rmoveto",
                        "32 22 23 28 hvcurveto",
                        "0 32 -26 8 -19 3 -18 3 -18 3 0 24 0 20 24 31 53 12 rrcurveto",
                        "-5 26 rlineto", "-60 -11 -50 -33 0 -70 rrcurveto",
                        "-60 26 -39 39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quotereversed
     */
    public void testquotereversed() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotereversed");
        assertNotNull(cs);
        assertEquals("quotereversed", cs.getName());
        String[] text =
                {"-233 485 213 hstem", "73 38 vstem", "138 698 rmoveto",
                        "484 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quoteright
     */
    public void testquoteright() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quoteright");
        assertNotNull(cs);
        assertEquals("quoteright", cs.getName());
        String[] text =
                {"-233 485 213 hstem", "157 38 vstem", "130 698 rmoveto",
                        "483 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quotesinglbase
     */
    public void testquotesinglbase() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotesinglbase");
        assertNotNull(cs);
        assertEquals("quotesinglbase", cs.getName());
        String[] text =
                {
                        "-233 -118 213 hstem",
                        "156 39 vstem",
                        "129 95 rmoveto",
                        "-31 -22 -23 -28 hvcurveto",
                        "0 -33 26 -8 18 -3 19 -2 17 -4 0 -23 0 -21 -24 -30 -52 -13 rrcurveto",
                        "5 -25 rlineto", "60 11 50 33 0 70 rrcurveto",
                        "60 -27 39 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : quotesingle
     */
    public void testquotesingle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("quotesingle");
        assertNotNull(cs);
        assertEquals("quotesingle", cs.getName());
        String[] text =
                {"-311 426 218 hstem", "79 426 rmoveto", "-105 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : r
     */
    public void testr() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("r");
        assertNotNull(cs);
        assertEquals("r", cs.getName());
        String[] text =
                {"-154 1 27 353 61 hstem", "89 75 vstem", "89 72 rmoveto",
                        "-5 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : r_sc
     */
    public void testr_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("r.sc");
        assertNotNull(cs);
        assertEquals("r.sc", cs.getName());
        String[] text =
                {"-34 -8 32 -23 27 192 30 182 -20 22 28 hstemhm",
                        "101 75 159 73 hintmask 01111110", "101 60 rmoveto",
                        "585 callsubr", "hintmask 10111110", "586 callsubr",
                        "234 -49 rmoveto", "587 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : r_superior
     */
    public void testr_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("r.superior");
        assertNotNull(cs);
        assertEquals("r.superior", cs.getName());
        String[] text =
                {
                        "-255 365 24 208 40 hstem",
                        "74 50 vstem",
                        "124 540 rmoveto",
                        "0 8 3 9 4 5 16 23 15 12 7 0 4 0 5 -2 4 -4 6 -7 8 -4 12 0 rrcurveto",
                        "18 11 9 17 18 -10 13 -27 hvcurveto",
                        "-31 0 -28 -34 -17 -25 rrcurveto",
                        "-2 0 2 59 -15 0 rlineto",
                        "-24 -11 -24 -6 -39 -8 rrcurveto", "2 -20 rlineto",
                        "12 4 11 3 13 0 rrcurveto", "11 3 -13 -14 hvcurveto",
                        "-158 vlineto", "-19 -1 -6 -24 vhcurveto",
                        "-18 hlineto", "-5 -1 -2 -3 hvcurveto",
                        "0 -19 73 1 74 -1 0 19 rlineto", "3 -3 2 -2 vhcurveto",
                        "-18 hlineto", "-17 -8 1 24 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : racute
     */
    public void testracute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("racute");
        assertNotNull(cs);
        assertEquals("racute", cs.getName());
        String[] text =
                {"-154 1 27 353 61 hstem", "89 75 vstem", "89 72 rmoveto",
                        "-5 callsubr", "151 349 rmoveto", "53 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : racute_sc
     */
    public void testracute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("racute.sc");
        assertNotNull(cs);
        assertEquals("racute.sc", cs.getName());
        String[] text =
                {"-37 -8 32 -23 27 192 30 182 -20 22 28 hstemhm",
                        "101 75 159 73 hintmask 01111110", "101 60 rmoveto",
                        "585 callsubr", "hintmask 10111110", "586 callsubr",
                        "234 -49 rmoveto", "587 callsubr", "-10 315 rmoveto",
                        "53 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : radical
     */
    public void testradical() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("radical");
        assertNotNull(cs);
        assertEquals("radical", cs.getName());
        String[] text =
                {"64 733 39 hstem", "488 733 rmoveto", "512 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : rcaron
     */
    public void testrcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rcaron");
        assertNotNull(cs);
        assertEquals("rcaron", cs.getName());
        String[] text =
                {"-154 1 27 353 61 hstem", "89 75 vstem", "89 72 rmoveto",
                        "-5 callsubr", "86 182 rmoveto", "112 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : rcaron_sc
     */
    public void testrcaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rcaron.sc");
        assertNotNull(cs);
        assertEquals("rcaron.sc", cs.getName());
        String[] text =
                {
                        "-37 -8 32 -23 27 192 30 182 -20 22 28 hstemhm",
                        "101 75 159 73 hintmask 01111110",
                        "101 60 rmoveto",
                        "585 callsubr",
                        "hintmask 10111110",
                        "586 callsubr",
                        "234 -49 rmoveto",
                        "587 callsubr",
                        "-127 155 rmoveto",
                        "49 hlineto",
                        "30 46 38 45 34 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -33 -25 -38 -38 -34 36 -32 26 -39 28 rrcurveto",
                        "-21 -13 rlineto", "35 -37 38 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : rcommaaccent
     */
    public void testrcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rcommaaccent");
        assertNotNull(cs);
        assertEquals("rcommaaccent", cs.getName());
        String[] text =
                {"-154 -113 81 33 27 353 61 hstemhm",
                        "89 75 -7 32 hintmask 11110000", "89 72 rmoveto",
                        "-5 callsubr", "38 -353 rmoveto",
                        "-36 -15 -24 -16 -16 9 -25 41 hvcurveto",
                        "8 0 10 3 11 6 rrcurveto", "hintmask 11101000",
                        "1 -3 1 -3 0 -4 0 -6 -3 -58 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "35 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : registered
     */
    public void testregistered() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("registered");
        assertNotNull(cs);
        assertEquals("registered", cs.getName());
        String[] text =
                {"132 23 32 111 17 104 21 122 17 110 31 hstem",
                        "34 31 172 51 79 50 151 31 vstem", "317 557 rmoveto",
                        "9 callsubr", "-534 vmoveto", "10 callsubr",
                        "50 349 rmoveto", "-62 -48 -2 -31 vhcurveto",
                        "119 vlineto", "5 2 12 1 11 0 rrcurveto",
                        "34 17 -24 -34 hvcurveto", "50 hmoveto",
                        "30 -20 45 -75 vhcurveto",
                        "-73 0 -21 -2 -21 -3 rrcurveto", "-11 vlineto",
                        "0 -3 3 -2 7 -1 rrcurveto", "16 1 rlineto",
                        "3 1 -5 -6 hvcurveto", "-223 vlineto",
                        "-7 -2 -1 -6 vhcurveto", "-12 hlineto",
                        "-7 -3 -1 -4 hvcurveto", "0 -12 55 2 rlineto",
                        "14 42 -2 0 hvcurveto", "11 vlineto",
                        "5 -3 1 -8 vhcurveto", "-12 hlineto",
                        "-7 0 3 5 hvcurveto", "95 vlineto",
                        "5 0 18 -1 4 -3 rrcurveto", "48 -79 rlineto",
                        "12 -26 21 -12 29 0 5 0 8 1 10 3 rrcurveto",
                        "13 vlineto", "-15 0 -12 9 -13 22 rrcurveto",
                        "-48 82 rlineto", "0 57 24 52 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : rho
     */
    public void testrho() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rho");
        assertNotNull(cs);
        assertEquals("rho", cs.getName());
        String[] text =
                {"27 -11 30 385 38 hstem", "83 74 253 86 vstem",
                        "148 -212 rmoveto", "248 callsubr", "340 442 rmoveto",
                        "249 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : rhookturned
     */
    public void testrhookturned() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rhookturned");
        assertNotNull(cs);
        assertEquals("rhookturned", cs.getName());
        String[] text =
                {
                        "-100 -174 39 123 36 378 27 hstem",
                        "209 77 vstem",
                        "324 402 rmoveto",
                        "17 hlineto",
                        "7 1 4 2 hvcurveto",
                        "23 vlineto",
                        "0 -60 -2 -39 -41 -63 2 0 vhcurveto",
                        "-22 vlineto",
                        "-5 3 -2 5 vhcurveto",
                        "16 hlineto",
                        "37 2 -15 -32 hvcurveto",
                        "-242 vlineto",
                        "-19 -43 -40 -46 -24 0 -11 0 -8 6 -3 10 -4 9 -17 34 -29 0 rrcurveto",
                        "-29 -15 -15 -28 -21 13 -31 64 hvcurveto",
                        "34 0 23 12 23 22 14 11 22 25 7 16 rrcurveto",
                        "1 -20 rlineto",
                        "-174 58 -54 56 58 58 15 45 12 -17 22 -24 vhcurveto",
                        "-22 0 -10 -16 -5 -16 -2 -11 -10 -12 -16 0 -43 0 -5 19 -1 157 rrcurveto",
                        "314 vlineto", "26 0 21 38 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : rhookturned_superior
     */
    public void testrhookturned_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rhookturned.superior");
        assertNotNull(cs);
        assertEquals("rhookturned.superior", cs.getName());
        String[] text =
                {
                        "-245 250 19 89 40 208 24 hstem",
                        "128 48 vstem",
                        "176 397 rmoveto",
                        "184 vlineto",
                        "20 1 5 24 vhcurveto",
                        "18 hlineto",
                        "5 1 2 3 hvcurveto",
                        "0 19 -73 -1 -74 1 0 -19 rlineto",
                        "-3 3 -2 2 vhcurveto",
                        "18 hlineto",
                        "17 8 -1 -24 hvcurveto",
                        "-125 vlineto",
                        "0 -9 -3 -9 -4 -5 -16 -23 -15 -12 -7 0 -4 0 -5 2 -4 4 -6 7 -8 5 -12 0 rrcurveto",
                        "-18 -11 -10 -17 -17 10 -14 27 hvcurveto",
                        "31 0 28 34 17 25 rrcurveto", "2 hlineto",
                        "0 -85 5 -26 27 -31 16 -18 20 -7 16 0 rrcurveto",
                        "27 34 14 19 17 -9 9 -12 hvcurveto",
                        "-15 0 -8 -16 -4 -13 -1 -7 -4 -4 -5 0 rrcurveto",
                        "-29 -10 35 93 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ring
     */
    public void testring() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ring");
        assertNotNull(cs);
        assertEquals("ring", cs.getName());
        String[] text =
                {
                        "-140 588 27 112 27 hstem",
                        "95 32 107 32 vstem",
                        "95 671 rmoveto",
                        "-46 39 -37 46 48 38 38 45 46 -40 37 -46 -47 -38 -38 -45 vhcurveto",
                        "86 56 rmoveto",
                        "29 24 -25 -31 -28 -22 -28 -31 -32 -22 28 28 29 23 27 31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : rturned
     */
    public void testrturned() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rturned");
        assertNotNull(cs);
        assertEquals("rturned", cs.getName());
        String[] text =
                {
                        "-145 -12 60 354 27 hstem",
                        "193 75 vstem",
                        "268 358 rmoveto",
                        "28 9 16 34 vhcurveto",
                        "19 hlineto",
                        "4 3 3 5 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -67 -2 -36 -39 -79 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "29 hlineto",
                        "33 10 -16 -28 hvcurveto",
                        "-222 vlineto",
                        "0 -13 -6 -13 -6 -9 -24 -34 -22 -19 -11 0 -7 0 -7 4 -6 6 -10 9 -11 8 -20 0 rrcurveto",
                        "-26 -17 -15 -26 -27 15 -19 41 hvcurveto",
                        "47 0 44 51 26 39 rrcurveto",
                        "3 0 -3 -90 15 0 rlineto",
                        "7 0 8 3 10 5 30 14 11 4 63 11 rrcurveto",
                        "-5 27 rlineto", "-17 -3 -12 -2 -13 0 rrcurveto",
                        "-15 -7 12 50 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : rturned_superior
     */
    public void testrturned_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("rturned.superior");
        assertNotNull(cs);
        assertEquals("rturned.superior", cs.getName());
        String[] text =
                {
                        "-255 358 40 208 24 hstem",
                        "126 50 vstem",
                        "126 456 rmoveto",
                        "0 -9 -3 -9 -4 -5 -16 -23 -15 -12 -7 0 -4 0 -5 2 -4 4 -6 7 -8 5 -12 0 rrcurveto",
                        "-18 -11 -10 -17 -17 10 -14 27 hvcurveto",
                        "31 0 28 34 17 25 rrcurveto",
                        "2 0 -2 -59 15 0 rlineto", "24 11 24 6 39 8 rrcurveto",
                        "-2 20 rlineto", "-12 -4 -11 -3 -13 0 rrcurveto",
                        "-11 -3 13 14 hvcurveto", "158 vlineto",
                        "20 1 5 24 vhcurveto", "18 hlineto",
                        "5 1 2 3 hvcurveto", "0 19 -73 -1 -74 1 0 -19 rlineto",
                        "-3 3 -2 2 vhcurveto", "18 hlineto",
                        "17 8 -1 -24 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : s
     */
    public void tests() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("s");
        assertNotNull(cs);
        assertEquals("s", cs.getName());
        String[] text =
                {"-130 -12 28 396 30 hstem", "53 61 153 67 vstem",
                        "43 140 rmoveto", "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : s_sc
     */
    public void tests_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("s.sc");
        assertNotNull(cs);
        assertEquals("s.sc", cs.getName());
        String[] text =
                {"-102 5 12 427 30 hstemhm",
                        "40 65 181 74 -51 25 hintmask 11110000",
                        "324 448 rmoveto", "588 callsubr", "hintmask 11101000",
                        "589 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : s_superior
     */
    public void tests_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("s.superior");
        assertNotNull(cs);
        assertEquals("s.superior", cs.getName());
        String[] text =
                {
                        "-248 358 25 229 25 hstem",
                        "35 48 87 54 vstem",
                        "28 458 rmoveto",
                        "3 -32 4 -31 -2 -25 6 1 10 1 3 0 20 0 22 -14 30 0 34 0 66 16 0 61 0 50 -46 19 -51 21 -34 14 -10 9 0 24 rrcurveto",
                        "27 21 13 25 vhcurveto",
                        "19 0 34 -10 14 -58 rrcurveto",
                        "23 1 -9 75 rlineto",
                        "-11 7 -39 10 -31 0 -49 0 -45 -32 0 -42 0 -45 31 -15 46 -20 50 -22 8 -19 0 -21 0 -27 -24 -11 -24 0 -23 0 -19 12 -7 6 rrcurveto",
                        "-16 16 -6 27 -1 14 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : s_t
     */
    public void tests_t() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("s_t");
        assertNotNull(cs);
        assertEquals("s_t", cs.getName());
        String[] text =
                {
                        "179 -12 28 -28 55 348 39 85 46 hstemhm",
                        "53 61 35 45 73 67 133 74 -57 57 hintmask 1011111010000000",
                        "149 479 rmoveto",
                        "0 -12 6 -14 14 -13 -67 -7 -49 -46 0 -60 0 -75 38 -21 73 -32 79 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 -37 0 -27 18 -10 11 rrcurveto",
                        "-22 23 -11 48 -3 25 rrcurveto",
                        "-27 -1 rlineto",
                        "4 -49 3 -51 0 -42 10 2 8 1 5 0 7 0 5 -1 7 -1 26 -7 29 -4 35 0 47 0 105 29 0 99 0 80 -65 36 -81 30 rrcurveto",
                        "-55 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -20 10 -24 8 -27 4 -31 9 -13 13 0 17 0 29 65 8 67 0 54 0 65 14 39 22 rrcurveto",
                        "-6 vlineto", "-76 -16 -39 -67 -3 -1 -1 -3 vhcurveto",
                        "-31 vlineto", "-3 2 -1 3 vhcurveto",
                        "hintmask 0111111100000000", "65 -304 hlineto",
                        "-71 26 -28 47 vhcurveto",
                        "45 0 40 22 39 44 rrcurveto", "-18 17 rlineto",
                        "-26 -20 -19 -8 -26 0 rrcurveto",
                        "-27 -7 30 62 hvcurveto", "256 95 vlineto",
                        "10 13 4 9 hvcurveto", "20 vlineto",
                        "4 -3 2 -5 vhcurveto", "hintmask 1011111010000000",
                        "-110 105 hlineto", "0 20 0 23 26 20 rrcurveto",
                        "0 3 -25 19 rlineto",
                        "-84 -48 -54 -11 -90 0 rrcurveto",
                        "-108 -57 -24 -58 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sacute
     */
    public void testsacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sacute");
        assertNotNull(cs);
        assertEquals("sacute", cs.getName());
        String[] text =
                {"-130 -12 28 396 30 hstem", "53 61 153 67 vstem",
                        "227 670 rmoveto", "118 callsubr", "-184 -530 rmoveto",
                        "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sacute_sc
     */
    public void testsacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sacute.sc");
        assertNotNull(cs);
        assertEquals("sacute.sc", cs.getName());
        String[] text =
                {
                        "-112 5 12 427 30 hstemhm",
                        "40 65 181 74 -51 25 hintmask 11110000",
                        "324 448 rmoveto",
                        "588 callsubr",
                        "hintmask 11101000",
                        "589 callsubr",
                        "-103 330 rmoveto",
                        "-80 -126 rlineto",
                        "-6 -9 0 -8 0 -5 0 -7 7 -5 8 0 6 0 7 5 15 14 rrcurveto",
                        "",
                        "115 109 -2 11 rlineto",
                        "-2 1 -2 2 -3 2 -8 8 -13 10 -27 0 -5 0 -7 -1 -3 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : scaron
     */
    public void testscaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("scaron");
        assertNotNull(cs);
        assertEquals("scaron", cs.getName());
        String[] text =
                {"-130 -12 28 396 30 hstem", "53 61 153 67 vstem",
                        "169 502 rmoveto", "121 callsubr", "-126 -362 rmoveto",
                        "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : scaron_sc
     */
    public void testscaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("scaron.sc");
        assertNotNull(cs);
        assertEquals("scaron.sc", cs.getName());
        String[] text =
                {"-112 5 12 427 30 hstemhm",
                        "40 65 181 74 -51 25 hintmask 11110000",
                        "324 448 rmoveto", "588 callsubr", "hintmask 11101000",
                        "589 callsubr", "-165 168 rmoveto", "150 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : scedilla
     */
    public void testscedilla() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("scedilla");
        assertNotNull(cs);
        assertEquals("scedilla", cs.getName());
        String[] text =
                {
                        "-130 -191 25 77 31 46 28 396 30 hstemhm",
                        "53 61 113 53 -13 67 hintmask 11111100",
                        "43 140 rmoveto",
                        "4 -49 3 -51 0 -42 10 2 8 1 5 0 7 0 5 -1 7 -1 23 -6 25 -4 30 -1 rrcurveto",
                        "-36 -78 7 -6 rlineto",
                        "16 5 10 2 19 0 rrcurveto",
                        "22 19 -15 -21 -26 -30 -15 -30 hvcurveto",
                        "-20 0 -10 4 -27 10 rrcurveto",
                        "-11 -22 rlineto",
                        "26 -11 17 -6 32 0 rrcurveto",
                        "61 45 28 43 38 -30 24 -41 hvcurveto",
                        "-9 0 -9 -1 -7 -2 rrcurveto",
                        "21 51 rlineto",
                        "hintmask 11111010",
                        "51 7 78 33 0 86 0 80 -65 36 -81 30 -55 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -31 16 -37 9 -50 0 -79 0 -59 -48 0 -67 0 -75 38 -21 73 -32 79 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 rrcurveto",
                        "-37 0 -27 18 -10 11 -22 23 -11 48 -3 25 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : scedilla_sc
     */
    public void testscedilla_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("scedilla.sc");
        assertNotNull(cs);
        assertEquals("scedilla.sc", cs.getName());
        String[] text =
                {
                        "-112 -191 25 76 31 64 12 427 30 hstemhm",
                        "40 65 126 54 1 74 -51 25 hintmask 11111110",
                        "189 -90 rmoveto",
                        "24 18 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-20 0 -10 4 -27 10 rrcurveto",
                        "-10 -22 rlineto",
                        "25 -12 17 -5 32 0 rrcurveto",
                        "61 46 28 42 39 -31 23 -40 hvcurveto",
                        "-10 0 -9 -1 -7 -2 rrcurveto",
                        "20 50 4 0 rlineto",
                        "90 58 59 82 hvcurveto",
                        "0 88 -90 42 -52 16 -25 8 -88 30 0 56 0 43 35 32 51 0 rrcurveto",
                        "hintmask 11111101",
                        "49 0 60 -36 9 -70 rrcurveto",
                        "25 2 -10 108 rlineto",
                        "-28 -1 -25 27 -81 0 -69 0 -81 -41 0 -82 0 -78 89 -34 43 -16 rrcurveto",
                        "hintmask 11111110",
                        "62 -22 52 -25 0 -69 0 -58 -32 -32 -60 0 -55 0 -56 36 -16 89 rrcurveto",
                        "-28 -2 rlineto",
                        "8 -68 3 -44 0 -29 14 2 7 4 12 0 16 0 25 -11 51 -5 rrcurveto",
                        "-36 -79 6 -7 rlineto", "16 6 10 1 18 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : scircumflex
     */
    public void testscircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("scircumflex");
        assertNotNull(cs);
        assertEquals("scircumflex", cs.getName());
        String[] text =
                {"-130 -12 28 396 30 204 -20 hstem", "53 61 153 67 vstem",
                        "220 646 rmoveto", "119 callsubr", "-177 -506 rmoveto",
                        "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : scommaaccent
     */
    public void testscommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("scommaaccent");
        assertNotNull(cs);
        assertEquals("scommaaccent", cs.getName());
        String[] text =
                {
                        "-130 -118 81 25 28 396 30 hstem",
                        "53 61 102 32 19 67 vstem",
                        "43 140 rmoveto",
                        "-4 callsubr",
                        "116 -178 rmoveto",
                        "-36 -15 -24 -16 -16 10 -25 40 hvcurveto",
                        "8 0 10 3 11 6 1 -3 1 -3 0 -4 0 -6 -3 -58 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "35 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : second
     */
    public void testsecond() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("second");
        assertNotNull(cs);
        assertEquals("second", cs.getName());
        String[] text =
                {"-176 516 185 hstem", "32 256 vstem", "114 699 rmoveto",
                        "491 callsubr", "133 2 rmoveto",
                        "-11 0 -13 -6 -4 -11 rrcurveto", "-52 -142 rlineto",
                        "-1 -4 -1 -5 0 -1 0 -7 7 -6 8 0 4 0 4 3 3 4 rrcurveto",
                        "92 122 rlineto",
                        "4 5 1 6 0 4 0 21 -21 17 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : section
     */
    public void testsection() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("section");
        assertNotNull(cs);
        assertEquals("section", cs.getName());
        String[] text =
                {
                        "-35 -169 30 134 -20 652 31 hstemhm",
                        "49 44 -12 65 -63 67 167 74 -71 67 -13 44 hintmask 1110010000000000",
                        "244 658 rmoveto",
                        "-95 -66 -88 -66 hvcurveto",
                        "0 -32 3 -35 22 -27 rrcurveto",
                        "hintmask 1111001000000000",
                        "-40 -32 -19 -45 0 -57 0 -92 55 -55 159 -79 33 -16 21 -33 0 -36 rrcurveto",
                        "-67 -51 -37 -45 vhcurveto",
                        "hintmask 1110101000000000",
                        "-58 -17 48 6 hvcurveto",
                        "0 12 13 6 0 22 rrcurveto",
                        "9 -7 31 -35 -17 -19 -16 -22 -73 69 -53 73 92 76 91 65 vhcurveto",
                        "0 39 -6 33 -28 24 rrcurveto",
                        "hintmask 1110010010000000",
                        "40 32 21 46 0 58 0 123 -114 58 -79 37 -46 22 -29 18 0 47 rrcurveto",
                        "52 41 51 57 vhcurveto",
                        "hintmask 1110010100000000",
                        "57 15 -48 -5 hvcurveto",
                        "0 -5 -2 -4 -2 -4 -4 -5 -3 -8 0 -14 rrcurveto",
                        "-9 4 -30 37 19 18 17 21 vhcurveto",
                        "71 -70 54 -73 vhcurveto",
                        "96 -560 rmoveto",
                        "-46 25 -38 18 -30 14 rrcurveto",
                        "hintmask 1111000010000000",
                        "-66 31 -67 71 0 67 0 30 11 24 23 19 74 -34 173 -72 0 -120 0 -30 -12 -24 -22 -19 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : semicolon
     */
    public void testsemicolon() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("semicolon");
        assertNotNull(cs);
        assertEquals("semicolon", cs.getName());
        String[] text =
                {"-282 300 106 hstemhm", "55 106 -29 39 hintmask 10100000",
                        "105 95 rmoveto", "-99 callsubr", "hintmask 11000000",
                        "-50 258 rmoveto", "-87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seven
     */
    public void testseven() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seven");
        assertNotNull(cs);
        assertEquals("seven", cs.getName());
        String[] text =
                {"-63 502 59 hstem", "150 508 rmoveto", "180 hlineto",
                        "-74 -184 -76 -186 -64 -144 rrcurveto",
                        "3 -6 65 3 rlineto", "54 161 56 156 106 258 rrcurveto",
                        "-15 7 rlineto", "-16 -5 -21 -1 -36 0 rrcurveto",
                        "-190 hlineto", "-23 0 -3 5 -4 6 rrcurveto",
                        "-21 hlineto", "-3 -56 -10 -38 -12 -41 rrcurveto",
                        "26 -4 rlineto", "19 51 15 18 44 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seven_fitted
     */
    public void testseven_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seven.fitted");
        assertNotNull(cs);
        assertEquals("seven.fitted", cs.getName());
        String[] text =
                {"-105 508 59 hstem", "35 354 vstem", "138 508 rmoveto",
                        "180 hlineto", "-73 -184 -77 -186 -64 -144 rrcurveto",
                        "3 -6 65 3 rlineto", "55 161 55 156 107 258 rrcurveto",
                        "-15 7 rlineto", "-17 -5 -21 -1 -35 0 rrcurveto",
                        "-191 hlineto", "", "-23 0 -3 5 -4 6 rrcurveto",
                        "-21 hlineto", "-3 -56 -10 -38 -11 -41 rrcurveto",
                        "26 -4 rlineto", "19 51 14 18 44 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seven_inferior
     */
    public void testseven_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seven.inferior");
        assertNotNull(cs);
        assertEquals("seven.inferior", cs.getName());
        String[] text =
                {"-194 169 38 hstem", "116 169 rmoveto", "100 hlineto",
                        "-26 -45 -56 -124 -35 -111 rrcurveto", "34 hlineto",
                        "31 105 57 122 52 91 rrcurveto", "-173 hlineto",
                        "-16 -5 1 4 hvcurveto", "-18 hlineto",
                        "-1 -26 -7 -40 -5 -28 rrcurveto", "21 -3 rlineto",
                        "12 48 7 6 28 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seven_oldstyle
     */
    public void testseven_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seven.oldstyle");
        assertNotNull(cs);
        assertEquals("seven.oldstyle", cs.getName());
        String[] text =
                {"-49 371 59 hstem", "54 354 vstem", "157 371 rmoveto",
                        "180 hlineto", "-73 -184 -77 -187 -63 -144 rrcurveto",
                        "2 -5 65 3 rlineto", "55 161 55 155 107 259 rrcurveto",
                        "-15 7 rlineto", "-16 -5 -22 -1 -35 0 rrcurveto",
                        "-191 hlineto", "-23 0 -3 5 -3 5 rrcurveto",
                        "-22 hlineto", "-3 -55 -10 -38 -11 -41 rrcurveto",
                        "26 -4 rlineto", "19 51 14 18 44 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seven_superior
     */
    public void testseven_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seven.superior");
        assertNotNull(cs);
        assertEquals("seven.superior", cs.getName());
        String[] text =
                {"-194 643 39 hstem", "112 645 rmoveto", "100 hlineto",
                        "-26 -45 -56 -124 -35 -112 rrcurveto", "34 hlineto",
                        "31 106 57 121 53 91 rrcurveto", "-174 hlineto",
                        "-16 -5 2 4 hvcurveto", "-18 hlineto",
                        "-1 -27 -7 -40 -5 -27 rrcurveto", "21 -3 rlineto",
                        "12 47 7 7 28 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seven_taboldstyle
     */
    public void testseven_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seven.taboldstyle");
        assertNotNull(cs);
        assertEquals("seven.taboldstyle", cs.getName());
        String[] text =
                {"-63 371 59 hstem", "51 354 vstem", "154 371 rmoveto",
                        "180 hlineto", "-73 -184 -77 -187 -63 -144 rrcurveto",
                        "3 -5 64 3 rlineto", "55 161 55 155 107 259 rrcurveto",
                        "-15 7 rlineto", "-16 -5 -21 -1 -36 0 rrcurveto",
                        "-191 hlineto", "-23 0 -3 5 -3 5 rrcurveto",
                        "-22 hlineto", "-3 -55 -10 -38 -11 -41 rrcurveto",
                        "26 -4 rlineto", "19 51 14 18 44 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : seveneighths
     */
    public void testseveneighths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("seveneighths");
        assertNotNull(cs);
        assertEquals("seveneighths", cs.getName());
        String[] text =
                {"159 -85 22 285 22 353 37 hstemhm",
                        "400 48 -33 44 103 44 -28 54 hintmask 11110010",
                        "504 79 rmoveto", "29 -15 rlineto",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-41 -29 -16 -36 -24 -41 15 45 vhcurveto",
                        "0 33 40 40 16 9 rrcurveto", "hintmask 11101100",
                        "102 98 rmoveto",
                        "39 -45 28 -45 -53 -48 -29 -45 vhcurveto",
                        "0 -29 16 -26 40 -19 rrcurveto", "11 -6 rlineto",
                        "hintmask 11110010", "-38 -21 -44 -36 0 -36 rrcurveto",
                        "-66 68 -16 44 90 30 57 32 vhcurveto",
                        "0 31 -18 25 -31 17 rrcurveto", "-39 21 rlineto",
                        "59 34 3 30 0 15 rrcurveto", "-94 45 rmoveto",
                        "hintmask 11101100", "34 16 -18 -27 hvcurveto",
                        "0 -30 -23 -27 -16 -10 rrcurveto", "-20 11 rlineto",
                        "-36 20 -8 23 0 15 rrcurveto", "29 23 14 30 vhcurveto",
                        "-399 375 rmoveto", "506 callsubr", "419 4 rmoveto",
                        "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sevenroman
     */
    public void testsevenroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sevenroman");
        assertNotNull(cs);
        assertEquals("sevenroman", cs.getName());
        String[] text =
                {"381 1 27 374 28 93 96 hstemhm",
                        "525 96 -87 75 110 95 -86 74 hintmask 11101010",
                        "534 358 rmoveto", "-286 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 vhcurveto", "26 0 40 -1 23 0 rrcurveto",
                        "1 -1 8 0 9 0 1 1 rlineto", "22 0 39 1 24 0 rrcurveto",
                        "39 69 -2 0 hvcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "286 vlineto",
                        "28 10 16 33 vhcurveto", "19 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -69 -2 -39 vhcurveto",
                        "-24 0 -39 1 -22 0 rrcurveto",
                        "-1 1 -9 0 -8 0 -1 -1 rlineto",
                        "-23 0 -40 -1 -26 0 -25 0 -39 1 -23 0 rrcurveto",
                        "0 1 -6 -1 -11 1 0 -1 rlineto",
                        "-15 -1 -20 0 -16 0 rrcurveto",
                        "-37 -57 2 0 hvcurveto", "-4 -2 0 -20 rlineto",
                        "-3 3 -4 5 vhcurveto", "5 hlineto",
                        "34 11 -6 -15 hvcurveto",
                        "0 -7 -3 -9 -5 -11 rrcurveto",
                        "-89 -219 -17 -43 -17 46 -86 218 rlineto",
                        "-6 14 -4 8 0 7 0 10 9 6 20 1 rrcurveto", "17 hlineto",
                        "3 6 1 7 hvcurveto", "0 19 -4 2 rlineto",
                        "0 -61 -2 -39 -34 -53 2 0 vhcurveto",
                        "-3 -2 0 -20 rlineto", "-5 5 -2 5 vhcurveto",
                        "29 0 21 -12 14 -36 rrcurveto", "136 -345 rlineto",
                        "6 -15 6 -6 13 0 10 0 7 6 7 17 rrcurveto",
                        "138 339 rlineto", "16 39 23 13 29 0 rrcurveto",
                        "17 hlineto", "34 9 -16 -28 hvcurveto",
                        "hintmask 11110000", "-9 213 rmoveto", "300 callsubr",
                        "hintmask 11101010", "203 -213 rmoveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto",
                        "-14 0 -5 0 -14 0 rlineto", "-33 -10 15 29 hvcurveto",
                        "286 vlineto", "28 10 16 33 vhcurveto",
                        "14 0 5 0 14 0 rlineto", "33 10 -16 -28 hvcurveto",
                        "hintmask 11100100", "-9 213 rmoveto", "107 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sigma
     */
    public void testsigma() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sigma");
        assertNotNull(cs);
        assertEquals("sigma", cs.getName());
        String[] text =
                {"61 -12 31 344 69 hstem", "37 70 280 70 vstem",
                        "102 366 rmoveto", "-42 -42 -23 -59 0 -61 rrcurveto",
                        "-126 85 -90 137 158 40 137 57 vhcurveto",
                        "0 89 -42 61 -60 31 rrcurveto", "50 hlineto",
                        "60 0 42 26 28 49 rrcurveto", "-20 14 rlineto",
                        "-15 -14 -40 -6 -37 0 rrcurveto", "-132 hlineto",
                        "-91 0 -63 -31 -35 -35 rrcurveto", "164 -347 rmoveto",
                        "-103 -56 101 68 95 51 80 129 hvcurveto", "54 hlineto",
                        "4 -3 -10 -11 -8 -5 56 -59 4 -54 0 -46 rrcurveto",
                        "-95 -57 -71 -64 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sigma1
     */
    public void testsigma1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sigma1");
        assertNotNull(cs);
        assertEquals("sigma1", cs.getName());
        String[] text =
                {
                        "-50 -225 41 172 76 315 63 hstem",
                        "",
                        "32 48 302 34 vstem",
                        "32 198 rmoveto",
                        "0 -95 62 -110 112 -5 109 -5 67 -10 0 -58 0 -72 -59 -27 -63 0 -41 0 -11 16 -5 11 -12 26 -14 10 -28 0 rrcurveto",
                        "-16 -19 -15 -28 -24 16 -37 88 hvcurveto",
                        "57 0 38 11 46 32 36 25 21 32 0 42 0 45 -9 35 -34 34 -19 20 -27 13 -37 0 rrcurveto",
                        "-147 -63 39 116 68 72 92 90 hvcurveto",
                        "41 0 21 -5 15 -16 15 -15 17 -10 17 0 rrcurveto",
                        "28 17 17 25 27 -35 40 -99 -159 -88 -138 -106 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : similar
     */
    public void testsimilar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("similar");
        assertNotNull(cs);
        assertEquals("similar", cs.getName());
        String[] text =
                {
                        "26 213 59 6 59 hstem",
                        "57 390 vstem",
                        "57 209 rmoveto",
                        "12 -3 rlineto",
                        "24 44 50 28 35 0 26 0 24 -15 24 -17 24 -17 25 -16 27 0 24 0 65 13 30 107 rrcurveto",
                        "-16 6 rlineto",
                        "-22 -50 -50 -17 -28 0 -22 0 -25 17 -26 16 -26 16 -25 16 -23 0 -60 0 -55 -63 -12 -65 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : six
     */
    public void testsix() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("six");
        assertNotNull(cs);
        assertEquals("six", cs.getName());
        String[] text =
                {
                        "-63 -12 29 290 32 213 26 hstem",
                        "46 69 220 67 vstem",
                        "378 552 rmoveto",
                        "-3 26 rlineto",
                        "-98 -5 -67 -27 -64 -65 -69 -69 -31 -90 0 -92 rrcurveto",
                        "-199 111 -43 73 138 34 115 68 46 -19 122 -148 vhcurveto",
                        "-38 0 -55 -21 -23 -28 11 80 33 67 46 45 48 47 56 17 65 6 rrcurveto",
                        "-262 -290 rmoveto", "-93 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : six_fitted
     */
    public void testsix_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("six.fitted");
        assertNotNull(cs);
        assertEquals("six.fitted", cs.getName());
        String[] text =
                {
                        "-54 -12 29 290 32 213 26 hstem",
                        "42 69 221 67 vstem",
                        "375 552 rmoveto",
                        "-3 26 rlineto",
                        "-98 -5 -67 -27 -65 -65 -68 -69 -32 -90 0 -92 rrcurveto",
                        "-199 111 -43 74 138 34 115 68 46 -20 122 -148 vhcurveto",
                        "-37 0 -56 -21 -23 -28 12 80 33 67 46 45 48 47 56 17 65 6 rrcurveto",
                        "-263 -290 rmoveto", "531 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : six_inferior
     */
    public void testsix_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("six.inferior");
        assertNotNull(cs);
        assertEquals("six.inferior", cs.getName());
        String[] text =
                {"-194 -117 24 149 24 hstem", "38 53 119 57 vstem",
                        "267 -16 rmoveto", "17 -10 79 -97 vhcurveto",
                        "-25 0 -27 -17 -14 -14 11 58 35 67 109 19 rrcurveto",
                        "19 vlineto", "-153 -11 -58 -103 0 -82 rrcurveto",
                        "-104 71 -29 50 79 29 65 36 vhcurveto",
                        "-57 -5 rmoveto",
                        "-38 -7 -34 -44 -28 -40 23 84 vhcurveto",
                        "0 6 0 8 1 5 21 17 22 6 14 0 rrcurveto",
                        "57 4 -55 -22 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : six_oldstyle
     */
    public void testsix_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("six.oldstyle");
        assertNotNull(cs);
        assertEquals("six.oldstyle", cs.getName());
        String[] text =
                {"-69 -12 29 290 32 213 26 hstem", "44 69 220 67 vstem",
                        "376 552 rmoveto", "563 callsubr", "-262 -290 rmoveto",
                        "-93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : six_superior
     */
    public void testsix_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("six.superior");
        assertNotNull(cs);
        assertEquals("six.superior", cs.getName());
        String[] text =
                {"-194 358 25 148 25 hstem", "45 54 119 56 vstem",
                        "274 459 rmoveto", "18 -10 79 -97 vhcurveto",
                        "-24 0 -28 -17 -14 -15 11 59 35 66 109 19 rrcurveto",
                        "20 vlineto", "-153 -12 -58 -103 0 -82 rrcurveto",
                        "-104 72 -29 50 79 28 65 36 vhcurveto",
                        "-56 -4 rmoveto",
                        "-38 -8 -34 -43 -29 -39 23 83 vhcurveto", "20 vlineto",
                        "22 16 22 6 13 0 rrcurveto", "57 5 -54 -22 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : six_taboldstyle
     */
    public void testsix_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("six.taboldstyle");
        assertNotNull(cs);
        assertEquals("six.taboldstyle", cs.getName());
        String[] text =
                {"-63 -12 29 290 32 213 26 hstem", "44 69 220 67 vstem",
                        "376 552 rmoveto", "563 callsubr", "-262 -290 rmoveto",
                        "-93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sixperemspace
     */
    public void testsixperemspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sixperemspace");
        assertNotNull(cs);
        assertEquals("sixperemspace", cs.getName());
        String[] text = {"-335 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sixroman
     */
    public void testsixroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sixroman");
        assertNotNull(cs);
        assertEquals("sixroman", cs.getName());
        String[] text =
                {"168 1 27 374 27 94 96 hstemhm",
                        "507 96 -87 74 hintmask 11101000", "330 402 rmoveto",
                        "34 11 -6 -15 hvcurveto",
                        "0 -7 -3 -9 -5 -11 rrcurveto",
                        "-89 -219 -17 -43 -17 46 -86 218 rlineto",
                        "-6 14 -4 8 0 7 0 10 9 6 20 1 rrcurveto", "17 hlineto",
                        "3 6 1 7 hvcurveto", "0 19 -4 2 rlineto",
                        "0 -61 -2 -39 -34 -53 2 0 vhcurveto",
                        "-3 -2 0 -20 rlineto", "-5 5 -2 5 vhcurveto",
                        "29 0 21 -12 14 -36 rrcurveto", "136 -345 rlineto",
                        "6 -15 6 -6 13 0 10 0 7 6 7 17 rrcurveto",
                        "138 339 rlineto",
                        "16 39 23 13 29 0 33 -1 9 -15 0 -28 rrcurveto",
                        "-286 vlineto", "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-19 hlineto", "-32 -11 15 29 hvcurveto",
                        "286 vlineto", "28 11 16 32 vhcurveto", "19 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -69 -2 -39 vhcurveto",
                        "-18 0 -27 0 -22 1 rrcurveto", "-1 1 rlineto",
                        "0 -5 -1 -9 -12 -9 1 0 vhcurveto",
                        "-2 -2 -31 0 rlineto", "-37 -57 2 0 hvcurveto",
                        "-4 -2 0 -20 rlineto", "-3 3 -4 5 vhcurveto",
                        "hintmask 11110000", "182 169 rmoveto", "-15 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : slash
     */
    public void testslash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("slash");
        assertNotNull(cs);
        assertEquals("slash", cs.getName());
        String[] text =
                {"-210 682 -20 hstem", "4 278 vstem", "282 682 rmoveto",
                        "-41 0 -237 -703 41 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : space
     */
    public void testspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("space");
        assertNotNull(cs);
        assertEquals("space", cs.getName());
        String[] text = {"-251 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : space_uni030F_cap
     */
    public void testspace_uni030F_cap() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("space_uni030F.cap");
        assertNotNull(cs);
        assertEquals("space_uni030F.cap", cs.getName());
        String[] text =
                {
                        "-501 -355 254 vstem",
                        "-209 738 rmoveto",
                        "-9 -7 -6 -11 0 -11 0 -12 5 -5 2 -2 rrcurveto",
                        "95 -86 rlineto",
                        "2 -1 3 -1 3 0 2 0 3 2 3 1 3 3 2 4 0 4 0 1 0 2 -1 1 -33 54 -13 73 -38 0 -9 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -9 2 -7 6 -4 rrcurveto",
                        "98 -84 rlineto",
                        "2 -2 3 0 2 0 4 0 3 2 2 1 4 3 1 3 0 4 0 2 0 2 -1 1 rrcurveto",
                        "-62 114 rlineto",
                        "-6 9 -7 3 -14 0 -9 0 -9 -6 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sterling
     */
    public void teststerling() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sterling");
        assertNotNull(cs);
        assertEquals("sterling", cs.getName());
        String[] text =
                {
                        "-63 -12 50 8 39 207 40 201 42 hstem",
                        "133 73 vstem",
                        "147 85 rmoveto",
                        "-2 0 -4 0 -3 -1 rrcurveto",
                        "5 4 rlineto",
                        "37 28 26 54 0 117 rrcurveto",
                        "5 130 40 -130 56 vlineto",
                        "82 39 63 44 vhcurveto",
                        "",
                        "21 0 14 -11 12 -11 11 -10 9 -8 14 0 rrcurveto",
                        "23 16 14 24 33 -54 11 -22 hvcurveto",
                        "-50 0 -43 -18 -33 -34 -52 -51 -22 -52 0 -80 rrcurveto",
                        "-8 -66 -40 66 -26 vlineto",
                        "0 -64 -7 -76 -45 -49 -6 -6 -4 -5 -5 -4 -27 -14 -22 -18 0 -23 rrcurveto",
                        "-12 13 -12 13 18 22 11 26 10 9 16 33 vhcurveto",
                        "26 0 23 -12 25 -14 28 -16 30 -16 37 0 70 0 44 35 18 49 rrcurveto",
                        "-19 13 rlineto",
                        "-24 -33 -44 -14 -28 0 -26 0 -15 8 -17 11 -21 14 -26 14 -59 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : suchthat
     */
    public void testsuchthat() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("suchthat");
        assertNotNull(cs);
        assertEquals("suchthat", cs.getName());
        String[] text =
                {"5 0 57 200 57 201 57 hstem", "44 572 rmoveto",
                        "-57 155 vlineto", "105 0 89 -87 14 -114 rrcurveto",
                        "-354 -57 354 hlineto",
                        "-12 -107 -80 -93 -116 0 rrcurveto",
                        "-155 -57 151 hlineto",
                        "157 125 130 156 153 -124 133 -158 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : summation
     */
    public void testsummation() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("summation");
        assertNotNull(cs);
        assertEquals("summation", cs.getName());
        String[] text =
                {"91 -62 58 545 42 -23 23 hstemhm", "hintmask 10100000",
                        "491 583 rmoveto", "-466 -23 hlineto",
                        "15 0 26 -10 27 -36 rrcurveto",
                        "169 -266 -202 -269 rlineto",
                        "-14 -17 -10 -2 -12 0 rrcurveto", "-22 481 vlineto",
                        "28 175 -22 2 rlineto",
                        "-1 -5 -31 -114 -70 0 rrcurveto",
                        "-280 0 204 272 1 1 rlineto", "hintmask 11000000",
                        "-172 272 228 0 rlineto",
                        "57 0 31 -81 5 -19 rrcurveto", "22 3 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : sun
     */
    public void testsun() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("sun");
        assertNotNull(cs);
        assertEquals("sun", cs.getName());
        String[] text =
                {
                        "192 8 -21 278 41 hstem",
                        "319 40 vstem",
                        "339 458 rmoveto",
                        "98 73 -80 -91 -92 -72 -79 -99 -99 -72 79 92 94 75 77 96 hvcurveto",
                        "20 -471 rmoveto", "80 vlineto",
                        "45 4 42 18 33 28 rrcurveto",
                        "58 -57 28 28 -57 58 rlineto",
                        "28 32 18 41 5 46 rrcurveto", "80 39 -80 hlineto",
                        "-4 44 -16 44 -29 35 rrcurveto",
                        "56 56 -29 28 -55 -55 rlineto",
                        "-32 28 -41 19 -49 4 rrcurveto", "78 -40 -78 vlineto",
                        "-48 -4 -42 -18 -33 -28 rrcurveto",
                        "-55 55 -27 -29 53 -54 rlineto",
                        "-27 -34 -18 -43 -4 -46 rrcurveto",
                        "-79 -41 79 hlineto", "5 -44 18 -42 27 -34 rrcurveto",
                        "-56 -56 29 -28 57 55 rlineto",
                        "32 -27 41 -17 47 -5 rrcurveto", "-80 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : t
     */
    public void testt() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("t");
        assertNotNull(cs);
        assertEquals("t", cs.getName());
        String[] text =
                {"-199 -12 55 348 39 hstemhm",
                        "89 75 -58 58 hintmask 11100000", "164 391 rmoveto",
                        "-3 callsubr", "hintmask 11010000", "-2 callsubr",
                        "hintmask 11100000", "-1 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : t_sc
     */
    public void testt_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("t.sc");
        assertNotNull(cs);
        assertEquals("t.sc", cs.getName());
        String[] text =
                {"-4 1 27 404 30 hstem", "216 75 vstem", "369 432 rmoveto",
                        "590 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : t_superior
     */
    public void testt_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("t.superior");
        assertNotNull(cs);
        assertEquals("t.superior", cs.getName());
        String[] text =
                {"-295 358 35 209 29 hstemhm",
                        "58 48 -38 38 hintmask 11100000", "106 602 rmoveto",
                        "59 hlineto", "5 9 2 5 hvcurveto", "18 vlineto",
                        "2 -2 2 -3 vhcurveto", "hintmask 11010000",
                        "-68 95 hlineto", "-38 -13 0 -11 rlineto",
                        "-47 -10 -24 -41 -2 0 -1 -2 vhcurveto", "-24 vlineto",
                        "-2 1 0 2 vhcurveto", "hintmask 11100000",
                        "40 -183 hlineto", "-44 21 -17 29 vhcurveto",
                        "28 0 23 8 26 27 rrcurveto", "-16 17 rlineto",
                        "-16 -12 -10 -5 -16 0 rrcurveto",
                        "-17 -4 18 38 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : t_t
     */
    public void testt_t() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("t_t");
        assertNotNull(cs);
        assertEquals("t_t", cs.getName());
        String[] text =
                {"81 -11 56 346 39 hstemhm",
                        "89 75 -58 58 208 74 -57 57 hintmask 11001000",
                        "302 391 rmoveto", "70 -302 hlineto",
                        "-72 30 -28 47 vhcurveto",
                        "50 0 42 29 25 40 rrcurveto", "-15 14 rlineto",
                        "-15 -12 -28 -15 -29 0 rrcurveto",
                        "-26 -7 29 62 hvcurveto", "255 95 vlineto",
                        "10 13 4 9 hvcurveto", "20 vlineto",
                        "4 -2 2 -5 vhcurveto", "hintmask 11010100",
                        "-111 154 hlineto", "-57 -20 0 -19 rlineto",
                        "-79 -9 -36 -78 vhcurveto", "", "-138 154 hlineto",
                        "-58 -20 0 -19 rlineto", "-79 -9 -36 -77 vhcurveto",
                        "-39 vlineto", "hintmask 11101000", "69 -302 hlineto",
                        "-72 31 -28 47 vhcurveto",
                        "49 0 42 29 26 40 rrcurveto", "-15 14 rlineto",
                        "-16 -12 -27 -15 -29 0 rrcurveto",
                        "-27 -6 29 62 hvcurveto", "255 vlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : t_z
     */
    public void testt_z() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("t_z");
        assertNotNull(cs);
        assertEquals("t_z", cs.getName());
        String[] text =
                {
                        "-4 -244 35 218 -21 167 44 hstemhm",
                        "89 75 -58 58 182 90 -57 81 hintmask 11100010",
                        "190 -209 rmoveto",
                        "-3 vlineto",
                        "0 -6 0 -17 8 -9 15 0 247 61 0 212 0 92 -53 74 -81 4 rrcurveto",
                        "hintmask 11101100",
                        "67 43 43 69 0 58 0 60 -31 29 -55 0 -33 0 -32 -12 -121 -18 rrcurveto",
                        "0 156 -58 -20 0 -19 rlineto",
                        "0 -76 -16 -51 -67 -10 rrcurveto",
                        "-2 -1 -1 -3 hvcurveto",
                        "-30 vlineto",
                        "-3 1 -1 3 vhcurveto",
                        "hintmask 11110000",
                        "65 9 0 -292 rlineto",
                        "-71 26 -28 47 vhcurveto",
                        "11 0 17 4 8 3 rrcurveto",
                        "-4 24 -6 0 rlineto",
                        "-15 -9 14 102 hvcurveto",
                        "hintmask 11101100",
                        "255 vlineto",
                        "36 6 69 9 22 0 43 0 12 -42 0 -30 0 -72 -52 -43 -85 -46 rrcurveto",
                        "16 -22 rlineto", "17 5 9 0 16 0 rrcurveto",
                        "hintmask 11100010", "41 71 -43 -107 hvcurveto",
                        "-109 -139 -105 -50 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tau
     */
    public void testtau() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tau");
        assertNotNull(cs);
        assertEquals("tau", cs.getName());
        String[] text =
                {
                        "-66 -12 53 320 68 hstem",
                        "169 63 vstem",
                        "124 429 rmoveto",
                        "-63 0 -27 -88 -7 -53 rrcurveto",
                        "23 -5 rlineto",
                        "23 61 12 17 49 0 rrcurveto",
                        "56 hlineto",
                        "-13 -108 -8 -90 0 -54 0 -77 32 -44 55 0 44 0 36 37 34 44 rrcurveto",
                        "-19 18 rlineto",
                        "-41 -42 -29 -4 -17 0 -21 0 -11 20 0 45 0 55 6 90 10 110 rrcurveto",
                        "24 hlineto", "60 0 41 15 27 50 rrcurveto",
                        "-19 14 rlineto", "-5 -10 -48 -1 -37 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tbar
     */
    public void testtbar() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tbar");
        assertNotNull(cs);
        assertEquals("tbar", cs.getName());
        String[] text =
                {"", "-199 -12 55 202 39 107 39 hstemhm",
                        "89 75 -58 58 hintmask 11110000", "273 284 rmoveto",
                        "-109 107 94 hlineto", "10 14 4 9 hvcurveto",
                        "20 vlineto", "4 -3 2 -5 vhcurveto",
                        "hintmask 11101000", "-2 callsubr",
                        "hintmask 11110000", "65 -107 -69 -39 69 -158 hlineto",
                        "-71 27 -28 46 vhcurveto",
                        "46 0 40 22 39 44 rrcurveto", "-18 17 rlineto",
                        "-26 -20 -20 -8 -26 0 rrcurveto",
                        "-27 -6 30 62 hvcurveto", "110 109 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : tbar_sc
     */
    public void testtbar_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tbar.sc");
        assertNotNull(cs);
        assertEquals("tbar.sc", cs.getName());
        String[] text =
                {"-7 1 27 217 39 148 30 hstem", "216 75 vstem",
                        "378 284 rmoveto", "-87 113 hlineto",
                        "24 9 11 28 vhcurveto", "41 hlineto",
                        "43 0 14 -26 19 -72 rrcurveto", "28 3 rlineto",
                        "-8 48 -1 45 0 44 rrcurveto", "-25 hlineto",
                        "-1 -6 -9 -6 -16 0 rrcurveto", "-329 hlineto",
                        "-16 0 -9 6 -2 6 rrcurveto", "-25 hlineto",
                        "0 -44 0 -46 -8 -47 rrcurveto", "27 -3 rlineto",
                        "20 72 12 26 45 0 rrcurveto", "50 hlineto",
                        "29 9 -11 -22 hvcurveto",
                        "-115 -91 -39 91 -186 vlineto",
                        "-20 -11 -11 -32 vhcurveto", "-20 hlineto",
                        "-4 -3 -3 -3 hvcurveto", "0 -21 2 -2 rlineto",
                        "0 72 2 28 31 79 -2 0 vhcurveto", "2 2 0 21 rlineto",
                        "3 -3 3 -3 vhcurveto", "-21 hlineto",
                        "-31 -11 9 22 hvcurveto", "186 87 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : tcaron
     */
    public void testtcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tcaron");
        assertNotNull(cs);
        assertEquals("tcaron", cs.getName());
        String[] text =
                {"-188 -12 55 348 39 193 75 hstemhm",
                        "89 75 -58 58 111 50 hintmask 11110100",
                        "164 391 rmoveto", "-3 callsubr", "hintmask 11101100",
                        "-2 callsubr", "hintmask 11110100", "-1 callsubr",
                        "101 563 rmoveto", "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tcaron_sc
     */
    public void testtcaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tcaron.sc");
        assertNotNull(cs);
        assertEquals("tcaron.sc", cs.getName());
        String[] text =
                {
                        "-7 1 27 404 30 hstem",
                        "216 75 vstem",
                        "369 432 rmoveto",
                        "590 callsubr",
                        "-101 76 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -26 -34 -26 -37 -38 -34 36 -32 26 -40 28 rrcurveto",
                        "-20 -13 rlineto", "35 -37 37 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tcommaaccent
     */
    public void testtcommaaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tcommaaccent");
        assertNotNull(cs);
        assertEquals("tcommaaccent", cs.getName());
        String[] text =
                {"-199 -191 25 76 31 450 39 hstemhm",
                        "89 75 -58 58 37 53 hintmask 11110100",
                        "159 -90 rmoveto",
                        "23 19 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-20 0 -11 4 -27 10 rrcurveto", "-10 -22 rlineto",
                        "25 -12 17 -5 32 0 rrcurveto",
                        "61 46 28 42 39 -31 23 -40 hvcurveto",
                        "-9 0 -9 -1 -8 -2 rrcurveto", "21 51 rlineto",
                        "39 4 35 22 35 39 rrcurveto", "-18 17 rlineto",
                        "-26 -20 -20 -8 -26 0 rrcurveto",
                        "-27 -6 30 62 hvcurveto", "256 94 vlineto",
                        "10 14 4 9 hvcurveto", "20 vlineto",
                        "4 -3 2 -5 vhcurveto", "hintmask 11101100",
                        "-2 callsubr", "hintmask 11110100", "65 -304 hlineto",
                        "0 -62 20 -29 35 -7 rrcurveto", "-36 -79 6 -7 rlineto",
                        "16 6 10 1 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tcommaaccent_sc
     */
    public void testtcommaaccent_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tcommaaccent.sc");
        assertNotNull(cs);
        assertEquals("tcommaaccent.sc", cs.getName());
        String[] text =
                {"-7 -182 25 76 32 48 29 404 30 hstemhm",
                        "216 75 -15 54 hintmask 11110100", "234 -81 rmoveto",
                        "24 18 -14 -21 hvcurveto", "hintmask 11111000",
                        "-27 -30 -14 -30 vhcurveto",
                        "-20 0 -10 4 -27 10 rrcurveto", "-11 -22 rlineto",
                        "26 -11 16 -6 33 0 rrcurveto", "hintmask 11110100",
                        "61 46 28 43 38 -31 24 -40 hvcurveto",
                        "-10 0 -9 -1 -8 -2 rrcurveto", "22 53 rlineto",
                        "35 69 -2 0 hvcurveto", "2 2 0 21 rlineto",
                        "3 -3 3 -3 vhcurveto", "-21 hlineto",
                        "hintmask 11111000", "-31 -11 9 22 hvcurveto",
                        "338 vlineto", "24 9 11 28 vhcurveto", "41 hlineto",
                        "43 0 14 -26 19 -72 rrcurveto", "28 3 rlineto",
                        "-8 48 -1 45 0 44 rrcurveto", "-25 hlineto",
                        "-1 -6 -9 -6 -16 0 rrcurveto", "-329 hlineto",
                        "-16 0 -9 6 -2 6 rrcurveto", "-25 hlineto",
                        "0 -44 0 -46 -8 -47 rrcurveto", "27 -3 rlineto",
                        "20 72 12 26 45 0 rrcurveto", "50 hlineto",
                        "29 9 -11 -22 hvcurveto", "-340 vlineto",
                        "-20 -11 -11 -32 vhcurveto", "-20 hlineto",
                        "-4 -3 -3 -3 hvcurveto", "0 -21 2 -2 rlineto",
                        "0 40 1 33 vhcurveto", "-37 -81 5 -6 rlineto",
                        "17 5 10 1 18 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tenroman
     */
    public void testtenroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tenroman");
        assertNotNull(cs);
        assertEquals("tenroman", cs.getName());
        String[] text =
                {"3 1 27 374 29 hstem", "197 402 rmoveto", "4 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : theta
     */
    public void testtheta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("theta");
        assertNotNull(cs);
        assertEquals("theta", cs.getName());
        String[] text =
                {
                        "-17 -12 30 296 39 298 30 hstem",
                        "39 75 257 75 vstem",
                        "39 334 rmoveto",
                        "-248 115 -98 86 80 126 88 258 260 -120 87 -80 -99 -108 -116 -231 vhcurveto",
                        "332 -20 rmoveto",
                        "-145 -49 -151 -77 -78 -53 152 144 vhcurveto",
                        "257 39 rmoveto", "-257 hlineto",
                        "129 41 169 84 75 57 -142 -156 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : theta1
     */
    public void testtheta1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("theta1");
        assertNotNull(cs);
        assertEquals("theta1", cs.getName());
        String[] text =
                {
                        "92 -12 31 216 47 61 61 240 37 hstemhm",
                        "87 73 -57 65 232 69 71 24 hintmask 11111011",
                        "400 404 rmoveto",
                        "-105 0 -55 4 -27 22 -31 25 -22 41 0 31 rrcurveto",
                        "67 45 50 50 vhcurveto",
                        "47 98 -64 -176 hvcurveto",
                        "69 -61 rmoveto",
                        "46 25 -14 -57 hvcurveto",
                        "24 hlineto",
                        "0 64 -6 39 -18 13 -16 11 -24 5 -31 0 rrcurveto",
                        "131 -76 146 -165 -77 -64 -60 -64 vhcurveto",
                        "0 -144 113 -69 200 -1 rrcurveto",
                        "-129 -12 -195 -115 vhcurveto",
                        "hintmask 11110111",
                        "-40 -65 43 86 82 0 52 -32 hvcurveto",
                        "-41 0 -45 -27 -16 -8 rrcurveto",
                        "6 -18 rlineto",
                        "0 15 6 11 36 1 -25 -70 -114 81 -38 79 163 43 160 195 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : thinspace
     */
    public void testthinspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("thinspace");
        assertNotNull(cs);
        assertEquals("thinspace", cs.getName());
        String[] text = {"-376 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : thorn
     */
    public void testthorn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("thorn");
        assertNotNull(cs);
        assertEquals("thorn", cs.getName());
        String[] text =
                {
                        "-5 -229 27 190 34 374 46 204 -20 72 -20 hstem",
                        "86 74 221 78 vstem",
                        "160 362 rmoveto",
                        "1 33 0 303 -22 0 rlineto",
                        "-46 -20 -60 -6 -16 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 2 -2 3 vhcurveto",
                        "7 0 22 4 4 0 rrcurveto",
                        "20 9 -16 -57 hvcurveto",
                        "-731 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "168 vlineto",
                        "26 -14 30 -8 36 0 53 0 44 19 39 39 45 45 25 63 0 81 0 105 -67 102 -97 0 -60 0 -35 -34 -10 -11 -11 -10 -11 -12 -8 -13 rrcurveto",
                        "1 -48 rmoveto",
                        "22 53 51 29 35 0 25 0 18 -9 15 -15 43 -43 11 -61 0 -60 0 -87 -27 -99 -106 0 -17 0 -36 2 -34 41 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : thorn_sc
     */
    public void testthorn_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("thorn.sc");
        assertNotNull(cs);
        assertEquals("thorn.sc", cs.getName());
        String[] text =
                {"-51 -1 29 72 27 219 27 61 26 hstem", "91 75 176 78 vstem",
                        "166 336 rmoveto", "17 4 40 6 15 0 rrcurveto",
                        "64 40 -33 -74 -80 -42 -32 -76 hvcurveto",
                        "-31 0 -20 1 -7 3 rrcurveto", "240 vmoveto",
                        "30 vlineto", "30 13 3 17 vhcurveto", "24 hlineto",
                        "6 1 4 1 hvcurveto", "0 21 -2 2 rlineto",
                        "0 -62 -2 -37 -36 -59 2 0 vhcurveto",
                        "-2 -2 0 -21 rlineto", "-3 2 -2 5 vhcurveto",
                        "24 hlineto", "26 5 -7 -26 hvcurveto", "-340 vlineto",
                        "0 -26 -3 -6 -28 -1 rrcurveto", "-24 hlineto",
                        "-5 0 -1 -3 -1 -3 rrcurveto", "0 -21 2 -2 rlineto",
                        "12 0 78 2 5 0 13 0 76 -2 10 0 rrcurveto",
                        "2 2 0 21 rlineto", "4 -4 2 -3 vhcurveto",
                        "-24 hlineto", "-24 1 -6 2 0 30 rrcurveto",
                        "44 vlineto", "12 -4 21 -1 30 0 rrcurveto",
                        "145 46 83 55 52 -30 83 -151 hvcurveto",
                        "-14 0 -29 -1 -30 -1 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : three
     */
    public void testthree() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("three");
        assertNotNull(cs);
        assertEquals("three", cs.getName());
        String[] text =
                {
                        "-63 -12 31 528 31 hstemhm",
                        "56 62 179 65 -42 74 hintmask 11110000",
                        "216 547 rmoveto",
                        "-95 callsubr",
                        "hintmask 11101000",
                        "54 75 -17 -107 -126 -94 -33 -33 hvcurveto",
                        "-48 0 -18 24 -11 17 -9 13 -9 10 -19 0 rrcurveto",
                        "-20 -15 -17 -15 -38 80 -25 57 113 100 71 132 hvcurveto",
                        "0 104 -74 41 -56 9 rrcurveto",
                        "hintmask 11110000",
                        "90 57 8 50 0 25 rrcurveto",
                        "40 -29 61 -97 -139 -41 -92 -31 -3 2 -29 26 27 7 31 18 vhcurveto",
                        "61 73 14 25 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : three_fitted
     */
    public void testthree_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("three.fitted");
        assertNotNull(cs);
        assertEquals("three.fitted", cs.getName());
        String[] text =
                {
                        "-67 -12 31 528 31 hstemhm",
                        "51 62 179 65 -42 74 hintmask 11110000",
                        "211 547 rmoveto",
                        "41 40 -28 -57 hvcurveto",
                        "0 -46 -64 -75 -77 -13 rrcurveto",
                        "4 -30 rlineto",
                        "12 2 10 2 10 0 rrcurveto",
                        "hintmask 11101000",
                        "53 75 -17 -107 -126 -94 -33 -33 hvcurveto",
                        "-48 0 -17 24 -12 17 -9 13 -9 10 -19 0 rrcurveto",
                        "-20 -14 -17 -15 -38 79 -25 57 113 100 71 132 hvcurveto",
                        "0 104 -74 41 -56 9 rrcurveto",
                        "hintmask 11110000",
                        "90 57 8 50 0 25 rrcurveto",
                        "40 -29 61 -97 -139 -41 -92 -31 -3 2 -29 26 27 7 31 18 vhcurveto",
                        "61 74 14 24 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : three_inferior
     */
    public void testthree_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("three.inferior");
        assertNotNull(cs);
        assertEquals("three.inferior", cs.getName());
        String[] text =
                {"-194 -118 25 144 24 113 24 hstemhm",
                        "44 49 95 57 -30 59 hintmask 11111000",
                        "188 147 rmoveto", "0 -41 -29 -25 -44 -6 rrcurveto",
                        "2 -24 rlineto", "8 1 5 1 7 0 rrcurveto",
                        "hintmask 11110100",
                        "24 54 -7 -57 -69 -57 -13 -19 hvcurveto",
                        "-32 0 -10 8 -8 10 -6 7 -6 6 -14 0 rrcurveto",
                        "-11 -13 -9 -10 -21 52 -16 37 80 66 46 69 hvcurveto",
                        "0 58 -47 27 -33 3 rrcurveto", "hintmask 11111000",
                        "29 16 22 23 0 29 rrcurveto",
                        "36 -33 23 -52 -87 -29 -53 -17 -3 4 -15 19 vhcurveto",
                        "23 0 2 17 1 12 1 25 34 10 20 0 rrcurveto",
                        "19 21 -9 -32 hvcurveto", "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : three_oldstyle
     */
    public void testthree_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("three.oldstyle");
        assertNotNull(cs);
        assertEquals("three.oldstyle", cs.getName());
        String[] text =
                {"-53 -148 30 529 31 hstemhm",
                        "58 62 179 65 -42 74 hintmask 11110000",
                        "218 411 rmoveto", "559 callsubr", "hintmask 11101000",
                        "560 callsubr", "hintmask 11110000", "561 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : three_superior
     */
    public void testthree_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("three.superior");
        assertNotNull(cs);
        assertEquals("three.superior", cs.getName());
        String[] text =
                {"-194 358 25 144 24 113 24 hstemhm",
                        "44 49 95 57 -30 59 hintmask 11111000",
                        "188 624 rmoveto", "15 callsubr", "hintmask 11110100",
                        "24 54 -7 -57 -69 -57 -13 -19 hvcurveto",
                        "-32 0 -10 8 -8 10 -6 7 -6 7 -14 0 rrcurveto",
                        "-11 -13 -10 -10 -21 52 -16 37 80 66 46 69 hvcurveto",
                        "0 58 -47 27 -33 3 rrcurveto", "hintmask 11111000",
                        "29 16 22 23 0 29 rrcurveto",
                        "37 -33 22 -52 -87 -29 -53 -17 -3 4 -15 19 vhcurveto",
                        "23 0 2 17 1 12 1 25 34 10 20 0 rrcurveto",
                        "19 21 -9 -31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : three_taboldstyle
     */
    public void testthree_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("three.taboldstyle");
        assertNotNull(cs);
        assertEquals("three.taboldstyle", cs.getName());
        String[] text =
                {"-63 -148 30 529 31 hstemhm",
                        "58 62 179 65 -42 74 hintmask 11110000",
                        "218 411 rmoveto", "559 callsubr", "hintmask 11101000",
                        "560 callsubr", "hintmask 11110000", "561 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : threeeighths
     */
    public void testthreeeighths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("threeeighths");
        assertNotNull(cs);
        assertEquals("threeeighths", cs.getName());
        String[] text =
                {
                        "159 -85 22 286 22 64 24 144 24 113 24 hstemhm",
                        "46 49 96 56 -29 58 119 47 -32 44 103 44 -28 53 hintmask 1111110010010000",
                        "499 79 rmoveto",
                        "29 -14 rlineto",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-42 -30 -16 -36 -24 -41 15 45 vhcurveto",
                        "0 34 41 39 16 9 rrcurveto",
                        "hintmask 1111110001100000",
                        "102 98 rmoveto",
                        "40 -46 28 -45 -52 -48 -30 -45 vhcurveto",
                        "0 -29 15 -26 40 -18 rrcurveto",
                        "12 -7 rlineto",
                        "hintmask 1111110010010000",
                        "-38 -20 -44 -36 0 -37 rrcurveto",
                        "-65 67 -17 44 90 30 57 32 vhcurveto",
                        "0 31 -17 26 -31 16 rrcurveto",
                        "",
                        "-39 22 rlineto",
                        "59 33 3 30 0 15 rrcurveto",
                        "-95 46 rmoveto",
                        "hintmask 1111110001100000",
                        "35 16 -19 -27 hvcurveto",
                        "0 -29 -23 -27 -16 -10 rrcurveto",
                        "-20 11 rlineto",
                        "-37 20 -7 22 0 16 rrcurveto",
                        "29 23 14 29 vhcurveto",
                        "hintmask 1111111000000000",
                        "-315 351 rmoveto",
                        "22 callsubr",
                        "hintmask 1111110100000000",
                        "25 54 -7 -56 -70 -57 -13 -19 hvcurveto",
                        "-33 0 -9 8 -9 10 -6 7 -6 7 -14 0 rrcurveto",
                        "-10 -14 -10 -10 -21 52 -15 38 79 66 45 69 hvcurveto",
                        "0 58 -47 27 -33 3 rrcurveto",
                        "hintmask 1111111000000000",
                        "29 16 22 23 0 30 rrcurveto",
                        "36 -33 22 -51 -88 -29 -53 -17 -3 4 -15 20 22 3 17 12 vhcurveto",
                        "2 25 34 10 19 0 rrcurveto", "20 21 -9 -31 hvcurveto",
                        "341 27 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : threefifths
     */
    public void testthreefifths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("threefifths");
        assertNotNull(cs);
        assertEquals("threefifths", cs.getName());
        String[] text =
                {"159 -85 24 167 27 71 34 72 24 144 24 113 24 hstemhm",
                        "43 49 96 56 -30 59 279 57 hintmask 1111111001000000",
                        "552 18 rmoveto", "503 callsubr",
                        "hintmask 1111111101000000", "-364 557 rmoveto",
                        "0 -41 -30 -26 -44 -6 rrcurveto", "2 -24 rlineto",
                        "8 1 5 1 7 0 rrcurveto", "hintmask 1111111011000000",
                        "23 callsubr", "hintmask 1111111101000000",
                        "24 callsubr", "344 26 rmoveto", "20 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : threeperemspace
     */
    public void testthreeperemspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("threeperemspace");
        assertNotNull(cs);
        assertEquals("threeperemspace", cs.getName());
        String[] text = {"-169 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : threequarters
     */
    public void testthreequarters() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("threequarters");
        assertNotNull(cs);
        assertEquals("threequarters", cs.getName());
        String[] text =
                {"159 -78 23 75 34 254 24 144 24 113 24 hstemhm",
                        "42 49 96 56 -30 59 260 46 hintmask 1111110010000000",
                        "578 160 rmoveto", "8 -7 1 -6 vhcurveto",
                        "-7 0 -11 -12 -8 -9 -2 -2 -5 -8 0 -7 rrcurveto",
                        "-77 -91 vlineto",
                        "127 186 -30 10 -154 -218 4 -12 144 0 0 -50 rlineto",
                        "-22 -4 -3 -18 vhcurveto", "-15 hlineto",
                        "-4 -1 -2 -2 hvcurveto", "-20 vlineto", "",
                        "0 38 1 24 27 42 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 2 -4 vhcurveto", "-15 hlineto",
                        "-19 -4 7 18 hvcurveto", "50 52 vlineto",
                        "3 34 -55 0 rlineto", "hintmask 1111111010000000",
                        "-391 519 rmoveto", "22 callsubr",
                        "hintmask 1111110110000000", "23 callsubr",
                        "hintmask 1111111010000000", "24 callsubr",
                        "345 28 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : threeroman
     */
    public void testthreeroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("threeroman");
        assertNotNull(cs);
        assertEquals("threeroman", cs.getName());
        String[] text =
                {
                        "135 1 27 374 27 94 96 hstemhm",
                        "88 96 -87 74 106 96 -87 75 113 96 -87 75 hintmask 1110100010000000",
                        "97 358 rmoveto", "-286 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 vhcurveto", "25 0 37 -1 24 0 rrcurveto",
                        "0 -1 11 1 11 -1 0 1 rlineto",
                        "23 0 36 1 23 0 28 0 43 -1 22 0 rrcurveto",
                        "-1 7 vlineto", "7 0 1 1 rlineto",
                        "22 0 41 1 26 0 rrcurveto", "39 68 -2 0 hvcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "286 vlineto", "28 10 16 33 vhcurveto", "19 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -39 vhcurveto",
                        "-26 0 -41 1 -22 0 rrcurveto",
                        "-1 1 -7 0 -7 0 0 -1 rlineto",
                        "-22 0 -43 -1 -28 0 -23 0 -36 1 -23 0 rrcurveto",
                        "1 vlineto", "0 0 -4 0 -7 -1 rrcurveto",
                        "-11 1 0 -1 rlineto", "-24 0 -37 -1 -25 0 rrcurveto",
                        "-35 -68 2 0 hvcurveto", "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto", "19 hlineto",
                        "33 10 -16 -28 hvcurveto", "hintmask 1111000000000000",
                        "-9 213 rmoveto", "-15 callsubr",
                        "hintmask 1110101000000000", "198 -213 rmoveto",
                        "508 callsubr", "hintmask 1110010000000000",
                        "-9 213 rmoveto", "300 callsubr",
                        "hintmask 1110001010000000", "", "206 -213 rmoveto",
                        "509 callsubr", "hintmask 1110000100000000",
                        "-9 213 rmoveto", "149 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tilde
     */
    public void testtilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tilde");
        assertNotNull(cs);
        assertEquals("tilde", cs.getName());
        String[] text =
                {
                        "-209 574 44 4 46 hstem",
                        "5 278 vstem",
                        "209 618 rmoveto",
                        "-19 0 -17 10 -16 12 -20 14 -22 14 -31 0 -42 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 18 -11 21 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -15 -10 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tildecomb
     */
    public void testtildecomb() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tildecomb");
        assertNotNull(cs);
        assertEquals("tildecomb", cs.getName());
        String[] text =
                {
                        "-501 574 44 4 46 hstem",
                        "-288 278 vstem",
                        "-84 618 rmoveto",
                        "-19 0 -17 10 -16 12 -20 14 -22 14 -30 0 -43 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 18 -11 21 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tonos
     */
    public void testtonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tonos");
        assertNotNull(cs);
        assertEquals("tonos", cs.getName());
        String[] text =
                {"-282 548 183 hstem", "43 123 vstem", "125 731 rmoveto",
                        "-11 0 -13 -6 -4 -11 rrcurveto", "-52 -143 rlineto",
                        "-1 -3 -1 -5 0 -1 0 -7 7 -7 8 0 4 0 4 4 3 4 rrcurveto",
                        "92 122 rlineto",
                        "4 5 1 5 0 5 0 20 -21 18 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : trademark
     */
    public void testtrademark() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("trademark");
        assertNotNull(cs);
        assertEquals("trademark", cs.getName());
        String[] text =
                {
                        "294 295 19 -15 18 309 26 -20 20 hstemhm",
                        "139 68 hintmask 10001000",
                        "674 344 rmoveto",
                        "-7 vlineto",
                        "-11 -1 -12 -5 vhcurveto",
                        "-14 hlineto",
                        "-9 -8 -2 -5 hvcurveto",
                        "hintmask 01001000",
                        "0 -8 6 -6 rlineto",
                        "hintmask 10001000",
                        "0 46 2 20 21 44 -2 0 vhcurveto",
                        "hintmask 01001000",
                        "6 6 0 8 rlineto",
                        "hintmask 10011000",
                        "5 -7 2 -12 vhcurveto",
                        "-14 hlineto",
                        "-8 0 -2 14 -2 16 rrcurveto",
                        "-23 266 0 6 rlineto",
                        "11 3 5 6 vhcurveto",
                        "15 hlineto",
                        "5 12 1 5 hvcurveto",
                        "0 8 -3 6 -82 0 -107 -265 -112 265 -89 0 -5 -6 0 -8 rlineto",
                        "0 -3 5 -2 12 -1 rrcurveto", "16 hlineto",
                        "6 3 -5 -12 hvcurveto", "0 -2 0 -3 rlineto",
                        "-6 -86 -8 -95 -6 -85 -2 -14 -2 -16 -7 0 rrcurveto",
                        "-14 hlineto", "-12 -6 -2 -5 hvcurveto",
                        "hintmask 01001000", "0 -8 5 -6 rlineto",
                        "hintmask 10001000", "0 28 2 19 22 39 -2 0 vhcurveto",
                        "hintmask 01001000", "3 6 0 8 rlineto",
                        "hintmask 10001000", "5 -10 2 -7 vhcurveto",
                        "-15 hlineto", "-5 -2 9 14 hvcurveto", "6 vlineto",
                        "6 64 4 64 4 65 rrcurveto", "100 -238 rlineto",
                        "4 -7 9 -3 4 0 10 0 4 4 2 6 rrcurveto",
                        "99 243 rlineto", "-450 -200 rmoveto", "264 vlineto",
                        "hintmask 00101000", "17 3 4 11 vhcurveto",
                        "43 hlineto", "22 0 6 -6 12 -45 rrcurveto",
                        "23 5 -19 91 -25 -8 rlineto", "hintmask 00011000",
                        "1 -3 1 -8 1 0 rrcurveto", "-233 hlineto",
                        "1 0 1 8 1 3 rrcurveto", "-24 8 -19 -90 22 -6 rlineto",
                        "hintmask 01101000", "11 45 7 6 21 0 rrcurveto",
                        "51 hlineto", "10 4 -4 -16 hvcurveto", "-265 vlineto",
                        "-18 -9 -6 -22 vhcurveto", "-14 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -13 1 -1 rlineto",
                        "0 61 1 21 20 63 -1 0 vhcurveto", "1 1 0 13 rlineto",
                        "3 -2 2 -3 vhcurveto", "-14 hlineto",
                        "-23 -7 9 15 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : triagdn
     */
    public void testtriagdn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("triagdn");
        assertNotNull(cs);
        assertEquals("triagdn", cs.getName());
        String[] text =
                {"40 35 394 hstem", "44 454 vstem", "44 429 rmoveto",
                        "227 -394 227 394 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : triagup
     */
    public void testtriagup() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("triagup");
        assertNotNull(cs);
        assertEquals("triagup", cs.getName());
        String[] text =
                {"40 37 393 hstem", "44 454 vstem", "498 37 rmoveto",
                        "-227 393 -227 -393 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : trianglebullet
     */
    public void testtrianglebullet() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("trianglebullet");
        assertNotNull(cs);
        assertEquals("trianglebullet", cs.getName());
        String[] text =
                {"-126 84 296 hstem", "73 264 vstem", "73 84 rmoveto",
                        "264 148 -264 148 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : twelveroman
     */
    public void testtwelveroman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("twelveroman");
        assertNotNull(cs);
        assertEquals("twelveroman", cs.getName());
        String[] text =
                {"371 0 28 374 28 93 96 hstemhm",
                        "510 95 -86 74 108 96 -87 75 hintmask 11101010",
                        "710 358 rmoveto", "-286 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-12 0 -7 0 -12 0 rlineto",
                        "-32 -11 15 29 hvcurveto", "286 vlineto",
                        "28 11 16 32 vhcurveto", "12 0 7 0 12 0 rlineto",
                        "34 9 -16 -28 hvcurveto", "hintmask 11100100",
                        "-9 213 rmoveto", "149 callsubr", "hintmask 11101000",
                        "-182 -213 rmoveto", "-286 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-10 hlineto",
                        "-32 0 -13 1 -46 65 rrcurveto", "-90 127 rlineto",
                        "-4 6 -1 3 5 6 rrcurveto", "84 107 rlineto",
                        "37 47 14 11 37 1 rrcurveto", "1 0 18 0 rlineto",
                        "33 10 -16 -28 hvcurveto", "hintmask 11110000",
                        "-9 213 rmoveto", "107 callsubr", "-313 -169 rmoveto",
                        "15 hlineto", "4 4 3 5 hvcurveto",
                        "0 18 -3 3 -111 -2 -79 2 -2 -3 0 -19 rlineto",
                        "-4 7 -3 7 vhcurveto", "35 0 18 -24 28 -41 rrcurveto",
                        "87 -127 rlineto", "3 -5 1 -5 -3 -5 rrcurveto",
                        "-84 -108 rlineto", "-42 -54 -23 -5 -24 0 rrcurveto",
                        "-9 -4 -4 -6 hvcurveto", "0 -17 2 -2 rlineto",
                        "0 46 2 29 32 52 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -2 3 -5 vhcurveto", "-14 hlineto",
                        "-34 0 14 19 17 24 rrcurveto", "63 91 rlineto",
                        "8 12 2 0 8 -10 rrcurveto", "58 -80 rlineto",
                        "28 -38 13 -18 -37 0 rrcurveto", "-12 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 63 2 41 vhcurveto", "18 0 23 -1 18 0 rrcurveto",
                        "1 -1 15 1 13 -1 0 1 rlineto",
                        "23 0 32 1 20 0 26 0 38 -1 24 0 rrcurveto",
                        "0 -1 10 1 10 -1 0 1 rlineto",
                        "23 0 37 1 24 0 rrcurveto", "39 68 -2 0 hvcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto", "",
                        "-19 hlineto", "hintmask 11100010",
                        "-33 -10 15 29 hvcurveto", "286 vlineto",
                        "28 10 16 33 vhcurveto", "19 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -39 vhcurveto",
                        "-24 0 -37 1 -23 0 rrcurveto",
                        "0 1 -10 -1 -10 1 0 -1 rlineto",
                        "-24 0 -38 -1 -26 0 -24 0 -38 1 -23 0 rrcurveto",
                        "0 1 -8 -1 -10 1 -1 -1 rlineto",
                        "-17 -1 -26 0 -19 0 rrcurveto",
                        "-31 -47 2 0 hvcurveto", "-3 -3 0 -19 rlineto",
                        "-5 3 -2 3 vhcurveto", "16 hlineto",
                        "28 0 -3 -16 -21 -29 rrcurveto", "-65 -91 rlineto",
                        "-8 -10 -5 2 -6 10 rrcurveto", "-61 90 rlineto",
                        "-11 18 -4 9 0 5 rrcurveto", "7 4 5 20 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : two
     */
    public void testtwo() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("two");
        assertNotNull(cs);
        assertEquals("two", cs.getName());
        String[] text =
                {"-63 0 58 489 31 hstem", "57 68 183 77 vstem",
                        "58 443 rmoveto",
                        "-20 16 -17 22 16 20 10 26 vhcurveto",
                        "0 8 -2 7 -2 7 -2 7 -2 8 0 8 rrcurveto",
                        "24 19 36 69 34 62 -26 -91 vhcurveto",
                        "0 -61 -23 -45 -56 -57 rrcurveto", "-70 -73 rlineto",
                        "-93 -95 -9 -43 0 -56 rrcurveto",
                        "309 0 20 126 -25 4 rlineto",
                        "-14 -55 -18 -17 -34 0 rrcurveto", "-170 hlineto",
                        "0 47 67 66 5 5 rrcurveto", "95 92 rlineto",
                        "54 52 39 38 0 76 rrcurveto",
                        "115 -90 29 -77 -105 -55 -78 -57 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : two_fitted
     */
    public void testtwo_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("two.fitted");
        assertNotNull(cs);
        assertEquals("two.fitted", cs.getName());
        String[] text =
                {"-73 0 58 489 31 hstem", "51 69 182 77 vstem",
                        "52 443 rmoveto",
                        "-20 16 -17 22 16 20 10 26 vhcurveto",
                        "0 8 -1 7 -2 7 -3 7 -2 8 0 8 rrcurveto",
                        "24 19 36 69 34 62 -26 -91 vhcurveto",
                        "0 -61 -23 -45 -56 -57 rrcurveto", "-70 -73 rlineto",
                        "-93 -95 -9 -43 0 -56 rrcurveto",
                        "309 0 20 126 -25 4 rlineto",
                        "-14 -55 -18 -17 -34 0 rrcurveto", "-169 hlineto",
                        "0 47 67 66 4 5 rrcurveto", "95 92 rlineto",
                        "54 52 39 38 0 76 rrcurveto",
                        "115 -89 29 -78 -105 -55 -78 -57 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : two_inferior
     */
    public void testtwo_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("two.inferior");
        assertNotNull(cs);
        assertEquals("two.inferior", cs.getName());
        String[] text =
                {"-194 -111 31 268 24 hstemhm",
                        "45 62 -60 54 102 59 hintmask 11011000",
                        "73 111 rmoveto", "10 18 8 16 hvcurveto",
                        "0 9 -5 7 0 8 rrcurveto",
                        "13 11 16 43 18 35 -13 -47 vhcurveto",
                        "0 -54 -22 -22 -45 -36 rrcurveto", "hintmask 11101000",
                        "-47 -38 -44 -41 0 -48 rrcurveto", "206 hlineto",
                        "3 28 7 35 9 30 rrcurveto", "-24 6 rlineto",
                        "-11 -29 -16 -39 -31 0 rrcurveto", "-81 hlineto",
                        "0 31 24 29 42 30 55 40 34 33 0 47 rrcurveto",
                        "63 -58 19 -50 vhcurveto", "hintmask 11011000",
                        "-79 -28 -50 -27 hvcurveto", "-13 14 -11 12 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : two_oldstyle
     */
    public void testtwo_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("two.oldstyle");
        assertNotNull(cs);
        assertEquals("two.oldstyle", cs.getName());
        String[] text =
                {
                        "-39 0 55 344 43 hstem",
                        "290 85 vstem",
                        "310 55 rmoveto",
                        "-146 0 140 128 rlineto",
                        "47 43 24 48 0 45 0 70 -52 53 -105 0 -73 0 -69 -66 -17 -52 rrcurveto",
                        "34 -15 rlineto",
                        "21 53 48 37 46 0 59 0 23 -40 0 -53 0 -62 -35 -52 -82 -71 rrcurveto",
                        "-115 -100 0 -21 346 0 rlineto",
                        "5 31 10 47 18 58 rrcurveto", "-27 7 -13 -29 rlineto",
                        "-24 -53 -6 -6 -57 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : two_superior
     */
    public void testtwo_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("two.superior");
        assertNotNull(cs);
        assertEquals("two.superior", cs.getName());
        String[] text =
                {"-194 364 32 268 24 hstemhm",
                        "45 62 -60 54 102 59 hintmask 11011000",
                        "73 587 rmoveto", "10 18 8 16 hvcurveto",
                        "0 8 -5 7 0 9 rrcurveto",
                        "13 11 16 43 18 35 -13 -47 vhcurveto",
                        "0 -54 -22 -23 -45 -36 rrcurveto", "hintmask 11101000",
                        "-47 -37 -44 -42 0 -48 rrcurveto", "206 hlineto",
                        "3 29 7 35 9 30 rrcurveto", "-24 5 rlineto",
                        "-11 -28 -16 -39 -31 0 rrcurveto", "-81 hlineto",
                        "0 31 24 29 42 30 55 40 34 33 0 46 rrcurveto",
                        "64 -58 19 -50 vhcurveto", "hintmask 11011000",
                        "-79 -28 -51 -26 hvcurveto", "-13 14 -11 12 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : two_taboldstyle
     */
    public void testtwo_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("two.taboldstyle");
        assertNotNull(cs);
        assertEquals("two.taboldstyle", cs.getName());
        String[] text =
                {
                        "-63 0 55 344 43 hstem",
                        "275 85 vstem",
                        "295 55 rmoveto",
                        "-146 0 140 128 rlineto",
                        "47 43 24 48 0 45 0 70 -51 53 -106 0 -73 0 -69 -66 -17 -52 rrcurveto",
                        "34 -15 rlineto",
                        "22 53 47 37 46 0 59 0 23 -40 0 -53 0 -62 -35 -52 -81 -71 rrcurveto",
                        "-116 -100 0 -21 347 0 rlineto",
                        "4 31 11 47 17 58 rrcurveto", "-27 7 -13 -29 rlineto",
                        "-24 -53 -5 -6 -58 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : twodotenleader
     */
    public void testtwodotenleader() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("twodotenleader");
        assertNotNull(cs);
        assertEquals("twodotenleader", cs.getName());
        String[] text =
                {"-77 -12 106 hstem", "57 106 98 107 vstem", "57 41 rmoveto",
                        "-97 callsubr", "204 hmoveto", "487 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : twofifths
     */
    public void testtwofifths() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("twofifths");
        assertNotNull(cs);
        assertEquals("twofifths", cs.getName());
        String[] text =
                {
                        "159 -85 24 167 27 71 34 78 32 268 24 hstemhm",
                        "46 62 -60 54 103 58 292 57 hintmask 1111101110000000",
                        "75 539 rmoveto",
                        "21 callsubr",
                        "hintmask 1111110110000000",
                        "-47 -37 -44 -42 0 -48 rrcurveto",
                        "206 hlineto",
                        "4 29 7 35 8 30 rrcurveto",
                        "-24 6 rlineto",
                        "-10 -29 -16 -39 -32 0 rrcurveto",
                        "-81 hlineto",
                        "0 31 24 29 42 30 56 40 33 33 0 47 rrcurveto",
                        "63 -57 19 -50 vhcurveto",
                        "hintmask 1111101110000000",
                        "-79 -29 -51 -26 hvcurveto",
                        "-13 14 -11 13 vhcurveto",
                        "480 -521 rmoveto",
                        "-41 -17 -38 -45 vhcurveto",
                        "-22 0 -11 10 -9 9 -8 8 -7 7 -14 0 rrcurveto",
                        "-10 -12 -9 -12 -24 60 -13 34 69 49 53 59 55 -36 51 -77 hvcurveto",
                        "-15 0 -25 -5 -9 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -22 -142 6 -4 rlineto",
                        "15 8 20 6 22 0 rrcurveto", "72 3 -59 -29 hvcurveto",
                        "-23 583 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : tworoman
     */
    public void testtworoman() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("tworoman");
        assertNotNull(cs);
        assertEquals("tworoman", cs.getName());
        String[] text =
                {"-64 0 28 374 28 93 96 hstemhm",
                        "88 96 -87 74 103 96 -87 75 hintmask 11101010",
                        "214 28 rmoveto", "-32 -11 15 29 hvcurveto",
                        "286 vlineto", "28 11 16 32 vhcurveto",
                        "7 0 12 0 7 0 rlineto", "34 9 -16 -28 hvcurveto",
                        "-286 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-7 0 -12 0 rlineto", "-124 44 rmoveto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 vhcurveto", "24 0 35 -1 24 0 rrcurveto",
                        "0 -1 13 1 12 -1 0 1 rlineto",
                        "23 0 34 1 22 0 rrcurveto", "39 68 -2 0 hvcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "286 vlineto", "28 10 16 33 vhcurveto", "19 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -39 vhcurveto",
                        "-22 0 -34 0 -23 1 rrcurveto",
                        "0 1 -12 -1 -13 1 0 -1 rlineto",
                        "-24 0 -35 -1 -24 0 rrcurveto",
                        "-35 -68 2 0 hvcurveto", "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto", "19 hlineto",
                        "33 10 -16 -28 hvcurveto", "hintmask 11110000",
                        "-9 213 rmoveto", "-15 callsubr", "hintmask 11100100",
                        "186 hmoveto", "300 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : twothirds
     */
    public void testtwothirds() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("twothirds");
        assertNotNull(cs);
        assertEquals("twothirds", cs.getName());
        String[] text =
                {
                        "159 -87 25 144 24 112 25 73 32 268 24 hstemhm",
                        "45 62 -60 54 102 59 134 49 96 56 -30 59 hintmask 1111100111000000",
                        "541 178 rmoveto", "0 -41 -30 -25 -44 -6 rrcurveto",
                        "2 -24 rlineto", "8 1 5 0 7 0 rrcurveto",
                        "hintmask 1111100110100000",
                        "24 54 -6 -57 -69 -57 -13 -19 hvcurveto",
                        "-32 0 -10 7 -9 11 -5 7 -6 6 -14 0 rrcurveto",
                        "-11 -13 -9 -10 -21 52 -16 37 80 66 45 69 hvcurveto",
                        "0 58 -47 27 -33 4 rrcurveto",
                        "hintmask 1111100111000000",
                        "29 15 22 24 0 29 rrcurveto",
                        "36 -33 23 -52 -87 -29 -53 -17 -4 4 -15 19 vhcurveto",
                        "23 0 2 18 1 12 1 24 34 10 20 0 rrcurveto",
                        "20 21 -9 -31 hvcurveto", "-468 361 rmoveto", "",
                        "hintmask 1111101110000000", "10 18 8 16 hvcurveto",
                        "0 8 -5 8 0 8 rrcurveto",
                        "13 11 16 43 18 35 -13 -47 vhcurveto",
                        "0 -54 -22 -23 -45 -36 rrcurveto",
                        "hintmask 1111110110000000",
                        "-47 -37 -44 -42 0 -48 rrcurveto", "206 hlineto",
                        "3 29 7 35 9 30 rrcurveto", "-24 6 rlineto",
                        "-11 -29 -16 -39 -31 0 rrcurveto", "-81 hlineto",
                        "0 31 24 29 42 30 55 40 34 33 0 47 rrcurveto",
                        "63 -58 19 -50 vhcurveto", "hintmask 1111101110000000",
                        "-79 -28 -51 -26 -13 14 -11 12 hvcurveto",
                        "459 62 rmoveto", "20 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : u
     */
    public void testu() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("u");
        assertNotNull(cs);
        assertEquals("u", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 hstemhm",
                        "88 75 191 75 hintmask 10111000", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111000", "1 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : u_sc
     */
    public void testu_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("u.sc");
        assertNotNull(cs);
        assertEquals("u.sc", cs.getName());
        String[] text =
                {"67 -12 29 417 26 hstem", "94 74 267 44 vstem",
                        "280 -12 rmoveto", "591 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : u_superior
     */
    public void testu_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("u.superior");
        assertNotNull(cs);
        assertEquals("u.superior", cs.getName());
        String[] text =
                {"-182 358 35 -13 22 206 22 hstemhm",
                        "54 49 112 49 hintmask 10111000", "103 630 rmoveto",
                        "-1 1 rlineto", "0 -14 -1 -8 -24 -38 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-2 1 -3 4 vhcurveto",
                        "7 hlineto", "19 -1 6 -1 0 -24 rrcurveto",
                        "-132 vlineto", "-67 30 -25 45 vhcurveto",
                        "37 0 35 35 14 17 rrcurveto", "-52 14 vlineto",
                        "hintmask 01111000", "24 13 22 5 33 4 rrcurveto",
                        "-2 22 rlineto", "-11 -3 -10 -1 -7 0 rrcurveto",
                        "-14 0 11 15 hvcurveto", "0 206 -1 1 rlineto",
                        "0 -14 -1 -9 -26 -40 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-4 3 -1 3 vhcurveto",
                        "10 hlineto", "17 9 -4 -22 hvcurveto", "-145 vlineto",
                        "hintmask 10111000", "-19 -22 -22 -22 -21 0 rrcurveto",
                        "-30 -20 16 51 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uacute
     */
    public void testuacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uacute");
        assertNotNull(cs);
        assertEquals("uacute", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 hstemhm",
                        "88 75 191 75 hintmask 10111000", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111000", "1 callsubr",
                        "-132 554 rmoveto", "79 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uacute_sc
     */
    public void testuacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uacute.sc");
        assertNotNull(cs);
        assertEquals("uacute.sc", cs.getName());
        String[] text =
                {
                        "67 -12 29 417 26 205 -20 hstem",
                        "94 74 267 44 vstem",
                        "343 662 rmoveto",
                        "-80 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -7 7 -5 7 0 7 0 7 5 15 14 rrcurveto",
                        "115 109 -2 11 rlineto",
                        "-2 1 -2 2 -3 2 -8 8 -13 11 -28 0 -4 0 -7 -1 -3 -2 rrcurveto",
                        "-63 -674 rmoveto", "591 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ubreve
     */
    public void testubreve() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ubreve");
        assertNotNull(cs);
        assertEquals("ubreve", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 70 57 hstemhm",
                        "88 75 -49 27 213 75 -71 26 hintmask 10111010",
                        "429 116 rmoveto", "0 callsubr", "hintmask 01111010",
                        "1 callsubr", "hintmask 00110101", "-288 531 rmoveto",
                        "-27 -13 rlineto",
                        "8 -78 50 -57 78 0 50 0 75 34 9 101 rrcurveto",
                        "-26 13 rlineto", "-3 -62 -59 -29 -46 0 rrcurveto",
                        "-61 0 -46 40 -2 51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ucircumflex
     */
    public void testucircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ucircumflex");
        assertNotNull(cs);
        assertEquals("ucircumflex", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 217 -20 hstemhm",
                        "88 75 191 75 hintmask 10111100", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111100", "1 callsubr",
                        "-157 530 rmoveto", "-49 hlineto",
                        "-30 -46 -38 -44 -35 -39 rrcurveto", "20 -15 rlineto",
                        "37 27 32 25 38 38 33 -36 34 -25 39 -29 rrcurveto",
                        "21 15 rlineto", "-36 40 -37 42 -29 47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ucircumflex_sc
     */
    public void testucircumflex_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ucircumflex.sc");
        assertNotNull(cs);
        assertEquals("ucircumflex.sc", cs.getName());
        String[] text =
                {"67 -12 29 417 26 186 -20 hstem", "94 74 267 44 vstem",
                        "323 646 rmoveto", "-50 hlineto",
                        "-29 -46 -38 -43 -35 -40 rrcurveto", "19 -14 rlineto",
                        "38 27 32 25 37 38 34 -36 33 -25 39 -29 rrcurveto", "",
                        "21 14 rlineto", "-35 40 -37 42 -29 47 rrcurveto",
                        "-43 -658 rmoveto", "591 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : udieresis
     */
    public void testudieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("udieresis");
        assertNotNull(cs);
        assertEquals("udieresis", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 98 91 hstemhm",
                        "88 75 -35 91 70 90 -25 75 hintmask 10111001",
                        "429 116 rmoveto", "0 callsubr", "hintmask 01111001",
                        "1 callsubr", "hintmask 00110100", "-301 456 rmoveto",
                        "56 callsubr", "hintmask 00110010", "161 hmoveto",
                        "57 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : udieresis_sc
     */
    public void testudieresis_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("udieresis.sc");
        assertNotNull(cs);
        assertEquals("udieresis.sc", cs.getName());
        String[] text =
                {"67 -12 29 417 26 67 91 hstem", "94 74 9 91 69 91 7 44 vstem",
                        "177 572 rmoveto", "223 callsubr", "160 hmoveto",
                        "598 callsubr", "-57 -584 rmoveto", "591 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ugrave
     */
    public void testugrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ugrave");
        assertNotNull(cs);
        assertEquals("ugrave", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 hstemhm",
                        "88 75 191 75 hintmask 10111000", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111000", "1 callsubr",
                        "-210 554 rmoveto",
                        "-4 2 -6 1 -5 0 -34 0 -23 -17 -8 -7 rrcurveto",
                        "-2 -10 114 -109 rlineto",
                        "16 -15 7 -5 6 0 8 0 7 6 0 5 0 7 -1 7 -5 10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ugrave_sc
     */
    public void testugrave_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ugrave.sc");
        assertNotNull(cs);
        assertEquals("ugrave.sc", cs.getName());
        String[] text =
                {"67 -12 29 417 26 hstem", "94 74 267 44 vstem",
                        "268 668 rmoveto",
                        "-4 1 -6 1 -5 0 -34 0 -23 -17 -8 -6 rrcurveto",
                        "-2 -11 114 -109 rlineto",
                        "16 -14 7 -5 6 0 8 0 7 6 0 5 0 7 -1 7 -6 9 rrcurveto",
                        "-57 -554 rmoveto", "591 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uhorn
     */
    public void testuhorn() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uhorn");
        assertNotNull(cs);
        assertEquals("uhorn", cs.getName());
        String[] text =
                {"30 -12 45 -6 28 347 27 50 82 hstemhm",
                        "88 75 191 75 -33 109 -34 34 hintmask 10111100",
                        "429 116 rmoveto", "143 callsubr", "hintmask 10111010",
                        "144 callsubr", "hintmask 10111101", "145 callsubr",
                        "hintmask 01111101", "1 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uhungarumlaut
     */
    public void testuhungarumlaut() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uhungarumlaut");
        assertNotNull(cs);
        assertEquals("uhungarumlaut", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 224 -20 hstemhm",
                        "88 75 191 75 hintmask 10111100", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111100", "1 callsubr",
                        "-155 530 rmoveto", "126 callsubr", "135 -7 rmoveto",
                        "-7 6 -8 2 -9 0 -12 0 -7 -2 -5 -9 rrcurveto",
                        "-78 -139 rlineto",
                        "-1 -1 0 -2 0 -1 0 -8 9 -6 5 0 2 0 2 1 2 2 rrcurveto",
                        "114 110 rlineto",
                        "6 6 1 7 0 6 0 10 -5 11 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uhungarumlaut_sc
     */
    public void testuhungarumlaut_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uhungarumlaut.sc");
        assertNotNull(cs);
        assertEquals("uhungarumlaut.sc", cs.getName());
        String[] text =
                {"67 -12 29 417 26 226 -20 hstem", "94 74 267 44 vstem",
                        "280 -12 rmoveto", "591 callsubr", "48 691 rmoveto",
                        "-8 4 -6 3 -8 0 -4 0 -16 -1 -6 -14 rrcurveto",
                        "-64 -146 rlineto",
                        "-1 -1 0 -1 0 -1 0 -8 9 -5 5 0 3 0 3 1 2 2 rrcurveto",
                        "102 121 rlineto",
                        "4 5 1 6 0 5 0 12 -6 11 -10 7 rrcurveto",
                        "134 -8 rmoveto",
                        "-7 6 -8 3 -9 0 -12 0 -7 -3 -5 -9 rrcurveto",
                        "-78 -139 rlineto",
                        "-1 -1 0 -2 0 -1 0 -8 9 -5 5 0 2 0 3 0 1 3 rrcurveto",
                        "114 109 rlineto",
                        "6 6 1 7 0 6 0 10 -5 11 -9 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : umacron
     */
    public void testumacron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("umacron");
        assertNotNull(cs);
        assertEquals("umacron", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 110 44 hstemhm",
                        "88 75 191 75 hintmask 10111100", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111100", "1 callsubr",
                        "-53 423 rmoveto", "124 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : underscore
     */
    public void testunderscore() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("underscore");
        assertNotNull(cs);
        assertEquals("underscore", cs.getName());
        String[] text =
                {"-15 -154 44 hstem", "482 -110 rmoveto",
                        "-477 -44 477 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : underscoredbl
     */
    public void testunderscoredbl() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("underscoredbl");
        assertNotNull(cs);
        assertEquals("underscoredbl", cs.getName());
        String[] text =
                {"-15 -154 44 62 44 hstem", "482 -4 rmoveto",
                        "-477 -44 477 hlineto", "-62 vmoveto",
                        "-477 -44 477 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni00A0
     */
    public void testuni00A0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni00A0");
        assertNotNull(cs);
        assertEquals("uni00A0", cs.getName());
        String[] text = {"-251 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni00AD
     */
    public void testuni00AD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni00AD");
        assertNotNull(cs);
        assertEquals("uni00AD", cs.getName());
        String[] text =
                {"-151 236 54 hstem", "274 236 rmoveto", "-98 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni00B5
     */
    public void testuni00B5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni00B5");
        assertNotNull(cs);
        assertEquals("uni00B5", cs.getName());
        String[] text =
                {"-16 -213 -21 222 45 hstemhm",
                        "47 95 -88 75 -66 47 214 75 hintmask 11100100",
                        "101 -234 rmoveto", "23 18 19 41 hvcurveto",
                        "hintmask 11001100", "16 callsubr",
                        "hintmask 11010100", "17 callsubr",
                        "hintmask 11001100", "0 -58 9 -51 0 -33 rrcurveto",
                        "hintmask 11100100", "18 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0180
     */
    public void testuni0180() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0180");
        assertNotNull(cs);
        assertEquals("uni0180", cs.getName());
        String[] text =
                {"-23 -11 34 377 43 70 39 146 -20 hstem", "74 75 215 77 vstem",
                        "149 55 rmoveto", "-29 callsubr", "115 497 rmoveto",
                        "-115 146 -22 hlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 2 -2 3 vhcurveto", "32 4 rlineto",
                        "20 10 -15 -57 hvcurveto",
                        "-22 -66 -39 66 -440 vlineto",
                        "0 -39 0 -16 -3 -24 rrcurveto", "21 -5 rlineto",
                        "9 10 13 15 9 12 29 -25 32 -12 43 0 rrcurveto",
                        "102 112 90 159 122 -83 83 -87 hvcurveto",
                        "-48 0 -40 -18 -34 -37 rrcurveto", "125 115 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0181
     */
    public void testuni0181() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0181");
        assertNotNull(cs);
        assertEquals("uni0181", cs.getName());
        String[] text =
                {"146 -2 28 307 40 238 34 -31 31 hstemhm",
                        "0 64 97 81 228 76 -29 90 hintmask 11011101",
                        "510 vmoveto", "-20 15 -17 21 16 19 10 26 vhcurveto",
                        "0 8 -2 6 -1 7 -2 8 -2 7 0 9 rrcurveto",
                        "36 36 24 42 14 5 -10 -30 vhcurveto", "-505 vlineto",
                        "-30 0 -15 -37 vhcurveto", "-30 -1 -1 0 rlineto",
                        "-4 -1 -2 -1 0 -4 rrcurveto", "-19 315 vlineto",
                        "119 86 76 109 hvcurveto",
                        "0 55 -28 89 -125 32 rrcurveto", "hintmask 11101110",
                        "52 26 40 50 0 55 rrcurveto",
                        "62 -36 93 -153 vhcurveto", "hintmask 11011101",
                        "-201 hlineto", "-103 -53 -79 -56 hvcurveto",
                        "242 -177 rmoveto", "116 hlineto",
                        "129 30 -93 -57 -69 -38 -88 -148 hvcurveto",
                        "-31 0 -29 4 -29 7 rrcurveto", "569 vmoveto",
                        "hintmask 11101110", "23 3 26 2 31 0 rrcurveto",
                        "76 72 -24 -99 -46 -21 -69 -128 hvcurveto",
                        "-79 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0182
     */
    public void testuni0182() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0182");
        assertNotNull(cs);
        assertEquals("uni0182", cs.getName());
        String[] text =
                {"60 0 26 321 34 227 38 -27 27 hstemhm",
                        "91 76 266 85 hintmask 11101100", "91 577 rmoveto",
                        "-502 vlineto", "-33 -11 -14 -28 vhcurveto",
                        "-30 hlineto", "-3 -1 -2 -1 0 -3 rrcurveto",
                        "-23 294 vlineto",
                        "108 99 63 123 156 -114 39 -180 hvcurveto",
                        "-57 227 173 hlineto", "48 0 37 -16 25 -89 rrcurveto",
                        "27 3 rlineto", "hintmask 11011100",
                        "-14 140 -446 0 0 -23 rlineto", "-3 2 -1 3 vhcurveto",
                        "30 hlineto", "33 6 -5 -37 hvcurveto",
                        "76 -230 rmoveto", "132 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0183
     */
    public void testuni0183() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0183");
        assertNotNull(cs);
        assertEquals("uni0183", cs.getName());
        String[] text =
                {"-19 -12 34 376 44 204 37 hstem", "74 75 215 77 vstem",
                        "190 683 rmoveto", "-81 0 -56 -4 -48 -8 rrcurveto",
                        "2 -25 rlineto", "0 -4 2 -2 3 1 rrcurveto",
                        "32 3 rlineto", "20 10 -15 -56 hvcurveto",
                        "-502 vlineto", "0 -39 0 -16 -3 -23 rrcurveto",
                        "21 -5 rlineto",
                        "9 10 13 14 9 13 29 -25 32 -12 43 0 rrcurveto",
                        "102 112 89 159 122 -83 84 -87 hvcurveto",
                        "-48 0 -40 -18 -34 -37 rrcurveto", "259 155 vlineto",
                        "52 0 30 -60 12 -46 rrcurveto", "26 3 -14 140 rlineto",
                        "-261 -629 rmoveto", "302 vlineto",
                        "39 40 52 2 11 0 rrcurveto",
                        "61 52 -73 -102 -114 -48 -87 -95 hvcurveto",
                        "-31 0 -21 7 -20 25 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0184
     */
    public void testuni0184() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0184");
        assertNotNull(cs);
        assertEquals("uni0184", cs.getName());
        String[] text =
                {"66 0 26 321 34 278 -20 hstem", "97 76 266 85 vstem",
                        "97 462 rmoveto", "-387 vlineto",
                        "-33 -11 -14 -28 vhcurveto", "-30 hlineto",
                        "-4 -1 -1 -1 0 -3 rrcurveto", "-23 294 vlineto",
                        "108 99 63 123 156 -114 39 -181 hvcurveto",
                        "-56 278 -22 hlineto",
                        "-30 -26 -44 -24 -48 -9 rrcurveto", "-38 vlineto",
                        "37 -7 31 -28 0 -65 rrcurveto", "76 -115 rmoveto",
                        "132 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0185
     */
    public void testuni0185() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0185");
        assertNotNull(cs);
        assertEquals("uni0185", cs.getName());
        String[] text =
                {"-16 -11 34 377 43 255 -20 hstem", "82 74 216 77 vstem",
                        "82 501 rmoveto", "-428 vlineto",
                        "0 -39 -1 -16 -2 -24 rrcurveto", "20 -5 rlineto",
                        "9 10 14 15 8 12 30 -25 31 -12 43 0 rrcurveto",
                        "102 113 90 159 122 -83 83 -87 hvcurveto",
                        "-49 0 -40 -18 -34 -37 rrcurveto", "310 -22 vlineto",
                        "-46 -39 -43 -13 -33 -7 rrcurveto", "-37 vlineto",
                        "37 -17 33 -22 0 -62 rrcurveto", "74 -446 rmoveto",
                        "302 vlineto", "40 41 52 2 10 0 rrcurveto",
                        "62 52 -73 -102 -114 -49 -88 -94 hvcurveto",
                        "-31 0 -22 8 -20 24 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0186
     */
    public void testuni0186() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0186");
        assertNotNull(cs);
        assertEquals("uni0186", cs.getName());
        String[] text =
                {"144 -11 36 592 42 hstem", "522 87 vstem", "290 659 rmoveto",
                        "-96 0 -90 -49 -67 -89 rrcurveto", "23 -14 rlineto",
                        "71 77 67 33 93 0 rrcurveto",
                        "155 76 -159 -146 -203 -142 -84 -79 hvcurveto",
                        "-139 0 -58 82 -25 86 rrcurveto", "-31 -5 rlineto",
                        "10 -51 9 -49 3 -54 58 -4 39 -41 123 0 rrcurveto",
                        "165 154 146 197 160 -103 167 -216 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0187
     */
    public void testuni0187() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0187");
        assertNotNull(cs);
        assertEquals("uni0187", cs.getName());
        String[] text =
                {"143 -12 41 592 37 14 71 hstem", "37 87 vstem",
                        "667 743 rmoveto",
                        "-37 0 -71 -40 -8 -87 -46 11 -44 31 -105 0 rrcurveto",
                        "-166 -153 -146 -197 -161 103 -166 215 hvcurveto",
                        "97 0 89 48 68 89 rrcurveto", "-23 15 rlineto",
                        "-71 -78 -68 -33 -93 0 rrcurveto",
                        "-155 -75 159 146 203 142 84 79 hvcurveto",
                        "138 0 58 -81 26 -86 rrcurveto", "30 4 rlineto",
                        "-7 40 -7 37 -4 39 rrcurveto", "1 hlineto",
                        "-1 7 -1 7 0 7 rrcurveto",
                        "77 42 0 33 23 27 4 31 12 -8 24 -28 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0188
     */
    public void testuni0188() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0188");
        assertNotNull(cs);
        assertEquals("uni0188", cs.getName());
        String[] text =
                {
                        "-8 -12 44 376 34 -5 62 hstemhm",
                        "37 77 hintmask 10110000",
                        "456 428 rmoveto",
                        "21 13 14 21 14 -8 22 -34 hvcurveto",
                        "-35 0 -55 -22 -27 -58 rrcurveto",
                        "hintmask 11010000",
                        "-24 14 -33 9 -40 0 rrcurveto",
                        "-108 -89 -92 -142 -129 75 -91 120 hvcurveto",
                        "60 0 48 27 44 76 rrcurveto",
                        "-18 14 rlineto",
                        "-31 -45 -38 -28 -43 0 rrcurveto",
                        "-77 -63 81 117 108 49 70 66 hvcurveto",
                        "59 0 6 -43 4 -33 3 -25 20 -11 21 0 21 0 18 15 0 29 0 22 -9 21 -18 18 rrcurveto",
                        "hintmask 10110000", "10 20 16 16 24 0 rrcurveto",
                        "17 0 19 -9 16 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0189
     */
    public void testuni0189() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0189");
        assertNotNull(cs);
        assertEquals("uni0189", cs.getName());
        String[] text =
                {"206 -1 29 -29 34 254 39 287 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01110110", "187 72 rmoveto",
                        "40 callsubr", "-170 -53 rmoveto", "-69 callsubr",
                        "hintmask 10101110", "41 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni018A
     */
    public void testuni018A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni018A");
        assertNotNull(cs);
        assertEquals("uni018A", cs.getName());
        String[] text =
                {
                        "277 -1 29 -29 34 580 33 hstemhm",
                        "2 71 114 81 376 91 hintmask 01111100",
                        "268 72 rmoveto",
                        "502 vlineto",
                        "35 35 4 50 215 76 -175 -154 -202 -126 -49 -141 vhcurveto",
                        "-98 -11 7 32 hvcurveto",
                        "-195 435 rmoveto",
                        "0 9 -1 7 -3 9 -2 8 -2 8 0 9 0 42 49 16 37 2 29 -3 7 -11 0 -31 rrcurveto",
                        "-498 vlineto", "hintmask 10111100",
                        "-32 -14 -14 -38 vhcurveto", "-30 hlineto",
                        "-4 -3 -4 -5 hvcurveto", "hintmask 01111100",
                        "0 -20 128 2 rlineto", "36 0 43 -2 103 0 rrcurveto",
                        "141 186 63 246 186 -152 152 -193 hvcurveto",
                        "-34 0 -63 0 -67 -1 rrcurveto", "-71 1 -1 0 rlineto",
                        "-112 -3 -40 -85 0 -44 rrcurveto",
                        "-33 21 -8 16 20 14 14 20 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni018B
     */
    public void testuni018B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni018B");
        assertNotNull(cs);
        assertEquals("uni018B", cs.getName());
        String[] text =
                {"61 0 28 319 34 227 38 -27 27 hstemhm",
                        "42 84 267 75 hintmask 11011100", "468 577 rmoveto",
                        "37 7 5 33 vhcurveto", "30 hlineto",
                        "3 1 1 3 hvcurveto", "23 -445 vlineto",
                        "-14 -140 26 -3 rlineto", "hintmask 11101100",
                        "26 89 37 16 48 0 rrcurveto", "173 -227 -57 hlineto",
                        "-181 -113 -39 -156 -123 98 -63 109 hvcurveto",
                        "293 23 hlineto", "0 3 -1 1 -3 1 rrcurveto",
                        "-30 hlineto", "-29 -11 14 33 hvcurveto",
                        "-75 272 rmoveto", "-312 vlineto",
                        "-30 -6 -29 -3 -26 0 rrcurveto",
                        "-106 -76 47 115 73 35 86 138 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni018C
     */
    public void testuni018C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni018C");
        assertNotNull(cs);
        assertEquals("uni018C", cs.getName());
        String[] text =
                {
                        "-7 -12 42 -3 28 352 35 204 37 hstemhm",
                        "34 78 222 75 hintmask 10111100",
                        "408 683 rmoveto",
                        "-335 0 -14 -140 26 -3 rlineto",
                        "12 46 30 60 53 0 rrcurveto",
                        "154 -226 hlineto",
                        "-23 13 -44 9 -20 0 -66 0 -44 -22 -40 -38 -43 -43 -20 -62 0 -74 0 -123 66 -92 108 0 51 0 39 30 38 39 rrcurveto",
                        "-3 -69 24 0 rlineto",
                        "hintmask 01111100",
                        "21 18 52 11 58 10 rrcurveto",
                        "-4 28 rlineto",
                        "-15 -3 -22 0 -12 0 -8 0 -11 6 -3 9 -2 7 -2 16 0 30 rrcurveto",
                        "-75 -31 rmoveto", "hintmask 10111100", "-24 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni018D
     */
    public void testuni018D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni018D");
        assertNotNull(cs);
        assertEquals("uni018D", cs.getName());
        String[] text =
                {
                        "-11 -268 33 647 30 hstemhm",
                        "34 79 224 52 -9 77 hintmask 11101000",
                        "260 2 rmoveto",
                        "89 31 108 64 0 134 rrcurveto",
                        "117 -78 94 -123 -106 -116 -73 -163 vhcurveto",
                        "0 -111 85 -74 116 -88 rrcurveto",
                        "hintmask 11110000",
                        "53 -40 49 -38 0 -25 0 -43 -31 -22 -52 0 -26 0 -30 13 -20 39 -19 36 -21 7 -11 0 rrcurveto",
                        "-14 -23 -7 -29 -33 64 -59 99 69 67 31 77 hvcurveto",
                        "0 51 -36 35 -75 61 rrcurveto", "-46 37 rmoveto",
                        "-30 25 rlineto", "-55 44 -34 73 0 51 rrcurveto",
                        "163 81 32 51 vhcurveto", "hintmask 11101000", "",
                        "93 42 -117 -81 hvcurveto",
                        "0 -114 -72 -49 -67 -24 rrcurveto", "8 -16 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni018E
     */
    public void testuni018E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni018E");
        assertNotNull(cs);
        assertEquals("uni018E", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "75 27 281 80 hintmask 00110111", "89 646 rmoveto",
                        "hintmask 00111011", "256 0 78 -1 rlineto",
                        "hintmask 10110111", "130 1 0 -21 rlineto",
                        "-3 -1 -4 -7 vhcurveto", "-30 hlineto",
                        "-38 -14 -14 -31 hvcurveto", "-501 vlineto",
                        "-28 12 -16 40 vhcurveto", "30 hlineto",
                        "6 2 -4 -3 hvcurveto", "0 -22 -130 2 rlineto",
                        "hintmask 01111011",
                        "-77 -1 -294 0 -25 160 26 5 rlineto",
                        "16 -73 28 -53 66 0 rrcurveto", "184 hlineto",
                        "22 14 6 27 hvcurveto", "255 -137 vlineto",
                        "-34 0 -11 -15 -5 -29 rrcurveto", "-6 -31 rlineto",
                        "-1 -3 -2 -4 -5 0 rrcurveto", "-23 0 -3 3 rlineto",
                        "3 17 5 45 0 34 0 33 -4 37 -4 25 rrcurveto",
                        "2 1 2 3 vhcurveto", "22 hlineto",
                        "4 0 2 -4 1 -4 rrcurveto", "7 -30 rlineto",
                        "6 -28 9 -16 35 0 rrcurveto", "137 213 hlineto",
                        "24 -12 8 -24 vhcurveto", "-153 hlineto",
                        "-51 0 -34 -60 -7 -43 rrcurveto", "-27 3 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni018F
     */
    public void testuni018F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni018F");
        assertNotNull(cs);
        assertEquals("uni018F", cs.getName());
        String[] text =
                {"167 -12 34 194 44 364 34 hstem", "546 89 vstem",
                        "126 216 rmoveto", "133 callsubr", "-24 307 rmoveto",
                        "134 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0190
     */
    public void testuni0190() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0190");
        assertNotNull(cs);
        assertEquals("uni0190", cs.getName());
        String[] text =
                {
                        "16 -12 34 304 39 259 34 hstemhm",
                        "38 86 -49 71 281 31 hintmask 11101100",
                        "295 658 rmoveto",
                        "-105 -115 -53 -113 hvcurveto",
                        "0 -90 77 -40 30 -11 rrcurveto",
                        "hintmask 11110100",
                        "-68 -19 -76 -58 0 -108 0 -145 136 -33 103 0 80 0 45 26 56 9 rrcurveto",
                        "17 144 -30 3 rlineto",
                        "-24 -109 -84 -39 -69 0 rrcurveto",
                        "-78 -66 44 120 65 30 75 107 hvcurveto", "97 hlineto",
                        "11 6 7 12 11 -6 9 -11 hvcurveto", "-68 hlineto",
                        "hintmask 11101100",
                        "-115 -29 85 50 83 61 41 80 hvcurveto",
                        "99 0 23 -64 18 -80 rrcurveto", "31 5 -19 143 rlineto",
                        "-51 5 -22 25 -71 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0191
     */
    public void testuni0191() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0191");
        assertNotNull(cs);
        assertEquals("uni0191", cs.getName());
        String[] text =
                {"5 -198 31 494 34 82 -20 183 40 -28 28 hstemhm",
                        "121 80 hintmask 11110100", "201 327 rmoveto",
                        "127 hlineto", "34 0 11 -15 5 -29 rrcurveto",
                        "6 -31 rlineto", "1 -3 2 -4 6 0 rrcurveto",
                        "23 0 2 3 rlineto",
                        "-4 31 -4 31 0 34 0 33 5 39 3 23 rrcurveto",
                        "2 -1 2 -2 vhcurveto", "-22 hlineto",
                        "-4 0 -3 -4 -1 -4 rrcurveto", "-7 -30 rlineto",
                        "-6 -28 -9 -16 -35 0 rrcurveto", "-127 213 hlineto",
                        "24 12 8 24 vhcurveto", "117 hlineto",
                        "75 0 18 -51 22 -69 rrcurveto", "29 5 rlineto",
                        "hintmask 11101100", "-66 callsubr",
                        "hintmask 11110100", "-243 0 -74 -1 rlineto",
                        "hintmask 11101100", "-125 1 -4 -1 0 -20 rlineto",
                        "-2 1 -5 7 vhcurveto", "30 hlineto",
                        "43 9 -15 -29 hvcurveto", "-512 vlineto",
                        "-153 -33 -76 -49 vhcurveto",
                        "-28 0 -4 14 -2 12 -3 12 -8 27 -28 0 rrcurveto",
                        "-15 -16 -5 -25 -53 70 -13 34 62 100 47 193 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0193
     */
    public void testuni0193() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0193");
        assertNotNull(cs);
        assertEquals("uni0193", cs.getName());
        String[] text =
                {
                        "220 -12 36 247 34 316 37 14 71 hstem",
                        "32 87 421 81 vstem",
                        "682 743 rmoveto",
                        "-37 0 -71 -40 -8 -87 -46 10 -42 32 -103 0 rrcurveto",
                        "-172 -171 -131 -220 -173 137 -146 201 hvcurveto",
                        "118 0 81 37 68 58 -11 9 -5 8 0 11 rrcurveto",
                        "116 vlineto",
                        "28 9 16 35 vhcurveto",
                        "1 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 26 -2 2 rlineto",
                        "0 -58 -2 -35 -39 -87 2 0 vhcurveto",
                        "-2 -2 0 -26 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "26 hlineto",
                        "40 15 -13 -31 hvcurveto",
                        "",
                        "-153 vlineto",
                        "-34 -32 -59 -18 -54 0 rrcurveto",
                        "-178 -96 171 132 175 107 119 135 hvcurveto",
                        "145 0 53 -82 26 -86 rrcurveto",
                        "30 6 rlineto",
                        "-8 41 -7 38 -7 67 3 31 12 31 32 5 2 1 3 0 3 0 5 0 8 -1 7 0 rrcurveto",
                        "23 27 4 31 12 -8 24 -28 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni0194
     */
    public void testuni0194() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0194");
        assertNotNull(cs);
        assertEquals("uni0194", cs.getName());
        String[] text =
                {"116 -212 43 787 27 hstem", "192 48 61 73 vstem",
                        "488 574 rmoveto",
                        "-135 -361 -31 -84 -31 87 -125 356 rlineto",
                        "-2 8 -2 6 0 6 rrcurveto", "16 12 10 36 vhcurveto",
                        "27 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -89 -1 -35 -39 -78 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "33 0 26 -6 14 -40 rrcurveto", "189 -536 rlineto",
                        "-44 -90 -34 -19 0 -68 rrcurveto",
                        "-30 23 -41 54 71 34 64 64 vhcurveto",
                        "0 20 -12 63 -18 62 rrcurveto", "192 513 rlineto",
                        "13 35 19 9 41 0 rrcurveto", "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -52 -1 -35 -39 -73 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "18 hlineto", "34 21 -2 -15 hvcurveto",
                        "0 -7 -2 -8 -5 -12 rrcurveto", "-197 -594 rmoveto",
                        "10 -42 0 -15 0 -23 rrcurveto",
                        "-20 -5 -49 -28 -18 -10 6 27 vhcurveto",
                        "0 17 21 54 30 45 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0195
     */
    public void testuni0195() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0195");
        assertNotNull(cs);
        assertEquals("uni0195", cs.getName());
        String[] text =
                {
                        "213 -12 47 -34 27 367 47 256 -20 hstemhm",
                        "88 75 198 75 203 36 hintmask 01111110",
                        "361 133 rmoveto",
                        "162 vlineto",
                        "80 -22 20 -56 vhcurveto",
                        "-29 0 -43 -26 -48 -47 rrcurveto",
                        "-250 vlineto",
                        "-29 10 -15 33 vhcurveto",
                        "19 hlineto",
                        "4 4 -3 -5 hvcurveto",
                        "0 -19 -2 -2 rlineto",
                        "0 -68 2 -39 -36 -67 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto",
                        "5 2 3 5 vhcurveto",
                        "19 hlineto",
                        "34 9 15 29 hvcurveto",
                        "501 vlineto",
                        "57 -9 16 -20 vhcurveto",
                        "-33 -4 rlineto",
                        "-3 -2 3 2 hvcurveto",
                        "-2 25 rlineto",
                        "16 0 36 6 17 3 18 4 15 4 20 9 rrcurveto",
                        "22 -339 hlineto",
                        "67 67 59 16 39 0 rrcurveto",
                        "72 36 -55 -103 hvcurveto",
                        "-154 vlineto",
                        "hintmask 10111110",
                        "-66 28 -29 47 75 53 104 98 vhcurveto",
                        "0 96 -32 30 -29 5 -12 1 -30 5 0 31 rrcurveto",
                        "18 14 19 27 69 29 -73 -120 -183 -84 -78 -80 vhcurveto",
                        "-104 0 -45 53 -1 92 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0196
     */
    public void testuni0196() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0196");
        assertNotNull(cs);
        assertEquals("uni0196", cs.getName());
        String[] text =
                {"-201 -12 55 655 -20 hstem", "95 74 vstem", "95 87 rmoveto",
                        "486 vlineto", "57 -10 16 -20 vhcurveto",
                        "-22 -3 -10 -1 rlineto", "-3 -3 2 3 hvcurveto",
                        "-2 25 rlineto",
                        "16 0 37 6 17 3 18 4 14 4 20 9 rrcurveto",
                        "22 -563 hlineto", "-62 7 -30 27 vhcurveto",
                        "26 0 20 8 25 20 rrcurveto", "18 -17 rlineto",
                        "-38 -44 -41 -22 -45 0 rrcurveto",
                        "-46 -27 28 71 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0197
     */
    public void testuni0197() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0197");
        assertNotNull(cs);
        assertEquals("uni0197", cs.getName());
        String[] text =
                {"-208 1 27 301 39 250 27 hstem", "106 81 vstem",
                        "274 368 rmoveto", "-87 206 hlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-206 -87 -39 87 -258 vlineto",
                        "-28 -13 -15 -41 vhcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 30 hvcurveto", "258 87 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0198
     */
    public void testuni0198() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0198");
        assertNotNull(cs);
        assertEquals("uni0198", cs.getName());
        String[] text =
                {
                        "136 1 27 590 27 -21 34 hstemhm",
                        "106 81 hintmask 10110000",
                        "187 72 rmoveto",
                        "237 vlineto",
                        "27 -4 16 -11 22 -23 rrcurveto",
                        "182 -198 rlineto",
                        "20 -22 0 -26 0 -18 rrcurveto",
                        "0 -6 2 -2 rlineto",
                        "0 24 2 36 39 75 -2 0 vhcurveto",
                        "3 2 0 19 rlineto",
                        "5 -5 3 -4 vhcurveto",
                        "-7 hlineto",
                        "-29 0 -23 16 -26 29 rrcurveto",
                        "-239 260 rlineto",
                        "-8 9 -6 8 0 8 0 23 45 38 53 64 54 66 50 75 25 0 50 0 -13 -72 42 0 rrcurveto",
                        "18 18 16 20 33 -43 37 -61 hvcurveto",
                        "-67 0 -36 -74 -57 -70 -43 -53 -28 -30 -45 -45 -23 -22 -18 -12 -20 -5 rrcurveto",
                        "227 vlineto", "hintmask 11010000",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0199
     */
    public void testuni0199() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0199");
        assertNotNull(cs);
        assertEquals("uni0199", cs.getName());
        String[] text =
                {
                        "-22 1 27 374 27 239 29 hstem",
                        "88 75 vstem",
                        "88 496 rmoveto",
                        "-424 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 51 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-2 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "0 133 0 6 rlineto",
                        "30 5 14 -18 15 -22 rrcurveto",
                        "73 -103 rlineto",
                        "20 -29 3 -12 0 -12 rrcurveto",
                        "0 -17 3 -4 rlineto",
                        "0 27 2 35 39 51 -2 0 vhcurveto",
                        "2 3 0 18 rlineto",
                        "5 -6 3 -7 vhcurveto",
                        "-3 hlineto",
                        "-25 0 -32 18 -18 27 rrcurveto",
                        "-117 173 rlineto",
                        "-6 8 -1 9 6 7 rrcurveto",
                        "76 84 rlineto",
                        "25 26 44 22 27 0 rrcurveto",
                        "7 hlineto",
                        "5 6 3 5 hvcurveto",
                        "0 19 -4 2 rlineto",
                        "0 -54 -2 -39 -35 -48 2 0 vhcurveto",
                        "-3 -2 0 -19 rlineto",
                        "-4 3 -4 5 vhcurveto",
                        "4 hlineto",
                        "24 5 -8 -8 hvcurveto",
                        "0 -10 -4 -13 -16 -16 -54 -58 -33 -31 -44 -22 rrcurveto",
                        "290 vlineto",
                        "92 30 50 44 vhcurveto",
                        "8 0 5 -6 3 -10 5 -21 13 -23 24 0 rrcurveto",
                        "17 15 14 24 30 -53 21 -41 -106 -39 -99 -102 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni019A
     */
    public void testuni019A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni019A");
        assertNotNull(cs);
        assertEquals("uni019A", cs.getName());
        String[] text =
                {"-241 1 27 276 40 354 -20 hstem", "95 74 vstem",
                        "260 344 rmoveto", "-91 354 -22 hlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "-229 -91 -40 91 -232 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-32 -11 15 29 hvcurveto", "232 91 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni019B
     */
    public void testuni019B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni019B");
        assertNotNull(cs);
        assertEquals("uni019B", cs.getName());
        String[] text =
                {
                        "30 -12 66 583 61 hstem",
                        "348 616 rmoveto",
                        "-93 -54 -3 7 rlineto",
                        "-33 112 -61 17 -22 0 -32 0 -42 -23 -25 -38 rrcurveto",
                        "14 -25 rlineto",
                        "20 15 23 10 28 0 24 0 30 -19 34 -83 rrcurveto",
                        "-99 -58 17 -30 94 55 8 -24 15 -48 -233 -435 20 -8 79 22 157 353 68 -236 rlineto",
                        "28 -93 29 -45 50 0 37 0 33 49 19 61 rrcurveto",
                        "-23 13 rlineto",
                        "-20 -46 -21 -11 -21 0 -34 0 -21 52 -49 162 rrcurveto",
                        "-78 259 100 59 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni019C
     */
    public void testuni019C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni019C");
        assertNotNull(cs);
        assertEquals("uni019C", cs.getName());
        String[] text =
                {
                        "355 -12 48 582 27 hstemhm",
                        "101 81 211 80 209 81 -78 78 hintmask 11111000",
                        "182 574 rmoveto",
                        "28 10 16 36 vhcurveto",
                        "21 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -73 -1 -39 -42 -74 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "21 hlineto",
                        "35 11 -16 -28 hvcurveto",
                        "-424 vlineto",
                        "-89 21 -73 94 vhcurveto",
                        "59 0 63 26 62 60 7 -46 42 -40 59 0 67 0 56 37 51 49 rrcurveto",
                        "hintmask 11110100", "3 0 rlineto",
                        "hintmask 11111000", "-3 -86 16 0 rlineto",
                        "8 0 8 3 11 5 29 14 15 4 68 11 rrcurveto",
                        "-5 27 rlineto", "-19 -4 -12 -1 -14 0 rrcurveto",
                        "hintmask 11110100", "-15 -9 5 57 hvcurveto",
                        "hintmask 11111000", "465 vlineto",
                        "28 9 16 37 vhcurveto", "20 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -3 1 rlineto",
                        "0 -72 -1 -39 -42 -74 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "21 hlineto", "35 11 -16 -28 hvcurveto",
                        "-464 vlineto", "-51 -49 -46 -25 -38 0 rrcurveto",
                        "-41 -33 27 66 hvcurveto", "445 vlineto",
                        "28 10 16 37 vhcurveto", "20 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -3 1 rlineto",
                        "0 -73 -1 -38 -42 -74 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "21 hlineto", "35 11 -16 -28 hvcurveto",
                        "-425 vlineto",
                        "0 -15 0 -13 2 -13 -52 -52 -45 -20 -43 0 rrcurveto",
                        "-41 -32 25 66 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni019D
     */
    public void testuni019D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni019D");
        assertNotNull(cs);
        assertEquals("uni019D", cs.getName());
        String[] text =
                {"194 -187 30 775 28 hstem", "104 45 410 44 vstem",
                        "104 88 rmoveto", "-47 8 -198 -70 vhcurveto",
                        "-11 0 -6 4 -3 10 -6 20 -14 20 -14 0 rrcurveto",
                        "-8 -24 -3 -32 -20 32 -29 47 112 2 142 134 hvcurveto",
                        "350 vlineto", "34 2 15 8 vhcurveto",
                        "6 0 11 -11 17 -22 rrcurveto", "349 -441 rlineto",
                        "11 -15 13 -6 16 -1 rrcurveto", "14 7 10 19 hvcurveto",
                        "536 vlineto", "30 15 31 39 vhcurveto", "27 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -72 -1 -39 -36 -74 1 0 vhcurveto",
                        "-5 -1 0 -19 rlineto", "-5 9 -3 5 vhcurveto",
                        "26 hlineto", "41 13 -34 -27 hvcurveto",
                        "0 -379 1 -23 rlineto", "-11 -2 -4 -4 vhcurveto",
                        "-8 0 -16 28 -28 37 -130 176 -219 265 0 0 rrcurveto",
                        "-131 0 -2 -4 0 -16 rlineto", "-5 7 -3 5 vhcurveto",
                        "5 hlineto", "33 0 29 -42 6 -26 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni019E
     */
    public void testuni019E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni019E");
        assertNotNull(cs);
        assertEquals("uni019E", cs.getName());
        String[] text =
                {"8 -228 27 202 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 -156 rmoveto", "-29 -10 -16 -33 vhcurveto",
                        "-14 hlineto", "-5 -3 -2 -6 hvcurveto",
                        "0 -19 2 -1 rlineto", "0 63 1 35 39 69 -1 0 vhcurveto",
                        "2 1 0 19 rlineto", "6 -4 2 -5 vhcurveto",
                        "-19 hlineto", "-32 -11 16 29 hvcurveto",
                        "440 vlineto", "89 -19 69 -90 vhcurveto",
                        "-51 0 -48 -14 -64 -75 rrcurveto",
                        "-3 0 3 89 -15 0 rlineto",
                        "-7 0 -8 -3 -11 -5 -31 -17 -30 -5 -42 -7 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "14 8 -7 -54 hvcurveto", "-249 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 63 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto", "-14 hlineto",
                        "-33 -10 15 29 hvcurveto", "245 vlineto",
                        "51 60 38 17 44 0 rrcurveto",
                        "53 12 -33 -70 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni019F
     */
    public void testuni019F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni019F");
        assertNotNull(cs);
        assertEquals("uni019F", cs.getName());
        String[] text =
                {"197 -12 34 287 44 271 34 hstem", "37 92 441 92 vstem",
                        "570 309 rmoveto", "-179 -88 -108 -114 vhcurveto",
                        "-116 0 -116 105 -7 182 rrcurveto", "440 44 rmoveto",
                        "-440 hlineto",
                        "9 191 104 80 92 0 131 0 92 -92 12 -179 rrcurveto",
                        "93 -24 rmoveto", "-50 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01A2
     */
    public void testuni01A2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A2");
        assertNotNull(cs);
        assertEquals("uni01A2", cs.getName());
        String[] text =
                {"381 -141 27 102 34 581 38 -17 34 hstemhm",
                        "36 92 348 75 172 74 hintmask 11101110",
                        "551 60 rmoveto", "548 vlineto",
                        "0 0 46 -4 30 -1 25 -1 41 1 0 0 rrcurveto",
                        "20 10 -13 -57 hvcurveto", "-603 vlineto",
                        "-28 -10 -16 -33 vhcurveto", "-24 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-32 -11 16 28 hvcurveto", "hintmask 11011110",
                        "728 -22 vlineto", "hintmask 11101110",
                        "-20 -9 -14 -4 -18 -4 -81 -4 -42 4 -49 5 rrcurveto",
                        "-23 hlineto", "-14 -6 -12 -15 -12 -2 rrcurveto",
                        "hintmask 11011110", "-43 23 -50 12 -50 0 rrcurveto",
                        "-179 -132 -152 -196 -197 140 -125 172 hvcurveto",
                        "82 0 68 26 53 46 rrcurveto", "-217 564 rmoveto",
                        "53 0 49 -19 40 -36 rrcurveto", "-508 vlineto",
                        "-31 -25 -37 -14 -41 0 rrcurveto",
                        "-131 -108 113 192 210 110 87 96 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni01A3
     */
    public void testuni01A3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A3");
        assertNotNull(cs);
        assertEquals("uni01A3", cs.getName());
        String[] text =
                {
                        "189 -229 27 190 44 339 33 4 34 hstem",
                        "36 76 226 75 122 75 vstem",
                        "610 -158 rmoveto",
                        "600 -15 vlineto",
                        "-22 0 -38 -38 -72 0 -30 0 -71 1 -29 15 -28 14 -32 8 -34 0 rrcurveto",
                        "-122 -81 -103 -132 -93 54 -126 144 hvcurveto",
                        "57 0 77 30 45 31 rrcurveto", "310 vlineto",
                        "19 8 24 4 10 0 rrcurveto", "33 36 0 -44 hvcurveto",
                        "-485 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "-272 494 rmoveto", "-6 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01A4
     */
    public void testuni01A4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A4");
        assertNotNull(cs);
        assertEquals("uni01A4", cs.getName());
        String[] text =
                {
                        "83 1 27 254 33 303 28 -26 34 hstemhm",
                        "0 63 112 81 225 85 hintmask 11011110",
                        "175 71 rmoveto",
                        "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 94 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "221 vlineto",
                        "23 -7 18 -3 36 0 rrcurveto",
                        "182 51 119 85 59 -35 109 -185 hvcurveto",
                        "-26 0 -60 -2 -52 -3 rrcurveto",
                        "hintmask 11101110",
                        "-54 -3 -2 0 rlineto",
                        "-113 -2 -39 -85 0 -44 rrcurveto",
                        "-33 21 -8 15 20 15 14 20 vhcurveto",
                        "0 9 -2 7 -2 9 -3 8 -1 8 0 9 0 43 52 16 36 1 rrcurveto",
                        "18 6 -5 -38 hvcurveto", "81 31 rmoveto",
                        "hintmask 11011110", "19 7 44 7 19 0 rrcurveto",
                        "69 74 -25 -127 -108 -56 -45 -98 hvcurveto",
                        "-24 0 -36 2 -11 3 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01A5
     */
    public void testuni01A5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A5");
        assertNotNull(cs);
        assertEquals("uni01A5", cs.getName());
        String[] text =
                {
                        "-22 -229 27 190 34 374 46 226 29 hstem",
                        "75 74 215 78 vstem",
                        "149 526 rmoveto",
                        "92 30 50 45 vhcurveto",
                        "7 0 6 -6 2 -10 6 -21 13 -23 23 0 rrcurveto",
                        "17 15 14 24 30 -52 21 -41 -106 -39 -99 -102 hvcurveto",
                        "-654 vlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "168 vlineto",
                        "26 -14 28 -8 36 0 53 0 41 19 39 39 45 46 25 62 0 81 0 106 -64 101 -97 0 -32 0 -54 -10 -46 -70 rrcurveto",
                        "-3 0 3 71 rlineto", "-119 vmoveto", "-7 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01A6
     */
    public void testuni01A6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A6");
        assertNotNull(cs);
        assertEquals("uni01A6", cs.getName());
        String[] text =
                {"63 1 27 201 38 254 31 66 27 hstem", "106 81 229 81 vstem",
                        "497 388 rmoveto", "126 -114 36 -120 vhcurveto",
                        "-32 0 -24 1 -20 1 rrcurveto", "22 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-503 vlineto", "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 30 hvcurveto",
                        "158 vlineto", "67 0 30 -6 4 -7 rrcurveto",
                        "103 -233 rlineto",
                        "26 -47 44 -39 60 0 15 0 17 3 10 4 rrcurveto",
                        "-3 20 rlineto", "-40 -5 -31 39 -23 43 rrcurveto",
                        "-104 239 rlineto", "47 11 88 52 0 85 rrcurveto",
                        "-81 -1 rmoveto", "-102 -82 -18 -97 vhcurveto",
                        "-50 246 hlineto", "24 6 27 2 36 0 rrcurveto",
                        "60 82 -33 -101 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01A7
     */
    public void testuni01A7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A7");
        assertNotNull(cs);
        assertEquals("uni01A7", cs.getName());
        String[] text =
                {
                        "-22 5 19 600 34 hstem",
                        "44 81 237 69 vstem",
                        "97 631 rmoveto",
                        "55 8 -2 19 93 0 87 0 101 -67 0 -106 0 -117 -123 -50 -72 -27 -61 -24 -50 -27 0 -91 0 -81 58 -44 76 0 89 0 47 63 20 91 rrcurveto",
                        "30 -3 rlineto",
                        "-10 -76 -7 -48 -2 -51 -17 0 -9 5 -20 0 -24 0 -16 -17 -98 0 -115 0 -83 94 0 102 0 121 93 41 84 30 42 15 99 38 0 83 rrcurveto",
                        "61 -44 51 -66 vhcurveto",
                        "-99 0 -28 -84 -19 -66 rrcurveto", "-30 5 rlineto",
                        "9 49 8 50 4 53 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01A8
     */
    public void testuni01A8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A8");
        assertNotNull(cs);
        assertEquals("uni01A8", cs.getName());
        String[] text =
                {
                        "-130 -12 28 396 30 hstemhm",
                        "37 67 153 61 -13 23 hintmask 11101000",
                        "328 140 rmoveto",
                        "-23 1 rlineto",
                        "-2 -22 -9 -48 -25 -26 -11 -11 -29 -18 -38 0 -35 0 -52 28 0 49 0 43 24 29 80 34 rrcurveto",
                        "hintmask 11110000",
                        "72 32 38 21 0 75 0 67 -59 48 -79 0 -50 0 -35 -9 -32 -16 -5 -32 -4 -34 -1 -36 rrcurveto",
                        "24 -1 rlineto",
                        "21 82 61 16 21 0 38 0 39 -15 0 -55 0 -40 -19 -20 -54 -20 -81 -30 -66 -36 0 -80 0 -99 105 -29 47 0 35 0 29 4 26 7 rrcurveto",
                        "7 1 5 1 7 0 5 0 9 -1 9 -2 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni01A9
     */
    public void testuni01A9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01A9");
        assertNotNull(cs);
        assertEquals("uni01A9", cs.getName());
        String[] text =
                {"91 -1 44 560 43 -28 28 hstemhm", "hintmask 11000000",
                        "392 603 rmoveto", "139 callsubr", "hintmask 10100000",
                        "140 callsubr", "hintmask 11000000",
                        "-187 272 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01AA
     */
    public void testuni01AA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01AA");
        assertNotNull(cs);
        assertEquals("uni01AA", cs.getName());
        String[] text =
                {
                        "-196 -212 29 688 27 139 27 hstemhm",
                        "2 40 104 75 -47 47 hintmask 11110100",
                        "174 601 rmoveto",
                        "-35 -25 -34 -41 -42 -24 33 36 35 23 35 43 vhcurveto",
                        "45 21 -38 -32 hvcurveto",
                        "-172 hmoveto",
                        "-56 40 -40 66 vhcurveto",
                        "14 0 23 9 11 7 rrcurveto",
                        "hintmask 11111000",
                        "-6 -22 -4 -44 0 -26 rrcurveto",
                        "-385 vlineto",
                        "0 -100 1 -77 48 -45 23 -21 39 -13 19 0 rrcurveto",
                        "55 34 27 22 29 -18 6 -13 hvcurveto",
                        "-17 0 -8 -16 -6 -13 -5 -13 -6 -13 -13 0 -13 0 -14 8 -10 18 -11 16 -10 31 0 123 rrcurveto",
                        "501 vlineto",
                        "144 -41 40 -71 -60 -47 -37 -60 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni01AB
     */
    public void testuni01AB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01AB");
        assertNotNull(cs);
        assertEquals("uni01AB", cs.getName());
        String[] text =
                {"-199 9 -21 403 39 hstemhm",
                        "89 75 -58 58 -36 140 -29 29 hintmask 11010000",
                        "164 -145 rmoveto", "hintmask 11001000",
                        "29 75 45 90 hvcurveto",
                        "0 13 -2 13 -3 14 8 7 8 8 8 9 rrcurveto",
                        "-18 17 rlineto", "-26 -20 -20 -8 -26 0 rrcurveto",
                        "hintmask 11100000", "-27 -6 30 62 hvcurveto",
                        "256 94 vlineto", "10 14 4 9 hvcurveto", "20 vlineto",
                        "4 -3 2 -5 vhcurveto", "hintmask 11010000",
                        "-2 callsubr", "hintmask 11100100", "65 -304 hlineto",
                        "-71 27 -28 46 vhcurveto", "27 0 25 8 25 15 rrcurveto",
                        "-15 vlineto", "0 -24 -8 -24 -19 -11 rrcurveto",
                        "hintmask 11001000", "-26 -16 -58 17 0 -45 rrcurveto",
                        "-20 14 -18 22 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01AC
     */
    public void testuni01AC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01AC");
        assertNotNull(cs);
        assertEquals("uni01AC", cs.getName());
        String[] text =
                {"113 1 27 572 39 hstem", "0 71 220 81 vstem",
                        "71 500 rmoveto",
                        "0 9 -1 8 -3 8 -2 8 -2 9 0 8 0 43 52 6 37 1 rrcurveto",
                        "91 hlineto", "36 12 -9 -31 hvcurveto", "-488 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-27 hlineto",
                        "-39 -15 13 31 hvcurveto", "486 vlineto",
                        "33 11 9 36 vhcurveto", "80 hlineto",
                        "55 0 17 -11 20 -80 rrcurveto",
                        "23 5 -32 155 -27 -6 rlineto",
                        "1 -7 -1 -17 -15 0 rrcurveto", "-388 hlineto",
                        "-112 -3 -40 -85 0 -44 rrcurveto",
                        "-32 21 -9 16 20 14 14 20 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni01AD
     */
    public void testuni01AD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01AD");
        assertNotNull(cs);
        assertEquals("uni01AD", cs.getName());
        String[] text =
                {
                        "-197 -12 55 348 39 238 29 hstem",
                        "89 75 vstem",
                        "164 391 rmoveto",
                        "94 hlineto",
                        "10 14 4 9 hvcurveto",
                        "20 vlineto",
                        "4 -3 2 -5 vhcurveto",
                        "-110 116 hlineto",
                        "3 79 29 43 41 0 8 0 5 -6 3 -10 5 -21 13 -23 24 0 rrcurveto",
                        "17 15 14 24 30 -53 21 -41 hvcurveto",
                        "-105 0 -39 -97 -1 -101 rrcurveto", "-3 vlineto",
                        "-17 2 -49 -67 -2 -1 -1 -3 vhcurveto", "-31 vlineto",
                        "-3 1 -1 3 vhcurveto", "65 -304 hlineto",
                        "-71 27 -28 46 vhcurveto",
                        "46 0 40 22 39 44 rrcurveto", "-18 17 rlineto",
                        "-26 -20 -20 -8 -26 0 rrcurveto",
                        "-27 -6 30 62 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01AE
     */
    public void testuni01AE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01AE");
        assertNotNull(cs);
        assertEquals("uni01AE", cs.getName());
        String[] text =
                {"82 -198 31 767 39 hstem", "260 81 vstem", "341 hmoveto",
                        "558 vlineto", "33 12 9 36 vhcurveto", "79 hlineto",
                        "55 0 17 -11 20 -80 rrcurveto",
                        "23 5 -32 155 -27 -6 rlineto",
                        "1 -7 -1 -17 -15 0 rrcurveto", "-429 hlineto",
                        "-16 0 -1 16 1 8 rrcurveto",
                        "-26 6 -33 -155 23 -5 rlineto",
                        "20 80 17 11 56 0 rrcurveto", "91 hlineto",
                        "36 12 -9 -31 hvcurveto", "-560 vlineto",
                        "-158 100 -40 62 34 71 13 53 25 -17 5 -15 vhcurveto",
                        "-28 0 -8 -27 -2 -12 -3 -12 -3 -14 -28 0 rrcurveto",
                        "-49 -33 31 136 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B1
     */
    public void testuni01B1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B1");
        assertNotNull(cs);
        assertEquals("uni01B1", cs.getName());
        String[] text =
                {
                        "165 -12 34 565 59 hstemhm",
                        "24 26 -18 88 413 88 -13 26 hintmask 11011000",
                        "126 587 rmoveto",
                        "138 -232 -145 -173 -149 95 -132 200 197 97 148 133 177 -231 141 142 hvcurveto",
                        "hintmask 11000100",
                        "52 0 20 -8 4 -52 rrcurveto",
                        "26 0 -7 119 -70 0 rlineto",
                        "hintmask 11011000",
                        "-274 250 -152 -226 -129 -68 -117 -138 -130 -77 105 142 143 213 234 -206 hvcurveto",
                        "-96 0 rlineto", "hintmask 11100000",
                        "-7 -119 26 0 rlineto", "6 56 22 4 48 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B2
     */
    public void testuni01B2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B2");
        assertNotNull(cs);
        assertEquals("uni01B2", cs.getName());
        String[] text =
                {
                        "150 -12 36 594 27 -20 33 hstemhm",
                        "89 81 392 47 hintmask 11011000",
                        "89 220 rmoveto",
                        "354 vlineto",
                        "30 -15 14 -39 vhcurveto",
                        "-27 hlineto",
                        "-4 -4 3 5 hvcurveto",
                        "0 19 2 1 rlineto",
                        "0 87 -1 39 36 93 1 0 vhcurveto",
                        "2 -1 0 -19 rlineto",
                        "-5 -3 -3 -5 vhcurveto",
                        "-26 hlineto",
                        "-41 -14 -16 -28 hvcurveto",
                        "-325 vlineto",
                        "-122 20 -103 130 124 118 113 216 vhcurveto",
                        "hintmask 10111000",
                        "51 -9 221 -95 vhcurveto",
                        "-18 0 -12 -7 -3 -17 -1 -8 -7 -34 -31 0 rrcurveto",
                        "-12 -21 7 26 53 72 13 34 110 40 -133 -153 -330 -189 -54 -100 hvcurveto",
                        "-128 -103 44 188 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B3
     */
    public void testuni01B3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B3");
        assertNotNull(cs);
        assertEquals("uni01B3", cs.getName());
        String[] text =
                {
                        "140 1 27 590 27 -21 35 hstemhm",
                        "0 61 260 80 hintmask 10111000",
                        "231 435 rmoveto",
                        "-62 108 -47 81 -35 0 -8 0 -20 -4 0 -17 0 -7 2 -8 0 -10 rrcurveto",
                        "-17 -6 -19 -24 -22 -9 19 14 33 46 51 70 vhcurveto",
                        "59 0 53 -60 80 -133 rrcurveto",
                        "74 -125 127 235 rlineto", "8 14 3 9 0 5 rrcurveto",
                        "hintmask 11011000", "11 -5 3 -20 vhcurveto",
                        "-30 hlineto", "-5 -1 4 3 hvcurveto",
                        "0 20 2 1 rlineto", "0 79 -1 13 9 78 1 0 vhcurveto",
                        "2 -1 0 -20 rlineto", "-5 -3 -2 -7 vhcurveto",
                        "-21 hlineto", "-30 0 -13 -12 -18 -32 rrcurveto",
                        "-149 -281 0 -221 rlineto", "-31 16 -13 39 vhcurveto",
                        "26 hlineto", "5 4 -3 -5 hvcurveto",
                        "0 -19 -2 -2 rlineto",
                        "0 -87 2 -39 -36 -93 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto", "5 3 3 5 vhcurveto", "26 hlineto",
                        "41 14 16 28 hvcurveto", "209 vlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni01B4
     */
    public void testuni01B4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B4");
        assertNotNull(cs);
        assertEquals("uni01B4", cs.getName());
        String[] text =
                {
                        "120 -215 55 562 27 63 65 hstem",
                        "438 391 rmoveto",
                        "24 54 24 47 32 0 8 0 12 -2 4 -5 10 -10 17 -4 14 0 rrcurveto",
                        "21 18 19 20 24 -16 23 -55 hvcurveto",
                        "-64 0 -56 -79 -36 -86 rrcurveto",
                        "-124 -298 -107 263 rlineto",
                        "-5 11 -3 11 0 8 0 10 7 4 20 1 rrcurveto",
                        "18 hlineto",
                        "4 6 3 5 hvcurveto",
                        "0 18 -2 3 rlineto",
                        "0 -72 -2 -46 -30 -49 2 0 vhcurveto",
                        "-2 -2 0 -20 rlineto",
                        "-4 4 -3 6 vhcurveto",
                        "7 hlineto",
                        "33 0 15 -16 7 -16 rrcurveto",
                        "149 -370 -26 -66 rlineto",
                        "-23 -57 -16 -37 -25 0 -12 0 -7 7 -9 10 -7 8 -11 6 -11 0 rrcurveto",
                        "-16 -25 -9 -29 -37 40 -11 19 hvcurveto",
                        "75 0 32 70 32 71 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B5
     */
    public void testuni01B5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B5");
        assertNotNull(cs);
        assertEquals("uni01B5", cs.getName());
        String[] text =
                {
                        "103 0 39 264 39 264 40 hstem",
                        "551 hmoveto",
                        "5 56 10 57 12 52 rrcurveto",
                        "-31 5 rlineto",
                        "-20 -72 -29 -59 -76 0 rrcurveto",
                        "-233 hlineto",
                        "-17 -8 4 9 hvcurveto",
                        "0 5 3 6 5 9 rrcurveto",
                        "167 231 189 0 0 39 -160 0 179 249 rlineto",
                        "20 28 3 10 0 11 0 7 -3 3 -19 0 -12 0 -20 -1 -31 -3 rrcurveto",
                        "-336 hlineto",
                        "-47 0 3 9 -37 3 -4 -54 -10 -72 -8 -41 rrcurveto",
                        "30 -5 rlineto", "22 69 17 51 75 0 rrcurveto",
                        "246 hlineto", "7 3 -2 -6 hvcurveto",
                        "0 -5 -3 -7 -5 -7 rrcurveto",
                        "-170 -237 -163 0 0 -39 135 0 -191 -265 rlineto",
                        "-6 -8 -2 -8 0 -7 rrcurveto", "-10 5 -5 14 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B6
     */
    public void testuni01B6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B6");
        assertNotNull(cs);
        assertEquals("uni01B6", cs.getName());
        String[] text =
                {
                        "-90 0 39 161 34 157 39 hstem",
                        "106 430 rmoveto",
                        "-15 0 -9 6 -2 6 rrcurveto",
                        "-25 hlineto",
                        "-1 -45 -6 -44 -8 -49 rrcurveto",
                        "26 -3 rlineto",
                        "20 73 34 17 30 0 rrcurveto",
                        "135 0 -106 -157 -110 0 0 -34 87 0 -114 -168 rlineto",
                        "-8 -12 -1 -3 0 -5 rrcurveto",
                        "-7 8 -5 15 vhcurveto",
                        "303 hlineto",
                        "5 31 11 47 17 58 rrcurveto",
                        "-27 7 -13 -29 rlineto",
                        "-24 -53 -16 -22 -59 0 rrcurveto",
                        "-129 0 109 161 111 0 0 34 -88 0 104 153 rlineto",
                        "22 33 0 5 0 4 0 5 -8 1 -5 0 -3 0 -35 -5 -29 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B7
     */
    public void testuni01B7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B7");
        assertNotNull(cs);
        assertEquals("uni01B7", cs.getName());
        String[] text =
                {"107 -211 37 780 40 hstem", "64 26 385 89 vstem",
                        "167 646 rmoveto", "146 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B8
     */
    public void testuni01B8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B8");
        assertNotNull(cs);
        assertEquals("uni01B8", cs.getName());
        String[] text =
                {
                        "107 -211 37 780 40 hstem",
                        "46 90 385 26 vstem",
                        "443 646 rmoveto",
                        "-355 hlineto",
                        "-20 -7 -6 -8 hvcurveto",
                        "0 -10 8 -17 8 -14 rrcurveto",
                        "167 -303 rlineto",
                        "-135 -27 -63 -99 0 -111 rrcurveto",
                        "-139 133 -123 160 80 150 35 66 23 -10 27 -35 vhcurveto",
                        "-26 0 -28 -14 -13 -21 -32 -49 -50 -30 -55 0 rrcurveto",
                        "-88 -96 121 95 159 114 54 69 hvcurveto",
                        "15 0 12 0 14 -3 rrcurveto", "-195 354 249 0 rlineto",
                        "74 -1 29 -89 4 -45 rrcurveto", "26 2 -21 194 rlineto",
                        "-24 -4 -34 -17 -25 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01B9
     */
    public void testuni01B9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01B9");
        assertNotNull(cs);
        assertEquals("uni01B9", cs.getName());
        String[] text =
                {
                        "-53 -229 29 591 39 hstem",
                        "23 75 vstem",
                        "317 430 rmoveto",
                        "12 9 1 16 hvcurveto",
                        "22 4 32 -152 -27 -5 rlineto",
                        "-18 84 -30 13 -30 0 rrcurveto",
                        "-142 0 157 -285 rlineto",
                        "-22 5 -19 2 -18 0 rrcurveto",
                        "-78 -67 -63 -85 -118 88 -47 49 hvcurveto",
                        "41 0 28 23 12 23 13 21 16 7 23 0 rrcurveto",
                        "21 8 -15 -16 -32 -62 -40 -91 -144 -77 99 96 hvcurveto",
                        "0 106 63 70 118 10 rrcurveto", "-131 236 rlineto",
                        "-6 13 -4 10 0 6 rrcurveto", "9 6 4 18 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01BA
     */
    public void testuni01BA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01BA");
        assertNotNull(cs);
        assertEquals("uni01BA", cs.getName());
        String[] text =
                {
                        "-53 184 33 171 42 hstem",
                        "136 66 122 78 vstem",
                        "260 217 rmoveto",
                        "119 171 rlineto",
                        "11 10 6 12 0 12 rrcurveto",
                        "5 -5 3 -9 vhcurveto",
                        "-267 hlineto",
                        "-31 0 11 7 -35 5 rrcurveto",
                        "-16 -123 20 -2 rlineto",
                        "12 64 11 7 42 0 rrcurveto",
                        "178 0 -153 -218 rlineto",
                        "22 5 30 9 18 0 85 0 15 -85 0 -53 0 -121 -54 -1 -40 -26 -57 -37 -37 -29 0 -56 rrcurveto",
                        "-25 19 -12 17 15 22 17 27 vhcurveto",
                        "0 10 -7 11 0 15 0 6 1 19 38 25 38 24 123 21 0 140 0 94 -56 65 -86 4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01BB
     */
    public void testuni01BB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01BB");
        assertNotNull(cs);
        assertEquals("uni01BB", cs.getName());
        String[] text =
                {
                        "-63 0 58 186 39 264 31 hstem",
                        "57 68 183 77 vstem",
                        "361 283 rmoveto",
                        "-54 hlineto",
                        "46 45 32 38 0 68 rrcurveto",
                        "115 -90 29 -77 -105 -55 -78 -57 -20 16 -17 22 16 20 10 26 vhcurveto",
                        "0 8 -2 7 -2 7 -2 7 -2 8 0 8 rrcurveto",
                        "24 19 36 69 34 62 -26 -91 vhcurveto",
                        "0 -55 -19 -42 -45 -50 rrcurveto",
                        "-139 -39 102 hlineto", "-48 -50 rlineto",
                        "-93 -95 -9 -43 0 -56 rrcurveto",
                        "309 0 20 126 -25 4 rlineto",
                        "-14 -55 -18 -17 -34 0 rrcurveto", "-170 hlineto",
                        "0 47 67 66 5 5 rrcurveto", "70 68 94 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01BC
     */
    public void testuni01BC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01BC");
        assertNotNull(cs);
        assertEquals("uni01BC", cs.getName());
        String[] text =
                {
                        "-72 -12 34 312 46 133 60 hstem",
                        "305 70 vstem",
                        "305 180 rmoveto",
                        "-94 -49 -64 -76 vhcurveto",
                        "-32 0 -15 22 -10 19 -9 16 -12 12 -20 0 rrcurveto",
                        "",
                        "-18 -16 -13 -19 -39 78 -32 57 102 90 72 136 90 -64 94 -134 hvcurveto",
                        "-51 -2 16 135 196 0 0 2 8 58 -324 0 78 -55 -22 -195 rlineto",
                        "27 10 22 1 28 0 rrcurveto", "64 86 -60 -94 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01BD
     */
    public void testuni01BD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01BD");
        assertNotNull(cs);
        assertEquals("uni01BD", cs.getName());
        String[] text =
                {
                        "-72 -12 34 246 44 58 60 hstem",
                        "297 70 vstem",
                        "297 138 rmoveto",
                        "-82 -47 -34 -59 vhcurveto",
                        "-32 0 -26 19 -11 20 -9 16 -11 14 -20 0 rrcurveto",
                        "-18 -16 -13 -19 -39 89 -32 57 130 43 90 76 76 -56 82 -99 hvcurveto",
                        "-22 0 -51 -4 -14 -1 rrcurveto",
                        "17 63 196 0 0 2 8 58 -305 0 59 -55 -34 -121 rlineto",
                        "30 9 62 5 28 0 rrcurveto", "64 47 -70 -60 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01BE
     */
    public void testuni01BE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01BE");
        assertNotNull(cs);
        assertEquals("uni01BE", cs.getName());
        String[] text =
                {
                        "-133 -12 28 375 39 hstemhm",
                        "74 74 -54 57 121 68 hintmask 11101000",
                        "74 391 rmoveto",
                        "-50 hlineto",
                        "-3 -1 1 3 hvcurveto",
                        "31 vlineto",
                        "3 1 1 2 vhcurveto",
                        "hintmask 11011000",
                        "57 1 14 38 0 76 rrcurveto",
                        "0 19 57 20 0 -154 110 0 rlineto",
                        "5 3 -2 -4 hvcurveto",
                        "-20 vlineto",
                        "-9 -14 -4 -9 vhcurveto",
                        "hintmask 11101000",
                        "-98 -49 hlineto",
                        "0 -40 14 -20 54 -20 81 -30 43 -36 0 -80 0 -99 -113 -29 -48 0 -34 0 -38 4 -25 7 -7 1 -5 1 -7 0 -5 0 -9 -1 -9 -2 rrcurveto",
                        "-7 142 27 1 rlineto",
                        "1 -22 9 -48 26 -26 10 -11 34 -18 37 0 35 0 60 28 0 49 0 43 0 29 -80 34 -72 32 -46 21 0 75 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01BF
     */
    public void testuni01BF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01BF");
        assertNotNull(cs);
        assertEquals("uni01BF", cs.getName());
        String[] text =
                {
                        "19 399 43 hstem",
                        "79 75 249 83 vstem",
                        "154 353 rmoveto",
                        "3 89 -18 0 rlineto",
                        "-14 0 -13 -11 -33 -12 -19 -6 -33 -6 -17 -2 rrcurveto",
                        "5 -28 rlineto",
                        "17 4 11 1 14 0 rrcurveto",
                        "13 9 -7 -38 hvcurveto",
                        "-467 vlineto",
                        "0 -33 -10 -18 -30 -9 rrcurveto",
                        "-17 -5 rlineto",
                        "-5 -1 -1 -3 1 -5 rrcurveto",
                        "4 -25 133 36 0 106 rlineto",
                        "205 112 127 114 0 148 0 72 -31 83 -125 0 -52 0 -62 -33 -62 -56 rrcurveto",
                        "151 46 rmoveto", "73 25 -58 -90 hvcurveto",
                        "0 -115 -102 -103 -147 -84 rrcurveto", "369 vlineto",
                        "74 60 38 21 39 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C0
     */
    public void testuni01C0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C0");
        assertNotNull(cs);
        assertEquals("uni01C0", cs.getName());
        String[] text =
                {"-315 21 -21 698 -20 hstem", "73 40 vstem", "113 hmoveto",
                        "698 -40 -698 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C1
     */
    public void testuni01C1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C1");
        assertNotNull(cs);
        assertEquals("uni01C1", cs.getName());
        String[] text =
                {"-223 21 -21 698 -20 hstem", "61 39 63 39 vstem",
                        "202 hmoveto", "698 -39 -698 vlineto", "-63 hmoveto",
                        "698 -39 -698 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C2
     */
    public void testuni01C2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C2");
        assertNotNull(cs);
        assertEquals("uni01C2", cs.getName());
        String[] text =
                {
                        "-169 21 -21 289 39 63 39 268 -20 hstem",
                        "137 39 vstem",
                        "291 328 rmoveto",
                        "-115 63 115 39 -115 268 -39 -268 -112 -39 112 -63 -112 -39 112 hlineto",
                        "-289 39 289 115 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C3
     */
    public void testuni01C3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C3");
        assertNotNull(cs);
        assertEquals("uni01C3", cs.getName());
        String[] text =
                {"-274 -12 106 564 -20 hstem", "60 106 vstem", "60 41 rmoveto",
                        "-107 callsubr", "53 617 rmoveto", "-106 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C4
     */
    public void testuni01C4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C4");
        assertNotNull(cs);
        assertEquals("uni01C4", cs.getName());
        String[] text =
                {
                        "765 -1 29 -29 34 -33 39 567 40 -33 33 -28 28 74 -21 hstemhm",
                        "106 81 375 92 hintmask 0100101110000000",
                        "187 72 rmoveto",
                        "-70 callsubr",
                        "-170 -53 rmoveto",
                        "-69 callsubr",
                        "hintmask 1000011110000000",
                        "-68 callsubr",
                        "hintmask 0011001110000000",
                        "1197 -19 rmoveto",
                        "4 56 11 57 11 52 rrcurveto",
                        "-30 5 rlineto",
                        "-20 -72 -29 -59 -77 0 rrcurveto",
                        "-232 hlineto",
                        "-17 -9 4 9 hvcurveto",
                        "0 5 3 6 6 9 rrcurveto",
                        "374 519 rlineto",
                        "20 28 4 10 0 11 0 7 -3 3 -19 0 -13 0 -19 -1 -31 -3 rrcurveto",
                        "-336 hlineto",
                        "-47 0 3 9 -37 3 -4 -54 -10 -72 -8 -41 rrcurveto",
                        "30 -5 rlineto", "21 69 18 51 75 0 rrcurveto",
                        "245 hlineto", "", "7 4 -2 -6 hvcurveto",
                        "0 -5 -3 -7 -6 -7 rrcurveto", "-388 -541 rlineto",
                        "-6 -8 -3 -8 0 -7 rrcurveto", "-10 5 -5 14 vhcurveto",
                        "221 699 rmoveto", "94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C5
     */
    public void testuni01C5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C5");
        assertNotNull(cs);
        assertEquals("uni01C5", cs.getName());
        String[] text =
                {
                        "570 -1 29 -29 34 -33 39 352 39 183 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01011011",
                        "187 72 rmoveto",
                        "-70 callsubr",
                        "-170 -53 rmoveto",
                        "-69 callsubr",
                        "hintmask 10010111",
                        "-68 callsubr",
                        "750 411 rmoveto",
                        "-16 0 -9 6 -2 6 rrcurveto",
                        "-25 hlineto",
                        "-1 -45 -6 -44 -8 -49 rrcurveto",
                        "27 -3 rlineto",
                        "20 73 33 17 31 0 rrcurveto",
                        "134 0 -243 -359 rlineto",
                        "-8 -12 -1 -3 0 -5 rrcurveto",
                        "hintmask 00110011",
                        "-7 8 -5 15 vhcurveto",
                        "304 hlineto",
                        "4 31 11 47 17 58 rrcurveto",
                        "-27 7 -13 -29 rlineto",
                        "-24 -53 -16 -22 -58 0 rrcurveto",
                        "-130 0 236 348 rlineto",
                        "22 33 0 5 0 4 0 5 -8 1 -5 0 -3 0 -35 -5 -29 0 rrcurveto",
                        "-113 72 rmoveto",
                        "49 hlineto",
                        "30 46 38 44 34 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -33 -25 -37 -38 -35 36 -32 25 -39 29 rrcurveto",
                        "-20 -13 rlineto", "34 -38 38 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C6
     */
    public void testuni01C6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C6");
        assertNotNull(cs);
        assertEquals("uni01C6", cs.getName());
        String[] text =
                {
                        "396 -12 42 -30 39 -12 28 336 39 -23 35 256 -20 hstemhm",
                        "34 78 222 75 hintmask 10000111",
                        "336 57 rmoveto",
                        "-27 callsubr",
                        "hintmask 00101111",
                        "-26 callsubr",
                        "hintmask 10000111",
                        "-25 callsubr",
                        "-2 32 rmoveto",
                        "147 callsubr",
                        "hintmask 10001111",
                        "148 callsubr",
                        "hintmask 00010111",
                        "258 82 rmoveto",
                        "hintmask 00001111",
                        "-15 0 -10 6 -2 6 rrcurveto",
                        "-24 hlineto",
                        "-1 -45 -6 -44 -9 -49 rrcurveto",
                        "27 -3 rlineto",
                        "hintmask 01010111",
                        "20 73 34 17 30 0 rrcurveto",
                        "135 0 -243 -359 rlineto",
                        "-8 -12 -1 -3 0 -5 rrcurveto",
                        "-7 7 -5 16 vhcurveto",
                        "303 hlineto",
                        "5 31 10 47 17 58 rrcurveto",
                        "-26 7 -13 -29 rlineto",
                        "-24 -53 -17 -22 -58 0 rrcurveto",
                        "-129 0 236 348 rlineto",
                        "22 33 0 5 0 4 0 5 -8 1 -6 0 -2 0 -35 -5 -29 0 rrcurveto",
                        "-114 72 rmoveto",
                        "50 hlineto",
                        "29 46 39 44 34 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -32 25 -39 29 rrcurveto",
                        "-21 -13 rlineto", "35 -38 38 -45 28 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C7
     */
    public void testuni01C7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C7");
        assertNotNull(cs);
        assertEquals("uni01C7", cs.getName());
        String[] text =
                {"267 -196 31 164 29 -28 39 579 27 hstemhm",
                        "106 81 408 81 hintmask 10111100", "349 39 rmoveto",
                        "-55 callsubr", "hintmask 11011100", "-54 callsubr",
                        "hintmask 10111100", "-53 callsubr",
                        "164 -204 rmoveto",
                        "-28 0 -3 15 -3 11 -2 12 -8 28 -28 0 rrcurveto",
                        "-15 -17 -6 -24 -54 71 -13 34 hvcurveto",
                        "29 0 33 17 27 26 56 60 17 66 0 117 rrcurveto",
                        "487 vlineto", "27 13 16 41 vhcurveto", "17 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -84 -2 -35 -39 -104 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "36 hlineto", "39 22 -28 -31 hvcurveto",
                        "-493 vlineto", "-181 -33 -52 -49 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C8
     */
    public void testuni01C8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C8");
        assertNotNull(cs);
        assertEquals("uni01C8", cs.getName());
        String[] text =
                {"270 -208 29 178 29 -28 39 489 96 -6 27 hstemhm",
                        "106 81 432 96 -75 75 hintmask 10101100",
                        "349 39 rmoveto", "-55 callsubr", "hintmask 11000100",
                        "-54 callsubr", "hintmask 10101100", "-53 callsubr",
                        "217 -218 rmoveto",
                        "-7 0 -6 6 -3 10 -5 21 -13 23 -24 0 rrcurveto",
                        "-17 -14 -13 -25 -30 52 -21 41 hvcurveto",
                        "24 0 30 12 26 27 rrcurveto", "hintmask 10000101",
                        "56 55 9 55 0 131 rrcurveto", "375 -15 vlineto",
                        "-10 0 -4 -3 -7 -4 -12 -6 -23 -12 -73 -12 rrcurveto",
                        "5 -28 rlineto", "17 4 11 1 14 0 rrcurveto",
                        "13 9 -9 -52 hvcurveto", "-284 vlineto",
                        "-142 -30 -79 -44 vhcurveto", "hintmask 10010110",
                        "53 755 rmoveto", "149 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01C9
     */
    public void testuni01C9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01C9");
        assertNotNull(cs);
        assertEquals("uni01C9", cs.getName());
        String[] text =
                {"-17 -213 29 185 27 414 -20 101 96 79 -20 hstemhm",
                        "95 74 164 95 -74 74 hintmask 11111101",
                        "279 -184 rmoveto",
                        "-7 0 -6 6 -2 11 -6 21 -13 22 -23 0 rrcurveto",
                        "-17 -15 -13 -25 -30 52 -21 41 hvcurveto",
                        "25 0 29 12 26 27 56 55 9 56 0 130 rrcurveto",
                        "375 -15 vlineto",
                        "-9 0 -5 -3 -7 -3 -12 -7 -23 -12 -73 -12 rrcurveto",
                        "6 -28 rlineto", "16 4 12 1 13 0 rrcurveto",
                        "14 9 -8 -53 hvcurveto", "-284 vlineto",
                        "-141 -30 -80 -45 vhcurveto", "hintmask 11111110",
                        "54 755 rmoveto", "-17 callsubr", "-238 -499 rmoveto",
                        "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01CA
     */
    public void testuni01CA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01CA");
        assertNotNull(cs);
        assertEquals("uni01CA", cs.getName());
        String[] text =
                {"517 -198 31 168 27 590 28 hstem",
                        "104 45 409 45 242 81 vstem", "603 557 rmoveto",
                        "-51 callsubr", "160 -188 rmoveto",
                        "-28 0 -3 14 -3 12 -2 12 -8 27 -28 0 rrcurveto",
                        "-15 -17 -5 -25 -53 71 -13 34 hvcurveto",
                        "29 0 33 17 27 26 56 60 17 65 0 117 rrcurveto",
                        "487 vlineto", "28 13 16 41 vhcurveto", "17 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -84 -1 -35 -39 -104 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "36 hlineto", "39 22 -29 -30 hvcurveto",
                        "-494 vlineto", "-180 -33 -52 -49 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01CB
     */
    public void testuni01CB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01CB");
        assertNotNull(cs);
        assertEquals("uni01CB", cs.getName());
        String[] text =
                {
                        "418 -213 29 185 27 414 -20 101 96 -1 28 hstemhm",
                        "104 45 409 45 164 96 -75 75 hintmask 1110111000000000",
                        "603 557 rmoveto", "-51 callsubr", "111 -205 rmoveto",
                        "-7 0 -6 6 -3 11 -5 21 -13 22 -24 0 rrcurveto",
                        "-17 -14 -13 -25 -30 52 -21 41 hvcurveto",
                        "24 0 29 12 27 27 rrcurveto",
                        "hintmask 1110011010000000",
                        "56 55 9 56 0 130 rrcurveto", "375 -15 vlineto",
                        "-10 0 -4 -3 -7 -3 -13 -7 -22 -12 -73 -12 rrcurveto",
                        "5 -28 rlineto", "17 4 11 1 14 0 rrcurveto",
                        "13 9 -8 -53 hvcurveto", "-284 vlineto",
                        "-141 -30 -80 -44 vhcurveto",
                        "hintmask 1111011100000000", "53 755 rmoveto",
                        "149 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01CC
     */
    public void testuni01CC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01CC");
        assertNotNull(cs);
        assertEquals("uni01CC", cs.getName());
        String[] text =
                {"253 -213 29 185 27 366 48 81 96 hstemhm",
                        "91 75 198 74 164 96 -75 75 hintmask 11111100",
                        "364 72 rmoveto", "-11 callsubr", "185 -475 rmoveto",
                        "-7 0 -6 6 -3 11 -5 21 -13 22 -24 0 rrcurveto",
                        "-17 -15 -13 -25 -30 53 -21 41 hvcurveto",
                        "24 0 29 12 27 27 rrcurveto", "hintmask 11111101",
                        "55 55 10 56 0 130 rrcurveto", "375 -15 vlineto",
                        "-10 0 -4 -3 -7 -3 -13 -7 -22 -12 -73 -12 rrcurveto",
                        "5 -28 rlineto", "17 4 11 1 14 0 rrcurveto",
                        "13 9 -8 -53 hvcurveto", "-284 vlineto",
                        "-141 -30 -80 -44 vhcurveto", "hintmask 11111110",
                        "53 755 rmoveto", "149 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01CD
     */
    public void testuni01CD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01CD");
        assertNotNull(cs);
        assertEquals("uni01CD", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 81 -21 hstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-102 415 rmoveto",
                        "43 hlineto",
                        "30 33 32 33 38 28 rrcurveto",
                        "-15 20 rlineto",
                        "-38 -16 -32 -18 -37 -27 -33 25 -34 19 -39 17 rrcurveto",
                        "-16 -20 rlineto", "36 -27 35 -31 30 -36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01CE
     */
    public void testuni01CE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01CE");
        assertNotNull(cs);
        assertEquals("uni01CE", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10101110",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01110110",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "-102 258 rmoveto", "150 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01CF
     */
    public void testuni01CF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01CF");
        assertNotNull(cs);
        assertEquals("uni01CF", cs.getName());
        String[] text =
                {"-208 1 27 590 27 74 -21 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "-65 627 rmoveto",
                        "111 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D0
     */
    public void testuni01D0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D0");
        assertNotNull(cs);
        assertEquals("uni01D0", cs.getName());
        String[] text =
                {
                        "-237 1 27 414 -20 hstem",
                        "99 74 vstem",
                        "173 72 rmoveto",
                        "-18 callsubr",
                        "-68 429 rmoveto",
                        "50 hlineto",
                        "29 46 38 44 35 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -33 25 -39 29 rrcurveto",
                        "-20 -13 rlineto", "35 -38 37 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D1
     */
    public void testuni01D1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D1");
        assertNotNull(cs);
        assertEquals("uni01D1", cs.getName());
        String[] text =
                {"197 -12 34 602 34 61 -21 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-8 74 rmoveto", "94 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D2
     */
    public void testuni01D2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D2");
        assertNotNull(cs);
        assertEquals("uni01D2", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 hstem",
                        "34 79 254 79 vstem",
                        "230 409 rmoveto",
                        "-10 callsubr",
                        "-196 -204 rmoveto",
                        "-9 callsubr",
                        "181 297 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 14 rlineto",
                        "-37 -27 -34 -26 -37 -38 -34 36 -33 26 -39 29 rrcurveto",
                        "-20 -14 rlineto", "34 -37 38 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D3
     */
    public void testuni01D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D3");
        assertNotNull(cs);
        assertEquals("uni01D3", cs.getName());
        String[] text =
                {"160 -12 41 589 27 74 -21 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "5 710 rmoveto",
                        "94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D4
     */
    public void testuni01D4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D4");
        assertNotNull(cs);
        assertEquals("uni01D4", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 hstemhm",
                        "88 75 191 75 hintmask 10111000",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 01111000",
                        "1 callsubr",
                        "-200 386 rmoveto",
                        "49 hlineto",
                        "30 46 38 45 34 39 rrcurveto",
                        "-19 14 rlineto",
                        "-37 -27 -33 -26 -38 -38 -34 36 -32 26 -39 29 rrcurveto",
                        "-21 -14 rlineto", "35 -37 38 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D5
     */
    public void testuni01D5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D5");
        assertNotNull(cs);
        assertEquals("uni01D5", cs.getName());
        String[] text =
                {"160 -12 41 589 27 -4 91 24 44 hstemhm",
                        "89 80 63 89 55 90 60 46 hintmask 10011111",
                        "457 756 rmoveto", "105 callsubr", "108 -768 rmoveto",
                        "151 callsubr", "hintmask 11011111", "152 callsubr",
                        "56 699 rmoveto", "hintmask 10111111", "50 callsubr",
                        "-144 hmoveto", "51 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D6
     */
    public void testuni01D6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D6");
        assertNotNull(cs);
        assertEquals("uni01D6", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 98 91 36 44 hstemhm",
                        "88 75 -35 91 70 90 -25 75 hintmask 1011110010000000",
                        "429 116 rmoveto", "0 callsubr",
                        "hintmask 0111110010000000", "1 callsubr",
                        "hintmask 0011101000000000", "-301 456 rmoveto",
                        "56 callsubr", "hintmask 0011100100000000",
                        "161 hmoveto", "57 callsubr", "84 82 rmoveto",
                        "12 11 17 12 7 -4 8 -10 hvcurveto", "-244 hlineto",
                        "-12 -10 -18 -12 hvcurveto",
                        "hintmask 0011101000000000", "-6 3 -8 9 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D7
     */
    public void testuni01D7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D7");
        assertNotNull(cs);
        assertEquals("uni01D7", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 -4 91 hstemhm",
                        "89 80 63 89 55 90 60 46 hintmask 10011110",
                        "423 842 rmoveto",
                        "-95 -76 rlineto",
                        "-10 -8 -2 -5 0 -6 0 -8 4 -5 8 0 6 0 10 3 16 8 rrcurveto",
                        "112 50 rlineto", "-152 -807 rmoveto", "151 callsubr",
                        "hintmask 11011110", "152 callsubr", "56 699 rmoveto",
                        "hintmask 10111110", "50 callsubr", "-144 hmoveto",
                        "51 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D8
     */
    public void testuni01D8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D8");
        assertNotNull(cs);
        assertEquals("uni01D8", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 98 91 hstemhm",
                        "88 75 -35 91 70 90 -25 75 hintmask 10111001",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 01111001",
                        "1 callsubr",
                        "hintmask 00110100",
                        "-301 456 rmoveto",
                        "56 callsubr",
                        "hintmask 00110010",
                        "161 hmoveto",
                        "57 callsubr",
                        "23 175 rmoveto",
                        "-63 -113 rlineto",
                        "-5 -9 0 -7 0 -5 0 -6 6 -4 6 0 5 0 5 4 13 13 rrcurveto",
                        "92 98 -2 10 rlineto",
                        "-2 1 -2 1 -2 2 -6 7 -10 10 -23 0 -4 0 -5 -1 -3 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01D9
     */
    public void testuni01D9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01D9");
        assertNotNull(cs);
        assertEquals("uni01D9", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 -4 91 hstemhm",
                        "89 80 63 89 55 90 60 46 hintmask 10011110",
                        "322 737 rmoveto",
                        "33 hlineto",
                        "23 30 25 28 29 25 rrcurveto",
                        "-11 18 rlineto",
                        "-29 -14 -25 -16 -29 -24 -25 22 -26 17 -30 15 rrcurveto",
                        "-12 -18 rlineto", "27 -24 27 -26 23 -33 rrcurveto",
                        "-2 -749 rmoveto", "151 callsubr", "hintmask 11011110",
                        "152 callsubr", "56 699 rmoveto", "hintmask 10111110",
                        "50 callsubr", "-144 hmoveto", "51 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01DA
     */
    public void testuni01DA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01DA");
        assertNotNull(cs);
        assertEquals("uni01DA", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 98 91 48 -21 hstemhm",
                        "88 75 -35 91 70 90 -25 75 hintmask 1011110010000000",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 0111110010000000",
                        "1 callsubr",
                        "hintmask 0011101000000000",
                        "-301 456 rmoveto",
                        "56 callsubr",
                        "hintmask 0011100100000000",
                        "161 hmoveto",
                        "57 callsubr",
                        "-57 73 rmoveto",
                        "39 hlineto",
                        "24 41 30 40 28 36 rrcurveto",
                        "-15 12 rlineto",
                        "-29 -24 -28 -23 -29 -35 -27 33 -26 23 -32 26 rrcurveto",
                        "-16 -12 rlineto", "28 -34 30 -41 23 -42 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01DB
     */
    public void testuni01DB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01DB");
        assertNotNull(cs);
        assertEquals("uni01DB", cs.getName());
        String[] text =
                {"160 -12 41 589 27 -4 91 hstemhm",
                        "89 80 63 89 55 90 60 46 hintmask 10011110",
                        "250 844 rmoveto", "-59 -40 120 -55 rlineto",
                        "16 -8 10 -2 7 0 7 0 4 4 0 8 0 6 -3 6 -9 7 rrcurveto",
                        "-23 -782 rmoveto", "151 callsubr",
                        "hintmask 11011110", "152 callsubr", "56 699 rmoveto",
                        "hintmask 10111110", "50 callsubr", "-144 hmoveto",
                        "51 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01DC
     */
    public void testuni01DC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01DC");
        assertNotNull(cs);
        assertEquals("uni01DC", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 98 91 hstemhm",
                        "88 75 -35 91 70 90 -25 75 hintmask 10111001",
                        "429 116 rmoveto", "0 callsubr", "hintmask 01111001",
                        "1 callsubr", "hintmask 00110100", "-301 456 rmoveto",
                        "56 callsubr", "hintmask 00110010", "161 hmoveto",
                        "57 callsubr", "-84 187 rmoveto",
                        "-3 2 -5 1 -4 0 -27 0 -19 -16 -6 -6 rrcurveto",
                        "-2 -9 92 -98 rlineto",
                        "12 -13 6 -5 5 0 6 0 6 6 0 4 0 6 -1 7 -5 8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01DD
     */
    public void testuni01DD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01DD");
        assertNotNull(cs);
        assertEquals("uni01DD", cs.getName());
        String[] text =
                {"-73 -11 34 131 39 201 49 hstem", "48 79 203 76 vstem",
                        "62 338 rmoveto", "153 callsubr", "284 -200 rmoveto",
                        "154 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01DE
     */
    public void testuni01DE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01DE");
        assertNotNull(cs);
        assertEquals("uni01DE", cs.getName());
        String[] text =
                {"194 1 27 216 39 357 90 31 44 hstem", "198 91 131 91 vstem",
                        "473 761 rmoveto", "12 11 17 12 7 -4 8 -10 hvcurveto",
                        "-244 hlineto", "-12 -10 -18 -12 -6 3 -8 9 hvcurveto",
                        "-88 -689 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-240 402 rmoveto", "27 callsubr",
                        "222 1 rmoveto", "28 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01DF
     */
    public void testuni01DF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01DF");
        assertNotNull(cs);
        assertEquals("uni01DF", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 85 91 36 44 hstemhm",
                        "39 72 -61 73 -35 91 70 90 -48 74 53 25 hintmask 1011101001100000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111110001100000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr",
                        "hintmask 0011100100100000", "-203 327 rmoveto",
                        "56 callsubr", "hintmask 0011100010100000",
                        "161 hmoveto", "57 callsubr", "", "82 82 rmoveto",
                        "155 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E0
     */
    public void testuni01E0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E0");
        assertNotNull(cs);
        assertEquals("uni01E0", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 66 95 -66 44 hstemhm",
                        "311 95 hintmask 11100100", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-127 468 rmoveto", "hintmask 11110100",
                        "156 callsubr", "hintmask 11101100", "-37 -18 rmoveto",
                        "9 44 -84 0 rlineto",
                        "-12 -10 -18 -11 -7 3 -8 9 hvcurveto",
                        "252 44 rmoveto", "-8 -44 83 0 rlineto",
                        "12 11 17 12 7 -4 8 -10 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E1
     */
    public void testuni01E1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E1");
        assertNotNull(cs);
        assertEquals("uni01E1", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 80 96 35 44 hstemhm",
                        "39 72 -61 73 45 96 27 74 53 25 hintmask 1011101111000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111110111000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-123 325 rmoveto",
                        "130 callsubr", "164 83 rmoveto", "155 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E2
     */
    public void testuni01E2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E2");
        assertNotNull(cs);
        assertEquals("uni01E2", cs.getName());
        String[] text =
                {"364 -1 29 -26 39 225 39 24 34 245 39 -29 28 87 44 hstemhm",
                        "429 83 hintmask 01111011", "471 3 rmoveto",
                        "30 callsubr", "hintmask 10110111", "31 callsubr",
                        "-200 302 rmoveto", "32 callsubr", "246 428 rmoveto",
                        "91 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E3
     */
    public void testuni01E3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E3");
        assertNotNull(cs);
        assertEquals("uni01E3", cs.getName());
        String[] text =
                {
                        "186 -12 49 -49 42 188.331665039 34.6683349609 155 34 -30 30 97 44 hstemhm",
                        "39 72 -61 73 175 73 201 76 hintmask 0011010011000000",
                        "372 253 rmoveto", "60 callsubr", "-74 -38 rmoveto",
                        "61 callsubr", "hintmask 0110011011000000",
                        "62 callsubr", "-33 172 rmoveto", "63 callsubr",
                        "hintmask 1011010111000000", "64 callsubr",
                        "hintmask 0110110111000000", "65 callsubr",
                        "201 152 rmoveto", "116 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E4
     */
    public void testuni01E4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E4");
        assertNotNull(cs);
        assertEquals("uni01E4", cs.getName());
        String[] text =
                {"192 -12 36 140 39 68 34 316 37 hstem", "32 87 421 81 vstem",
                        "375 658 rmoveto",
                        "-172 -171 -131 -220 -173 137 -146 201 hvcurveto",
                        "118 0 81 37 68 58 -11 9 -5 8 0 11 rrcurveto",
                        "53 60 39 -60 24 vlineto", "28 9 16 35 vhcurveto",
                        "1 hlineto", "5 3 3 5 hvcurveto", "0 26 -2 2 rlineto",
                        "0 -58 -2 -35 -39 -87 2 0 vhcurveto",
                        "-2 -2 0 -26 rlineto", "-5 4 -3 4 vhcurveto",
                        "26 hlineto", "40 15 -13 -31 hvcurveto",
                        "-24 -142 -39 142 -90 vlineto",
                        "-34 -32 -59 -18 -54 0 rrcurveto",
                        "-178 -96 171 132 175 107 119 135 hvcurveto",
                        "145 0 53 -82 26 -86 rrcurveto", "30 6 rlineto",
                        "-9 42 -6 40 -7 72 -60 0 -36 45 -122 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E5
     */
    public void testuni01E5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E5");
        assertNotNull(cs);
        assertEquals("uni01E5", cs.getName());
        String[] text =
                {
                        "-17 -235 37 71 37 78 -20 21 56 -54 61 84 30 248 28 -25 45 hstemhm",
                        "60 70 -62 50 198 73 hintmask 1110010000100000",
                        "402 -127 rmoveto",
                        "-26 -50 -88 -21 -73 0 -29 0 -73 17 -18 54 rrcurveto",
                        "315 37 rmoveto",
                        "-318 hlineto",
                        "1 29 9 28 27 26 14 -3 8 -2 16 0 rrcurveto",
                        "hintmask 1111010000100000",
                        "11 0 15 0 14 1 rrcurveto",
                        "hintmask 1110110000100000",
                        "14 1 11 1 8 0 48 0 41 -11 28 -14 37 -18 14 -16 2 -22 rrcurveto",
                        "23 478 rmoveto",
                        "20 14 14 22 hvcurveto",
                        "hintmask 1110010110100000",
                        "21 -18 17 -26 vhcurveto",
                        "-25 0 -45 -17 -25 -34 rrcurveto",
                        "hintmask 1110111010100000",
                        "97 callsubr",
                        "hintmask 1110110001100000",
                        "-27 -24 -15 -43 0 -34 0 -36 18 -25 25 -13 -39 -24 -25 -33 -10 -33 rrcurveto",
                        "-38 -37 34 hlineto",
                        "4 -82 79 -26 71 0 105 0 111 37 40 71 rrcurveto",
                        "42 37 -29 hlineto",
                        "1 6 1 7 0 7 0 32 -15 24 -27 25 -40 34 -66 7 -35 0 -17 0 -25 -2 -23 -3 rrcurveto",
                        "hintmask 1111010101100000",
                        "-14 -1 -12 -1 -5 0 -28 0 -33 11 0 43 0 20 6 21 11 17 23 -14 30 -7 37 0 84 0 80 53 0 98 0 47 -13 29 -28 30 rrcurveto",
                        "7 10 19 14 12 0 7 0 4 -3 6 -9 4 -8 10 -9 16 0 rrcurveto",
                        "-117 -105 rmoveto", "102 callsubr",
                        "hintmask 1110011010100000", "103 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni01E8
     */
    public void testuni01E8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E8");
        assertNotNull(cs);
        assertEquals("uni01E8", cs.getName());
        String[] text =
                {"136 1 27 590 27 74 -21 hstem", "106 81 vstem",
                        "187 72 rmoveto", "-56 callsubr", "138 626 rmoveto",
                        "94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01E9
     */
    public void testuni01E9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01E9");
        assertNotNull(cs);
        assertEquals("uni01E9", cs.getName());
        String[] text =
                {
                        "-22 1 27 374 27 237 -21 53 -20 hstem",
                        "88 75 vstem",
                        "163 205 rmoveto",
                        "-14 callsubr",
                        "124 573 rmoveto",
                        "49 hlineto",
                        "30 45 38 45 34 39 rrcurveto",
                        "-19 14 rlineto",
                        "-37 -27 -33 -26 -37 -38 -35 36 -32 26 -39 29 rrcurveto",
                        "-20 -14 rlineto", "34 -37 38 -46 29 -46 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01EA
     */
    public void testuni01EA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01EA");
        assertNotNull(cs);
        assertEquals("uni01EA", cs.getName());
        String[] text =
                {"197 -209 38 159 34 602 34 hstem",
                        "37 91 227 59 156 92 vstem", "334 624 rmoveto",
                        "-49 callsubr", "223 -766 rmoveto", "157 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01EB
     */
    public void testuni01EB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01EB");
        assertNotNull(cs);
        assertEquals("uni01EB", cs.getName());
        String[] text =
                {"-22 -208 39 157 35 386 33 hstem", "34 79 99 59 96 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "184 -550 rmoveto",
                        "158 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01EC
     */
    public void testuni01EC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01EC");
        assertNotNull(cs);
        assertEquals("uni01EC", cs.getName());
        String[] text =
                {"197 -209 38 159 34 602 34 75 44 hstem",
                        "37 91 227 59 156 92 vstem", "334 624 rmoveto",
                        "-49 callsubr", "223 -766 rmoveto", "157 callsubr",
                        "-91 875 rmoveto", "13 10 17 12 7 -4 8 -9 hvcurveto",
                        "-245 hlineto", "-12 -10 -18 -11 -7 3 -8 9 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01ED
     */
    public void testuni01ED() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01ED");
        assertNotNull(cs);
        assertEquals("uni01ED", cs.getName());
        String[] text =
                {"-22 -208 39 157 35 386 33 97 44 hstem",
                        "34 79 99 59 96 79 vstem", "230 409 rmoveto",
                        "-10 callsubr", "184 -550 rmoveto", "158 callsubr",
                        "-62 680 rmoveto", "82 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01EE
     */
    public void testuni01EE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01EE");
        assertNotNull(cs);
        assertEquals("uni01EE", cs.getName());
        String[] text =
                {
                        "107 -211 37 780 40 72 -21 hstem",
                        "64 26 385 89 vstem",
                        "167 646 rmoveto",
                        "146 callsubr",
                        "-247 51 rmoveto",
                        "43 hlineto",
                        "31 34 32 32 37 29 rrcurveto",
                        "-14 20 rlineto",
                        "-38 -17 -33 -18 -36 -27 -33 25 -35 20 -39 17 rrcurveto",
                        "-15 -20 rlineto", "36 -28 35 -30 29 -37 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01EF
     */
    public void testuni01EF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01EF");
        assertNotNull(cs);
        assertEquals("uni01EF", cs.getName());
        String[] text =
                {
                        "-75 -229 29 591 39 hstem",
                        "327 74 vstem",
                        "107 430 rmoveto",
                        "159 callsubr",
                        "-164 71 rmoveto",
                        "50 hlineto",
                        "29 46 38 44 35 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -33 25 -39 29 rrcurveto",
                        "-20 -13 rlineto", "34 -38 38 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F0
     */
    public void testuni01F0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F0");
        assertNotNull(cs);
        assertEquals("uni01F0", cs.getName());
        String[] text =
                {
                        "-224 -213 29 626 -20 hstem",
                        "125 75 vstem",
                        "51 -184 rmoveto",
                        "-16 callsubr",
                        "70 693 rmoveto",
                        "49 hlineto",
                        "30 46 38 45 34 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -33 -25 -37 -38 -35 36 -32 26 -39 28 rrcurveto",
                        "-20 -13 rlineto", "34 -37 38 -46 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F1
     */
    public void testuni01F1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F1");
        assertNotNull(cs);
        assertEquals("uni01F1", cs.getName());
        String[] text =
                {
                        "818 -1 29 -29 34 -33 39 567 40 -33 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01001011",
                        "187 72 rmoveto",
                        "-70 callsubr",
                        "-170 -53 rmoveto",
                        "-69 callsubr",
                        "hintmask 10000111",
                        "-68 callsubr",
                        "hintmask 00110011",
                        "1250 -19 rmoveto",
                        "4 56 11 57 11 52 rrcurveto",
                        "-30 5 rlineto",
                        "-20 -72 -29 -59 -76 0 rrcurveto",
                        "-233 hlineto",
                        "-17 -9 4 9 hvcurveto",
                        "0 5 3 6 6 9 rrcurveto",
                        "375 519 rlineto",
                        "20 28 3 10 0 11 0 7 -3 3 -19 0 -13 0 -19 -1 -31 -3 rrcurveto",
                        "-3", "36 hlineto",
                        "-47 0 3 9 -37 3 -4 -54 -10 -72 -8 -41 rrcurveto",
                        "30 -5 rlineto", "21 69 18 51 75 0 rrcurveto",
                        "245 hlineto", "8 3 -2 -6 hvcurveto",
                        "0 -5 -3 -7 -6 -7 rrcurveto", "-388 -541 rlineto",
                        "-6 -8 -3 -8 0 -7 rrcurveto", "-10 6 -5 13 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F2
     */
    public void testuni01F2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F2");
        assertNotNull(cs);
        assertEquals("uni01F2", cs.getName());
        String[] text =
                {
                        "626 -1 29 -29 34 -33 39 352 39 183 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01011011",
                        "187 72 rmoveto",
                        "-70 callsubr",
                        "-170 -53 rmoveto",
                        "-69 callsubr",
                        "hintmask 10010111",
                        "-68 callsubr",
                        "805 411 rmoveto",
                        "-15 0 -10 6 -2 6 rrcurveto",
                        "-24 hlineto",
                        "-1 -45 -6 -44 -9 -49 rrcurveto",
                        "27 -3 rlineto",
                        "20 73 34 17 30 0 rrcurveto",
                        "134 0 -242 -359 rlineto",
                        "-8 -12 -1 -3 0 -5 rrcurveto",
                        "hintmask 00110011",
                        "-7 7 -5 15 vhcurveto",
                        "304 hlineto",
                        "5 31 10 47 17 58 rrcurveto",
                        "-26 7 -13 -29 rlineto",
                        "-24 -53 -17 -22 -58 0 rrcurveto",
                        "-129 0 236 348 rlineto",
                        "22 33 0 5 0 4 0 5 -8 1 -6 0 -2 0 -35 -5 -29 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F3
     */
    public void testuni01F3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F3");
        assertNotNull(cs);
        assertEquals("uni01F3", cs.getName());
        String[] text =
                {
                        "392 -12 42 -30 39 -12 28 336 39 -23 35 256 -20 hstemhm",
                        "34 78 222 75 hintmask 10000111",
                        "336 57 rmoveto",
                        "-27 callsubr",
                        "hintmask 00101111",
                        "-26 callsubr",
                        "hintmask 10000111",
                        "-25 callsubr",
                        "-2 32 rmoveto",
                        "147 callsubr",
                        "hintmask 10001111",
                        "148 callsubr",
                        "hintmask 00010111",
                        "254 82 rmoveto",
                        "hintmask 00001111",
                        "160 callsubr",
                        "hintmask 01010111",
                        "20 73 34 17 30 0 rrcurveto",
                        "134 0 -243 -359 rlineto",
                        "-8 -12 0 -3 0 -5 rrcurveto",
                        "-7 7 -5 15 vhcurveto",
                        "304 hlineto",
                        "4 31 11 47 17 58 rrcurveto",
                        "-27 7 -13 -29 rlineto",
                        "-23 -53 -17 -22 -58 0 rrcurveto",
                        "-130 0 236 348 rlineto",
                        "23 33 -1 5 0 4 0 5 -8 1 -5 0 -2 0 -36 -5 -29 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F4
     */
    public void testuni01F4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F4");
        assertNotNull(cs);
        assertEquals("uni01F4", cs.getName());
        String[] text =
                {
                        "192 -12 36 247 34 316 37 61 -21 hstem",
                        "32 87 421 81 vstem",
                        "375 658 rmoveto",
                        "-60 callsubr",
                        "54 162 rmoveto",
                        "-124 -86 rlineto",
                        "-13 -9 -2 -5 0 -7 0 -10 5 -5 9 0 8 0 14 3 21 9 rrcurveto",
                        "144 58 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F5
     */
    public void testuni01F5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F5");
        assertNotNull(cs);
        assertEquals("uni01F5", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 hstemhm",
                        "33 58 -31 70 -62 50 198 73 21 48 hintmask 1001010101100000",
                        "433 388 rmoveto",
                        "96 callsubr",
                        "hintmask 1011100101100000",
                        "97 callsubr",
                        "hintmask 1011000011100000",
                        "-20 callsubr",
                        "hintmask 1011001001100000",
                        "98 callsubr",
                        "hintmask 1101010011100000",
                        "99 callsubr",
                        "-304 -395 rmoveto",
                        "100 callsubr",
                        "hintmask 1011001001100000",
                        "101 callsubr",
                        "187 290 rmoveto",
                        "102 callsubr",
                        "hintmask 1001100101100000",
                        "103 callsubr",
                        "-33 387 rmoveto",
                        "-80 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -6 7 -6 7 0 7 0 7 5 15 15 rrcurveto",
                        "115 109 -2 10 rlineto",
                        "-2 2 -2 1 -3 2 -8 8 -13 11 -28 0 -5 0 -6 -1 -3 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F6
     */
    public void testuni01F6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F6");
        assertNotNull(cs);
        assertEquals("uni01F6", cs.getName());
        String[] text =
                {
                        "399 -12 47 -34 27 296 39 79 -20 196 27 hstemhm",
                        "106 81 327 80 222 37 hintmask 10111111",
                        "514 133 rmoveto",
                        "-92 62 -53 104 80 93 78 183 120 -30 73 -69 -27 -14 -19 -18 vhcurveto",
                        "0 -31 31 -5 11 -1 29 -5 32 -30 0 -96 rrcurveto",
                        "-98 -61 -104 -75 -47 -39 29 66 vhcurveto",
                        "444 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto", "",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "hintmask 01111111",
                        "-28 -13 -16 -41 vhcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "252 327 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F7
     */
    public void testuni01F7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F7");
        assertNotNull(cs);
        assertEquals("uni01F7", cs.getName());
        String[] text =
                {
                        "39 609 49 hstem",
                        "79 81 254 90 vstem",
                        "163 658 rmoveto",
                        "-24 hlineto",
                        "-20 -9 -22 -4 -18 -4 -17 -3 -37 -6 -15 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 2 -2 3 vhcurveto",
                        "32 3 rlineto",
                        "20 10 -21 -46 hvcurveto",
                        "-664 vlineto",
                        "0 -33 -10 -18 -30 -9 rrcurveto",
                        "-20 -6 rlineto",
                        "-5 -1 -1 -3 1 -5 rrcurveto",
                        "7 -25 139 37 0 210 rlineto",
                        "176 135 168 141 0 160 0 109 -38 92 -121 0 -64 0 -64 -56 -57 -55 rrcurveto",
                        "162 62 rmoveto", "69 23 -67 -125 hvcurveto",
                        "0 -132 -130 -115 -124 -104 rrcurveto", "438 vlineto",
                        "74 74 43 31 45 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F8
     */
    public void testuni01F8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F8");
        assertNotNull(cs);
        assertEquals("uni01F8", cs.getName());
        String[] text =
                {"194 1 27 590 28 72 -21 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "-310 796 rmoveto",
                        "42 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni01F9
     */
    public void testuni01F9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni01F9");
        assertNotNull(cs);
        assertEquals("uni01F9", cs.getName());
        String[] text =
                {"19 1 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-93 379 rmoveto",
                        "-4 2 -6 1 -5 0 -34 0 -23 -17 -8 -7 rrcurveto",
                        "-3 -10 115 -109 rlineto",
                        "16 -15 7 -5 6 0 8 0 7 6 0 5 0 7 -1 7 -6 10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0200
     */
    public void testuni0200() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0200");
        assertNotNull(cs);
        assertEquals("uni0200", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 64 -21 hstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-99 534 rmoveto",
                        "-9 -7 -6 -11 0 -11 0 -12 5 -5 2 -2 rrcurveto",
                        "95 -85 rlineto",
                        "2 -2 3 -1 3 0 2 0 3 2 2 2 4 2 2 4 0 4 0 1 0 2 -1 1 -33 54 -14 73 -37 0 -9 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -9 2 -7 6 -4 rrcurveto",
                        "98 -84 rlineto",
                        "2 -2 3 0 2 0 4 0 3 2 2 1 3 3 2 4 0 3 0 2 0 2 -1 1 rrcurveto",
                        "-62 115 rlineto",
                        "-6 8 -7 3 -14 0 -9 0 -9 -6 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0201
     */
    public void testuni0201() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0201");
        assertNotNull(cs);
        assertEquals("uni0201", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 209 -20 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10110111",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 01111011",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "-94 400 rmoveto",
                        "-10 -6 -7 -12 0 -12 0 -5 1 -6 5 -5 rrcurveto",
                        "102 -121 rlineto",
                        "2 -2 2 -1 2 0 3 0 3 1 3 2 3 2 3 4 0 4 rrcurveto",
                        "0 3 -64 146 rlineto",
                        "-4 9 -7 4 -12 1 rrcurveto",
                        "-4 hlineto",
                        "-8 0 -6 -2 -7 -4 rrcurveto",
                        "-135 -8 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -6 1 -7 6 -6 rrcurveto",
                        "114 -110 rlineto",
                        "2 -2 2 0 2 0 3 0 3 1 3 2 3 2 2 4 0 4 0 1 0 2 -1 1 rrcurveto",
                        "-78 139 rlineto",
                        "-5 9 -7 3 -12 0 -9 0 -8 -3 -7 -6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0202
     */
    public void testuni0202() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0202");
        assertNotNull(cs);
        assertEquals("uni0202", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 74 -21 61 53 hstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-211 408 rmoveto", "26 hlineto",
                        "7 39 52 22 49 0 53 0 47 -22 8 -39 rrcurveto",
                        "28 hlineto",
                        "-5 70 -57 44 -74 0 -66 0 -63 -42 -5 -72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0203
     */
    public void testuni0203() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0203");
        assertNotNull(cs);
        assertEquals("uni0203", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 147 57 hstemhm",
                        "39 72 -61 73 -40 27 181 74 -38 27 64 25 hintmask 1011010101000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111100101000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr",
                        "hintmask 0011001011000000", "36 252 rmoveto",
                        "27 14 rlineto",
                        "-8 77 -51 58 -77 0 -50 0 -75 -35 -10 -100 rrcurveto",
                        "27 -14 rlineto", "2 62 60 30 46 0 rrcurveto",
                        "60 0 47 -41 2 -51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0204
     */
    public void testuni0204() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0204");
        assertNotNull(cs);
        assertEquals("uni0204", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 60 -21 hstemhm",
                        "102 80 194 25 hintmask 0011101110000000",
                        "353 606 rmoveto",
                        "-67 callsubr",
                        "hintmask 0011011110000000",
                        "-66 callsubr",
                        "hintmask 0011101110000000",
                        "-65 callsubr",
                        "hintmask 1011011110000000",
                        "-64 callsubr",
                        "hintmask 0111101110000000",
                        "-63 callsubr",
                        "74 215 rmoveto",
                        "-9 -7 -5 -11 0 -11 0 -12 4 -5 3 -2 rrcurveto",
                        "94 -85 rlineto",
                        "2 -2 3 -1 3 0 3 0 3 2 2 1 3 3 2 4 0 4 rrcurveto",
                        "4 vlineto",
                        "-33 54 -14 73 -37 0 -10 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -9 3 -7 5 -4 rrcurveto",
                        "99 -84 rlineto",
                        "1 -2 3 0 2 0 4 0 4 2 2 1 3 3 2 3 0 4 0 2 -1 2 0 1 rrcurveto",
                        "-63 114 rlineto",
                        "-5 9 -8 3 -13 0 -10 0 -8 -6 -6 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0205
     */
    public void testuni0205() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0205");
        assertNotNull(cs);
        assertEquals("uni0205", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 216 -20 hstem",
                        "34 76 202 80 vstem", "378 93 rmoveto", "-23 callsubr",
                        "-284 200 rmoveto", "-22 callsubr", "-94 374 rmoveto",
                        "162 callsubr", "-135 -7 rmoveto", "163 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0206
     */
    public void testuni0206() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0206");
        assertNotNull(cs);
        assertEquals("uni0206", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 66 -21 61 53 hstemhm",
                        "102 80 194 25 hintmask 0011101111000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011111000000", "-66 callsubr",
                        "hintmask 0011101111000000", "-65 callsubr",
                        "hintmask 1011011111000000", "-64 callsubr",
                        "hintmask 0111101111000000", "-63 callsubr",
                        "-70 85 rmoveto", "28 hlineto",
                        "7 39 51 22 49 0 53 0 47 -22 9 -39 rrcurveto",
                        "27 hlineto",
                        "-5 70 -58 44 -73 0 -65 0 -64 -42 -6 -72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0207
     */
    public void testuni0207() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0207");
        assertNotNull(cs);
        assertEquals("uni0207", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 147 57 hstemhm",
                        "34 76 -19 27 194 80 -58 27 hintmask 11111010",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "hintmask 11110101", "36 221 rmoveto",
                        "27 13 rlineto",
                        "-7 78 -51 57 -77 0 -50 0 -75 -34 -10 -101 rrcurveto",
                        "27 -13 rlineto", "2 62 60 29 46 0 rrcurveto",
                        "60 0 47 -40 1 -51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0208
     */
    public void testuni0208() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0208");
        assertNotNull(cs);
        assertEquals("uni0208", cs.getName());
        String[] text =
                {
                        "-208 1 27 590 27 68 -21 hstem",
                        "106 81 vstem",
                        "187 574 rmoveto",
                        "-58 callsubr",
                        "-42 757 rmoveto",
                        "-9 -7 -6 -10 0 -12 0 -11 5 -5 2 -3 rrcurveto",
                        "95 -85 rlineto",
                        "2 -2 3 -1 3 0 2 0 3 2 3 2 3 2 2 4 0 4 0 2 0 1 -1 1 -33 54 -13 73 -38 0 -9 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -5 -10 0 -11 0 -9 2 -7 6 -4 rrcurveto",
                        "98 -84 rlineto",
                        "2 -2 3 0 2 0 4 0 3 2 2 1 4 3 1 4 0 4 0 1 0 2 -1 1 rrcurveto",
                        "-62 115 rlineto",
                        "-6 9 -7 2 -14 0 -9 0 -9 -5 -5 -5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0209
     */
    public void testuni0209() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0209");
        assertNotNull(cs);
        assertEquals("uni0209", cs.getName());
        String[] text =
                {
                        "-237 1 27 414 -20 263 -20 hstem",
                        "99 74 vstem",
                        "173 72 rmoveto",
                        "-18 callsubr",
                        "-81 606 rmoveto",
                        "-10 -6 -7 -11 0 -13 0 -4 2 -6 4 -5 rrcurveto",
                        "102 -121 rlineto",
                        "2 -2 3 -1 2 0 3 0 2 1 3 1 4 3 3 4 0 3 0 2 0 1 -1 1 rrcurveto",
                        "-64 146 rlineto",
                        "-4 9 -7 4 -12 1 rrcurveto",
                        "-4 hlineto",
                        "-7 0 -7 -2 -7 -5 rrcurveto",
                        "-135 -8 rmoveto",
                        "-9 -6 -5 -11 0 -10 0 -6 2 -8 6 -5 rrcurveto",
                        "113 -110 rlineto",
                        "2 -2 2 -1 3 0 2 0 4 2 2 2 4 2 1 4 0 4 0 1 0 2 -1 1 rrcurveto",
                        "-78 138 rlineto",
                        "-5 9 -6 3 -13 0 -8 0 -8 -3 -8 -6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni020A
     */
    public void testuni020A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni020A");
        assertNotNull(cs);
        assertEquals("uni020A", cs.getName());
        String[] text =
                {"-208 1 27 590 27 65 -21 61 53 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "-174 618 rmoveto",
                        "27 hlineto",
                        "6 40 52 21 49 0 53 0 47 -21 8 -40 rrcurveto",
                        "28 hlineto",
                        "-5 70 -57 44 -74 0 -65 0 -63 -42 -6 -72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni020B
     */
    public void testuni020B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni020B");
        assertNotNull(cs);
        assertEquals("uni020B", cs.getName());
        String[] text =
                {"-237 1 27 414 -20 166 58 hstem", "7 24 68 74 53 24 vstem",
                        "173 72 rmoveto", "-18 callsubr", "53 425 rmoveto",
                        "24 13 rlineto",
                        "-7 78 -45 58 -70 0 -45 0 -67 -35 -9 -101 rrcurveto",
                        "24 -13 rlineto",
                        "2 62 53 29 42 0 54 0 42 -40 2 -51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni020C
     */
    public void testuni020C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni020C");
        assertNotNull(cs);
        assertEquals("uni020C", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 48 -21 hstem",
                        "37 91 442 92 vstem",
                        "662 329 rmoveto",
                        "-50 callsubr",
                        "-328 295 rmoveto",
                        "-49 callsubr",
                        "-7 197 rmoveto",
                        "-9 -7 -6 -11 0 -11 0 -12 5 -5 2 -2 rrcurveto",
                        "95 -85 rlineto",
                        "2 -2 3 -1 3 0 2 0 3 2 3 1 3 3 2 4 0 4 rrcurveto",
                        "4 vlineto",
                        "-34 54 -13 73 -37 0 -10 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -9 3 -7 5 -4 rrcurveto",
                        "99 -84 rlineto",
                        "1 -2 3 0 2 0 4 0 3 2 2 1 4 3 2 3 0 4 0 2 -1 2 0 1 rrcurveto",
                        "-63 114 rlineto",
                        "-6 9 -7 3 -14 0 -9 0 -9 -6 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni020D
     */
    public void testuni020D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni020D");
        assertNotNull(cs);
        assertEquals("uni020D", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 216 -20 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "", "-9 callsubr", "193 446 rmoveto", "162 callsubr",
                        "-135 -7 rmoveto", "163 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni020E
     */
    public void testuni020E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni020E");
        assertNotNull(cs);
        assertEquals("uni020E", cs.getName());
        String[] text =
                {"197 -12 34 602 34 54 -21 61 53 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-121 67 rmoveto", "164 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni020F
     */
    public void testuni020F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni020F");
        assertNotNull(cs);
        assertEquals("uni020F", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 146 58 hstemhm",
                        "34 79 -8 27 217 26 -8 79 hintmask 11110010",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "hintmask 11101100", "315 292 rmoveto",
                        "26 13 rlineto",
                        "-7 78 -51 58 -77 0 -50 0 -75 -35 -10 -101 rrcurveto",
                        "27 -13 rlineto", "2 62 60 29 46 0 rrcurveto",
                        "60 0 47 -40 2 -51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0210
     */
    public void testuni0210() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0210");
        assertNotNull(cs);
        assertEquals("uni0210", cs.getName());
        String[] text =
                {
                        "73 1 27 256 38 304 28 57 -21 hstem",
                        "106 81 229 81 vstem",
                        "497 479 rmoveto",
                        "-44 callsubr",
                        "-81 -1 rmoveto",
                        "-43 callsubr",
                        "-171 348 rmoveto",
                        "-9 -7 -6 -11 0 -11 0 -12 5 -5 2 -2 rrcurveto",
                        "95 -86 rlineto",
                        "2 -2 3 0 3 0 2 0 3 1 3 2 3 3 2 4 0 4 rrcurveto",
                        "4 vlineto",
                        "-34 54 -13 73 -37 0 -10 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -9 3 -7 5 -5 rrcurveto",
                        "99 -83 rlineto",
                        "1 -2 3 0 2 0 4 0 3 2 2 1 4 3 2 3 0 4 0 2 -1 2 0 1 rrcurveto",
                        "-63 114 rlineto",
                        "-6 9 -7 3 -14 0 -9 0 -9 -6 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0211
     */
    public void testuni0211() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0211");
        assertNotNull(cs);
        assertEquals("uni0211", cs.getName());
        String[] text =
                {
                        "-154 1 27 353 61 217 -20 hstem",
                        "89 75 vstem",
                        "89 72 rmoveto",
                        "-5 callsubr",
                        "93 331 rmoveto",
                        "-10 -6 -7 -11 0 -12 0 -5 2 -6 4 -5 rrcurveto",
                        "102 -121 rlineto",
                        "2 -2 2 -1 3 0 3 0 2 1 3 1 4 3 2 4 0 4 rrcurveto",
                        "0 3 -64 146 rlineto",
                        "-4 9 -7 4 -12 1 rrcurveto",
                        "-4 hlineto",
                        "-7 0 -7 -2 -7 -5 rrcurveto",
                        "-135 -7 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -6 2 -7 6 -6 rrcurveto",
                        "113 -110 rlineto",
                        "2 -2 2 -1 3 0 2 0 4 2 2 2 3 2 2 4 0 4 0 1 0 2 -1 1 rrcurveto",
                        "-78 139 rlineto",
                        "-5 8 -7 3 -12 0 -9 0 -7 -3 -8 -5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0212
     */
    public void testuni0212() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0212");
        assertNotNull(cs);
        assertEquals("uni0212", cs.getName());
        String[] text =
                {"73 1 27 256 38 304 28 58 -21 61 53 hstem",
                        "106 81 229 81 vstem", "497 479 rmoveto",
                        "-44 callsubr", "-81 -1 rmoveto", "-43 callsubr",
                        "-267 213 rmoveto", "27 hlineto",
                        "7 39 52 22 49 0 53 0 47 -22 8 -39 rrcurveto",
                        "28 hlineto",
                        "-5 70 -58 44 -73 0 -66 0 -63 -42 -6 -72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0213
     */
    public void testuni0213() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0213");
        assertNotNull(cs);
        assertEquals("uni0213", cs.getName());
        String[] text =
                {"-154 1 27 353 61 146 58 hstemhm",
                        "66 27 -4 75 146 26 hintmask 11101100",
                        "89 72 rmoveto", "-5 callsubr", "221 176 rmoveto",
                        "26 13 rlineto", "-7 78 -51 58 -77 0 rrcurveto",
                        "hintmask 11110100",
                        "-50 0 -75 -35 -10 -101 rrcurveto", "27 -13 rlineto",
                        "2 62 60 29 46 0 60 0 47 -40 2 -51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0214
     */
    public void testuni0214() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0214");
        assertNotNull(cs);
        assertEquals("uni0214", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 hstem",
                        "89 81 356 46 vstem",
                        "321 -12 rmoveto",
                        "-40 callsubr",
                        "12 823 rmoveto",
                        "-9 -7 -5 -11 0 -11 0 -11 4 -5 3 -3 rrcurveto",
                        "94 -85 rlineto",
                        "2 -2 3 -1 3 0 3 0 3 2 2 2 3 2 2 4 0 4 rrcurveto",
                        "4 vlineto",
                        "-33 54 -14 73 -37 0 -10 0 -8 -5 -6 -4 rrcurveto",
                        "-132 -6 rmoveto",
                        "-9 -7 -4 -10 0 -11 0 -9 2 -7 5 -4 rrcurveto",
                        "99 -84 rlineto",
                        "1 -2 3 0 2 0 4 0 4 2 2 1 3 3 2 4 0 4 0 1 -1 2 0 1 rrcurveto",
                        "-63 115 rlineto",
                        "-5 8 -8 3 -13 0 -10 0 -8 -5 -6 -5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0215
     */
    public void testuni0215() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0215");
        assertNotNull(cs);
        assertEquals("uni0215", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 229 -20 hstemhm",
                        "88 75 191 75 hintmask 10111100",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 01111100",
                        "1 callsubr",
                        "-205 535 rmoveto",
                        "162 callsubr",
                        "-135 -7 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -6 2 -7 6 -6 rrcurveto",
                        "113 -110 rlineto",
                        "2 -2 2 -1 3 0 2 0 3 2 3 2 3 2 2 4 0 4 0 1 0 2 -1 1 rrcurveto",
                        "-78 139 rlineto",
                        "-5 8 -7 3 -12 0 -9 0 -7 -3 -8 -5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0216
     */
    public void testuni0216() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0216");
        assertNotNull(cs);
        assertEquals("uni0216", cs.getName());
        String[] text =
                {"160 -12 41 589 27 67 -21 61 53 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "-107 703 rmoveto",
                        "164 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0217
     */
    public void testuni0217() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0217");
        assertNotNull(cs);
        assertEquals("uni0217", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 159 58 hstemhm",
                        "88 75 -46 26 211 75 -69 27 hintmask 10111010",
                        "429 116 rmoveto", "0 callsubr", "hintmask 01111010",
                        "1 callsubr", "hintmask 00110101", "-69 381 rmoveto",
                        "27 13 rlineto",
                        "-8 78 -50 58 -78 0 -50 0 -75 -35 -9 -101 rrcurveto",
                        "26 -13 rlineto", "3 62 59 29 46 0 rrcurveto",
                        "61 0 46 -40 2 -51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni021A
     */
    public void testuni021A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni021A");
        assertNotNull(cs);
        assertEquals("uni021A", cs.getName());
        String[] text =
                {"76 -125 81 45 27 578 40 hstemhm",
                        "258 80 -13 32 165 26 hintmask 11110100",
                        "77 646 rmoveto", "-41 callsubr", "-205 -690 rmoveto",
                        "-36 -15 -24 -16 -17 9 -24 41 hvcurveto",
                        "8 0 10 2 11 6 rrcurveto", "hintmask 11101100",
                        "1 -3 1 -3 0 -3 0 -6 -3 -58 -76 -16 rrcurveto",
                        "4 -16 rlineto", "90 4 17 75 0 26 rrcurveto",
                        "36 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni021B
     */
    public void testuni021B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni021B");
        assertNotNull(cs);
        assertEquals("uni021B", cs.getName());
        String[] text =
                {
                        "-199 -134 82 40 55 348 39 hstemhm",
                        "89 75 -58 58 27 32 hintmask 11110100",
                        "164 391 rmoveto",
                        "-3 callsubr",
                        "hintmask 11101100",
                        "-2 callsubr",
                        "hintmask 11110100",
                        "-1 callsubr",
                        "-3 -187 rmoveto",
                        "-36 -15 -24 -16 -17 10 -25 40 hvcurveto",
                        "8 0 10 3 11 6 1 -3 1 -3 0 -4 0 -5 -3 -59 -76 -15 rrcurveto",
                        "4 -16 rlineto", "90 3 17 76 0 26 rrcurveto",
                        "36 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni021C
     */
    public void testuni021C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni021C");
        assertNotNull(cs);
        assertEquals("uni021C", cs.getName());
        String[] text =
                {
                        "-22 367 30 227 34 hstemhm",
                        "75 24 -5 75 136 68 -23 89 hintmask 11010100",
                        "132 -145 rmoveto",
                        "18 24 17 23 hvcurveto",
                        "0 6 -5 15 0 13 0 35 24 25 53 15 114 33 79 79 0 91 0 114 -55 67 -108 19 rrcurveto",
                        "hintmask 11101000",
                        "29 13 68 43 0 74 0 91 -90 30 -47 0 -70 0 -55 -13 -28 1 rrcurveto",
                        "-8 -128 24 -2 rlineto",
                        "9 66 47 42 54 0 rrcurveto",
                        "40 56 -20 -77 -57 -75 -73 -70 hvcurveto",
                        "5 -30 rlineto",
                        "hintmask 11010100",
                        "96 89 -39 -120 hvcurveto",
                        "0 -71 -45 -71 -70 -26 -102 -38 -39 -68 0 -37 rrcurveto",
                        "-27 19 -15 19 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni021D
     */
    public void testuni021D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni021D");
        assertNotNull(cs);
        assertEquals("uni021D", cs.getName());
        String[] text =
                {
                        "-118 -208 -21 637 34 hstemhm",
                        "34 21 2 68 113 63 -28 74 hintmask 11110100",
                        "89 -229 rmoveto",
                        "20 16 17 23 hvcurveto",
                        "0 7 -2 9 0 13 0 35 30 20 51 18 49 17 94 46 0 107 0 68 -43 56 -75 17 rrcurveto",
                        "hintmask 11111000",
                        "18 11 54 41 0 60 0 69 -81 37 -47 0 -70 0 -34 -13 -27 1 rrcurveto",
                        "-8 -117 21 -2 rlineto",
                        "9 66 26 31 64 0 39 0 45 -24 0 -58 0 -46 -47 -65 -78 -13 rrcurveto",
                        "-25 vlineto",
                        "12 2 10 2 10 0 rrcurveto",
                        "hintmask 11110100",
                        "48 80 -11 -101 hvcurveto",
                        "0 -63 -33 -38 -47 -19 -79 -32 -57 -75 0 -36 rrcurveto",
                        "-28 22 -7 10 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni021E
     */
    public void testuni021E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni021E");
        assertNotNull(cs);
        assertEquals("uni021E", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 74 -21 hstem", "106 81 327 80 vstem",
                        "322 698 rmoveto", "122 callsubr", "192 -626 rmoveto",
                        "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni021F
     */
    public void testuni021F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni021F");
        assertNotNull(cs);
        assertEquals("uni021F", cs.getName());
        String[] text =
                {
                        "17 1 27 367 47 224 -21 53 -20 hstem",
                        "88 75 198 75 vstem",
                        "361 72 rmoveto",
                        "-19 callsubr",
                        "-88 350 rmoveto",
                        "50 hlineto",
                        "29 45 38 45 35 39 rrcurveto",
                        "-19 14 rlineto",
                        "-37 -27 -34 -26 -37 -38 -34 36 -33 26 -39 29 rrcurveto",
                        "-20 -14 rlineto", "35 -37 37 -46 29 -46 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0220
     */
    public void testuni0220() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0220");
        assertNotNull(cs);
        assertEquals("uni0220", cs.getName());
        String[] text =
                {"102 -227 27 201 27 613 57 hstem", "91 81 276 80 vstem",
                        "91 72 rmoveto", "-29 -9 -15 -34 vhcurveto",
                        "-23 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 72 2 36 39 79 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-23 hlineto", "-33 -10 15 29 hvcurveto",
                        "457 vlineto", "90 85 53 27 47 0 rrcurveto",
                        "64 22 -52 -160 hvcurveto", "-585 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 70 2 36 39 81 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-32 -11 15 29 hvcurveto", "626 vlineto",
                        "95 -2 133 -138 vhcurveto",
                        "-53 0 -67 -35 -96 -90 rrcurveto", "125 -22 vlineto",
                        "-20 -9 -21 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 2 -2 3 vhcurveto",
                        "11 1 22 3 rlineto", "20 9 -16 -57 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0221
     */
    public void testuni0221() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0221");
        assertNotNull(cs);
        assertEquals("uni0221", cs.getName());
        String[] text =
                {
                        "135 -25 45 -32 42 107 26 244 35 256 -20 hstemhm",
                        "34 78 228 75 178 24 hintmask 01111111",
                        "617 109 rmoveto",
                        "32 -18 22 -45 vhcurveto",
                        "-53 0 -52 -106 -15 -27 rrcurveto",
                        "-19 0 52 39 hvcurveto",
                        "577 -22 vlineto",
                        "-55 -33 -49 0 -18 -4 rrcurveto",
                        "-31 vlineto",
                        "16 4 21 3 10 0 rrcurveto",
                        "21 1 -16 -52 hvcurveto",
                        "-154 vlineto",
                        "-36 24 -44 3 -20 0 rrcurveto",
                        "-82 -124 -58 -173 -104 65 -119 124 hvcurveto",
                        "47 0 38 20 32 33 11 -41 27 -9 31 -9 -20 -32 -17 -32 -19 -34 rrcurveto",
                        "25 -9 59 102 rlineto", "hintmask 10111111",
                        "7 -1 11 -1 4 0 rrcurveto", "83 75 46 88 hvcurveto",
                        "-124 -89 rmoveto",
                        "-12 0 -11 1 -11 2 29 56 32 58 37 0 rrcurveto",
                        "23 13 -13 -21 -50 -64 -33 -36 hvcurveto",
                        "-255 387 rmoveto", "47 0 33 -19 22 -40 rrcurveto",
                        "-273 vlineto", "hintmask 01111111",
                        "-24 -27 -31 -18 -36 0 rrcurveto",
                        "-49 -88 47 152 78 25 100 101 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0222
     */
    public void testuni0222() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0222");
        assertNotNull(cs);
        assertEquals("uni0222", cs.getName());
        String[] text =
                {"53 -12 34 610 26 8 25 hstemhm",
                        "47 70 -55 81 259 74 -52 82 hintmask 11101100",
                        "402 532 rmoveto",
                        "0 -74 -34 -27 -72 -50 -75 35 -78 45 0 58 rrcurveto",
                        "53 45 60 60 vhcurveto", "26 vlineto",
                        "-103 -83 -67 -92 hvcurveto",
                        "0 -82 74 -46 75 -39 rrcurveto", "hintmask 11110010",
                        "-39 -11 -125 -60 0 -107 rrcurveto",
                        "-129 119 -37 100 175 65 97 84 vhcurveto",
                        "0 110 -108 51 -68 30 rrcurveto", "hintmask 11101100",
                        "12 4 134 56 0 116 rrcurveto",
                        "53 -38 102 -164 vhcurveto", "-25 vlineto",
                        "67 61 -58 -76 hvcurveto", "hintmask 11110010",
                        "-285 -382 rmoveto",
                        "0 72 78 55 53 35 85 -38 91 -42 0 -89 rrcurveto",
                        "-49 -20 -72 -133 vhcurveto",
                        "-44 -110 24 104 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0223
     */
    public void testuni0223() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0223");
        assertNotNull(cs);
        assertEquals("uni0223", cs.getName());
        String[] text =
                {
                        "-33 -12 26 hstemhm",
                        "41 64 -46 67 210 60 -36 68 hintmask 10110000",
                        "336 530 rmoveto",
                        "0 -79 -76 -58 -7 -4 0 0 -127 82 0 67 0 15 2 38 41 33 rrcurveto",
                        "-21 25 rlineto",
                        "-34 -15 -55 -38 0 -79 0 -89 72 -47 52 -43 rrcurveto",
                        "hintmask 11001000", "-65 -29 -77 -83 0 -81 rrcurveto",
                        "-48 27 -109 163 123 74 70 117 vhcurveto",
                        "0 92 -83 58 -63 43 rrcurveto", "hintmask 10110000",
                        "16 6 98 57 0 99 0 74 -48 34 -35 14 rrcurveto",
                        "-16 -27 rlineto", "38 -37 1 -46 0 -12 rrcurveto",
                        "-103 -516 rmoveto", "hintmask 11001000",
                        "-77 -51 60 80 hvcurveto",
                        "0 39 22 43 46 45 rrcurveto", "40 38 rlineto",
                        "84 -63 63 -48 0 -67 rrcurveto",
                        "-64 -26 -63 -101 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0224
     */
    public void testuni0224() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0224");
        assertNotNull(cs);
        assertEquals("uni0224", cs.getName());
        String[] text =
                {"117 0 45 556 45 hstem", "550 58 vstem", "484 45 rmoveto",
                        "97 27 -59 -38 hvcurveto",
                        "0 -62 -31 -29 -35 -29 rrcurveto", "-20 9 rlineto",
                        "18 23 10 24 0 16 rrcurveto",
                        "80 -40 20 -74 vhcurveto", "-376 hlineto",
                        "-17 -3 9 7 hvcurveto", "0 6 3 7 6 8 rrcurveto",
                        "400 564 -286 0 rlineto",
                        "-87 0 -5 -87 -4 -15 rrcurveto",
                        "-25 3 20 153 25 -4 rlineto",
                        "1 -2 3 -3 23 0 rrcurveto", "428 hlineto",
                        "13 0 9 -2 2 -7 rrcurveto", "-2 vlineto",
                        "0 -9 -9 -15 -14 -19 rrcurveto", "-388 -547 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0225
     */
    public void testuni0225() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0225");
        assertNotNull(cs);
        assertEquals("uni0225", cs.getName());
        String[] text =
                {"-45 0 39 352 39 hstem", "386 57 vstem", "320 39 rmoveto",
                        "69 54 -51 -50 hvcurveto",
                        "0 -53 -27 -34 -31 -24 rrcurveto", "-21 10 rlineto",
                        "11 18 11 28 0 16 0 80 -76 20 -39 1 rrcurveto",
                        "-203 hlineto", "-18 -16 0 11 hvcurveto",
                        "0 6 2 6 6 9 rrcurveto", "236 359 -142 0 rlineto",
                        "-51 0 -9 -33 -15 -60 rrcurveto",
                        "-28 4 24 138 24 -2 rlineto",
                        "1 -4 4 -4 29 0 rrcurveto", "239 hlineto",
                        "11 6 -3 -8 hvcurveto", "0 -6 -8 -12 -9 -14 rrcurveto",
                        "-230 -348 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0226
     */
    public void testuni0226() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0226");
        assertNotNull(cs);
        assertEquals("uni0226", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 66 95 hstem", "311 95 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-127 468 rmoveto", "156 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0227
     */
    public void testuni0227() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0227");
        assertNotNull(cs);
        assertEquals("uni0227", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 80 96 hstemhm",
                        "39 72 -61 73 45 96 27 74 53 25 hintmask 1011011110000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111101110000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-123 325 rmoveto",
                        "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0228
     */
    public void testuni0228() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0228");
        assertNotNull(cs);
        assertEquals("uni0228", cs.getName());
        String[] text =
                {
                        "68 -182 26 76 31 48 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 126 53 15 25 hintmask 1101111011100000",
                        "267 -80 rmoveto", "165 callsubr",
                        "hintmask 1100110111100000", "-66 callsubr",
                        "hintmask 1100111011100000", "-65 callsubr",
                        "hintmask 1110110111100000", "-64 callsubr",
                        "hintmask 1101111011100000", "166 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0229
     */
    public void testuni0229() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0229");
        assertNotNull(cs);
        assertEquals("uni0229", cs.getName());
        String[] text =
                {"-73 -187 26 76 31 42 49 201 39 131 34 hstemhm",
                        "34 76 152 53 -3 80 hintmask 11111101",
                        "114 277 rmoveto", "-22 callsubr", "-77 -362 rmoveto",
                        "hintmask 11111110", "167 callsubr",
                        "hintmask 11111101", "168 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni022A
     */
    public void testuni022A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni022A");
        assertNotNull(cs);
        assertEquals("uni022A", cs.getName());
        String[] text =
                {"197 -12 34 602 34 -18 90 -87 90 0 44 hstemhm",
                        "37 91 -19 91 294 90 -14 92 hintmask 1000100000000000",
                        "449 733 rmoveto", "10 10 17 12 7 -4 8 -8 hvcurveto",
                        "-208 hlineto", "-10 -9 -18 -11 -7 3 -8 8 hvcurveto",
                        "hintmask 1100110010000000", "421 -404 rmoveto",
                        "44 callsubr", "-328 295 rmoveto", "-49 callsubr",
                        "hintmask 1010100100000000", "160 61 rmoveto",
                        "45 callsubr", "hintmask 1001101000000000",
                        "-385 3 rmoveto", "46 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni022B
     */
    public void testuni022B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni022B");
        assertNotNull(cs);
        assertEquals("uni022B", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 85 91 36 44 hstemhm",
                        "34 79 3 91 70 91 -1 79 hintmask 11111101",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "", "82 367 rmoveto", "72 callsubr",
                        "hintmask 11111110", "161 hmoveto", "56 callsubr",
                        "84 82 rmoveto", "13 11 17 12 7 -4 8 -10 hvcurveto",
                        "-245 hlineto", "-11 -11 -18 -12 -6 4 -8 9 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni022C
     */
    public void testuni022C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni022C");
        assertNotNull(cs);
        assertEquals("uni022C", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 35 49 -10 44 -29 50 hstemhm",
                        "37 91 442 92 hintmask 11000110",
                        "662 329 rmoveto",
                        "44 callsubr",
                        "-328 295 rmoveto",
                        "-49 callsubr",
                        "hintmask 11101110",
                        "66 118 rmoveto",
                        "-16 0 -14 11 -14 14 -17 14 -18 16 -27 0 -36 0 -19 -33 -11 -65 rrcurveto",
                        "19 -5 rlineto",
                        "8 36 12 17 22 0 15 0 15 -12 16 -13 18 -14 18 -15 18 0 40 0 24 34 10 66 rrcurveto",
                        "-20 7 rlineto", "-12 -47 -13 -11 -18 0 rrcurveto",
                        "hintmask 11010110", "-214 -10 rmoveto",
                        "8 44 -61 0 rlineto", "hintmask 11001110",
                        "-12 -10 -18 -11 hvcurveto", "hintmask 11010110",
                        "-7 4 -8 9 vhcurveto", "392 44 rmoveto",
                        "-9 -44 60 0 rlineto",
                        "13 10 18 11 7 -3 8 -10 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni022D
     */
    public void testuni022D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni022D");
        assertNotNull(cs);
        assertEquals("uni022D", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 83 44 5 46 34 44 hstem",
                        "34 79 254 79 vstem", "230 409 rmoveto",
                        "-10 callsubr", "-196 -204 rmoveto", "-9 callsubr",
                        "270 364 rmoveto", "55 callsubr", "50 85 rmoveto",
                        "13 10 17 12 7 -3 8 -10 hvcurveto", "-245 hlineto",
                        "-12 -10 -18 -12 -6 4 -8 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni022E
     */
    public void testuni022E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni022E");
        assertNotNull(cs);
        assertEquals("uni022E", cs.getName());
        String[] text =
                {"197 -12 34 602 34 45 95 hstem", "37 91 166 96 180 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-40 126 rmoveto", "169 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni022F
     */
    public void testuni022F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni022F");
        assertNotNull(cs);
        assertEquals("uni022F", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 81 96 hstem", "34 79 77 96 81 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "156 366 rmoveto", "92 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0230
     */
    public void testuni0230() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0230");
        assertNotNull(cs);
        assertEquals("uni0230", cs.getName());
        String[] text =
                {"197 -12 34 602 34 45 95 -70 43 hstemhm",
                        "37 91 166 96 180 92 hintmask 11001110",
                        "662 329 rmoveto", "44 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-40 126 rmoveto", "hintmask 11101110",
                        "169 callsubr", "hintmask 11011110", "-54 -22 rmoveto",
                        "9 43 -84 0 rlineto",
                        "-12 -10 -18 -11 -7 3 -7 9 hvcurveto",
                        "281 43 rmoveto", "-9 -43 81 0 rlineto",
                        "13 10 17 11 7 -4 8 -9 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0231
     */
    public void testuni0231() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0231");
        assertNotNull(cs);
        assertEquals("uni0231", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 81 96 34 44 hstem",
                        "34 79 77 96 81 79 vstem", "230 409 rmoveto",
                        "-10 callsubr", "-196 -204 rmoveto", "-9 callsubr",
                        "156 366 rmoveto", "92 callsubr", "168 82 rmoveto",
                        "14 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0232
     */
    public void testuni0232() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0232");
        assertNotNull(cs);
        assertEquals("uni0232", cs.getName());
        String[] text =
                {"73 1 27 590 27 79 44 hstem", "254 80 vstem",
                        "254 72 rmoveto", "-36 callsubr", "159 443 rmoveto",
                        "170 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0233
     */
    public void testuni0233() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0233");
        assertNotNull(cs);
        assertEquals("uni0233", cs.getName());
        String[] text =
                {"8 -230 55 577 27 110 44 hstem", "208 410 rmoveto",
                        "5 callsubr", "177 129 rmoveto", "171 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0234
     */
    public void testuni0234() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0234");
        assertNotNull(cs);
        assertEquals("uni0234", cs.getName());
        String[] text =
                {
                        "-121 -25 44 118 27 534 -20 hstem",
                        "94 74 178 28 vstem",
                        "268 118 rmoveto",
                        "12 12 12 7 14 0 12 0 11 -4 7 -7 6 -5 4 -9 0 -9 0 -17 -8 -18 -12 -12 -23 -23 -26 -14 -26 0 -18 0 -13 4 -11 7 rrcurveto",
                        "25 44 21 31 13 13 rrcurveto",
                        "-86 -136 rmoveto",
                        "15 -5 16 -2 20 0 29 0 43 14 30 31 22 22 17 24 0 36 0 19 -8 17 -10 9 -9 10 -12 7 -21 0 -20 0 -21 -13 -16 -15 rrcurveto",
                        "-20 -20 -20 -32 -23 -42 -16 17 -10 32 0 67 rrcurveto",
                        "540 -22 vlineto",
                        "-9 -6 -18 -10 -24 -7 -35 -11 -27 -1 -9 -2 rrcurveto",
                        "-31 vlineto",
                        "16 4 21 3 10 0 9 0 8 -4 2 -9 2 -7 2 -18 0 -30 rrcurveto",
                        "-471 vlineto", "0 -64 41 -31 29 -14 rrcurveto",
                        "-48 -86 19 -9 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0235
     */
    public void testuni0235() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0235");
        assertNotNull(cs);
        assertEquals("uni0235", cs.getName());
        String[] text =
                {"161 -8 44 -35 27 126 27 213 48 hstemhm",
                        "91 75 198 74 175 31 hintmask 10111110",
                        "476 47 rmoveto", "47 81 22 26 28 0 rrcurveto",
                        "23 17 -14 -21 -44 -55 -39 -39 hvcurveto",
                        "-19 0 -13 4 -11 7 rrcurveto", "-112 244 rmoveto",
                        "-177 vlineto", "0 -64 41 -30 29 -15 rrcurveto",
                        "-48 -86 19 -8 47 88 rlineto",
                        "15 -5 16 -2 20 0 rrcurveto",
                        "58 83 53 73 26 -15 37 -45 hvcurveto",
                        "-50 0 -38 -66 -32 -56 -16 17 -10 31 0 68 rrcurveto",
                        "109 vlineto", "89 -19 69 -90 vhcurveto",
                        "-51 0 -48 -14 -64 -75 rrcurveto",
                        "-3 0 3 89 -15 0 rlineto",
                        "-7 0 -8 -3 -11 -5 -31 -17 -30 -5 -42 -7 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "14 8 -7 -54 hvcurveto", "-249 vlineto",
                        "hintmask 01111110", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 63 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -3 3 -5 vhcurveto",
                        "-14 hlineto", "-33 -10 15 29 hvcurveto",
                        "245 vlineto", "51 60 38 17 44 0 rrcurveto",
                        "53 12 -33 -70 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0236
     */
    public void testuni0236() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0236");
        assertNotNull(cs);
        assertEquals("uni0236", cs.getName());
        String[] text =
                {
                        "-127 -15 44 118 27 217 39 hstemhm",
                        "89 75 -58 58 177 28 hintmask 11100100",
                        "263 128 rmoveto",
                        "12 12 13 7 13 0 12 0 11 -4 7 -7 6 -6 4 -8 0 -10 0 -16 -8 -18 -12 -13 -23 -22 -26 -14 -25 0 -19 0 -13 4 -11 7 rrcurveto",
                        "25 43 21 32 13 13 rrcurveto",
                        "hintmask 11110100",
                        "-174 -21 rmoveto",
                        "0 -64 41 -30 29 -14 rrcurveto",
                        "-48 -86 19 -9 47 88 rlineto",
                        "15 -5 16 -2 20 0 29 0 43 14 31 31 21 21 17 25 0 35 0 20 -8 17 -9 9 -10 10 -12 7 -20 0 -21 0 -21 -13 -16 -15 rrcurveto",
                        "-20 -20 -20 -32 -23 -42 -16 17 -9 32 0 67 rrcurveto",
                        "223 111 39 vlineto", "hintmask 11101100",
                        "-111 154 hlineto", "-58 -20 0 -19 rlineto",
                        "0 -44 -4 -28 -8 -15 rrcurveto", "hintmask 11110100",
                        "-5 -5 rlineto", "-15 -18 -29 -5 -25 0 rrcurveto",
                        "-39 69 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0237
     */
    public void testuni0237() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0237");
        assertNotNull(cs);
        assertEquals("uni0237", cs.getName());
        String[] text =
                {"-224 -213 29 626 -20 hstem", "125 75 vstem",
                        "51 -184 rmoveto", "-16 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0238
     */
    public void testuni0238() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0238");
        assertNotNull(cs);
        assertEquals("uni0238", cs.getName());
        String[] text =
                {"248 -12 42 -42 28 382 44 -35 35 256 -20 hstemhm",
                        "34 78 228 75 221 77 hintmask 10011111",
                        "271 672 rmoveto", "2 -25 rlineto",
                        "-3 2 -2 3 vhcurveto", "33 4 rlineto",
                        "19 10 -21 -47 hvcurveto", "-163 vlineto",
                        "-36 24 -44 3 -20 0 rrcurveto",
                        "-82 -124 -58 -173 -104 65 -119 124 hvcurveto",
                        "47 0 38 16 32 33 rrcurveto", "hintmask 01101111",
                        "-49 18 vlineto",
                        "11 11 11 15 9 11 29 -25 36 -12 43 0 rrcurveto",
                        "99 117 85 164 122 -85 83 -86 hvcurveto",
                        "-49 0 -44 -21 -34 -37 rrcurveto", "314 -22 vlineto",
                        "-46 -20 -60 -6 -16 0 rrcurveto", "144 -618 rmoveto",
                        "300 vlineto", "47 38 49 6 10 0 rrcurveto",
                        "61 54 -72 -102 -114 -50 -94 -95 hvcurveto",
                        "-31 0 -25 13 -20 25 rrcurveto", "-75 294 rmoveto",
                        "-277 vlineto", "hintmask 10011111",
                        "-24 -27 -31 -14 -36 0 rrcurveto",
                        "-49 -88 47 152 78 25 100 101 hvcurveto",
                        "47 0 33 -19 22 -40 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0239
     */
    public void testuni0239() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0239");
        assertNotNull(cs);
        assertEquals("uni0239", cs.getName());
        String[] text =
                {"247 -228 28 188 34 -34 44 364 46 -35 35 hstemhm",
                        "36 76 226 75 220 78 hintmask 10101111",
                        "235 407 rmoveto", "42 0 34 -25 27 -46 rrcurveto", "",
                        "-282 vlineto", "-26 -20 -35 -2 -19 0 rrcurveto",
                        "-58 -88 44 153 hvcurveto", "104 43 74 80 vhcurveto",
                        "65 -607 rmoveto", "-18 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "-22 vlineto",
                        "0 64 2 36 39 65 -2 0 vhcurveto", "22 vlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-34 -4 13 31 hvcurveto", "166 vlineto",
                        "hintmask 11010111", "25 -14 31 -8 36 0 rrcurveto",
                        "93 113 79 170 107 -68 98 -96 hvcurveto",
                        "-31 0 -58 -10 -45 -70 rrcurveto", "53 vlineto",
                        "hintmask 10101111", "12 -2 15 -11 vhcurveto",
                        "-10 0 -8 -12 -6 -9 rrcurveto", "-12 -22 rlineto",
                        "-33 30 -43 13 -49 0 rrcurveto",
                        "-122 -81 -102 -132 -92 54 -128 144 hvcurveto",
                        "57 0 32 20 15 13 rrcurveto", "-177 vlineto",
                        "-26 0 -18 -38 vhcurveto", "hintmask 11010111",
                        "221 596 rmoveto",
                        "67 45 -76 -110 -86 -27 -102 -106 hvcurveto",
                        "-17 0 -36 2 -34 41 rrcurveto", "249 vlineto",
                        "22 53 51 29 35 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni023A
     */
    public void testuni023A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni023A");
        assertNotNull(cs);
        assertEquals("uni023A", cs.getName());
        String[] text =
                {"193 0 28 216 39 375 -20 60 -20 hstem", "317 244 rmoveto",
                        "135 0 64 -172 rlineto", "2 -6 1 -6 0 -5 rrcurveto",
                        "-16 -16 -11 -31 vhcurveto", "-28 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 98 2 35 39 77 -2 0 vhcurveto", "3 2 0 19 rlineto",
                        "5 -5 3 -5 vhcurveto", "-11 hlineto",
                        "-40 0 -20 19 -14 39 rrcurveto",
                        "-139 369 159 243 -51 0 -127 -194 -47 124 rlineto",
                        "-8 20 -8 10 -18 0 -10 0 -8 -7 -9 -23 rrcurveto",
                        "-234 -547 rlineto", "-14 -34 -18 -19 -41 0 rrcurveto",
                        "-12 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 64 2 26 vhcurveto",
                        "13 0 -73 -111 51 0 72 110 rlineto",
                        "31 29 -1 0 hvcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-29 0 -7 0 rlineto",
                        "228 347 rmoveto", "35 -92 -95 0 rlineto",
                        "42 142 rmoveto", "-93 -142 -33 0 rlineto",
                        "-19 -7 3 6 hvcurveto", "0 3 1 2 1 4 rrcurveto",
                        "104 249 rlineto", "-199 -478 rmoveto",
                        "65 155 rlineto", "4 11 8 6 24 0 rrcurveto",
                        "26 0 -130 -198 rlineto",
                        "-1 2 0 3 0 2 0 6 1 6 3 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni023B
     */
    public void testuni023B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni023B");
        assertNotNull(cs);
        assertEquals("uni023B", cs.getName());
        String[] text =
                {
                        "144 -12 41 592 37 40 -20 hstem",
                        "37 87 vstem",
                        "211 89 rmoveto",
                        "286 481 rlineto",
                        "36 -31 21 -42 13 -43 rrcurveto",
                        "30 4 rlineto",
                        "-10 52 -9 48 -3 55 -16 1 -15 4 -16 5 rrcurveto",
                        "45 75 -51 0 -36 -60 rlineto",
                        "-31 10 -40 10 -59 0 -166 0 -153 -146 0 -197 0 -94 35 -96 72 -63 rrcurveto",
                        "-102 -172 50 0 87 146 rlineto",
                        "47 -30 59 -18 70 0 97 0 89 48 68 89 rrcurveto",
                        "-23 15 rlineto",
                        "-71 -78 -68 -33 -93 0 -59 0 -48 24 -36 36 rrcurveto",
                        "-29 36 rmoveto",
                        "-39 59 -19 76 0 74 0 203 142 84 79 0 48 0 38 -10 30 -16 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni023C
     */
    public void testuni023C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni023C");
        assertNotNull(cs);
        assertEquals("uni023C", cs.getName());
        String[] text =
                {
                        "-98 -12 44 376 34 hstem",
                        "37 77 vstem",
                        "121 165 rmoveto",
                        "-5 20 -2 22 0 23 0 108 49 70 66 0 37 0 16 -17 8 -21 rrcurveto",
                        "75 91 rmoveto",
                        "-34 -42 rlineto",
                        "-24 14 -33 9 -40 0 -108 0 -89 -92 0 -142 0 -43 8 -40 17 -33 rrcurveto",
                        "-72 -87 30 -26 63 78 rlineto",
                        "35 -44 51 -25 63 0 60 0 48 27 44 76 rrcurveto",
                        "-18 14 rlineto",
                        "-31 -45 -38 -28 -43 0 -49 0 -44 33 -25 55 rrcurveto",
                        "164 201 rlineto",
                        "7 -17 17 -8 18 0 21 0 18 15 0 29 0 19 -7 19 -14 16 rrcurveto",
                        "36 44 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni023D
     */
    public void testuni023D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni023D");
        assertNotNull(cs);
        assertEquals("uni023D", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 313 44 222 27 hstemhm",
                        "106 81 hintmask 01111000", "349 39 rmoveto",
                        "-115 hlineto", "-29 -18 19 31 hvcurveto",
                        "263 134 vlineto", "13 11 17 12 7 -4 8 -10 hvcurveto",
                        "-144 178 hlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-178 -76 vlineto",
                        "-11 -10 -18 -12 -7 3 -7 9 hvcurveto",
                        "85 -280 hlineto", "hintmask 10111000", "-54 callsubr",
                        "hintmask 01111000", "-53 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni023E
     */
    public void testuni023E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni023E");
        assertNotNull(cs);
        assertEquals("uni023E", cs.getName());
        String[] text =
                {"76 1 27 578 40 hstem", "258 80 vstem", "338 430 rmoveto",
                        "134 vlineto", "34 12 8 36 vhcurveto", "57 hlineto",
                        "-185 -312 rmoveto",
                        "-208 -351 51 0 157 265 0 -136 rlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 39 88 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-39 -16 13 31 hvcurveto", "0 273 153 257 rlineto",
                        "25 -9 10 -23 15 -56 rrcurveto", "29 5 rlineto",
                        "-11 53 -7 52 -4 49 rrcurveto",
                        "-16 -2 49 83 -51 0 -64 -108 -389 0 rlineto",
                        "-21 0 17 6 hvcurveto", "-27 4 rlineto",
                        "-4 -49 -6 -52 -12 -53 rrcurveto", "30 -5 rlineto",
                        "20 80 13 12 55 0 rrcurveto", "84 hlineto",
                        "37 12 -8 -31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni023F
     */
    public void testuni023F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni023F");
        assertNotNull(cs);
        assertEquals("uni023F", cs.getName());
        String[] text =
                {
                        "-130 -173 27 134 28 396 30 hstem",
                        "53 61 153 67 vstem",
                        "43 140 rmoveto",
                        "4 -49 3 -51 0 -42 10 2 8 1 5 0 7 0 5 -1 7 -1 9 -3 9 -2 10 -1 19 -12 7 -27 17 -43 21 -51 35 -33 43 0 rrcurveto",
                        "24 0 18 6 20 12 11 8 7 11 0 10 0 7 -2 10 -5 6 -5 6 -10 6 -7 0 -7 0 -9 -3 -5 -6 -7 -7 -6 -11 -4 -13 rrcurveto",
                        "-4 -10 -5 -5 -10 0 -24 0 -18 13 -27 70 -7 17 -5 18 -10 16 rrcurveto",
                        "17 hlineto",
                        "47 105 29 99 hvcurveto",
                        "0 80 -65 36 -81 30 -55 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -31 16 -37 9 -50 0 -79 0 -59 -48 0 -67 0 -75 38 -21 73 -32 79 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 rrcurveto",
                        "-37 0 -27 18 -10 11 -22 23 -11 48 -3 25 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0241
     */
    public void testuni0241() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0241");
        assertNotNull(cs);
        assertEquals("uni0241", cs.getName());
        String[] text =
                {
                        "-44 1 27 592 38 hstem",
                        "10 100 66 80 93 79 vstem",
                        "428 491 rmoveto",
                        "93 -89 74 -130 -97 -102 -47 -104 -28 24 -18 21 37 18 25 24 vhcurveto",
                        "0 21 -23 34 29 25 26 22 30 8 41 0 rrcurveto",
                        "103 33 -72 -46 -57 -24 -104 -149 hvcurveto",
                        "-266 vlineto", "-30 -1 -17 -39 vhcurveto",
                        "-20 hlineto", "-4 -5 -2 -6 hvcurveto", "-21 vlineto",
                        "0 67 2 44 41 66 -2 0 vhcurveto", "22 vlineto",
                        "3 -2 4 -7 vhcurveto", "-20 hlineto",
                        "-38 -2 19 29 hvcurveto", "126 vlineto",
                        "0 135 172 12 0 142 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0243
     */
    public void testuni0243() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0243");
        assertNotNull(cs);
        assertEquals("uni0243", cs.getName());
        String[] text =
                {
                        "91 -1 29 -29 34 134 44 127 35 238 35 -28 27 hstemhm",
                        "106 81 228 77 -30 89 hintmask 0111001010000000",
                        "187 211 rmoveto",
                        "127 94 vlineto",
                        "117 64 -63 -90 -61 -35 -91 -152 -81 -7 6 33 hvcurveto",
                        "95 132 vlineto",
                        "13 11 18 11 7 -4 8 -10 hvcurveto",
                        "-312 -191 rmoveto",
                        "0 -21 129 1 rlineto",
                        "29 0 47 -1 72 0 199 0 58 89 0 86 0 93 -46 68 -106 24 rrcurveto",
                        "hintmask 0011101100000000", "-78 callsubr",
                        "hintmask 0011011010000000", "-77 callsubr",
                        "hintmask 0011101010000000", "-76 callsubr",
                        "hintmask 1011011010000000", "-4 2 -3 5 vhcurveto",
                        "30 hlineto", "42 10 -10 -34 hvcurveto",
                        "-363 -77 vlineto",
                        "-12 -10 -18 -11 -7 3 -8 9 hvcurveto",
                        "87 -93 hlineto", "-35 -12 -11 -40 vhcurveto",
                        "-30 hlineto", "-5 0 -1 -5 -1 -3 rrcurveto",
                        "170 555 rmoveto", "hintmask 0011101100000000",
                        "-72 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0250
     */
    public void testuni0250() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0250");
        assertNotNull(cs);
        assertEquals("uni0250", cs.getName());
        String[] text =
                {
                        "-45 -12 30 376 48 -41 41 hstemhm",
                        "19 24 54 74 168 73 -61 72 hintmask 11011100",
                        "106 442 rmoveto",
                        "-50 0 -31 -21 -6 -72 rrcurveto",
                        "24 -6 rlineto",
                        "2 22 6 29 22 0 rrcurveto",
                        "23 1 -26 -61 hvcurveto",
                        "-147 vlineto",
                        "-142 84 -30 73 64 94 51 58 24 -16 16 -24 -29 -10 -20 -13 vhcurveto",
                        "0 -7 1 -8 2 -3 1 -3 2 -6 0 -12 rrcurveto",
                        "-30 -44 -17 -38 -34 -52 21 112 vhcurveto",
                        "92 23 rlineto",
                        "hintmask 10111010",
                        "95 24 65 53 0 76 0 75 -51 40 -70 0 -46 0 -17 -11 -46 -32 rrcurveto",
                        "-23 -16 rlineto",
                        "-4 25 -21 34 -39 0 rrcurveto",
                        "65 -257 rmoveto",
                        "165 vlineto",
                        "26 22 46 29 29 0 64 0 15 -47 0 -32 0 -55 -23 -45 -157 -37 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0251
     */
    public void testuni0251() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0251");
        assertNotNull(cs);
        assertEquals("uni0251", cs.getName());
        String[] text =
                {"7 -12 48 -48 42 377 35 hstemhm",
                        "34 78 229 75 55 23 hintmask 10111100",
                        "342 42 rmoveto", "5 -24 21 -30 38 0 rrcurveto",
                        "54 34 23 85 hvcurveto", "-23 hlineto",
                        "-24 -6 -36 -25 -23 -1 26 61 vhcurveto",
                        "319 -22 vlineto", "-53 -30 rlineto",
                        "-27 18 -34 12 -39 0 rrcurveto",
                        "-91 -116 -72 -161 hvcurveto", "hintmask 01111100",
                        "-127 95 -94 89 vhcurveto",
                        "62 0 50 40 12 14 rrcurveto", "-91 -12 rmoveto",
                        "-67 -72 61 140 135 74 41 49 hvcurveto",
                        "64 0 30 -41 12 -21 rrcurveto", "-270 vlineto",
                        "-19 -20 -35 -25 -36 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0252
     */
    public void testuni0252() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0252");
        assertNotNull(cs);
        assertEquals("uni0252", cs.getName());
        String[] text =
                {"7 -12 34 372 48 -43 43 hstemhm",
                        "9 23 55 75 229 78 hintmask 11011100",
                        "161 387 rmoveto", "-5 25 -21 30 -38 0 rrcurveto",
                        "-55 -33 -23 -86 hvcurveto", "23 hlineto",
                        "25 6 36 25 23 1 -26 -61 vhcurveto", "-319 22 vlineto",
                        "53 30 rlineto", "26 -18 35 -12 39 0 rrcurveto", "",
                        "91 116 72 160 hvcurveto", "hintmask 10111100",
                        "128 -95 94 -89 vhcurveto",
                        "-62 0 -50 -41 -12 -14 rrcurveto", "90 12 rmoveto",
                        "68 72 -60 -140 -136 -74 -41 -49 hvcurveto",
                        "-64 0 -30 42 -12 20 rrcurveto", "271 vlineto",
                        "19 20 35 24 35 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0253
     */
    public void testuni0253() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0253");
        assertNotNull(cs);
        assertEquals("uni0253", cs.getName());
        String[] text =
                {"-19 -12 28 382 44 224 32 hstem", "69 75 221 77 vstem",
                        "346 622 rmoveto",
                        "38 -50 38 -75 -47 -105 -19 -204 vhcurveto",
                        "-487 18 vlineto",
                        "13 11 9 13 9 13 29 -25 36 -12 43 0 rrcurveto",
                        "99 117 87 164 122 -85 81 -86 hvcurveto",
                        "-49 0 -44 -18 -34 -37 rrcurveto", "101 vlineto",
                        "152 43 26 29 vhcurveto",
                        "21 0 19 -15 12 -29 7 -19 9 -17 28 0 rrcurveto",
                        "21 13 14 22 hvcurveto", "-202 -568 rmoveto",
                        "302 vlineto", "43 39 45 3 18 0 rrcurveto",
                        "62 53 -70 -102 -114 -50 -96 -95 hvcurveto",
                        "-31 0 -25 13 -20 25 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0254
     */
    public void testuni0254() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0254");
        assertNotNull(cs);
        assertEquals("uni0254", cs.getName());
        String[] text =
                {
                        "-98 -12 34 376 44 hstem",
                        "297 77 vstem",
                        "27 339 rmoveto",
                        "17 -14 rlineto",
                        "32 45 37 28 43 0 rrcurveto",
                        "77 64 -82 -116 -108 -49 -70 -66 hvcurveto",
                        "-59 0 -7 42 -3 34 -3 25 -20 10 -22 0 rrcurveto",
                        "-20 -18 -14 -29 -53 51 -49 96 107 90 92 141 130 -76 91 -120 hvcurveto",
                        "-59 0 -48 -27 -44 -76 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0255
     */
    public void testuni0255() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0255");
        assertNotNull(cs);
        assertEquals("uni0255", cs.getName());
        String[] text =
                {
                        "-79 -12 64 112 25 225 28 hstem",
                        "37 75 268 23 vstem",
                        "403 147 rmoveto",
                        "34 -29 8 -29 vhcurveto",
                        "-52 0 -61 -80 -27 -39 -66 30 -27 78 0 69 0 75 37 92 89 0 54 0 9 -33 7 -30 7 -26 6 -25 35 0 rrcurveto",
                        "23 22 19 24 67 -91 32 -55 -134 -84 -106 -128 hvcurveto",
                        "0 -88 35 -85 85 -35 rrcurveto",
                        "-57 -96 21 -4 58 93 rlineto",
                        "12 -3 14 -2 13 0 rrcurveto", "77 108 76 83 hvcurveto",
                        "-23 -8 rmoveto", "-48 -78 -39 -41 vhcurveto",
                        "-12 0 -17 4 -11 3 24 31 57 74 41 0 rrcurveto",
                        "17 20 -5 -20 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0256
     */
    public void testuni0256() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0256");
        assertNotNull(cs);
        assertEquals("uni0256", cs.getName());
        String[] text =
                {"16 -188 112 -112 32 144 42 377 35 256 -20 hstemhm",
                        "34 78 228 75 hintmask 10111110", "271 661 rmoveto",
                        "-31 vlineto", "16 4 21 3 10 0 rrcurveto",
                        "21 1 -16 -52 hvcurveto", "-154 vlineto",
                        "-36 24 -44 3 -20 0 rrcurveto",
                        "-82 -124 -63 -173 -103 65 -115 124 hvcurveto",
                        "47 0 38 15 32 33 rrcurveto",
                        "-177 70 -47 60 85 31 45 31 22 -13 14 -21 vhcurveto",
                        "-27 0 -14 -18 -5 -21 rrcurveto", "hintmask 01111110",
                        "-6 -21 -5 -20 -30 0 rrcurveto",
                        "-29 -21 30 154 hvcurveto", "670 -22 vlineto",
                        "-43 -25 -61 -10 -18 -2 rrcurveto", "-33 -254 rmoveto",
                        "47 0 33 -19 22 -40 rrcurveto", "-278 vlineto",
                        "-24 -27 -31 -13 -36 0 rrcurveto",
                        "-46 -91 36 158 79 25 104 101 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0257
     */
    public void testuni0257() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0257");
        assertNotNull(cs);
        assertEquals("uni0257", cs.getName());
        String[] text =
                {
                        "48 -12 42 377 35 224 32 hstem",
                        "32 77 229 75 vstem",
                        "591 622 rmoveto",
                        "38 -36 38 -76 vhcurveto",
                        "-28 0 -16 -9 -26 -20 -51 -40 -20 -58 0 -102 rrcurveto",
                        "-54 vlineto",
                        "-37 24 -43 3 -20 0 rrcurveto",
                        "-83 -123 -71 -163 -104 64 -116 125 hvcurveto",
                        "46 0 39 15 32 33 rrcurveto",
                        "-48 22 vlineto",
                        "38 19 42 12 46 8 rrcurveto",
                        "30 vlineto",
                        "-9 -2 -29 -6 -13 0 rrcurveto",
                        "-20 -2 14 53 hvcurveto",
                        "366 vlineto",
                        "0 39 1 33 5 27 10 54 19 31 26 0 31 0 6 -29 2 -15 2 -21 14 -15 28 0 rrcurveto",
                        "21 13 14 22 hvcurveto", "-355 -215 rmoveto",
                        "47 0 32 -19 23 -40 rrcurveto", "-278 vlineto",
                        "-25 -27 -31 -13 -35 0 rrcurveto",
                        "-46 -92 38 157 78 26 104 101 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0258
     */
    public void testuni0258() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0258");
        assertNotNull(cs);
        assertEquals("uni0258", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 hstem",
                        "40 80 202 76 vstem",
                        "54 93 rmoveto",
                        "-20 -16 rlineto",
                        "38 -52 59 -37 72 0 rrcurveto",
                        "137 58 102 109 152 -100 91 -95 -132 -31 -103 -84 -11 7 -6 11 hvcurveto",
                        "263 hlineto",
                        "1 -6 0 -6 0 -8 0 -102 -71 -79 -72 0 -55 0 -35 18 -35 38 rrcurveto",
                        "264 184 rmoveto", "-184 hlineto",
                        "-9 -5 5 9 93 47 24 37 hvcurveto",
                        "23 0 74 -9 17 -122 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0259
     */
    public void testuni0259() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0259");
        assertNotNull(cs);
        assertEquals("uni0259", cs.getName());
        String[] text =
                {"-65 -11 34 131 39 201 49 hstem", "48 79 203 76 vstem",
                        "62 338 rmoveto", "153 callsubr", "284 -200 rmoveto",
                        "154 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni025A
     */
    public void testuni025A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni025A");
        assertNotNull(cs);
        assertEquals("uni025A", cs.getName());
        String[] text =
                {
                        "90 -12 31 375 48 hstem",
                        "52 71 196 78 vstem",
                        "291 333 rmoveto",
                        "-109 -55 -130 -74 0 -100 rrcurveto",
                        "-28 22 -88 112 169 42 141 109 vhcurveto",
                        "0 36 -6 34 -14 28 25 18 34 21 20 6 -3 -10 -1 -15 2 -15 6 -44 25 -10 15 2 26 4 20 15 43 43 rrcurveto",
                        "-14 18 rlineto",
                        "-19 -15 -11 -7 -22 -3 -18 -3 -7 15 -4 21 -5 36 11 24 14 28 rrcurveto",
                        "-15 8 rlineto",
                        "-38 -40 -51 -35 -52 -29 -33 45 -52 28 -67 0 -66 0 -81 -55 -35 -51 rrcurveto",
                        "15 -14 rlineto",
                        "40 39 54 33 48 0 24 0 53 -7 33 -54 rrcurveto",
                        "17 -37 rmoveto", "7 -24 4 -28 0 -36 rrcurveto",
                        "-152 -71 -37 -47 -30 -48 36 55 vhcurveto",
                        "0 74 87 56 98 56 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni025B
     */
    public void testuni025B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni025B");
        assertNotNull(cs);
        assertEquals("uni025B", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 hstemhm",
                        "44 79 -60 71 hintmask 10111000", "123 119 rmoveto",
                        "172 callsubr", "hintmask 11010100", "173 callsubr",
                        "hintmask 10110100", "174 callsubr",
                        "hintmask 10111000", "175 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni025C
     */
    public void testuni025C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni025C");
        assertNotNull(cs);
        assertEquals("uni025C", cs.getName());
        String[] text =
                {
                        "-99 -12 33 184 38 -33 28 175 29 hstemhm",
                        "269 71 -59 78 hintmask 10110100",
                        "281 119 rmoveto",
                        "176 callsubr",
                        "",
                        "hintmask 10111000",
                        "48 19 26 26 0 50 rrcurveto",
                        "40 -34 80 -119 -77 -58 -36 -36 -29 23 -8 12 vhcurveto",
                        "22 0 11 16 9 17 12 22 13 25 39 0 rrcurveto",
                        "32 44 -23 -66 -69 -36 -17 -43 hvcurveto",
                        "hintmask 11010100", "177 callsubr",
                        "hintmask 10110100", "178 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni025D
     */
    public void testuni025D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni025D");
        assertNotNull(cs);
        assertEquals("uni025D", cs.getName());
        String[] text =
                {
                        "-14 -12 33 184 38 -33 28 175 29 hstemhm",
                        "269 71 -59 78 hintmask 10110100",
                        "281 119 rmoveto",
                        "176 callsubr",
                        "hintmask 10111000",
                        "48 19 26 26 0 50 0 25 -14 41 -40 27 21 19 24 21 16 8 -2 -10 2 -16 5 -14 13 -42 26 -6 15 4 25 9 17 17 35 50 rrcurveto",
                        "-16 16 rlineto",
                        "-17 -18 -10 -9 -21 -6 -17 -6 -10 13 -7 20 -10 35 6 25 9 30 rrcurveto",
                        "-16 6 rlineto",
                        "-31 -47 -47 -43 -46 -38 -18 5 -21 4 -24 0 rrcurveto",
                        "-77 -58 -36 -36 -29 23 -8 12 hvcurveto",
                        "22 0 11 16 9 17 12 22 13 25 39 0 rrcurveto",
                        "32 44 -23 -66 -69 -36 -17 -43 hvcurveto",
                        "hintmask 11010100", "177 callsubr",
                        "hintmask 10110100", "178 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni025E
     */
    public void testuni025E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni025E");
        assertNotNull(cs);
        assertEquals("uni025E", cs.getName());
        String[] text =
                {
                        "-23 -12 63 136 55 133 67 hstem",
                        "34 34 337 34 vstem",
                        "257 51 rmoveto",
                        "-133 -56 62 97 47 34 118 149 107 47 -22 -56 hvcurveto",
                        "0 -39 -34 -22 -63 -13 -39 11 -42 8 -22 0 rrcurveto",
                        "-30 -16 -9 -19 -19 17 -8 34 hvcurveto",
                        "42 0 32 9 25 7 64 -15 32 -28 0 -36 rrcurveto",
                        "-68 -66 -5 -82 vhcurveto",
                        "391 vmoveto",
                        "-109 -114 -72 -164 -137 117 -81 111 142 35 66 53 hvcurveto",
                        "0 48 -32 41 -62 19 71 22 23 36 0 38 rrcurveto",
                        "54 -27 77 -155 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni025F
     */
    public void testuni025F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni025F");
        assertNotNull(cs);
        assertEquals("uni025F", cs.getName());
        String[] text =
                {"-205 -231 27 442 39 125 27 hstem", "130 75 vstem",
                        "283 277 rmoveto", "-78 95 hlineto",
                        "20 11 10 32 vhcurveto", "13 hlineto",
                        "4 2 2 4 hvcurveto", "0 21 -2 2 rlineto",
                        "0 -72 -2 -28 -30 -81 2 0 vhcurveto",
                        "-1 -2 0 -21 rlineto", "-4 3 -2 3 vhcurveto",
                        "28 hlineto", "31 12 -8 -22 hvcurveto",
                        "-95 -108 -39 108 -256 vlineto",
                        "-150 -26 -36 -32 vhcurveto",
                        "-22 0 -1 10 -1 8 -2 16 -11 25 -24 0 rrcurveto",
                        "-18 -13 -14 -23 -34 43 -15 47 hvcurveto",
                        "28 0 29 14 21 21 36 35 21 60 0 99 rrcurveto",
                        "240 78 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0260
     */
    public void testuni0260() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0260");
        assertNotNull(cs);
        assertEquals("uni0260", cs.getName());
        String[] text =
                {
                        "30 -201 32 157 43 380 31 230 32 hstem",
                        "37 77 220 75 vstem",
                        "334 45 rmoveto",
                        "-26 vlineto",
                        "-131 -20 -57 -83 vhcurveto",
                        "-47 0 -25 43 -8 18 -7 18 -9 15 -27 0 rrcurveto",
                        "-21 -13 -14 -21 -53 97 -38 56 hvcurveto",
                        "38 0 37 8 34 25 54 37 19 61 0 102 rrcurveto",
                        "456 vlineto",
                        "0 37 2 35 5 27 10 54 29 31 26 0 23 0 17 -15 12 -30 7 -18 9 -17 28 0 rrcurveto",
                        "21 13 14 21 39 -49 38 -76 hvcurveto",
                        "-28 0 -23 -9 -28 -20 -53 -38 -20 -59 0 -103 rrcurveto",
                        "-53 vlineto", "-23 13 -27 7 -31 0 rrcurveto",
                        "-94 -122 -88 -165 -121 88 -80 83 hvcurveto",
                        "49 0 43 20 34 37 rrcurveto", "-105 -14 rmoveto",
                        "-48 -67 56 115 109 50 100 94 hvcurveto",
                        "31 0 25 -14 20 -24 rrcurveto", "-297 vlineto",
                        "-42 -42 -40 -3 -23 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0261
     */
    public void testuni0261() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0261");
        assertNotNull(cs);
        assertEquals("uni0261", cs.getName());
        String[] text =
                {"-12 -232 32 188 43 379 32 hstem", "37 77 220 75 vstem",
                        "334 45 rmoveto", "-26 vlineto",
                        "-131 -20 -88 -83 vhcurveto",
                        "-47 0 -24 43 -9 17 -8 19 -8 16 -27 0 rrcurveto",
                        "-21 -13 -15 -21 -52 97 -39 56 hvcurveto",
                        "38 0 37 8 34 25 54 37 19 92 0 102 rrcurveto",
                        "410 -13 vlineto",
                        "-11 -1 -16 -19 -9 -17 -29 25 -36 12 -42 0 rrcurveto",
                        "-94 -122 -82 -165 -121 90 -86 81 hvcurveto",
                        "49 0 43 20 34 37 rrcurveto", "-105 -14 rmoveto",
                        "-62 -53 85 92 109 50 93 94 hvcurveto",
                        "31 0 25 -14 20 -24 rrcurveto", "-296 vlineto",
                        "-35 -38 -49 -7 -21 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0262
     */
    public void testuni0262() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0262");
        assertNotNull(cs);
        assertEquals("uni0262", cs.getName());
        String[] text =
                {"0 -12 35 153 27 205 34 hstemhm",
                        "34 77 258 53 -41 27 hintmask 11111000",
                        "369 131 rmoveto", "-53 vlineto",
                        "-17 -33 -42 -22 -34 0 rrcurveto",
                        "-114 -51 117 89 114 88 65 53 hvcurveto",
                        "56 0 65 -26 6 -71 rrcurveto", "hintmask 11110100",
                        "2 -18 27 0 0 138 rlineto",
                        "-40 0 -77 11 -29 0 rrcurveto",
                        "-127 -101 -93 -142 -116 87 -103 130 hvcurveto",
                        "hintmask 11111000", "77 0 55 25 39 54 rrcurveto",
                        "86 vlineto", "0 9 3 6 7 4 5 3 25 2 0 0 rrcurveto",
                        "4 6 1 7 hvcurveto", "21 vlineto",
                        "0 -47 -3 -30 -32 -48 3 0 vhcurveto", "-22 vlineto",
                        "0 -4 1 -3 6 -1 rrcurveto", "12 hlineto",
                        "32 3 -15 -30 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0264
     */
    public void testuni0264() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0264");
        assertNotNull(cs);
        assertEquals("uni0264", cs.getName());
        String[] text =
                {"-117 -12 35 380 28 hstem", "102 47 64 59 vstem",
                        "149 61 rmoveto", "0 16 10 39 24 41 rrcurveto",
                        "6 -11 rlineto", "17 -28 7 -48 0 -13 rrcurveto",
                        "-18 -11 -16 -18 -22 -13 14 24 vhcurveto",
                        "31 -73 rmoveto", "74 18 58 20 hvcurveto",
                        "0 30 0 22 -55 98 rrcurveto", "62 108 rlineto",
                        "33 56 17 15 36 7 rrcurveto", "28 vlineto",
                        "-61 0 -20 -21 -36 -62 rrcurveto",
                        "-53 -91 -50 89 rlineto",
                        "-33 58 -17 28 -80 0 rrcurveto", "-28 vlineto",
                        "33 -5 13 -20 26 -47 rrcurveto",
                        "74 -133 -19 -34 rlineto",
                        "-38 -66 -2 -15 0 -31 rrcurveto",
                        "-38 32 -26 46 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0265
     */
    public void testuni0265() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0265");
        assertNotNull(cs);
        assertEquals("uni0265", cs.getName());
        String[] text =
                {"29 -213 -21 222 48 366 28 hstem", "89 75 198 75 vstem",
                        "164 153 rmoveto", "205 vlineto",
                        "25 0 19 38 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "21 vlineto",
                        "0 -65 -1 -36 -39 -65 1 0 vhcurveto", "",
                        "-21 vlineto", "-5 4 -3 5 vhcurveto", "18 hlineto",
                        "35 3 -14 -30 hvcurveto", "-212 vlineto",
                        "-85 16 -73 91 vhcurveto",
                        "54 0 67 27 45 62 rrcurveto", "-311 23 vlineto",
                        "39 22 26 4 56 11 rrcurveto", "30 vlineto",
                        "-5 -1 -23 -5 -19 0 rrcurveto",
                        "-21 -1 16 51 hvcurveto", "464 vlineto",
                        "25 0 19 38 vhcurveto", "18 hlineto",
                        "5 3 3 5 hvcurveto", "21 vlineto",
                        "0 -64 -1 -36 -39 -65 1 0 vhcurveto", "-21 vlineto",
                        "-5 4 -3 4 vhcurveto", "19 hlineto",
                        "34 4 -14 -30 hvcurveto", "-246 vlineto",
                        "-47 -59 -41 -17 -42 0 rrcurveto",
                        "-60 -8 53 64 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0267
     */
    public void testuni0267() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0267");
        assertNotNull(cs);
        assertEquals("uni0267", cs.getName());
        String[] text =
                {"14 -231 31 201 27 374 40 224 32 hstem", "88 75 197 75 vstem",
                        "292 402 rmoveto", "-25 0 -59 -22 -45 -68 rrcurveto",
                        "-238 vlineto", "0 -38 7 -7 31 -1 rrcurveto",
                        "16 hlineto", "4 5 -2 -6 hvcurveto", "-21 vlineto",
                        "0 -62 2 -40 -39 -59 -2 0 vhcurveto", "21 vlineto",
                        "3 1 5 7 vhcurveto", "16 hlineto",
                        "37 1 1 13 0 32 rrcurveto", "395 vlineto",
                        "0 51 5 45 14 38 17 42 53 53 62 0 rrcurveto",
                        "86 40 -46 -30 -22 -14 -14 -20 hvcurveto",
                        "-28 0 -10 19 -9 20 -10 21 -10 20 -30 0 rrcurveto",
                        "-28 -43 -30 -154 hvcurveto", "-126 vlineto",
                        "38 61 63 25 48 0 rrcurveto",
                        "86 37 -71 -94 hvcurveto", "-202 vlineto",
                        "-257 -98 -49 -64 -34 -71 13 53 25 17 6 15 vhcurveto",
                        "8 0 23 -3 7 -34 3 -16 4 -13 27 0 rrcurveto",
                        "53 35 41 213 hvcurveto", "227 vlineto",
                        "53 -14 68 -54 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0268
     */
    public void testuni0268() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0268");
        assertNotNull(cs);
        assertEquals("uni0268", cs.getName());
        String[] text =
                {"-237 1 27 210 39 165 -20 101 96 hstemhm",
                        "78 95 -74 74 hintmask 11111000", "78 571 rmoveto",
                        "-17 callsubr", "176 -294 rmoveto",
                        "hintmask 11110100", "-81 165 -15 hlineto",
                        "-7 0 -7 -4 -11 -4 -29 -14 -11 -4 -64 -11 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "14 9 -8 -53 hvcurveto", "-44 -93 -39 93 -166 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-32 -11 15 29 hvcurveto", "166 81 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0269
     */
    public void testuni0269() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0269");
        assertNotNull(cs);
        assertEquals("uni0269", cs.getName());
        String[] text =
                {"-211 -12 53 401 -20 hstem", "94 74 vstem", "168 442 rmoveto",
                        "179 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni026A
     */
    public void testuni026A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni026A");
        assertNotNull(cs);
        assertEquals("uni026A", cs.getName());
        String[] text =
                {"-233 1 27 374 27 hstem", "97 74 vstem", "97 358 rmoveto",
                        "180 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni026B
     */
    public void testuni026B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni026B");
        assertNotNull(cs);
        assertEquals("uni026B", cs.getName());
        String[] text =
                {"-214 1 27 245 44 4 46 331 -20 hstem", "107 75 vstem",
                        "208 317 rmoveto", "-9 0 -9 2 -8 5 rrcurveto",
                        "374 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -37 -6 -15 0 rrcurveto",
                        "2 -25 rlineto", "-3 2 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "-209 vlineto",
                        "-7 2 -8 1 -8 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 34 13 14 26 0 10 0 10 -3 10 -5 rrcurveto",
                        "-241 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-23 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 72 2 36 39 72 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-23 hlineto", "-33 -10 15 29 hvcurveto",
                        "202 vlineto",
                        "4 -1 5 0 4 0 47 0 28 30 12 60 rrcurveto",
                        "-24 7 rlineto", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni026C
     */
    public void testuni026C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni026C");
        assertNotNull(cs);
        assertEquals("uni026C", cs.getName());
        String[] text =
                {"-143 1 27 253 34 81 30 272 -20 hstem", "18 30 137 74 vstem",
                        "185 315 rmoveto", "", "-59 hlineto",
                        "-48 -30 19 29 24 20 9 24 hvcurveto",
                        "55 0 24 -50 14 -31 rrcurveto", "161 hmoveto",
                        "-87 383 -22 hlineto",
                        "-20 -9 -14 -4 -18 -4 -18 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "-204 vlineto", "-21 31 -30 26 -49 0 rrcurveto",
                        "-22 -45 -20 -42 -62 38 -21 90 hvcurveto",
                        "39 -209 hlineto", "-29 -10 -15 -33 vhcurveto",
                        "-24 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 73 2 35 39 73 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-24 hlineto", "-32 -11 15 29 hvcurveto",
                        "209 87 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni026D
     */
    public void testuni026D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni026D");
        assertNotNull(cs);
        assertEquals("uni026D", cs.getName());
        String[] text =
                {
                        "-215 -232 94 -94 32 898 -20 hstemhm",
                        "113 75 hintmask 10110000",
                        "43 661 rmoveto",
                        "-31 vlineto",
                        "9 3 21 4 17 0 rrcurveto",
                        "22 1 -16 -52 hvcurveto",
                        "-541 vlineto",
                        "0 -91 6 -55 11 -28 26 -59 42 -27 47 0 rrcurveto",
                        "40 59 18 43 18 -15 15 -17 hvcurveto",
                        "-23 0 -7 -16 -5 -15 rrcurveto",
                        "hintmask 01110000",
                        "-5 -16 -6 -15 -22 0 -9 0 -14 4 -20 42 -9 18 -4 43 0 70 rrcurveto",
                        "721 -22 vlineto", "-21 -13 -27 -14 -75 -10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni026E
     */
    public void testuni026E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni026E");
        assertNotNull(cs);
        assertEquals("uni026E", cs.getName());
        String[] text =
                {"15 -229 29 201 27 363 39 268 -20 hstem",
                        "95 74 248 74 vstem", "95 72 rmoveto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-32 -11 15 29 hvcurveto", "282 vlineto",
                        "17 31 21 6 21 0 rrcurveto", "142 0 -157 -285 rlineto",
                        "21 5 20 2 17 0 rrcurveto",
                        "79 67 -63 -85 -118 -88 -47 -50 hvcurveto",
                        "-40 0 -28 23 -13 23 -12 21 -16 7 -23 0 rrcurveto",
                        "-22 -7 -15 -16 -32 62 -40 91 144 76 99 96 hvcurveto",
                        "0 106 -62 70 -118 10 rrcurveto", "130 236 rlineto",
                        "6 13 4 10 0 6 rrcurveto", "9 -6 4 -18 vhcurveto",
                        "-230 hlineto", "-11 -9 1 16 hvcurveto",
                        "-8 1 0 250 -22 0 rlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni026F
     */
    public void testuni026F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni026F");
        assertNotNull(cs);
        assertEquals("uni026F", cs.getName());
        String[] text =
                {
                        "259 -12 48 366 27 hstemhm",
                        "84 75 181 75 179 74 -71 71 hintmask 11111000",
                        "159 358 rmoveto",
                        "28 9 16 34 vhcurveto",
                        "19 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -68 -2 -35 -40 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "20 hlineto",
                        "32 10 -16 -28 hvcurveto",
                        "-208 vlineto",
                        "-89 15 -73 88 vhcurveto",
                        "54 0 49 26 57 60 7 -46 33 -40 55 0 62 0 42 37 48 49 rrcurveto",
                        "hintmask 11110100", "3 0 rlineto",
                        "hintmask 11111000", "-3 -86 15 0 rlineto",
                        "7 0 8 3 10 5 27 14 13 4 64 11 rrcurveto",
                        "-5 27 rlineto", "-17 -4 -12 -1 -13 0 rrcurveto",
                        "hintmask 11110100", "-14 -9 5 57 hvcurveto",
                        "hintmask 11111000", "249 vlineto",
                        "28 10 16 33 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -35 -39 -69 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "19 hlineto", "32 11 -16 -28 hvcurveto",
                        "-248 vlineto", "-48 -49 -32 -25 -35 0 rrcurveto",
                        "-38 -26 27 66 hvcurveto", "229 vlineto",
                        "28 9 16 34 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -36 -39 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto",
                        "-209 vlineto",
                        "0 -15 0 -13 2 -13 -48 -52 -32 -20 -39 0 rrcurveto",
                        "-38 -26 25 66 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0270
     */
    public void testuni0270() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0270");
        assertNotNull(cs);
        assertEquals("uni0270", cs.getName());
        String[] text =
                {
                        "259 -208 -21 217 48 366 27 hstem",
                        "84 75 181 75 179 74 vstem",
                        "159 358 rmoveto",
                        "28 9 16 34 vhcurveto",
                        "19 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -68 -2 -35 -40 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "20 hlineto",
                        "32 10 -16 -28 hvcurveto",
                        "-208 vlineto",
                        "-89 15 -73 88 vhcurveto",
                        "54 0 49 26 57 60 7 -46 33 -40 55 0 62 0 42 37 48 49 rrcurveto",
                        "3 0 -3 -113 0 -190 15 0 rlineto",
                        "7 0 8 3 10 6 27 13 13 5 64 11 rrcurveto",
                        "-5 27 rlineto", "-17 -4 -12 -1 -13 0 rrcurveto",
                        "-14 -9 4 58 hvcurveto", "465 vlineto",
                        "28 10 16 33 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -35 -39 -69 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "19 hlineto", "32 11 -16 -28 hvcurveto",
                        "-248 vlineto", "-48 -49 -32 -25 -35 0 rrcurveto",
                        "-38 -26 27 66 hvcurveto", "229 vlineto",
                        "28 9 16 34 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -36 -39 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto",
                        "-209 vlineto",
                        "0 -15 0 -13 2 -13 -48 -52 -32 -20 -39 0 rrcurveto",
                        "-38 -26 25 66 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0271
     */
    public void testuni0271() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0271");
        assertNotNull(cs);
        assertEquals("uni0271", cs.getName());
        String[] text =
                {
                        "259 -229 27 203 27 366 48 hstem",
                        "93 75 179 73 183 74 vstem",
                        "603 302 rmoveto",
                        "-255 vlineto",
                        "0 -100 -1 -90 -19 -34 -11 -18 -10 -7 -12 0 -17 0 -7 7 -3 8 -6 18 -16 6 -6 0 rrcurveto",
                        "-14 -10 -11 -14 -21 29 -20 50 hvcurveto",
                        "",
                        "36 0 28 13 19 23 37 42 7 63 0 145 rrcurveto",
                        "223 vlineto",
                        "89 -14 73 -88 vhcurveto",
                        "-54 0 -49 -26 -57 -60 -7 45 -33 41 -56 0 -62 0 -42 -37 -47 -50 rrcurveto",
                        "-3 0 3 87 -15 0 rlineto",
                        "-7 0 -8 -3 -10 -5 -27 -14 -14 -4 -63 -11 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "13 9 -4 -57 hvcurveto", "-249 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "248 vlineto",
                        "47 49 33 25 35 0 rrcurveto",
                        "38 26 -27 -67 hvcurveto", "-228 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-32 -11 15 29 hvcurveto", "209 vlineto",
                        "0 14 0 14 -1 12 48 53 32 20 39 0 rrcurveto",
                        "38 26 -25 -67 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0272
     */
    public void testuni0272() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0272");
        assertNotNull(cs);
        assertEquals("uni0272", cs.getName());
        String[] text =
                {"19 -230 27 204 27 366 48 hstem", "91 75 198 74 vstem",
                        "91 1 rmoveto", "-155 -22 -49 -33 vhcurveto",
                        "-19 0 -7 9 -3 8 -7 18 -10 4 -9 0 rrcurveto",
                        "-14 -10 -7 -15 -18 22 -26 58 hvcurveto",
                        "34 0 25 12 20 20 50 50 0 84 0 65 rrcurveto",
                        "316 vlineto", "51 60 38 17 44 0 rrcurveto",
                        "53 12 -33 -70 hvcurveto", "-219 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-14 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 63 2 35 39 69 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-32 -11 15 29 hvcurveto", "212 vlineto",
                        "89 -19 69 -90 vhcurveto",
                        "-51 0 -48 -14 -64 -75 rrcurveto",
                        "-3 0 3 89 -15 0 rlineto", "",
                        "-7 0 -8 -3 -11 -5 -31 -17 -30 -5 -42 -7 rrcurveto",
                        "5 -28 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "14 8 -7 -54 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0273
     */
    public void testuni0273() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0273");
        assertNotNull(cs);
        assertEquals("uni0273", cs.getName());
        String[] text =
                {"19 -231 27 204 27 366 48 hstemhm",
                        "88 75 198 75 -72 72 hintmask 11111000", "436 hmoveto",
                        "-155 22 -49 33 vhcurveto",
                        "19 0 7 9 3 8 7 18 10 4 9 0 rrcurveto",
                        "14 9 -7 -15 -18 -21 -26 -58 hvcurveto",
                        "-34 0 -25 12 -20 20 -50 50 0 84 0 65 rrcurveto",
                        "316 vlineto", "-51 60 -39 17 -43 0 rrcurveto",
                        "-53 -12 -33 -70 hvcurveto", "-219 vlineto",
                        "-29 9 -15 34 vhcurveto", "14 hlineto",
                        "5 3 -3 -5 hvcurveto", "0 -19 -2 -2 rlineto",
                        "0 -63 2 -36 -39 -68 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto", "5 4 3 4 vhcurveto", "19 hlineto",
                        "33 10 15 29 hvcurveto", "212 vlineto",
                        "89 20 69 90 vhcurveto",
                        "51 0 48 -14 64 -75 rrcurveto", "hintmask 11110100",
                        "3 0 rlineto", "hintmask 11111000",
                        "-3 89 15 0 rlineto",
                        "7 0 8 -3 10 -5 32 -16 29 -6 43 -7 rrcurveto",
                        "-5 -28 rlineto", "-17 4 -12 1 -13 0 rrcurveto",
                        "hintmask 11110100", "-14 -8 -7 -54 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0274
     */
    public void testuni0274() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0274");
        assertNotNull(cs);
        assertEquals("uni0274", cs.getName());
        String[] text =
                {"61 1 27 374 28 hstem", "104 45 259 45 vstem",
                        "68 28 rmoveto", "-30 hlineto",
                        "-6 -2 -3 -4 hvcurveto", "-22 vlineto",
                        "0 59 2 37 39 58 -2 0 vhcurveto", "21 vlineto",
                        "6 -5 2 -3 vhcurveto", "-29 hlineto",
                        "-31 -6 8 37 hvcurveto", "0 257 243 -317 rlineto",
                        "11 -14 11 -11 16 0 rrcurveto",
                        "12 11 13 20 hvcurveto", "335 vlineto",
                        "37 5 9 32 vhcurveto", "29 hlineto",
                        "6 0 1 4 1 3 rrcurveto", "22 vlineto",
                        "0 -59 -2 -38 -38 -59 2 0 vhcurveto", "-22 vlineto",
                        "-3 1 -4 7 vhcurveto", "30 hlineto",
                        "33 4 -14 -32 hvcurveto",
                        "0 -255 -255 329 -123 0 0 -21 rlineto",
                        "-4 3 -3 4 vhcurveto", "31 hlineto",
                        "33 3 -9 -35 hvcurveto", "-285 vlineto",
                        "-33 0 -12 -36 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0275
     */
    public void testuni0275() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0275");
        assertNotNull(cs);
        assertEquals("uni0275", cs.getName());
        String[] text =
                {"-18 -12 35 156 50 -22 42 160 33 hstemhm",
                        "34 79 253 80 hintmask 10111100", "366 216 rmoveto",
                        "181 callsubr", "hintmask 11011100", "182 callsubr",
                        "-3 26 rmoveto", "183 callsubr", "hintmask 10111100",
                        "184 callsubr", "hintmask 11011100", "185 callsubr",
                        "-329 -37 rmoveto", "-9 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0276
     */
    public void testuni0276() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0276");
        assertNotNull(cs);
        assertEquals("uni0276", cs.getName());
        String[] text =
                {"138 0 41 -41 33 157 45 152 43 -34 34 hstemhm",
                        "34 80 174 75 108 25 hintmask 01101111",
                        "288 358 rmoveto", "-289 vlineto",
                        "0 -17 -2 -13 -6 -6 rrcurveto", "-24 hlineto",
                        "-98 -44 124 78 140 69 21 47 hvcurveto", "47 hlineto",
                        "11 -9 0 -10 0 -19 rrcurveto", "-254 -146 rmoveto",
                        "-180 134 -32 45 vhcurveto",
                        "379 0 16 145 -19 1 rlineto", "hintmask 10110111",
                        "-12 -56 -22 -49 -48 0 rrcurveto",
                        "-144 149 63 hlineto", "39 6 -6 -30 hvcurveto",
                        "-14 25 146 -25 -14 vlineto",
                        "-22 -2 -15 -43 vhcurveto", "-63 151 hlineto",
                        "139 1 rlineto", "22 0 28 -6 18 -71 rrcurveto",
                        "20 2 rlineto", "hintmask 01101111",
                        "-11 118 -326 0 rlineto",
                        "-104 -115 -68 -150 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0277
     */
    public void testuni0277() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0277");
        assertNotNull(cs);
        assertEquals("uni0277", cs.getName());
        String[] text =
                {
                        "212 -12 35 243 38 114 24 hstem",
                        "34 73 210 26 27 27 205 78 vstem",
                        "370 237 rmoveto",
                        "0 -18 -4 -28 -11 -45 0 4 -12 37 0 45 rrcurveto",
                        "23 5 11 8 11 3 -13 -16 vhcurveto",
                        "-263 -42 rmoveto",
                        "142 99 81 150 65 181 -40 -177 -119 -40 -59 -81 vhcurveto",
                        "-56 0 -36 39 -19 69 19 52 8 45 0 24 rrcurveto",
                        "33 -12 19 -29 -26 -13 -20 -38 vhcurveto",
                        "0 -20 3 -41 21 -54 -21 -72 -36 -36 -53 0 rrcurveto",
                        "-98 -26 81 91 hvcurveto",
                        "573 -1 rmoveto",
                        "101 -83 147 -247 -185 -131 -129 -125 -144 91 -56 90 vhcurveto",
                        "65 0 53 33 26 69 29 -79 55 -23 51 0 rrcurveto",
                        "85 101 42 164 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0278
     */
    public void testuni0278() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0278");
        assertNotNull(cs);
        assertEquals("uni0278", cs.getName());
        String[] text =
                {
                        "68 -198 27 869 -20 hstem",
                        "32 75 141 75 139 76 vstem",
                        "538 215 rmoveto",
                        "0 133 -110 81 -105 10 rrcurveto",
                        "259 -22 vlineto",
                        "-46 -20 -61 -6 -15 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 2 -2 3 vhcurveto",
                        "32 4 rlineto",
                        "20 10 -21 -47 hvcurveto",
                        "-138 vlineto",
                        "-60 -3 -156 -62 0 -158 0 -59 30 -151 186 -14 rrcurveto",
                        "-120 vlineto",
                        "-28 -9 -16 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-19 hlineto",
                        "-33 -10 16 28 hvcurveto",
                        "120 vlineto",
                        "126 15 89 96 0 111 rrcurveto",
                        "-215 -191 rmoveto",
                        "382 vlineto",
                        "89 -19 50 -51 0 -119 0 -38 -9 -133 -130 -22 rrcurveto",
                        "-75 hmoveto",
                        "-41 7 -100 31 0 153 0 135 77 47 64 11 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni027A
     */
    public void testuni027A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni027A");
        assertNotNull(cs);
        assertEquals("uni027A", cs.getName());
        String[] text =
                {
                        "-125 -12 96 515 26 hstem",
                        "222 75 vstem",
                        "297 555 rmoveto",
                        "28 9 16 34 vhcurveto",
                        "19 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 18 -2 2 rlineto",
                        "0 -68 -2 -36 -39 -78 2 0 vhcurveto",
                        "-2 -2 0 -18 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "29 hlineto",
                        "33 10 -16 -28 hvcurveto",
                        "-416 vlineto",
                        "0 -14 -5 -12 -6 -9 -28 -42 -29 -18 -18 0 -8 0 -9 2 -6 13 -9 17 -19 8 -23 0 rrcurveto",
                        "-26 -17 -26 -23 -27 26 -20 41 hvcurveto",
                        "53 0 59 57 23 32 rrcurveto",
                        "3 0 -3 -89 16 0 rlineto",
                        "26 0 -13 17 116 20 rrcurveto", "-5 27 rlineto",
                        "-17 -3 -11 -2 -14 0 rrcurveto",
                        "-13 -9 8 37 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni027C
     */
    public void testuni027C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni027C");
        assertNotNull(cs);
        assertEquals("uni027C", cs.getName());
        String[] text =
                {
                        "-125 -196 27 554 57 hstem",
                        "89 75 vstem",
                        "89 -125 rmoveto",
                        "-28 -9 -16 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -2 rlineto",
                        "0 68 2 36 39 79 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-29 hlineto",
                        "-33 -10 16 28 hvcurveto",
                        "416 vlineto",
                        "0 14 5 11 7 10 28 41 27 18 19 0 8 0 9 -1 6 -13 9 -17 19 -8 23 0 rrcurveto",
                        "27 16 26 23 27 -26 20 -41 hvcurveto",
                        "-52 0 -60 -57 -23 -32 rrcurveto",
                        "-2 0 3 89 -17 0 rlineto",
                        "-26 0 13 -18 -116 -19 rrcurveto", "5 -28 rlineto",
                        "17 4 12 1 13 0 rrcurveto", "14 8 -7 -38 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni027D
     */
    public void testuni027D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni027D");
        assertNotNull(cs);
        assertEquals("uni027D", cs.getName());
        String[] text =
                {
                        "-135 -240 40 606 36 hstem",
                        "85 75 vstem",
                        "63 381 rmoveto",
                        "-19 0 -18 -3 -10 -3 rrcurveto",
                        "30 vlineto",
                        "75 10 27 14 21 13 rrcurveto",
                        "21 -86 hlineto",
                        "2 3 44 83 75 0 rrcurveto",
                        "44 32 -17 -34 -28 -19 -19 -28 hvcurveto",
                        "-25 0 -15 34 -5 13 -4 12 -9 3 -9 0 -26 0 -42 -52 -15 -35 rrcurveto",
                        "-327 vlineto", "-144 14 -48 49 vhcurveto",
                        "18 0 12 10 3 11 6 19 10 17 24 0 rrcurveto",
                        "23 9 -13 -16 -45 -74 -23 -31 hvcurveto",
                        "-112 0 -23 113 -3 135 rrcurveto", "336 vlineto",
                        "20 -4 17 -18 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni027E
     */
    public void testuni027E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni027E");
        assertNotNull(cs);
        assertEquals("uni027E", cs.getName());
        String[] text =
                {
                        "-153 1 27 378 36 hstem",
                        "88 75 vstem",
                        "163 73 rmoveto",
                        "157 vlineto",
                        "158 25 18 34 vhcurveto",
                        "18 0 10 -21 2 -12 6 -20 12 -13 24 0 rrcurveto",
                        "15 21 9 30 42 -56 21 -52 hvcurveto",
                        "-28 0 -21 -12 -25 -18 -49 -40 -11 -69 0 -88 rrcurveto",
                        "-142 vlineto", "-23 -3 -22 -31 vhcurveto",
                        "-28 hlineto", "-6 -1 -5 -3 hvcurveto", "-21 vlineto",
                        "0 65 2 43 40 64 -2 0 vhcurveto", "22 vlineto",
                        "3 -1 4 -6 vhcurveto", "-27 hlineto",
                        "-31 -3 14 31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni027F
     */
    public void testuni027F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni027F");
        assertNotNull(cs);
        assertEquals("uni027F", cs.getName());
        String[] text =
                {"-153 1 27 378 36 hstem", "182 75 vstem", "182 73 rmoveto",
                        "-31 -3 -14 -31 vhcurveto", "-27 hlineto",
                        "-6 -2 -4 -3 hvcurveto", "-22 vlineto",
                        "0 64 2 41 42 66 -2 0 vhcurveto", "21 vlineto",
                        "3 -1 5 -7 vhcurveto", "-27 hlineto",
                        "-31 -3 22 23 hvcurveto", "142 vlineto",
                        "0 88 -11 69 -50 40 -24 18 -22 12 -27 0 rrcurveto",
                        "-53 -55 -21 -42 -30 21 -9 14 hvcurveto",
                        "25 0 12 13 6 20 2 12 10 21 18 0 rrcurveto",
                        "33 26 -18 -158 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0282
     */
    public void testuni0282() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0282");
        assertNotNull(cs);
        assertEquals("uni0282", cs.getName());
        String[] text =
                {
                        "-130 -180 36 132 28 396 30 hstemhm",
                        "48 39 -34 61 64 57 32 67 hintmask 11110110",
                        "126 -180 rmoveto",
                        "55 54 42 43 14 -10 13 -16 -14 -17 -13 -18 -21 -19 -24 -25 -38 -9 49 60 hvcurveto",
                        "35 vlineto",
                        "2 0 1 -1 2 0 26 -7 29 -4 35 0 47 0 105 29 0 99 0 80 -65 36 -81 30 rrcurveto",
                        "hintmask 11101110",
                        "-55 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -31 16 -37 9 -50 0 -79 0 -59 -48 0 -67 0 -75 38 -21 73 -32 79 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 rrcurveto",
                        "-37 0 -27 18 -10 11 -22 23 -11 48 -3 25 rrcurveto",
                        "-27 -1 rlineto", "hintmask 11110110",
                        "2 -25 2 -25 1 -24 rrcurveto", "-126 vlineto",
                        "-68 16 -52 62 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0283
     */
    public void testuni0283() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0283");
        assertNotNull(cs);
        assertEquals("uni0283", cs.getName());
        String[] text =
                {
                        "-197 -214 38 -38 100 778 34 hstemhm",
                        "92 75 hintmask 01110000",
                        "-32 -114 rmoveto",
                        "-19 -12 -17 -16 hvcurveto",
                        "hintmask 10110000",
                        "-41 54 -26 42 vhcurveto",
                        "15 0 23 1 35 29 59 49 2 81 0 107 rrcurveto",
                        "421 vlineto",
                        "",
                        "95 10 95 58 vhcurveto",
                        "17 0 16 -13 10 -25 6 -15 6 -14 22 0 rrcurveto",
                        "18 14 14 20 27 -33 40 -75 hvcurveto",
                        "-28 0 -26 -10 -27 -21 -60 -48 -3 -79 0 -103 rrcurveto",
                        "-436 vlineto", "-150 -33 -27 -22 vhcurveto",
                        "-23 0 -5 15 -6 15 rrcurveto",
                        "-5 17 -6 15 -24 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0284
     */
    public void testuni0284() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0284");
        assertNotNull(cs);
        assertEquals("uni0284", cs.getName());
        String[] text =
                {
                        "-197 -214 38 -38 100 352 44 382 34 hstemhm",
                        "92 75 hintmask 01111000",
                        "-32 -114 rmoveto",
                        "-19 -12 -17 -16 hvcurveto",
                        "hintmask 10111000",
                        "-41 54 -26 42 vhcurveto",
                        "15 0 23 1 35 29 59 49 2 81 0 107 rrcurveto",
                        "185 71 vlineto",
                        "12 11 20 12 9 -3 3 -11 hvcurveto",
                        "-80 192 hlineto",
                        "95 10 95 58 vhcurveto",
                        "17 0 16 -13 10 -25 6 -15 6 -14 22 0 rrcurveto",
                        "18 14 14 20 27 -33 40 -75 hvcurveto",
                        "-28 0 -26 -10 -27 -21 -60 -48 -3 -79 0 -103 rrcurveto",
                        "-155 -73 vlineto",
                        "-12 -10 -13 -16 -9 5 -6 9 hvcurveto",
                        "81 -237 hlineto", "-150 -33 -27 -22 vhcurveto",
                        "-23 0 -5 15 -6 15 rrcurveto",
                        "-5 17 -6 15 -24 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0285
     */
    public void testuni0285() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0285");
        assertNotNull(cs);
        assertEquals("uni0285", cs.getName());
        String[] text =
                {"-197 -214 38 840 34 hstem", "114 74 vstem",
                        "313 -114 rmoveto",
                        "-24 0 -6 -15 -6 -17 -5 -15 -5 -15 -23 0 rrcurveto",
                        "-22 -34 27 150 hvcurveto", "436 vlineto",
                        "0 103 -2 79 -61 48 -26 21 -27 10 -28 0 rrcurveto",
                        "-74 -33 -40 -27 -20 14 -14 17 hvcurveto",
                        "23 0 6 14 6 15 10 25 16 13 17 0 rrcurveto",
                        "58 10 -95 -95 hvcurveto", "-421 vlineto",
                        "0 -107 1 -81 60 -49 34 -29 24 -1 15 0 rrcurveto",
                        "42 54 26 41 16 -12 17 -19 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni0286
     */
    public void testuni0286() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0286");
        assertNotNull(cs);
        assertEquals("uni0286", cs.getName());
        String[] text =
                {
                        "-209 -225 25 864 34 hstem",
                        "-45 25 112 75 vstem",
                        "-20 -164 rmoveto",
                        "0 43 71 40 44 24 rrcurveto",
                        "-14 vlineto",
                        "-100 -41 -29 -27 -9 -38 7 29 vhcurveto",
                        "364 795 rmoveto",
                        "27 -33 40 -75 vhcurveto",
                        "-28 0 -26 -10 -27 -21 -60 -48 -3 -78 0 -104 rrcurveto",
                        "0 -453 0 -15 rlineto",
                        "-123 -60 -14 -51 0 -26 0 -42 38 -15 32 0 57 0 77 40 8 162 42 23 -18 -10 35 16 rrcurveto",
                        "-8 23 rlineto",
                        "-17 -7 -13 -6 -21 -10 rrcurveto",
                        "468 vlineto",
                        "0 75 5 46 8 17 17 35 18 17 20 0 17 0 16 -13 10 -25 6 -15 6 -14 22 0 rrcurveto",
                        "18 14 14 20 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0287
     */
    public void testuni0287() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0287");
        assertNotNull(cs);
        assertEquals("uni0287", cs.getName());
        String[] text =
                {"-199 0 39 347 56 hstemhm", "149 58 -58 75 hintmask 11010000",
                        "149 39 rmoveto", "-94 hlineto",
                        "-10 -14 -4 -9 hvcurveto", "-20 vlineto",
                        "-4 3 -2 5 vhcurveto", "110 -154 hlineto",
                        "hintmask 11100000", "58 20 0 19 rlineto",
                        "76 16 39 67 2 1 1 3 vhcurveto", "31 vlineto",
                        "3 -1 1 -4 vhcurveto", "hintmask 11010000",
                        "-64 303 hlineto", "72 -27 28 -46 vhcurveto",
                        "-46 0 -40 -23 -39 -43 rrcurveto", "18 -17 rlineto",
                        "26 20 20 7 26 0 rrcurveto", "27 6 -29 -62 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0288
     */
    public void testuni0288() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0288");
        assertNotNull(cs);
        assertEquals("uni0288", cs.getName());
        String[] text =
                {"-202 -226 47 570 39 hstemhm",
                        "89 75 -58 58 hintmask 11100000", "279 -125 rmoveto",
                        "-46 0 31 -54 -50 0 rrcurveto",
                        "-42 -8 20 153 hvcurveto", "397 111 39 vlineto",
                        "hintmask 11010000", "186 callsubr",
                        "hintmask 11100000", "69 -403 hlineto",
                        "-178 68 -36 56 64 43 24 44 vhcurveto",
                        "14 -19 19 -22 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0289
     */
    public void testuni0289() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0289");
        assertNotNull(cs);
        assertEquals("uni0289", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 183 39 125 27 hstemhm",
                        "88 75 191 75 hintmask 10111100",
                        "354 238 rmoveto",
                        "-136 vlineto",
                        "-10 -13 -16 -14 -24 -18 -21 -15 -21 -9 -23 0 rrcurveto",
                        "-30 -46 16 89 hvcurveto", "100 vlineto",
                        "332 39 rmoveto", "-66 75 hlineto", "1 79 rlineto",
                        "0 -16 -2 -23 -28 -71 2 0 vhcurveto",
                        "-2 -3 0 -25 2 -2 rlineto", "3 0 11 1 6 0 rrcurveto",
                        "37 5 -17 -36 hvcurveto", "-72 -191 74 vlineto",
                        "1 80 rlineto", "0 -23 -2 -14 -32 -68 2 0 vhcurveto",
                        "-3 -3 0 -26 3 -1 rlineto", "7 0 6 1 4 0 rrcurveto",
                        "37 7 -17 -33 hvcurveto",
                        "-75 -66 -39 66 -114 vlineto",
                        "-69 26 -67 99 vhcurveto",
                        "41 0 45 14 55 60 rrcurveto",
                        "3 0 -3 -74 22 0 rlineto", "hintmask 01111100",
                        "23 18 49 10 61 11 rrcurveto", "-4 28 rlineto",
                        "-17 -3 -22 -2 -12 0 rrcurveto",
                        "-20 -5 16 50 hvcurveto", "122 66 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni028A
     */
    public void testuni028A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni028A");
        assertNotNull(cs);
        assertEquals("uni028A", cs.getName());
        String[] text =
                {"9 -12 34 363 45 hstem", "29 75 62 27 120 32 57 76 vstem",
                        "313 402 rmoveto", "-61 vlineto",
                        "31 -36 58 -71 0 -74 rrcurveto",
                        "-28 -16 -110 -142 -85 -55 66 77 vhcurveto",
                        "0 100 65 56 24 20 rrcurveto", "61 vlineto",
                        "25 -7 3 -15 vhcurveto",
                        "-125 0 -16 -92 25 -2 rlineto",
                        "8 44 6 5 37 0 rrcurveto", "60 -19 hlineto",
                        "-48 -42 -89 -81 0 -83 rrcurveto",
                        "-102 65 -70 148 127 109 53 119 vhcurveto",
                        "0 77 -85 84 -48 45 rrcurveto", "19 59 vlineto",
                        "38 0 4 -7 9 -43 rrcurveto",
                        "26 3 -17 92 -135 0 rlineto", "-9 -7 -7 -21 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni028B
     */
    public void testuni028B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni028B");
        assertNotNull(cs);
        assertEquals("uni028B", cs.getName());
        String[] text =
                {
                        "-7 -12 47 407 -20 hstem",
                        "91 75 261 37 vstem",
                        "166 170 rmoveto",
                        "272 -15 vlineto",
                        "-7 0 -8 -3 -11 -5 -31 -17 -30 -5 -42 -7 rrcurveto",
                        "5 -28 rlineto",
                        "17 4 12 1 13 0 14 0 8 -7 0 -54 rrcurveto",
                        "-148 vlineto",
                        "-96 45 -89 148 91 89 87 174 120 -29 73 -69 -28 -13 -19 -18 vhcurveto",
                        "0 -31 30 -5 11 -1 30 -5 31 -30 0 -96 rrcurveto",
                        "-98 -55 -104 -88 -87 -31 66 69 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni028C
     */
    public void testuni028C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni028C");
        assertNotNull(cs);
        assertEquals("uni028C", cs.getName());
        String[] text =
                {"-10 1 27 414 -20 hstem", "163 28 rmoveto",
                        "-34 -12 6 14 hvcurveto", "0 8 4 9 4 11 rrcurveto",
                        "89 218 18 43 17 -45 86 -219 rlineto",
                        "6 -13 3 -8 0 -8 rrcurveto", "-9 -8 -7 -21 vhcurveto",
                        "-17 hlineto", "-2 -6 -2 -6 hvcurveto",
                        "0 -19 4 -2 rlineto", "0 61 2 39 34 53 -2 0 vhcurveto",
                        "3 2 0 20 rlineto", "4 -5 3 -5 vhcurveto",
                        "-29 0 -22 12 -13 35 rrcurveto", "-136 345 rlineto",
                        "-6 16 -7 6 -12 0 -11 0 -7 -6 -6 -17 rrcurveto",
                        "-138 -339 rlineto", "-16 -39 -24 -13 -28 0 rrcurveto",
                        "-7 -5 -5 -4 hvcurveto", "0 -18 3 -2 rlineto",
                        "0 41 2 27 36 57 -2 0 vhcurveto", "4 2 0 20 rlineto",
                        "0 3 -3 3 -5 1 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni028D
     */
    public void testuni028D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni028D");
        assertNotNull(cs);
        assertEquals("uni028D", cs.getName());
        String[] text =
                {"237 1 27 414 -20 hstem", "538 20 rmoveto",
                        "0 -19 2 -2 rlineto", "0 52 2 47 44 46 -2 0 vhcurveto",
                        "2 2 0 20 rlineto", "4 -6 3 -5 vhcurveto",
                        "-30 0 -19 9 -15 39 rrcurveto", "-136 346 rlineto",
                        "-6 14 -9 6 -9 0 -10 0 -7 -6 -7 -16 rrcurveto",
                        "-100 -249 -101 251 rlineto",
                        "-5 14 -9 6 -9 0 -9 0 -9 -6 -5 -16 rrcurveto",
                        "-137 -337 rlineto", "-17 -44 -26 -11 -25 0 rrcurveto",
                        "-5 -8 -2 -6 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 39 2 35 37 66 -2 0 vhcurveto", "2 2 0 20 rlineto",
                        "3 -3 4 -5 vhcurveto", "-15 hlineto",
                        "-35 -10 12 17 hvcurveto", "0 7 2 8 3 7 rrcurveto",
                        "88 216 17 48 16 -51 87 -218 rlineto",
                        "6 -14 3 -11 0 -7 rrcurveto",
                        "-10 -9 -4 -19 vhcurveto", "-19 hlineto",
                        "-4 -5 -3 -5 hvcurveto", "0 -19 3 -2 100 2 rlineto",
                        "34 56 -2 0 hvcurveto", "2 2 0 20 rlineto",
                        "5 -4 2 -5 vhcurveto", "-31 0 -20 14 -13 34 rrcurveto",
                        "-18 45 71 174 18 48 16 -51 87 -218 rlineto",
                        "5 -14 3 -10 0 -7 rrcurveto", "-9 -7 -6 -21 vhcurveto",
                        "-16 hlineto", "-4 -4 -3 -5 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni028E
     */
    public void testuni028E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni028E");
        assertNotNull(cs);
        assertEquals("uni028E", cs.getName());
        String[] text =
                {
                        "8 1 27 577 55 hstem",
                        "299 20 rmoveto",
                        "0 -18 2 -3 rlineto",
                        "0 72 2 46 31 44 -2 0 vhcurveto",
                        "2 2 0 20 rlineto",
                        "3 -4 4 -6 vhcurveto",
                        "-34 0 -11 11 -16 38 rrcurveto",
                        "-126 293 rlineto",
                        "-8 20 -9 27 0 10 0 9 2 10 6 12 24 61 36 86 15 0 10 0 8 -8 9 -10 6 -7 10 -6 14 0 rrcurveto",
                        "16 23 9 30 36 -39 11 -19 hvcurveto",
                        "-71 0 -36 -85 -30 -71 -80 -193 -44 -103 -53 -112 -14 -29 -19 -39 -38 0 rrcurveto",
                        "-7 -4 -3 -5 hvcurveto", "0 -19 3 -2 rlineto",
                        "0 41 2 28 35 59 -2 0 vhcurveto", "2 3 0 19 rlineto",
                        "3 -5 4 -5 vhcurveto", "-4 hlineto",
                        "-22 -20 5 20 hvcurveto", "0 7 2 7 4 10 rrcurveto",
                        "112 254 110 -258 rlineto",
                        "4 -10 2 -7 0 -6 rrcurveto",
                        "-16 -14 -6 -29 -5 -6 -3 -5 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni028F
     */
    public void testuni028F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni028F");
        assertNotNull(cs);
        assertEquals("uni028F", cs.getName());
        String[] text =
                {"-31 1 27 374 28 hstem", "202 75 vstem", "277 75 rmoveto",
                        "0 96 93 191 rlineto", "13 27 12 11 37 2 rrcurveto",
                        "5 hlineto", "5 3 2 3 hvcurveto",
                        "0 24 -71 -3 -86 3 0 -24 rlineto",
                        "-4 1 -1 3 vhcurveto", "24 hlineto",
                        "19 6 -3 -11 hvcurveto", "0 -7 -6 -12 -3 -7 rrcurveto",
                        "-77 -157 -82 157 rlineto", "-4 7 -4 9 0 9 rrcurveto",
                        "9 9 6 22 vhcurveto", "16 hlineto",
                        "2 1 2 3 hvcurveto",
                        "0 23 -100 -2 -95 2 0 -23 rlineto",
                        "-3 2 -2 5 vhcurveto", "3 hlineto",
                        "37 0 7 -4 19 -36 rrcurveto", "109 -203 0 -84 rlineto",
                        "0 -38 -6 -8 -33 -1 rrcurveto", "-30 hlineto",
                        "-4 -2 -2 -3 hvcurveto", "-24 vlineto",
                        "0 68 2 43 44 70 -2 0 vhcurveto", "23 vlineto",
                        "4 -2 2 -3 vhcurveto", "-30 hlineto",
                        "-32 1 -8 7 0 39 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0290
     */
    public void testuni0290() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0290");
        assertNotNull(cs);
        assertEquals("uni0290", cs.getName());
        String[] text =
                {
                        "-90 0 39 352 39 hstem",
                        "348 -187 rmoveto",
                        "52 -15 64 27 11 41 4 13 -6 15 -15 4 -15 4 -19 -8 -5 -17 -5 -20 -25 -18 -24 7 -36 9 4 50 15 57 rrcurveto",
                        "10 38 1 0 rlineto",
                        "1 2 0 2 0 2 rrcurveto",
                        "17 60 -4 1 rlineto",
                        "5 21 6 23 8 25 rrcurveto",
                        "-27 7 -13 -29 rlineto",
                        "-24 -53 -16 -22 -59 0 rrcurveto",
                        "-129 0 236 348 rlineto",
                        "22 33 0 5 0 4 0 5 -8 1 -5 0 -3 0 -35 -5 -29 0 rrcurveto",
                        "-196 hlineto", "-15 0 -9 6 -2 6 rrcurveto",
                        "-25 hlineto", "-1 -45 -6 -44 -8 -49 rrcurveto",
                        "26 -3 rlineto", "20 73 34 17 30 0 rrcurveto",
                        "135 0 -243 -359 rlineto",
                        "-8 -12 -1 -3 0 -5 rrcurveto", "-7 8 -5 15 vhcurveto",
                        "262 0 -14 -51 rlineto",
                        "-17 -66 1 -54 60 -16 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0291
     */
    public void testuni0291() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0291");
        assertNotNull(cs);
        assertEquals("uni0291", cs.getName());
        String[] text =
                {
                        "-72 0 39 90 33 229 39 hstem",
                        "373 30 vstem",
                        "205 hmoveto",
                        "60 hlineto",
                        "87 51 38 56 54 -47 14 -24 hvcurveto",
                        "-37 0 -31 -15 -21 -20 -17 -16 -19 -34 -17 -38 rrcurveto",
                        "-66 0 230 348 rlineto", "9 14 8 11 0 7 rrcurveto",
                        "8 -6 3 -11 vhcurveto", "-239 hlineto",
                        "-29 0 -2 10 -1 4 rrcurveto",
                        "-21 4 -30 -149 27 -5 rlineto",
                        "5 34 17 41 10 9 11 8 14 5 20 0 rrcurveto",
                        "142 0 -236 -359 rlineto",
                        "-6 -9 -3 -4 0 -6 rrcurveto", "-11 16 -2 19 vhcurveto",
                        "106 hlineto", "-15 -38 -12 -40 -7 -37 rrcurveto",
                        "31 -7 rlineto", "5 36 13 44 16 42 rrcurveto",
                        "168 93 rmoveto", "-32 -34 -22 -53 vhcurveto",
                        "-65 hlineto", "12 28 25 62 63 0 rrcurveto",
                        "42 10 -22 -14 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0292
     */
    public void testuni0292() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0292");
        assertNotNull(cs);
        assertEquals("uni0292", cs.getName());
        String[] text =
                {"-75 -229 29 591 39 hstem", "327 74 vstem", "107 430 rmoveto",
                        "159 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0293
     */
    public void testuni0293() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0293");
        assertNotNull(cs);
        assertEquals("uni0293", cs.getName());
        String[] text =
                {
                        "-66 -226 24 178 23 123 39 227 42 hstem",
                        "56 24 247 70 vstem",
                        "319 -87 rmoveto",
                        "-36 46 -55 40 -60 0 rrcurveto",
                        "-62 -50 -50 -62 -64 62 -49 60 hvcurveto",
                        "57 0 56 22 42 39 21 -45 20 -55 12 -47 rrcurveto",
                        "20 13 rlineto",
                        "-12 50 -21 57 -22 46 25 29 21 48 0 56 0 140 -100 32 -52 2 rrcurveto",
                        "107 227 rlineto",
                        "11 10 5 12 0 12 rrcurveto",
                        "5 -4 3 -10 vhcurveto",
                        "-239 hlineto",
                        "-23 0 -10 3 -3 6 rrcurveto",
                        "-18 3 -18 -125 21 -2 rlineto",
                        "7 39 10 25 13 5 9 3 11 1 15 0 rrcurveto",
                        "151 0 -135 -277 rlineto",
                        "17 7 26 4 17 0 83 0 39 -53 0 -90 0 -25 -3 -22 -5 -19 rrcurveto",
                        "-7 -30 rmoveto", "-21 -56 -53 -29 -61 0 rrcurveto",
                        "-48 -49 39 50 49 40 40 48 hvcurveto",
                        "64 0 47 -42 33 -51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0294
     */
    public void testuni0294() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0294");
        assertNotNull(cs);
        assertEquals("uni0294", cs.getName());
        String[] text =
                {
                        "-117 1 27 602 28 hstem",
                        "24 82 42 75 68 72 vstem",
                        "110 28 rmoveto",
                        "-18 hlineto",
                        "-4 -5 -2 -6 hvcurveto",
                        "-21 vlineto",
                        "0 64 2 41 39 60 -2 0 vhcurveto",
                        "22 vlineto",
                        "3 -1 4 -7 vhcurveto",
                        "-18 hlineto",
                        "-38 1 0 16 0 30 rrcurveto",
                        "188 vlineto",
                        "0 64 33 29 35 30 36 32 36 33 0 73 rrcurveto",
                        "82 -58 52 -103 -86 -92 -46 -85 -28 23 -17 20 16 27 8 31 vhcurveto",
                        "0 5 0 5 -2 5 -1 6 -1 6 0 7 rrcurveto",
                        "40 45 35 49 59 32 -57 -49 vhcurveto",
                        "0 -50 -31 -36 -34 -35 -38 -40 -40 -46 0 -74 rrcurveto",
                        "-171 vlineto", "-30 -2 -14 -36 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni0296
     */
    public void testuni0296() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0296");
        assertNotNull(cs);
        assertEquals("uni0296", cs.getName());
        String[] text =
                {
                        "-117 -12 28 602 27 hstem",
                        "24 86 38 75 68 72 vstem",
                        "110 618 rmoveto",
                        "36 2 -14 -30 hvcurveto",
                        "-171 vlineto",
                        "0 -75 40 -45 38 -40 34 -35 31 -37 0 -50 rrcurveto",
                        "-48 -32 -57 -59 -49 -45 35 39 vhcurveto",
                        "0 7 1 7 1 5 2 5 0 5 0 6 rrcurveto",
                        "30 -27 8 -16 -20 -23 -16 -28 -86 92 -45 86 103 58 51 82 vhcurveto",
                        "0 73 -36 34 -36 31 -35 30 -33 30 0 63 rrcurveto", "",
                        "188 vlineto", "0 30 0 16 38 2 rrcurveto",
                        "18 hlineto", "7 1 4 3 hvcurveto", "21 vlineto",
                        "0 -60 -1 -39 -41 -64 1 0 vhcurveto", "-21 vlineto",
                        "-6 5 -1 4 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0297
     */
    public void testuni0297() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0297");
        assertNotNull(cs);
        assertEquals("uni0297", cs.getName());
        String[] text =
                {"47 -219 73 514 74 hstem", "49 75 vstem", "49 -4 rmoveto",
                        "-120 78 -95 137 vhcurveto",
                        "89 0 80 82 40 64 rrcurveto", "-24 16 rlineto",
                        "-54 -54 -40 -35 -74 0 rrcurveto",
                        "-119 -38 69 52 hvcurveto", "229 vlineto",
                        "104 59 60 91 vhcurveto",
                        "93 0 53 -52 34 -38 rrcurveto", "22 15 rlineto",
                        "-64 97 -58 52 -86 0 rrcurveto",
                        "-143 -76 -139 -116 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0298
     */
    public void testuni0298() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0298");
        assertNotNull(cs);
        assertEquals("uni0298", cs.getName());
        String[] text =
                {
                        "158 -12 34 250 109 243 34 hstem",
                        "39 86 146 108 156 86 vstem",
                        "621 329 rmoveto",
                        "198 -126 131 -167 -167 -122 -152 -196 -197 129 -125 161 177 115 141 200 vhcurveto",
                        "-305 295 rmoveto",
                        "130 89 -106 -208 -179 -81 -109 -107 -111 -111 113 192 210 102 87 89 hvcurveto",
                        "10 -352 rmoveto",
                        "30 23 25 29 30 -27 25 -26 -30 -25 -27 -28 -28 21 -26 34 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0299
     */
    public void testuni0299() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0299");
        assertNotNull(cs);
        assertEquals("uni0299", cs.getName());
        String[] text =
                {"-55 -1 29 189 29 152 32 -28 29 hstemhm",
                        "102 74 150 69 -58 72 hintmask 11101010",
                        "32 -1 rmoveto", "187 callsubr", "hintmask 11101100",
                        "188 callsubr", "hintmask 11011010", "189 callsubr",
                        "146 216 rmoveto", "190 callsubr", "174 vmoveto",
                        "118 vlineto", "hintmask 11101100", "191 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni029A
     */
    public void testuni029A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni029A");
        assertNotNull(cs);
        assertEquals("uni029A", cs.getName());
        String[] text =
                {
                        "-25 -12 66 134 55 136 63 hstem",
                        "39 34 337 34 vstem",
                        "222 379 rmoveto",
                        "132 56 -62 -98 -46 -33 -119 -149 -108 -47 23 56 hvcurveto",
                        "0 39 35 21 62 14 40 -12 41 -7 22 0 rrcurveto",
                        "30 17 8 20 18 -18 9 -34 hvcurveto",
                        "",
                        "-41 0 -32 -9 -25 -7 -65 14 -32 29 0 36 rrcurveto",
                        "68 67 5 82 vhcurveto",
                        "-1 -391 rmoveto",
                        "110 113 72 164 137 -117 81 -111 -142 -35 -67 -52 hvcurveto",
                        "0 -48 33 -42 61 -19 -71 -22 -23 -36 0 -37 rrcurveto",
                        "-54 28 -77 154 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni029B
     */
    public void testuni029B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni029B");
        assertNotNull(cs);
        assertEquals("uni029B", cs.getName());
        String[] text =
                {"8 -12 35 153 27 205 34 65 71 hstemhm",
                        "34 77 258 53 -41 27 hintmask 11111010",
                        "518 578 rmoveto",
                        "-53 0 -77 -43 -7 -103 -41 3 -55 7 -23 0 rrcurveto",
                        "-127 -101 -93 -142 -116 87 -103 130 hvcurveto",
                        "hintmask 11111100", "77 0 55 25 39 54 rrcurveto",
                        "86 vlineto", "0 9 3 6 7 4 5 3 25 2 0 0 rrcurveto",
                        "4 6 1 7 hvcurveto", "21 vlineto",
                        "0 -47 -3 -30 -32 -48 3 0 vhcurveto", "-22 vlineto",
                        "0 -4 1 -3 6 -1 rrcurveto", "12 hlineto",
                        "32 3 -15 -30 hvcurveto", "-53 vlineto",
                        "-17 -33 -42 -22 -34 0 rrcurveto",
                        "-114 -51 117 89 114 88 65 53 hvcurveto",
                        "56 0 65 -26 6 -71 rrcurveto", "hintmask 11111010",
                        "2 -18 27 0 0 132 rlineto", "23 12 66 51 vhcurveto",
                        "8 0 10 -1 9 -3 7 -3 9 0 7 0 rrcurveto",
                        "21 12 17 16 hvcurveto", "22 -16 16 -20 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni029C
     */
    public void testuni029C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni029C");
        assertNotNull(cs);
        assertEquals("uni029C", cs.getName());
        String[] text =
                {"57 -1 29 184 34 156 29 hstem", "104 74 205 75 vstem",
                        "104 355 rmoveto", "192 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni029D
     */
    public void testuni029D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni029D");
        assertNotNull(cs);
        assertEquals("uni029D", cs.getName());
        String[] text =
                {
                        "-240 -169 21 590 -20 101 96 hstemhm",
                        "-15 26 95 96 -77 72 hintmask 11111000",
                        "106 571 rmoveto",
                        "-26 21 -22 27 26 22 22 26 27 -22 21 -26 vhcurveto",
                        "-27 -21 -21 -27 hvcurveto",
                        "-48 -719 rmoveto",
                        "-9 -38 7 30 hvcurveto",
                        "hintmask 11110100",
                        "0 43 71 40 43 24 rrcurveto",
                        "-15 vlineto",
                        "-100 -40 -29 -27 vhcurveto",
                        "191 224 rmoveto",
                        "-17 -7 -13 -7 -21 -9 rrcurveto",
                        "0 14 0 375 -23 0 rlineto",
                        "-50 -25 -53 -10 -19 -2 rrcurveto",
                        "-30 vlineto",
                        "15 3 21 3 11 0 rrcurveto",
                        "21 2 -21 -26 hvcurveto",
                        "-297 vlineto",
                        "-14 1 -6 0 vhcurveto",
                        "-124 -60 -15 -46 0 -27 0 -42 39 -11 32 0 57 0 76 36 8 162 43 23 -18 -10 34 17 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni029E
     */
    public void testuni029E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni029E");
        assertNotNull(cs);
        assertEquals("uni029E", cs.getName());
        String[] text =
                {"26 -211 -21 233 27 374 27 hstem", "381 75 vstem",
                        "216 75 rmoveto", "165 136 0 -443 22 0 rlineto",
                        "38 18 52 12 32 7 rrcurveto", "-4 30 rlineto",
                        "-19 -4 -11 -2 -13 0 rrcurveto",
                        "-21 -1 16 51 hvcurveto", "461 vlineto",
                        "27 0 18 38 vhcurveto", "18 hlineto",
                        "5 3 3 5 hvcurveto", "21 vlineto",
                        "0 -64 -2 -36 -39 -65 2 0 vhcurveto", "-21 vlineto",
                        "-5 4 -3 4 vhcurveto", "19 hlineto",
                        "34 4 -13 -32 hvcurveto",
                        "0 -105 -69 -56 -107 161 rlineto",
                        "-15 23 -1 8 0 7 rrcurveto", "4 6 3 18 vhcurveto",
                        "19 hlineto", "4 1 2 6 hvcurveto", "21 vlineto",
                        "0 -76 -2 -36 -39 -61 2 0 vhcurveto", "-21 vlineto",
                        "-5 7 -3 5 vhcurveto", "15 hlineto",
                        "31 0 19 -25 14 -20 rrcurveto",
                        "139 -207 -92 -75 rlineto",
                        "-29 -24 -29 -23 -32 0 rrcurveto", "-29 hlineto",
                        "-4 -6 -3 -5 hvcurveto", "-21 vlineto",
                        "0 54 2 39 36 63 -2 0 vhcurveto", "21 vlineto",
                        "3 -1 5 -5 vhcurveto", "-18 hlineto",
                        "-17 -2 4 3 hvcurveto", "0 12 25 21 8 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni029F
     */
    public void testuni029F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni029F");
        assertNotNull(cs);
        assertEquals("uni029F", cs.getName());
        String[] text =
                {"-66 0 42 -42 28 374 27 hstemhm",
                        "98 75 191 27 hintmask 01111000", "61 28 rmoveto",
                        "-30 hlineto", "-4 0 -3 -3 -1 -6 rrcurveto",
                        "-19 359 vlineto", "9 137 -27 2 rlineto",
                        "hintmask 10111000", "-7 -37 -20 -60 -48 0 rrcurveto",
                        "-116 317 hlineto", "33 4 10 32 vhcurveto",
                        "30 hlineto", "2 6 2 6 hvcurveto", "", "21 vlineto",
                        "0 -68 -2 -43 -44 -69 2 0 vhcurveto", "-22 vlineto",
                        "-5 4 -2 4 vhcurveto", "30 hlineto",
                        "35 2 -14 -29 hvcurveto", "-286 vlineto",
                        "0 -31 -1 -13 -36 -1 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A0
     */
    public void testuni02A0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A0");
        assertNotNull(cs);
        assertEquals("uni02A0", cs.getName());
        String[] text =
                {
                        "48 -228 28 188 44 375 35 144 112 -32 32 hstemhm",
                        "36 76 227 75 hintmask 11110110",
                        "614 622 rmoveto",
                        "38 -50 38 -75 vhcurveto",
                        "-29 0 -22 -9 -28 -20 -63 -45 -3 -71 -5 -136 -29 17 -34 8 -37 0 rrcurveto",
                        "-119 -84 -106 -131 -93 54 -124 144 hvcurveto",
                        "56 0 31 19 16 13 rrcurveto", "-174 vlineto",
                        "-30 -1 -16 -37 vhcurveto", "-18 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "-21 vlineto",
                        "0 61 1 40 40 64 -1 0 vhcurveto", "21 vlineto",
                        "5 -3 3 -5 vhcurveto", "-18 hlineto",
                        "-32 -6 7 39 hvcurveto", "600 vlineto",
                        "0 70 5 57 1 8 rrcurveto", "hintmask 11101110",
                        "11 54 27 31 26 0 31 0 14 -31 7 -13 rrcurveto",
                        "hintmask 11110110", "8 -18 8 -18 28 0 rrcurveto",
                        "21 13 14 22 hvcurveto", "-379 -215 rmoveto",
                        "41 0 34 -26 27 -44 rrcurveto", "-284 vlineto",
                        "-26 -19 -34 -2 -19 0 rrcurveto",
                        "-58 -88 40 153 104 43 78 80 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni02A1
     */
    public void testuni02A1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A1");
        assertNotNull(cs);
        assertEquals("uni02A1", cs.getName());
        String[] text =
                {
                        "-117 1 27 210 39 353 28 hstem",
                        "24 82 42 75 68 72 vstem",
                        "110 28 rmoveto",
                        "-18 hlineto",
                        "-4 -5 -2 -6 hvcurveto",
                        "-21 vlineto",
                        "0 64 2 41 39 60 -2 0 vhcurveto",
                        "22 vlineto",
                        "3 -1 4 -7 vhcurveto",
                        "-18 hlineto",
                        "-38 1 0 16 0 30 rrcurveto",
                        "163 118 vlineto",
                        "3 7 2 5 0 7 0 6 -1 7 -4 7 rrcurveto",
                        "-118 hlineto",
                        "5 54 31 27 32 28 36 32 36 33 0 73 rrcurveto",
                        "82 -58 52 -103 -86 -92 -46 -85 -28 23 -17 20 16 27 8 31 vhcurveto",
                        "0 5 0 5 -2 5 -1 6 -1 6 0 7 rrcurveto",
                        "40 45 35 49 59 32 -57 -49 vhcurveto",
                        "0 -50 -32 -36 -33 -35 -32 -34 -33 -37 -10 -55 rrcurveto",
                        "-109 hlineto",
                        "-4 -6 -2 -6 0 -8 0 -6 1 -6 4 -7 rrcurveto",
                        "107 -166 hlineto", "-30 -2 -14 -36 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A2
     */
    public void testuni02A2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A2");
        assertNotNull(cs);
        assertEquals("uni02A2", cs.getName());
        String[] text =
                {
                        "-117 1 27 210 39 353 28 hstem",
                        "24 73 68 75 37 86 vstem",
                        "277 28 rmoveto",
                        "-36 -1 14 30 hvcurveto",
                        "166 101 vlineto",
                        "3 7 2 5 0 7 0 6 -1 7 -4 7 rrcurveto",
                        "-104 hlineto",
                        "-10 55 -33 37 -32 34 -34 35 -31 36 0 50 rrcurveto",
                        "49 32 57 59 48 46 -35 -40 vhcurveto",
                        "0 -7 -1 -6 -2 -6 -1 -5 -1 -5 0 -5 rrcurveto",
                        "-31 28 -8 15 21 22 17 28 85 -91 46 -86 -103 -59 -52 -82 vhcurveto",
                        "0 -73 37 -33 36 -32 32 -28 31 -27 5 -54 rrcurveto",
                        "-123 hlineto",
                        "-4 -6 -2 -6 0 -8 0 -6 1 -6 4 -7 rrcurveto",
                        "124 -163 hlineto", "0 -30 0 -16 -38 -1 rrcurveto",
                        "-19 hlineto", "-6 -1 -4 -3 hvcurveto", "-22 vlineto",
                        "0 60 2 39 41 63 -2 0 vhcurveto", "21 vlineto",
                        "6 -5 2 -3 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A3
     */
    public void testuni02A3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A3");
        assertNotNull(cs);
        assertEquals("uni02A3", cs.getName());
        String[] text =
                {
                        "301 -12 42 -30 39 352 39 -23 35 256 -20 hstemhm",
                        "32 77 223 75 hintmask 10011110",
                        "332 89 rmoveto",
                        "-40 -39 -27 -20 -34 0 -54 0 -68 60 0 131 0 72 17 43 14 21 32 47 41 3 21 0 47 0 26 -21 25 -38 rrcurveto",
                        "hintmask 00101110",
                        "165 82 rmoveto",
                        "hintmask 00011110",
                        "160 callsubr",
                        "hintmask 00101110",
                        "20 73 34 17 30 0 rrcurveto",
                        "134 0 -229 -339 -13 0 rlineto",
                        "-9 0 -11 6 -2 9 -3 7 -1 16 0 30 rrcurveto",
                        "578 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -37 -6 -15 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 2 -2 3 vhcurveto",
                        "32 4 rlineto",
                        "20 10 -17 -56 hvcurveto",
                        "-153 vlineto",
                        "hintmask 10011110",
                        "-24 13 -43 9 -20 0 -67 0 -43 -22 -41 -38 -42 -43 -20 -62 0 -74 0 -123 65 -92 109 0 50 0 39 30 38 39 rrcurveto",
                        "-2 -69 23 0 rlineto",
                        "14 11 25 8 31 8 rrcurveto",
                        "-3 vlineto",
                        "hintmask 01101110",
                        "-7 7 -5 15 vhcurveto",
                        "304 hlineto",
                        "4 31 11 47 17 58 rrcurveto",
                        "-27 7 -12 -29 rlineto",
                        "-24 -53 -17 -22 -58 0 rrcurveto",
                        "-129 0 235 348 rlineto",
                        "23 33 -1 5 0 4 0 5 -7 1 -6 0 -2 0 -35 -5 -30 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A4
     */
    public void testuni02A4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A4");
        assertNotNull(cs);
        assertEquals("uni02A4", cs.getName());
        String[] text =
                {
                        "254 -229 29 188 42 -3 28 336 39 -23 35 256 -20 hstemhm",
                        "34 78 222 75 247 75 hintmask 1100011110000000",
                        "336 57 rmoveto",
                        "-27 callsubr",
                        "hintmask 1011011110000000",
                        "21 18 52 11 58 10 rrcurveto",
                        "-4 28 rlineto",
                        "-15 -3 -22 0 -12 0 -8 0 -11 6 -3 9 -2 7 -2 16 0 30 rrcurveto",
                        "234 vlineto",
                        "17 31 20 6 21 0 rrcurveto",
                        "142 0 -156 -285 rlineto",
                        "21 5 20 2 17 0 rrcurveto",
                        "78 67 -63 -85 -118 -87 -47 -50 hvcurveto",
                        "-40 0 -28 23 -13 23 -12 21 -16 7 -23 0 rrcurveto",
                        "-22 -8 -15 -16 -32 62 -40 91 144 77 99 96 hvcurveto",
                        "0 106 -63 70 -117 10 rrcurveto",
                        "130 236 rlineto",
                        "6 13 4 10 0 6 rrcurveto",
                        "9 -6 4 -18 vhcurveto",
                        "-230 hlineto",
                        "-11 -9 1 16 hvcurveto",
                        "-8 1 0 250 -22 0 rlineto",
                        "-20 -9 -14 -4 -19 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 3 -2 2 vhcurveto",
                        "33 4 rlineto",
                        "19 10 -17 -56 hvcurveto",
                        "-153 vlineto",
                        "hintmask 1100111110000000",
                        "-23 13 -44 9 -20 0 -66 0 -44 -22 -40 -38 -43 -43 -20 -62 0 -74 0 -123 66 -92 108 0 rrcurveto",
                        "51 0 39 30 38 39 rrcurveto", "-2 32 rmoveto",
                        "-24 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A5
     */
    public void testuni02A5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A5");
        assertNotNull(cs);
        assertEquals("uni02A5", cs.getName());
        String[] text =
                {
                        "316 -12 42 -30 39 90 33 229 39 -23 35 256 -20 hstemhm",
                        "34 78 222 75 359 30 hintmask 1010111110000000",
                        "334 89 rmoveto",
                        "-24 callsubr",
                        "hintmask 0111011110000000",
                        "265 -348 rmoveto",
                        "60 hlineto",
                        "88 51 38 56 54 -48 14 -24 hvcurveto",
                        "-37 0 -30 -15 -22 -20 -17 -16 -19 -34 -17 -38 rrcurveto",
                        "-65 0 229 348 rlineto",
                        "9 14 8 11 0 7 rrcurveto",
                        "8 -6 3 -10 vhcurveto",
                        "-240 hlineto",
                        "-29 0 -1 10 -1 4 rrcurveto",
                        "-21 4 -31 -149 27 -5 rlineto",
                        "5 34 18 41 10 9 11 8 14 5 20 0 rrcurveto",
                        "142 0 -223 -339 -15 0 rlineto",
                        "-8 0 -11 6 -3 9 -2 7 -2 16 0 30 rrcurveto",
                        "578 -22 vlineto",
                        "-20 -9 -14 -4 -19 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 3 -2 2 vhcurveto",
                        "33 4 rlineto",
                        "19 10 -17 -56 hvcurveto",
                        "-153 vlineto",
                        "hintmask 1010111110000000",
                        "-23 13 -44 9 -20 0 -66 0 -44 -22 -40 -38 -43 -43 -20 -62 0 -74 0 -123 66 -92 108 0 51 0 39 30 38 39 rrcurveto",
                        "-3 -69 24 0 rlineto", "14 11 25 9 31 7 rrcurveto",
                        "-2 vlineto", "hintmask 0111011110000000",
                        "-11 17 -2 18 vhcurveto", "106 hlineto",
                        "-14 -38 -12 -40 -8 -37 rrcurveto", "31 -7 rlineto",
                        "5 36 13 44 16 42 rrcurveto", "169 93 rmoveto",
                        "-32 -35 -22 -53 vhcurveto", "-64 hlineto",
                        "12 28 25 62 63 0 rrcurveto",
                        "41 11 -22 -14 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A6
     */
    public void testuni02A6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A6");
        assertNotNull(cs);
        assertEquals("uni02A6", cs.getName());
        String[] text =
                {
                        "98 -12 30 373 39 -18 30 hstemhm",
                        "89 75 -58 58 105 62 164 67 hintmask 10110110",
                        "89 87 rmoveto",
                        "-96 39 -3 147 vhcurveto",
                        "38 0 142 0 46 25 41 22 20 32 0 47 0 42 -14 47 -77 28 -96 36 -44 39 0 28 0 59 46 19 39 0 22 0 61 -11 30 -108 rrcurveto",
                        "20 1 -12 121 rlineto",
                        "-19 11 -52 16 -50 0 -81 0 -66 -51 0 -69 0 -72 45 -20 52 -21 66 -26 63 -30 0 -61 0 -50 -52 -24 -38 0 -113 0 -104 8 -18 39 rrcurveto",
                        "-5 14 -1 22 0 33 rrcurveto", "hintmask 11010110",
                        "257 111 39 vlineto", "hintmask 11001110",
                        "186 callsubr", "hintmask 11010110", "69 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A7
     */
    public void testuni02A7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A7");
        assertNotNull(cs);
        assertEquals("uni02A7", cs.getName());
        String[] text =
                {
                        "-39 -223 38 -38 100 111 55 348 39 225 34 hstemhm",
                        "89 75 -58 58 111 75 hintmask 00111101",
                        "164 391 rmoveto",
                        "94 hlineto",
                        "6 0 7 1 4 3 rrcurveto",
                        "0 -331 -6 7 rlineto",
                        "-26 -20 -20 -8 -26 0 rrcurveto",
                        "-27 -6 30 62 hvcurveto",
                        "hintmask 01111011",
                        "-13 -258 rmoveto",
                        "-19 -12 -17 -16 hvcurveto",
                        "hintmask 10111011",
                        "-41 54 -26 42 vhcurveto",
                        "15 0 23 1 35 29 60 49 1 82 0 106 rrcurveto",
                        "421 vlineto",
                        "96 10 94 58 vhcurveto",
                        "17 0 16 -12 10 -26 6 -15 6 -14 23 0 rrcurveto",
                        "17 14 15 20 26 -33 40 -75 hvcurveto",
                        "-27 0 -27 -10 -27 -21 -59 -48 -4 -78 0 -102 rrcurveto",
                        "-1 0 -110 0 0 154 -58 -20 0 -19 rlineto",
                        "-76 -16 -39 -67 -2 -1 -1 -3 vhcurveto", "-31 vlineto",
                        "-3 1 -1 3 vhcurveto", "hintmask 10111101",
                        "65 -304 hlineto", "-71 27 -28 46 vhcurveto",
                        "41 0 37 18 35 36 rrcurveto", "-49 vlineto",
                        "-151 -33 -27 -22 vhcurveto",
                        "-23 0 -5 16 -5 15 rrcurveto",
                        "-6 16 -6 15 -24 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A8
     */
    public void testuni02A8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A8");
        assertNotNull(cs);
        assertEquals("uni02A8", cs.getName());
        String[] text =
                {
                        "137 -12 64 -64 55 121 25 202 39 -16 28 hstemhm",
                        "89 75 -58 58 80 75 269 22 hintmask 0111010110000000",
                        "164 391 rmoveto",
                        "-3 callsubr",
                        "hintmask 0111001110000000",
                        "-2 callsubr",
                        "hintmask 0111010110000000",
                        "-1 callsubr",
                        "446 12 rmoveto",
                        "34 -29 8 -28 vhcurveto",
                        "-52 0 -61 -80 -27 -39 -67 30 -27 78 0 69 rrcurveto",
                        "hintmask 1010100110000000",
                        "75 37 92 89 vhcurveto",
                        "55 0 8 -33 8 -30 6 -26 6 -25 35 0 rrcurveto",
                        "24 21 19 24 67 -90 32 -55 -135 -84 -106 -128 hvcurveto",
                        "0 -88 36 -85 85 -35 -21 -33 -17 -30 -19 -33 rrcurveto",
                        "20 -4 rlineto",
                        "22 32 17 29 19 32 13 -3 14 -2 12 0 rrcurveto",
                        "77 108 76 83 hvcurveto", "-22 -8 rmoveto", "",
                        "-48 -79 -39 -41 vhcurveto",
                        "-11 0 -18 4 -10 3 23 31 58 74 41 0 rrcurveto",
                        "16 21 -5 -20 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02A9
     */
    public void testuni02A9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02A9");
        assertNotNull(cs);
        assertEquals("uni02A9", cs.getName());
        String[] text =
                {
                        "305 -219 30 186 27 367 39 -34 48 237 27 hstemhm",
                        "92 75 210 75 197 75 hintmask 11011111",
                        "377 353 rmoveto",
                        "-282 vlineto",
                        "0 -31 -2 -14 -35 -1 rrcurveto",
                        "-18 -1 rlineto",
                        "-6 0 -5 -2 hvcurveto",
                        "-19 vlineto",
                        "29 1 49 2 19 0 22 0 68 -3 12 0 rrcurveto",
                        "20 vlineto",
                        "5 -3 1 -6 vhcurveto",
                        "-16 1 rlineto",
                        "-31 1 -7 6 0 39 rrcurveto",
                        "249 vlineto",
                        "15 32 33 44 73 0 rrcurveto",
                        "61 15 -53 -65 hvcurveto",
                        "-223 vlineto",
                        "-141 -30 -103 -44 vhcurveto",
                        "-11 0 -5 4 -3 10 -5 16 -10 24 -23 0 rrcurveto",
                        "-4 -25 -3 -32 -34 57 -15 30 hvcurveto",
                        "24 0 32 12 27 27 55 55 10 80 0 130 rrcurveto",
                        "201 vlineto",
                        "115 -46 43 -69 vhcurveto",
                        "-94 0 -49 -65 -14 -23 rrcurveto",
                        "95 -22 vlineto",
                        "hintmask 11101111",
                        "-27 -16 -28 -5 -24 0 rrcurveto",
                        "-184 31 hlineto",
                        "190 63 30 43 vhcurveto",
                        "31 0 33 -32 12 -58 5 -23 16 -25 31 0 19 0 19 15 0 26 0 20 -9 29 -51 42 -28 23 -37 10 -37 0 rrcurveto",
                        "-74 -111 -34 -226 hvcurveto",
                        "-18 -79 -39 79 -320 vlineto",
                        "0 -38 -4 -7 -34 -2 rrcurveto", "-18 -1 rlineto",
                        "-5 -1 -2 -4 hvcurveto", "-20 vlineto",
                        "30 1 48 2 20 0 22 0 68 -3 11 0 rrcurveto",
                        "21 vlineto", "3 -3 2 -5 vhcurveto", "-16 1 rlineto",
                        "-36 1 -2 12 0 34 rrcurveto", "320 184 vlineto",
                        "24 1 2 -19 0 -20 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02AA
     */
    public void testuni02AA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02AA");
        assertNotNull(cs);
        assertEquals("uni02AA", cs.getName());
        String[] text =
                {
                        "25 -12 28 -17 29 384 30 256 -20 hstemhm",
                        "95 74 33 61 153 67 hintmask 01111110",
                        "95 72 rmoveto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -2 rlineto",
                        "",
                        "0 73 2 35 vhcurveto",
                        "19 0 27 -1 23 0 rrcurveto",
                        "-2 vlineto",
                        "3 1 4 1 3 0 14 0 11 -1 5 0 rrcurveto",
                        "2 hlineto",
                        "hintmask 10111110",
                        "26 -7 29 -4 35 0 47 0 105 29 0 99 0 80 -66 36 -81 30 -54 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -31 16 -37 9 -50 0 -79 0 -59 -48 0 -67 0 -75 38 -21 72 -32 80 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 rrcurveto",
                        "-37 0 -27 18 -10 11 -23 23 -10 48 -3 25 rrcurveto",
                        "-27 -1 rlineto",
                        "3 -37 2 -39 1 -35 -21 4 -8 15 0 24 rrcurveto",
                        "626 -22 vlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02AB
     */
    public void testuni02AB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02AB");
        assertNotNull(cs);
        assertEquals("uni02AB", cs.getName());
        String[] text =
                {
                        "90 -1 29 -28 39 352 39 26 -21 263 -20 hstemhm",
                        "95 74 hintmask 10111100",
                        "286 430 rmoveto",
                        "-15 0 -10 6 -2 6 rrcurveto",
                        "-25 hlineto",
                        "-1 -45 -5 -44 -9 -49 rrcurveto",
                        "27 -3 rlineto",
                        "20 73 34 17 30 0 rrcurveto",
                        "134 0 -242 -359 -3 -4 -7 0 rlineto",
                        "-32 -11 15 29 hvcurveto",
                        "626 -22 vlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto",
                        "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto",
                        "20 10 -16 -57 hvcurveto",
                        "-501 vlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto",
                        "hintmask 01111100",
                        "1 1 296 0 rlineto",
                        "4 31 11 47 17 58 rrcurveto",
                        "-27 7 -12 -29 rlineto",
                        "-24 -53 -17 -22 -58 0 rrcurveto",
                        "-129 0 236 348 rlineto",
                        "22 33 0 5 0 4 0 5 -8 1 -6 0 -2 0 -35 -5 -30 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02AC
     */
    public void testuni02AC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02AC");
        assertNotNull(cs);
        assertEquals("uni02AC", cs.getName());
        String[] text =
                {"-135 271 21 316 22 hstem", "127 613 rmoveto", "193 callsubr",
                        "", "-338 vmoveto", "0 17 -1 1 rlineto",
                        "0 -36 -1 -26 -24 -27 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-3 4 -1 3 vhcurveto",
                        "16 0 8 -4 11 -29 rrcurveto", "76 -205 rlineto",
                        "3 -8 5 -4 5 0 8 0 9 2 4 11 rrcurveto",
                        "55 147 56 -148 rlineto",
                        "3 -8 5 -4 5 0 7 0 9 2 5 11 rrcurveto",
                        "79 200 rlineto", "11 29 13 8 14 0 rrcurveto",
                        "3 4 0 4 hvcurveto", "0 17 -1 1 rlineto",
                        "0 -22 -1 -19 -21 -40 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-2 2 -2 2 vhcurveto",
                        "9 hlineto", "25 0 7 -8 -10 -27 rrcurveto",
                        "-59 -150 -57 153 rlineto",
                        "-11 30 6 2 26 0 rrcurveto", "3 2 1 3 hvcurveto",
                        "0 17 -2 1 -55 -1 rlineto", "-19 -38 1 0 hvcurveto",
                        "-1 -1 0 -17 rlineto", "-4 2 0 3 vhcurveto",
                        "18 0 7 -6 10 -27 rrcurveto",
                        "9 -23 -47 -129 -58 153 rlineto",
                        "-10 27 2 5 19 0 rrcurveto", "9 hlineto",
                        "2 2 1 3 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02AD
     */
    public void testuni02AD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02AD");
        assertNotNull(cs);
        assertEquals("uni02AD", cs.getName());
        String[] text =
                {"-104 170 54 284 54 hstem", "49 28 243 29 vstem",
                        "349 23 rmoveto",
                        "201 -300 -201 28 147 243 -147 vlineto",
                        "29 339 rmoveto",
                        "200 -300 -200 28 146 243 -146 vlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni02AE
     */
    public void testuni02AE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02AE");
        assertNotNull(cs);
        assertEquals("uni02AE", cs.getName());
        String[] text =
                {
                        "69 -208 -21 217 47 367 27 -16 29 hstemhm",
                        "142 74 198 75 hintmask 11011100",
                        "216 167 rmoveto",
                        "175 -3 100 -107 -29 -60 -15 -34 -32 25 -3 3 vhcurveto",
                        "23 0 11 24 4 16 4 10 5 5 11 0 rrcurveto",
                        "35 4 -65 -151 -109 4 -100 104 hvcurveto",
                        "39 0 58 15 67 67 rrcurveto", "-299 22 vlineto",
                        "20 9 15 5 18 3 17 4 36 5 16 0 rrcurveto",
                        "-2 25 rlineto", "0 3 -2 3 -3 -1 rrcurveto",
                        "-32 -3 rlineto", "-20 -10 20 47 hvcurveto",
                        "467 vlineto", "hintmask 11101100",
                        "28 9 16 34 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto", "",
                        "0 -68 -2 -36 -39 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "19 hlineto", "33 10 -15 -29 hvcurveto",
                        "-250 vlineto", "-48 -47 -43 -26 -29 0 rrcurveto",
                        "-62 -16 62 70 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02AF
     */
    public void testuni02AF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02AF");
        assertNotNull(cs);
        assertEquals("uni02AF", cs.getName());
        String[] text =
                {"91 -229 29 188 47 367 27 -16 29 hstemhm",
                        "142 74 198 75 hintmask 11101100", "489 9 rmoveto",
                        "349 vlineto", "28 9 16 34 vhcurveto", "19 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -68 -2 -36 -39 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "19 hlineto", "33 10 -15 -29 hvcurveto",
                        "-250 vlineto", "-48 -47 -43 -26 -29 0 rrcurveto",
                        "-62 -16 60 69 hvcurveto", "hintmask 11011100",
                        "170 -4 108 -89 -29 -61 -15 -34 -32 26 -3 3 vhcurveto",
                        "23 0 10 24 5 16 4 10 5 5 10 0 rrcurveto",
                        "22 1 -69 -150 -85 0 -121 108 hvcurveto",
                        "39 0 58 15 67 67 rrcurveto", "-31 vlineto",
                        "-158 20 -110 99 29 61 15 33 32 -25 3 -4 vhcurveto",
                        "-23 0 -10 -23 -5 -17 -3 -9 -6 -5 -10 0 rrcurveto",
                        "-31 -17 68 141 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02B9
     */
    public void testuni02B9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02B9");
        assertNotNull(cs);
        assertEquals("uni02B9", cs.getName());
        String[] text =
                {
                        "-311 544 176 hstem",
                        "16 129 vstem",
                        "128 713 rmoveto",
                        "-7 5 -6 2 -8 0 rrcurveto",
                        "-4 hlineto",
                        "-12 -1 -7 -4 -3 -9 rrcurveto",
                        "-64 -146 rlineto",
                        "-1 -1 0 -1 0 -1 0 -4 3 -4 3 -3 3 -1 3 -1 2 0 3 0 3 1 2 2 rrcurveto",
                        "102 121 rlineto",
                        "4 5 1 6 0 5 0 12 -6 11 -11 6 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni02BA
     */
    public void testuni02BA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02BA");
        assertNotNull(cs);
        assertEquals("uni02BA", cs.getName());
        String[] text =
                {"-151 557 176 hstem", "54 261 vstem", "167 727 rmoveto",
                        "194 callsubr", "134 -8 rmoveto", "195 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02BB
     */
    public void testuni02BB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02BB");
        assertNotNull(cs);
        assertEquals("uni02BB", cs.getName());
        String[] text =
                {"-333 471 75 hstem", "29 50 vstem", "89 471 rmoveto", "",
                        "36 11 18 16 16 -5 25 -41 -7 -4 8 10 hvcurveto",
                        "0 23 18 37 42 9 rrcurveto", "-4 17 rlineto",
                        "-91 -5 -15 -75 0 -26 rrcurveto",
                        "-36 22 -37 38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02BE
     */
    public void testuni02BE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02BE");
        assertNotNull(cs);
        assertEquals("uni02BE", cs.getName());
        String[] text =
                {
                        "-258 469 32 119 32 hstem",
                        "139 33 vstem",
                        "57 506 rmoveto",
                        "-12 -31 rlineto",
                        "11 -4 11 -2 13 0 25 0 22 9 18 18 18 17 9 22 0 26 0 25 -9 21 -18 18 -18 18 -22 9 -25 0 -9 0 -8 -1 -7 -2 rrcurveto",
                        "8 -31 rlineto",
                        "5 1 5 1 6 0 16 0 14 -6 12 -11 11 -12 6 -14 0 -16 0 -17 -6 -14 -11 -11 -12 -12 -14 -6 -16 0 -9 0 -7 2 -7 3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02BF
     */
    public void testuni02BF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02BF");
        assertNotNull(cs);
        assertEquals("uni02BF", cs.getName());
        String[] text =
                {
                        "-258 469 33 118 32 hstem",
                        "72 33 vstem",
                        "187 506 rmoveto",
                        "-7 -3 -7 -1 -8 0 -17 0 -14 6 -11 12 -12 11 -6 14 0 16 0 17 6 14 12 11 11 11 14 6 17 0 5 0 5 0 5 -2 rrcurveto",
                        "8 31 rlineto",
                        "-7 2 -8 1 -8 0 -26 0 -22 -9 -17 -18 -18 -17 -10 -22 0 -25 0 -25 10 -22 18 -18 17 -17 22 -10 26 0 12 0 11 2 11 5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02C0
     */
    public void testuni02C0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C0");
        assertNotNull(cs);
        assertEquals("uni02C0", cs.getName());
        String[] text =
                {
                        "-198 668 25 hstem",
                        "124 39 32 40 vstem",
                        "58 630 rmoveto",
                        "-16 16 -5 7 vhcurveto",
                        "8 0 9 5 1 9 2 19 9 26 45 0 27 0 13 -21 0 -26 0 -19 -15 -14 -16 -13 -20 -16 -20 -18 0 -30 rrcurveto",
                        "-35 39 28 vlineto",
                        "0 27 17 16 19 15 19 14 17 15 0 26 rrcurveto",
                        "47 -36 29 -45 -64 -32 -33 -30 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni02C1
     */
    public void testuni02C1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C1");
        assertNotNull(cs);
        assertEquals("uni02C1", cs.getName());
        String[] text =
                {
                        "-198 668 25 hstem",
                        "58 40 32 39 vstem",
                        "235 630 rmoveto",
                        "-17 -16 -4 -7 vhcurveto",
                        "-8 0 -9 4 -1 9 -2 20 -9 26 -45 0 -27 0 -13 -21 0 -26 0 -19 15 -14 16 -13 20 -16 20 -18 0 -30 rrcurveto",
                        "-35 -39 28 vlineto",
                        "0 27 -17 16 -19 15 -19 14 -17 15 0 26 rrcurveto",
                        "47 36 29 45 64 32 -34 -29 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni02C2
     */
    public void testuni02C2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C2");
        assertNotNull(cs);
        assertEquals("uni02C2", cs.getName());
        String[] text =
                {"17 351 295 hstem", "107 304 vstem", "164 498 rmoveto",
                        "247 103 0 45 -304 -126 0 -42 304 -127 0 45 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02C3
     */
    public void testuni02C3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C3");
        assertNotNull(cs);
        assertEquals("uni02C3", cs.getName());
        String[] text =
                {"17 351 295 hstem", "107 304 vstem", "354 499 rmoveto",
                        "-247 -103 0 -45 304 126 0 42 -304 127 0 -45 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02C4
     */
    public void testuni02C4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C4");
        assertNotNull(cs);
        assertEquals("uni02C4", cs.getName());
        String[] text =
                {"17 347 303 hstem", "112 294 vstem", "259 593 rmoveto",
                        "-34 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02C5
     */
    public void testuni02C5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C5");
        assertNotNull(cs);
        assertEquals("uni02C5", cs.getName());
        String[] text =
                {"17 347 303 hstem", "112 294 vstem", "259 403 rmoveto",
                        "-103 247 -44 0 126 -303 42 0 126 303 -44 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02C8
     */
    public void testuni02C8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C8");
        assertNotNull(cs);
        assertEquals("uni02C8", cs.getName());
        String[] text =
                {"-296 73 44 vstem", "117 539 rmoveto", "180 -44 -180 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02C9
     */
    public void testuni02C9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02C9");
        assertNotNull(cs);
        assertEquals("uni02C9", cs.getName());
        String[] text =
                {"-76 506 44 hstem", "321 506 rmoveto", "196 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02CA
     */
    public void testuni02CA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02CA");
        assertNotNull(cs);
        assertEquals("uni02CA", cs.getName());
        String[] text =
                {
                        "-227 547 163 hstem",
                        "44 159 vstem",
                        "130 708 rmoveto",
                        "-79 -126 rlineto",
                        "-7 -10 0 -7 0 -5 0 -7 7 -6 8 0 6 0 7 5 16 15 rrcurveto",
                        "115 109 -3 11 rlineto",
                        "-2 1 -2 1 -2 2 -8 8 -13 11 -28 0 -5 0 -6 -1 -4 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02CB
     */
    public void testuni02CB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02CB");
        assertNotNull(cs);
        assertEquals("uni02CB", cs.getName());
        String[] text =
                {"-227 547 163 hstem", "79 158 vstem", "161 708 rmoveto",
                        "-3 1 -7 1 -5 0 -34 0 -23 -17 -7 -6 rrcurveto",
                        "-3 -11 115 -109 rlineto",
                        "15 -15 7 -5 7 0 7 0 7 6 0 5 0 7 -1 7 -5 10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02CC
     */
    public void testuni02CC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02CC");
        assertNotNull(cs);
        assertEquals("uni02CC", cs.getName());
        String[] text =
                {"-296 -233 165 hstem", "68 54 vstem", "122 -231 rmoveto",
                        "163 vlineto", "-22 5 -9 4 -23 -9 rrcurveto",
                        "-165 vlineto", "24 -7 9 -3 21 12 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02CD
     */
    public void testuni02CD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02CD");
        assertNotNull(cs);
        assertEquals("uni02CD", cs.getName());
        String[] text =
                {"", "-111 -79 44 hstem", "311 -79 rmoveto",
                        "12 11 18 12 7 -4 7 -10 hvcurveto", "-244 hlineto",
                        "-12 -10 -17 -12 -7 3 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni02CE
     */
    public void testuni02CE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02CE");
        assertNotNull(cs);
        assertEquals("uni02CE", cs.getName());
        String[] text =
                {"-244 -219 141 hstem", "36 183 vstem", "36 -119 rmoveto",
                        "197 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02CF
     */
    public void testuni02CF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02CF");
        assertNotNull(cs);
        assertEquals("uni02CF", cs.getName());
        String[] text =
                {"-232 -214 146 hstem", "46 170 vstem", "60 -214 rmoveto",
                        "4 0 8 1 7 4 rrcurveto", "132 56 rlineto",
                        "3 3 2 13 0 8 rrcurveto", "29 -18 28 0 vhcurveto",
                        "-10 4 -120 -103 rlineto",
                        "-11 -11 -11 -9 0 -9 0 -3 1 -11 13 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D0
     */
    public void testuni02D0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D0");
        assertNotNull(cs);
        assertEquals("uni02D0", cs.getName());
        String[] text =
                {"-292 37 368 hstem", "36 139 vstem", "36 37 rmoveto",
                        "139 0 -70 121 rlineto", "-69 247 rmoveto",
                        "69 -121 70 121 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D1
     */
    public void testuni02D1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D1");
        assertNotNull(cs);
        assertEquals("uni02D1", cs.getName());
        String[] text =
                {"-297 283 121 hstem", "36 139 vstem", "36 404 rmoveto",
                        "69 -121 70 121 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D2
     */
    public void testuni02D2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D2");
        assertNotNull(cs);
        assertEquals("uni02D2", cs.getName());
        String[] text =
                {"-309 -227 32 118 33 hstem", "125 34 vstem",
                        "125 -136 rmoveto", "-34 -26 -25 -33 vhcurveto",
                        "-5 0 -5 1 -5 1 rrcurveto", "-9 -31 rlineto",
                        "8 -2 8 -1 8 0 rrcurveto",
                        "52 41 41 50 51 -41 41 -52 hvcurveto",
                        "-12 0 -12 -2 -10 -4 rrcurveto", "12 -31 rlineto",
                        "7 3 7 1 8 0 rrcurveto", "36 23 -28 -31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D3
     */
    public void testuni02D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D3");
        assertNotNull(cs);
        assertEquals("uni02D3", cs.getName());
        String[] text =
                {"-309 -216 32 118 33 hstem", "34 33 vstem", "34 -125 rmoveto",
                        "-51 42 -40 50 vhcurveto", "9 0 8 1 7 2 rrcurveto",
                        "-8 31 rlineto", "-5 -2 -5 0 -6 0 rrcurveto",
                        "-34 -25 26 33 31 25 28 34 hvcurveto",
                        "9 0 7 -1 7 -3 rrcurveto", "12 30 rlineto",
                        "-11 5 -11 2 -13 0 rrcurveto",
                        "-51 -41 -42 -50 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D4
     */
    public void testuni02D4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D4");
        assertNotNull(cs);
        assertEquals("uni02D4", cs.getName());
        String[] text =
                {"-242 -227 44 hstem", "108 44 vstem", "48 -227 rmoveto",
                        "168 hlineto", "7 11 0 14 -10 19 rrcurveto",
                        "-61 108 hlineto", "-12 12 -16 0 -16 -9 rrcurveto",
                        "-111 -65 vlineto", "-5 -16 -1 -12 11 -16 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D5
     */
    public void testuni02D5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D5");
        assertNotNull(cs);
        assertEquals("uni02D5", cs.getName());
        String[] text =
                {"-242 -110 44 hstem", "108 44 vstem", "212 -66 rmoveto",
                        "198 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D6
     */
    public void testuni02D6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D6");
        assertNotNull(cs);
        assertEquals("uni02D6", cs.getName());
        String[] text =
                {"-227 -149 44 hstem", "116 44 vstem", "160 -209 rmoveto",
                        "60 67 vlineto", "14 19 -3 10 -10 15 rrcurveto",
                        "-68 64 hlineto", "-17 9 -8 1 -19 -13 rrcurveto",
                        "-61 -67 vlineto", "-12 -13 1 -15 8 -16 rrcurveto",
                        "70 -65 hlineto", "16 -8 11 -2 17 15 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02D7
     */
    public void testuni02D7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02D7");
        assertNotNull(cs);
        assertEquals("uni02D7", cs.getName());
        String[] text =
                {"-227 -125 44 hstem", "41 182 vstem", "223 -81 rmoveto",
                        "-179 hlineto", "-13 -13 1 -15 9 -16 rrcurveto",
                        "181 hlineto", "13 19 -3 10 -9 15 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02DE
     */
    public void testuni02DE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02DE");
        assertNotNull(cs);
        assertEquals("uni02DE", cs.getName());
        String[] text =
                {
                        "-183 286 51 hstem",
                        "145 45 vstem",
                        "39 381 rmoveto",
                        "14 -38 rlineto",
                        "26 15 48 21 26 5 -5 -9 -3 -16 0 -14 0 -45 22 -14 16 0 26 0 22 12 49 36 rrcurveto",
                        "-11 20 rlineto",
                        "-22 -12 -11 -5 -22 0 -19 0 -5 16 0 22 0 36 15 22 17 25 rrcurveto",
                        "-14 11 rlineto", "-46 -38 -63 -28 -60 -22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02DF
     */
    public void testuni02DF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02DF");
        assertNotNull(cs);
        assertEquals("uni02DF", cs.getName());
        String[] text =
                {"-142 507 206 hstem", "49 262 vstem", "224 610 rmoveto",
                        "86 73 rlineto",
                        "-4 9 0 0 -5 8 -5 8 0 0 -5 5 rrcurveto",
                        "-110 -72 -113 72 rlineto",
                        "-5 -5 0 0 -5 -9 -6 -9 0 0 -3 -7 rrcurveto",
                        "88 -74 -87 -73 10 -16 rlineto",
                        "4 -7 0 0 6 -6 rrcurveto", "111 71 111 -71 rlineto",
                        "7 6 0 0 4 7 5 7 0 0 3 9 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni02EC
     */
    public void testuni02EC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02EC");
        assertNotNull(cs);
        assertEquals("uni02EC", cs.getName());
        String[] text =
                {"-189 -130 257 hstem", "13 280 vstem", "20 113 rmoveto",
                        "120 -243 rlineto", "0 31 -1 2 hvcurveto",
                        "5 8 76 163 41 85 rrcurveto",
                        "-45 0 -7 -14 -81 -168 -94 182 -53 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02ED
     */
    public void testuni02ED() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02ED");
        assertNotNull(cs);
        assertEquals("uni02ED", cs.getName());
        String[] text =
                {"-15 583 43 93 44 hstem", "482 719 rmoveto",
                        "-477 44 477 hlineto", "-180 vmoveto",
                        "-477 43 477 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni02EE
     */
    public void testuni02EE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni02EE");
        assertNotNull(cs);
        assertEquals("uni02EE", cs.getName());
        String[] text =
                {
                        "-123 553 81 hstem",
                        "132 33 122 32 vstem",
                        "257 634 rmoveto",
                        "-35 -16 -24 -16 -16 10 -25 40 hvcurveto",
                        "8 0 10 3 12 6 1 -3 0 -3 0 -4 0 -4 -2 -60 -77 -15 rrcurveto",
                        "4 -17 rlineto",
                        "90 4 17 76 0 26 rrcurveto",
                        "35 -23 37 -39 vhcurveto",
                        "-154 -2 rmoveto",
                        "-36 -16 -24 -16 -16 10 -25 41 hvcurveto",
                        "7 0 10 3 12 6 1 -3 0 -3 0 -4 0 -4 -2 -60 -77 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 18 76 0 26 rrcurveto",
                        "35 -24 37 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0302
     */
    public void testuni0302() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0302");
        assertNotNull(cs);
        assertEquals("uni0302", cs.getName());
        String[] text =
                {"-501 554 143 hstem", "-267 254 vstem", "-114 697 rmoveto",
                        "200 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0304
     */
    public void testuni0304() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0304");
        assertNotNull(cs);
        assertEquals("uni0304", cs.getName());
        String[] text =
                {"-501 506 44 hstem", "-95 506 rmoveto", "196 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0305
     */
    public void testuni0305() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0305");
        assertNotNull(cs);
        assertEquals("uni0305", cs.getName());
        String[] text =
                {"-501 506 44 hstem", "-39 506 rmoveto",
                        "13 10 18 12 6 -4 8 -9 hvcurveto", "-301 hlineto",
                        "-11 -11 -17 -12 -7 4 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni0306
     */
    public void testuni0306() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0306");
        assertNotNull(cs);
        assertEquals("uni0306", cs.getName());
        String[] text =
                {"-501 529 57 hstem", "-296 26 217 27 vstem",
                        "-270 678 rmoveto", "-26 -14 rlineto",
                        "7 -78 51 -57 77 0 50 0 75 34 10 101 rrcurveto",
                        "-27 14 rlineto",
                        "-2 -62 -60 -30 -46 0 -60 0 -47 40 -2 52 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0307
     */
    public void testuni0307() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0307");
        assertNotNull(cs);
        assertEquals("uni0307", cs.getName());
        String[] text =
                {"-501 557 95 hstem", "-228 96 vstem", "-228 604 rmoveto",
                        "201 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0308
     */
    public void testuni0308() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0308");
        assertNotNull(cs);
        assertEquals("uni0308", cs.getName());
        String[] text =
                {"-501 529 91 hstem", "-336 91 70 91 vstem",
                        "-336 575 rmoveto", "202 callsubr", "161 hmoveto",
                        "7 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni030A
     */
    public void testuni030A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni030A");
        assertNotNull(cs);
        assertEquals("uni030A", cs.getName());
        String[] text =
                {
                        "-501 570 27 112 27 hstem",
                        "-268 32 108 31 vstem",
                        "-268 653 rmoveto",
                        "-46 39 -37 46 48 38 38 45 47 -40 36 -46 -46 -39 -37 -46 vhcurveto",
                        "86 56 rmoveto", "125 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni030B
     */
    public void testuni030B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni030B");
        assertNotNull(cs);
        assertEquals("uni030B", cs.getName());
        String[] text =
                {"-501 557 176 hstem", "-300 261 vstem", "-188 727 rmoveto",
                        "-7 4 -6 2 -8 0 -4 0 -16 -1 -6 -13 rrcurveto",
                        "-64 -146 rlineto",
                        "-1 -1 0 -1 0 -1 0 -8 8 -5 6 0 3 0 3 1 2 2 rrcurveto",
                        "102 121 rlineto",
                        "4 5 1 6 0 5 0 12 -6 11 -11 7 rrcurveto",
                        "135 -8 rmoveto", "195 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni030C
     */
    public void testuni030C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni030C");
        assertNotNull(cs);
        assertEquals("uni030C", cs.getName());
        String[] text =
                {
                        "-501 533 143 hstem",
                        "-330 253 vstem",
                        "-229 533 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -33 25 -39 29 rrcurveto",
                        "-20 -13 rlineto", "35 -38 37 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni030D
     */
    public void testuni030D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni030D");
        assertNotNull(cs);
        assertEquals("uni030D", cs.getName());
        String[] text =
                {"-501 -171 44 vstem", "-127 539 rmoveto",
                        "180 -44 -180 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni030E
     */
    public void testuni030E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni030E");
        assertNotNull(cs);
        assertEquals("uni030E", cs.getName());
        String[] text =
                {"-501 -319 45 60 44 vstem", "-274 540 rmoveto",
                        "179 -45 -179 vlineto", "149 -1 rmoveto",
                        "180 -44 -180 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni030F
     */
    public void testuni030F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni030F");
        assertNotNull(cs);
        assertEquals("uni030F", cs.getName());
        String[] text =
                {
                        "-501 581 176 hstem",
                        "-298 261 vstem",
                        "-149 750 rmoveto",
                        "162 callsubr",
                        "-135 -7 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -6 2 -7 5 -6 rrcurveto",
                        "114 -110 rlineto",
                        "2 -2 2 -1 3 0 2 0 3 2 3 2 3 2 2 4 0 4 0 1 0 2 -1 1 rrcurveto",
                        "-78 139 rlineto",
                        "-5 9 -7 2 -12 0 -9 0 -7 -2 -8 -6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0310
     */
    public void testuni0310() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0310");
        assertNotNull(cs);
        assertEquals("uni0310", cs.getName());
        String[] text =
                {"-501 529 57 68 91 hstem", "-387 27 64 90 63 26 vstem",
                        "-360 678 rmoveto", "-27 -14 rlineto",
                        "8 -78 50 -57 78 0 50 0 75 34 9 101 rrcurveto",
                        "-26 14 rlineto",
                        "-3 -62 -59 -30 -46 0 -61 0 -46 40 -2 52 rrcurveto",
                        "64 21 rmoveto", "81 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0311
     */
    public void testuni0311() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0311");
        assertNotNull(cs);
        assertEquals("uni0311", cs.getName());
        String[] text =
                {"-501 588 58 hstem", "-342 26 217 27 vstem",
                        "-99 497 rmoveto", "27 13 rlineto",
                        "-8 78 -50 58 -78 0 -50 0 -75 -35 -9 -101 rrcurveto",
                        "26 -13 rlineto",
                        "3 62 59 29 46 0 61 0 46 -40 2 -51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0312
     */
    public void testuni0312() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0312");
        assertNotNull(cs);
        assertEquals("uni0312", cs.getName());
        String[] text =
                {
                        "-501 468 82 hstem",
                        "-158 33 vstem",
                        "-96 468 rmoveto",
                        "35 16 24 16 17 -10 25 -40 hvcurveto",
                        "-8 0 -10 -3 -12 -6 0 3 -1 3 0 4 0 4 2 60 77 15 rrcurveto",
                        "-4 17 rlineto", "-90 -4 -17 -76 0 -26 rrcurveto",
                        "-36 23 -37 39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0313
     */
    public void testuni0313() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0313");
        assertNotNull(cs);
        assertEquals("uni0313", cs.getName());
        String[] text =
                {
                        "-501 473 17 80 82 hstem",
                        "-53 32 vstem",
                        "-83 652 rmoveto",
                        "-35 -16 -24 -16 -17 10 -25 41 hvcurveto",
                        "7 0 10 3 12 6 1 -3 0 -3 0 -4 0 -4 -2 -60 -77 -15 rrcurveto",
                        "4 -17 rlineto", "90 5 17 75 0 26 rrcurveto",
                        "36 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0314
     */
    public void testuni0314() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0314");
        assertNotNull(cs);
        assertEquals("uni0314", cs.getName());
        String[] text =
                {
                        "-501 479 17 80 81 hstem",
                        "-129 32 vstem",
                        "-16 617 rmoveto",
                        "17 -16 23 -35 -40 -22 -39 -34 vhcurveto",
                        "0 -27 18 -75 90 -3 rrcurveto",
                        "3 17 rlineto",
                        "-71 10 -8 61 0 8 0 4 1 2 1 3 12 -5 9 -3 8 0 rrcurveto",
                        "40 10 24 17 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0315
     */
    public void testuni0315() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0315");
        assertNotNull(cs);
        assertEquals("uni0315", cs.getName());
        String[] text =
                {
                        "-501 570 81 hstem",
                        "-62 33 vstem",
                        "-91 651 rmoveto",
                        "-35 -16 -24 -16 -16 10 -25 40 hvcurveto",
                        "8 0 10 3 12 6 0 -3 1 -3 0 -4 0 -4 -2 -60 -77 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "35 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0316
     */
    public void testuni0316() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0316");
        assertNotNull(cs);
        assertEquals("uni0316", cs.getName());
        String[] text =
                {"-501 -219 141 hstem", "-339 183 vstem", "-339 -119 rmoveto",
                        "197 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0317
     */
    public void testuni0317() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0317");
        assertNotNull(cs);
        assertEquals("uni0317", cs.getName());
        String[] text =
                {"-501 -214 146 hstem", "-310 171 vstem", "-296 -214 rmoveto",
                        "5 0 7 1 8 4 rrcurveto", "131 56 rlineto",
                        "3 3 3 13 0 8 rrcurveto", "29 -18 28 0 vhcurveto",
                        "-10 4 -120 -103 rlineto",
                        "-12 -11 -11 -9 0 -9 0 -3 1 -11 13 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0318
     */
    public void testuni0318() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0318");
        assertNotNull(cs);
        assertEquals("uni0318", cs.getName());
        String[] text =
                {"-501 -168 43 hstem", "-212 44 vstem", "-168 -229 rmoveto",
                        "168 vlineto", "-12 7 -13 0 -19 -9 rrcurveto",
                        "-62 -108 vlineto", "-12 -12 0 -16 9 -15 rrcurveto",
                        "111 -65 hlineto", "16 -6 11 -1 17 11 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0319
     */
    public void testuni0319() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0319");
        assertNotNull(cs);
        assertEquals("uni0319", cs.getName());
        String[] text =
                {"-501 -169 44 hstem", "-330 44 vstem", "-330 -64 rmoveto",
                        "-169 vlineto", "12 -7 13 0 19 10 rrcurveto",
                        "61 108 vlineto", "12 12 0 17 -9 15 rrcurveto",
                        "-111 65 hlineto", "-16 6 -11 1 -17 -11 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni031A
     */
    public void testuni031A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni031A");
        assertNotNull(cs);
        assertEquals("uni031A", cs.getName());
        String[] text =
                {"-501 667 39 hstem", "-174 39 vstem", "-135 552 rmoveto",
                        "0 142 -11 12 -211 0 rlineto",
                        "-30 -23 2 0 21 -16 rrcurveto", "190 -119 hlineto",
                        "19 -16 3 -2 17 22 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni031B
     */
    public void testuni031B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni031B");
        assertNotNull(cs);
        assertEquals("uni031B", cs.getName());
        String[] text =
                {"-501 332 26 hstem", "-125 35 vstem", "-90 415 rmoveto",
                        "47 -26 41 -38 -29 -17 -15 -24 vhcurveto",
                        "0 -20 13 -22 35 -4 14 -1 13 -8 0 -13 rrcurveto",
                        "-34 -41 -4 -11 vhcurveto", "-24 -26 24 hlineto",
                        "55 32 32 51 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni031C
     */
    public void testuni031C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni031C");
        assertNotNull(cs);
        assertEquals("uni031C", cs.getName());
        String[] text =
                {"-501 -244 39 112 41 hstem", "-317 40 vstem",
                        "-277 -149 rmoveto", "29 16 27 44 vhcurveto",
                        "2 0 3 -1 3 0 rrcurveto", "2 41 rlineto",
                        "-3 1 -4 0 -4 0 rrcurveto",
                        "-55 -44 -42 -55 -53 41 -42 53 hvcurveto",
                        "5 0 5 0 5 1 rrcurveto", "1 39 rlineto",
                        "-2 0 -3 -1 -3 0 rrcurveto", "-45 -17 25 31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni031D
     */
    public void testuni031D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni031D");
        assertNotNull(cs);
        assertEquals("uni031D", cs.getName());
        String[] text =
                {"-501 -227 44 hstem", "-271 44 vstem", "-331 -227 rmoveto",
                        "168 hlineto", "7 11 0 14 -10 19 rrcurveto",
                        "-61 108 hlineto", "-12 12 -16 0 -16 -9 rrcurveto",
                        "-111 -64 vlineto", "-6 -16 -1 -12 11 -16 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni031E
     */
    public void testuni031E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni031E");
        assertNotNull(cs);
        assertEquals("uni031E", cs.getName());
        String[] text =
                {"-501 -110 44 hstem", "-271 44 vstem", "-167 -66 rmoveto",
                        "198 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni031F
     */
    public void testuni031F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni031F");
        assertNotNull(cs);
        assertEquals("uni031F", cs.getName());
        String[] text =
                {"-501 -168 43 hstem", "-273 44 vstem", "-229 -229 rmoveto",
                        "61 67 vlineto", "14 19 -3 9 -10 15 rrcurveto",
                        "-68 64 hlineto", "-17 9 -8 1 -19 -12 rrcurveto",
                        "-62 -67 vlineto", "-13 -13 1 -14 9 -16 rrcurveto",
                        "70 -65 hlineto", "16 -8 11 -2 17 14 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0320
     */
    public void testuni0320() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0320");
        assertNotNull(cs);
        assertEquals("uni0320", cs.getName());
        String[] text =
                {"-501 -168 43 hstem", "-343 182 vstem", "-161 -125 rmoveto",
                        "-179 hlineto", "-13 -13 1 -14 9 -16 rrcurveto",
                        "181 hlineto", "14 19 -3 9 -10 15 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0321
     */
    public void testuni0321() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0321");
        assertNotNull(cs);
        assertEquals("uni0321", cs.getName());
        String[] text =
                {
                        "-501 -238 36 hstem",
                        "-243 57 91 39 vstem",
                        "-142 -202 rmoveto",
                        "-25 -19 24 20 18 -17 13 -14 -16 -10 -13 -13 -41 52 -44 57 62 16 51 68 hvcurveto",
                        "133 -19 vlineto", "-20 -108 hlineto",
                        "-59 -9 -49 -38 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0322
     */
    public void testuni0322() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0322");
        assertNotNull(cs);
        assertEquals("uni0322", cs.getName());
        String[] text =
                {
                        "-501 -240 36 hstem",
                        "-68 39 91 57 vstem",
                        "10 -240 rmoveto",
                        "54 55 42 43 13 -10 13 -16 -14 -17 -13 -18 -20 -19 -24 -25 -38 -9 48 60 hvcurveto",
                        "108 -20 vlineto", "-19 -133 hlineto",
                        "-68 16 -51 62 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0324
     */
    public void testuni0324() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0324");
        assertNotNull(cs);
        assertEquals("uni0324", cs.getName());
        String[] text =
                {
                        "-501 -167 108 hstem",
                        "-371 109 89 109 vstem",
                        "-371 -113 rmoveto",
                        "203 callsubr",
                        "198 hmoveto",
                        "-29 23 -25 31 30 25 22 32 29 -22 25 -33 -28 -26 -21 -33 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0325
     */
    public void testuni0325() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0325");
        assertNotNull(cs);
        assertEquals("uni0325", cs.getName());
        String[] text =
                {
                        "-501 -201 27 113 27 hstem",
                        "-302 31 108 32 vstem",
                        "-302 -117 rmoveto",
                        "-47 39 -37 46 48 38 39 45 46 -40 37 -46 -47 -38 -38 -45 vhcurveto",
                        "139 hmoveto",
                        "-29 -23 -28 -31 -31 -23 28 29 29 23 27 31 29 25 -25 -31 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0326
     */
    public void testuni0326() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0326");
        assertNotNull(cs);
        assertEquals("uni0326", cs.getName());
        String[] text =
                {
                        "-501 -113 81 hstem",
                        "-220 32 vstem",
                        "-250 -32 rmoveto",
                        "-36 -15 -24 -16 -16 9 -25 41 hvcurveto",
                        "8 0 10 3 11 6 1 -3 1 -3 0 -4 0 -6 -3 -58 -76 -15 rrcurveto",
                        "4 -17 rlineto", "90 4 17 76 0 26 rrcurveto",
                        "35 -23 37 -39 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0327
     */
    public void testuni0327() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0327");
        assertNotNull(cs);
        assertEquals("uni0327", cs.getName());
        String[] text =
                {"-501 -181 25 76 32 hstem", "-153 53 vstem",
                        "-195 -80 rmoveto",
                        "23 19 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-20 0 -11 4 -27 10 rrcurveto", "-10 -22 rlineto",
                        "25 -11 17 -6 32 0 rrcurveto",
                        "61 46 28 43 38 -31 24 -40 hvcurveto",
                        "-9 0 -9 -1 -8 -2 rrcurveto",
                        "24 58 -34 0 -39 -87 6 -6 rlineto",
                        "16 5 10 1 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0328
     */
    public void testuni0328() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0328");
        assertNotNull(cs);
        assertEquals("uni0328", cs.getName());
        String[] text =
                {
                        "-501 -230 38 hstem",
                        "-332 60 vstem",
                        "-129 -163 rmoveto",
                        "-16 7 rlineto",
                        "-22 -22 -16 -14 -29 0 -37 0 -23 26 0 26 0 66 52 48 45 41 rrcurveto",
                        "-15 16 rlineto",
                        "-63 -40 -79 -67 0 -70 0 -55 42 -29 54 0 41 0 37 22 29 45 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0329
     */
    public void testuni0329() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0329");
        assertNotNull(cs);
        assertEquals("uni0329", cs.getName());
        String[] text =
                {"-501 -233 165 hstem", "-283 54 vstem", "-229 -231 rmoveto",
                        "163 vlineto", "-23 5 -9 4 -22 -9 rrcurveto",
                        "-165 vlineto", "23 -7 9 -3 22 12 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni032A
     */
    public void testuni032A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni032A");
        assertNotNull(cs);
        assertEquals("uni032A", cs.getName());
        String[] text =
                {"-501 -132 44 hstem", "-385 44 172 44 vstem",
                        "-341 -197 rmoveto", "65 172 -68 vlineto",
                        "16 -12 8 -1 20 16 rrcurveto", "87 vlineto",
                        "14 -4 8 -20 vhcurveto", "-205 hlineto",
                        "-16 -15 -13 -11 hvcurveto", "-88 vlineto",
                        "11 -6 16 -7 17 16 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni032B
     */
    public void testuni032B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni032B");
        assertNotNull(cs);
        assertEquals("uni032B", cs.getName());
        String[] text =
                {
                        "-501 -225 64 hstem",
                        "-407 311 vstem",
                        "-120 -76 rmoveto",
                        "-7 -29 -16 -56 -36 0 -27 0 -22 34 -14 53 -2 1 -4 0 -4 0 -3 0 -3 0 -3 -1 -21 -80 -30 -7 -13 0 -28 0 -17 33 -14 52 rrcurveto",
                        "-2 -1 -18 -13 -3 -4 19 -85 31 -46 33 0 14 0 33 11 26 70 24 -71 35 -10 14 0 35 0 30 55 17 76 -4 5 -15 10 -5 3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni032C
     */
    public void testuni032C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni032C");
        assertNotNull(cs);
        assertEquals("uni032C", cs.getName());
        String[] text =
                {
                        "-501 -220 143 hstem",
                        "-330 253 vstem",
                        "-229 -220 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -33 26 -39 28 rrcurveto",
                        "-20 -13 rlineto", "35 -40 37 -43 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni032D
     */
    public void testuni032D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni032D");
        assertNotNull(cs);
        assertEquals("uni032D", cs.getName());
        String[] text =
                {"-501 -225 143 hstem", "-322 254 vstem", "",
                        "-169 -82 rmoveto", "-50 hlineto",
                        "-30 -45 -38 -45 -35 -39 rrcurveto", "20 -14 rlineto",
                        "37 27 33 25 37 38 33 -36 34 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-35 40 -38 43 -28 46 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni032E
     */
    public void testuni032E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni032E");
        assertNotNull(cs);
        assertEquals("uni032E", cs.getName());
        String[] text =
                {"-501 -230 57 hstem", "-388 27 217 26 vstem",
                        "-361 -82 rmoveto", "-27 -13 rlineto",
                        "8 -78 50 -57 78 0 50 0 75 34 9 101 rrcurveto",
                        "-26 13 rlineto",
                        "-2 -62 -60 -29 -46 0 -60 0 -47 40 -2 51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni032F
     */
    public void testuni032F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni032F");
        assertNotNull(cs);
        assertEquals("uni032F", cs.getName());
        String[] text =
                {"-501 -136 57 hstem", "-386 27 216 27 vstem",
                        "-143 -228 rmoveto", "27 14 rlineto",
                        "-7 77 -51 58 -77 0 -50 0 -75 -35 -10 -100 rrcurveto",
                        "27 -14 rlineto",
                        "2 62 60 30 46 0 60 0 46 -41 2 -51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0330
     */
    public void testuni0330() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0330");
        assertNotNull(cs);
        assertEquals("uni0330", cs.getName());
        String[] text =
                {"-501 -122 44 4 46 hstem", "-344 278 vstem",
                        "-140 -78 rmoveto", "204 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0331
     */
    public void testuni0331() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0331");
        assertNotNull(cs);
        assertEquals("uni0331", cs.getName());
        String[] text =
                {"-501 -79 44 hstem", "-123 -79 rmoveto",
                        "13 10 18 12 7 -4 7 -9 hvcurveto", "-245 hlineto",
                        "-12 -10 -17 -12 -7 4 -8 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni0338
     */
    public void testuni0338() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0338");
        assertNotNull(cs);
        assertEquals("uni0338", cs.getName());
        String[] text =
                {"-501 -28 482 hstem", "-446 407 vstem", "-70 454 rmoveto",
                        "-376 -456 30 -26 377 459 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0342
     */
    public void testuni0342() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0342");
        assertNotNull(cs);
        assertEquals("uni0342", cs.getName());
        String[] text =
                {"-501 504 44 4 46 hstem", "-385 277 vstem",
                        "-182 548 rmoveto", "205 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0343
     */
    public void testuni0343() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0343");
        assertNotNull(cs);
        assertEquals("uni0343", cs.getName());
        String[] text =
                {"-501 404 27 hstem", "-52 34 vstem", "-18 487 rmoveto",
                        "47 -25 41 -39 -29 -16 -15 -24 vhcurveto",
                        "0 -20 13 -21 34 -4 14 -2 14 -8 0 -13 rrcurveto",
                        "-34 -42 -3 -11 vhcurveto", "-23 -27 23 hlineto",
                        "55 32 32 51 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0374
     */
    public void testuni0374() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0374");
        assertNotNull(cs);
        assertEquals("uni0374", cs.getName());
        String[] text =
                {"-279 538 230 hstem", "52 151 vstem", "163 768 rmoveto",
                        "-32 0 -12 -33 -9 -23 rrcurveto",
                        "-58 -161 24 -13 112 155 rlineto",
                        "8 10 7 19 0 11 0 16 -20 19 -20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0375
     */
    public void testuni0375() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0375");
        assertNotNull(cs);
        assertEquals("uni0375", cs.getName());
        String[] text =
                {"-309 -131 230 hstem", "24 151 vstem", "135 99 rmoveto",
                        "-32 0 -13 -33 -8 -24 rrcurveto",
                        "-58 -160 24 -13 113 154 rlineto",
                        "7 11 7 19 0 11 0 15 -20 20 -20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni037A
     */
    public void testuni037A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni037A");
        assertNotNull(cs);
        assertEquals("uni037A", cs.getName());
        String[] text =
                {"-170 -256 40 hstem", "129 73 vstem", "129 -92 rmoveto",
                        "-82 vlineto", "-58 38 -24 48 vhcurveto",
                        "25 0 46 14 15 69 rrcurveto", "-25 8 rlineto",
                        "-7 -27 -16 -24 -18 0 rrcurveto",
                        "-20 -13 23 55 hvcurveto", "0 52 -21 7 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni037B
     */
    public void testuni037B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni037B");
        assertNotNull(cs);
        assertEquals("uni037B", cs.getName());
        String[] text =
                {"-60 -10 28 393 32 hstem", "314 91 vstem", "185 18 rmoveto",
                        "210 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni037C
     */
    public void testuni037C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni037C");
        assertNotNull(cs);
        assertEquals("uni037C", cs.getName());
        String[] text =
                {
                        "-56 -12 28 139 116 139 32 hstem",
                        "39 91 91 116 vstem",
                        "130 195 rmoveto",
                        "211 callsubr",
                        "150 -40 rmoveto",
                        "32 25 27 31 33 -29 25 -28 -32 -27 -28 -30 -30 23 -28 36 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni037D
     */
    public void testuni037D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni037D");
        assertNotNull(cs);
        assertEquals("uni037D", cs.getName());
        String[] text =
                {
                        "-60 -10 28 143 116 134 32 hstem",
                        "93 116 105 91 vstem",
                        "185 18 rmoveto",
                        "210 callsubr",
                        "-33 143 rmoveto",
                        "33 24 27 31 32 -29 26 -28 -32 -27 -28 -30 -30 23 -28 36 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni037E
     */
    public void testuni037E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni037E");
        assertNotNull(cs);
        assertEquals("uni037E", cs.getName());
        String[] text =
                {"-282 300 106 hstemhm", "55 106 -29 39 hintmask 10100000",
                        "105 95 rmoveto", "-99 callsubr", "hintmask 11000000",
                        "-50 258 rmoveto", "-87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03D0
     */
    public void testuni03D0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03D0");
        assertNotNull(cs);
        assertEquals("uni03D0", cs.getName());
        String[] text =
                {
                        "28 -12 29 346 33 27 30 181 64 hstemhm",
                        "43 41 307 56 -55 78 hintmask 11111010",
                        "125 190 rmoveto",
                        "92 48 81 84 68 67 -43 -115 -102 -42 -86 -79 vhcurveto",
                        "-72 -74 80 93 hvcurveto",
                        "31 442 rmoveto",
                        "-84 -72 -29 -88 0 -192 rrcurveto",
                        "-154 72 -138 148 127 80 80 129 123 -76 76 -125 vhcurveto",
                        "-70 0 -78 -41 -37 -70 1 50 3 54 8 34 rrcurveto",
                        "hintmask 11111100",
                        "164 187 56 123 59 -45 37 -66 hvcurveto",
                        "-59 0 -70 -22 -51 -44 rrcurveto",
                        "-56 -179 rmoveto",
                        "13 58 49 123 154 0 64 0 11 -19 0 -31 0 -66 -80 -59 -211 -6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03D3
     */
    public void testuni03D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03D3");
        assertNotNull(cs);
        assertEquals("uni03D3", cs.getName());
        String[] text =
                {
                        "148 1 27 582 48 -35 35 hstemhm",
                        "334 81 hintmask 11010000",
                        "334 71 rmoveto",
                        "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "275 vlineto",
                        "1 126 63 138 53 0 22 0 6 -12 5 -13 7 -13 9 -13 29 0 rrcurveto",
                        "21 19 20 20 35 -19 24 -62 hvcurveto",
                        "-115 0 -54 -185 -9 -59 rrcurveto",
                        "hintmask 10110000",
                        "256 callsubr",
                        "hintmask 11010000",
                        "257 callsubr",
                        "hintmask 10110000",
                        "22 18 24 8 39 0 29 0 32 -24 30 -57 25 -49 17 -78 0 -100 rrcurveto",
                        "-281 409 rmoveto", "-11 0 -13 -6 -4 -11 rrcurveto",
                        "-52 -143 rlineto",
                        "-1 -3 -1 -5 0 -1 0 -7 8 -6 7 0 5 0 4 3 3 4 rrcurveto",
                        "91 122 rlineto",
                        "4 5 1 6 0 4 0 21 -21 17 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni03D4
     */
    public void testuni03D4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03D4");
        assertNotNull(cs);
        assertEquals("uni03D4", cs.getName());
        String[] text =
                {
                        "41 1 27 582 48 -35 35 48 91 hstemhm",
                        "141 90 -3 80 22 91 hintmask 11010110",
                        "228 71 rmoveto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto",
                        "",
                        "0 -19 rlineto",
                        "hintmask 11011010",
                        "2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "1 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-26 hlineto",
                        "hintmask 11010110",
                        "-40 -15 13 30 hvcurveto",
                        "275 vlineto",
                        "1 126 63 138 53 0 22 0 6 -12 5 -13 7 -13 9 -13 29 0 rrcurveto",
                        "21 19 20 20 35 -19 24 -62 hvcurveto",
                        "-115 0 -54 -185 -9 -59 rrcurveto",
                        "hintmask 10110110", "256 callsubr",
                        "hintmask 11010110", "257 callsubr",
                        "hintmask 10110110", "258 callsubr",
                        "hintmask 10011010", "-87 436 rmoveto",
                        "-24 20 -21 26 24 20 21 24 25 -20 21 -24 vhcurveto",
                        "-26 -20 -21 -25 hvcurveto", "189 1 rmoveto",
                        "259 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03D7
     */
    public void testuni03D7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03D7");
        assertNotNull(cs);
        assertEquals("uni03D7", cs.getName());
        String[] text =
                {
                        "46 -171 37 143 -21 375 79 hstem",
                        "167 36 143 36 vstem",
                        "167 295 rmoveto",
                        "0 -47 -9 -61 -15 -69 -51 -35 -23 -25 0 -28 0 -28 16 -14 32 0 30 0 19 11 6 25 5 22 30 44 53 67 35 43 32 35 31 29 rrcurveto",
                        "-9 -56 -3 -42 0 -34 0 -92 21 -51 46 -2 -14 -44 -16 -33 -21 -25 -12 -13 -9 -6 -9 0 -7 0 -6 3 -6 8 -15 21 -18 10 -22 0 rrcurveto",
                        "-22 -12 -13 -27 -27 27 -12 52 hvcurveto",
                        "52 0 41 26 30 54 rrcurveto",
                        "104 186 -18 19 rlineto",
                        "-42 -42 -30 -6 -18 0 -26 0 -14 22 0 44 0 45 7 57 11 66 54 38 28 34 0 28 0 28 -15 14 -32 0 -30 0 -19 -11 -6 -25 rrcurveto",
                        "-5 -22 -33 -52 -54 -67 -36 -45 -33 -36 -32 -30 11 59 5 47 0 35 0 95 -23 52 -48 0 -38 0 -38 -40 -37 -67 rrcurveto",
                        "-1 -2 2 -1 16 -16 1 -1 2 1 rlineto",
                        "31 32 29 15 27 0 27 0 14 -24 0 -44 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03D8
     */
    public void testuni03D8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03D8");
        assertNotNull(cs);
        assertEquals("uni03D8", cs.getName());
        String[] text =
                {"197 -138 27 735 34 hstem", "37 91 188 80 174 92 vstem",
                        "316 -11 rmoveto", "-56 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-27 hlineto",
                        "-39 -16 13 31 hvcurveto", "58 vlineto",
                        "164 22 102 133 0 183 rrcurveto",
                        "198 -135 131 -180 -179 -131 -152 -196 vhcurveto",
                        "0 -185 122 -121 157 -15 rrcurveto", "18 635 rmoveto",
                        "-49 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03D9
     */
    public void testuni03D9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03D9");
        assertNotNull(cs);
        assertEquals("uni03D9", cs.getName());
        String[] text =
                {"-22 -124 27 506 33 hstem", "34 79 98 75 81 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "0 -95 61 -106 116 -14 rrcurveto", "-43 vlineto",
                        "-28 -10 -16 -33 vhcurveto", "-20 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto", "1 2 0 19 rlineto",
                        "5 -3 3 -4 vhcurveto", "-20 hlineto",
                        "-32 -10 16 28 hvcurveto", "46 vlineto",
                        "110 24 50 109 0 88 rrcurveto",
                        "104 -57 124 -148 -133 -74 -100 -137 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03DA
     */
    public void testuni03DA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03DA");
        assertNotNull(cs);
        assertEquals("uni03DA", cs.getName());
        String[] text =
                {
                        "8 -188 54 684 85 -77 82 hstemhm",
                        "16 46 366 43 hintmask 10111000",
                        "16 367 rmoveto",
                        "0 -61 12 -117 63 -66 117 -122 220 117 0 -146 0 -63 -62 -43 -60 0 -49 0 -47 38 -49 0 rrcurveto",
                        "-19 -25 -7 -26 -36 24 -23 91 124 115 64 126 hvcurveto",
                        "0 21 -4 23 -7 24 -8 25 -11 10 -15 14 -79 75 -154 -72 -80 89 -38 42 -13 65 0 53 0 54 19 61 33 33 29 27 27 12 51 0 rrcurveto",
                        "hintmask 11011000",
                        "36 0 38 -8 38 0 84 0 13 45 13 55 rrcurveto",
                        "-13 10 rlineto", "-11 -14 -22 -11 -28 0 rrcurveto",
                        "hintmask 10111000", "-55 0 -57 5 -40 0 rrcurveto",
                        "-161 -40 -171 -102 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03DB
     */
    public void testuni03DB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03DB");
        assertNotNull(cs);
        assertEquals("uni03DB", cs.getName());
        String[] text =
                {
                        "-91 -193 40 524 65 -60 64 hstemhm",
                        "35 40 255 39 hintmask 10111000",
                        "229 376 rmoveto",
                        "hintmask 11011000",
                        "29 0 -1 -5 30 0 61 0 16 23 16 47 rrcurveto",
                        "-14 10 rlineto",
                        "",
                        "-11 -12 -16 -3 -18 0 rrcurveto",
                        "hintmask 10111000",
                        "-43 0 -2 4 -43 0 -31 0 -49 -16 -36 -25 -62 -44 -20 -95 0 -74 0 -69 20 -49 28 -28 81 -81 102 53 42 -38 8 -8 14 -14 0 -26 rrcurveto",
                        "-55 -35 -24 -51 vhcurveto",
                        "-39 0 -37 28 -39 0 rrcurveto",
                        "-20 -15 -11 -18 -33 34 -6 43 106 92 41 112 hvcurveto",
                        "0 41 -17 29 -37 19 -39 20 -34 -6 -63 12 -45 8 -59 38 0 100 rrcurveto",
                        "94 58 61 96 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03DC
     */
    public void testuni03DC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03DC");
        assertNotNull(cs);
        assertEquals("uni03DC", cs.getName());
        String[] text =
                {"7 1 27 305 45 225 43 -28 28 hstemhm",
                        "98 81 204 25 hintmask 11011100", "496 646 rmoveto",
                        "-367 0 -104 0 -2 -2 0 -19 rlineto",
                        "-4 3 -3 5 vhcurveto", "30 hlineto",
                        "32 5 -8 -36 hvcurveto", "-503 vlineto",
                        "-29 0 -14 -37 vhcurveto", "-30 hlineto",
                        "-5 -3 -3 -4 hvcurveto", "0 -20 2 -2 rlineto",
                        "0 65 2 41 47 74 -2 0 vhcurveto", "1 2 0 20 rlineto",
                        "6 -5 1 -3 vhcurveto", "-30 hlineto",
                        "-31 -5 7 36 hvcurveto", "262 159 vlineto",
                        "30 15 -7 -30 hvcurveto", "-63 25 142 vlineto",
                        "-11 1 -40 2 -19 0 rrcurveto", "-159 hlineto",
                        "hintmask 11101100", "225 215 vlineto",
                        "42 0 36 -105 8 -44 rrcurveto", "29 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03DD
     */
    public void testuni03DD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03DD");
        assertNotNull(cs);
        assertEquals("uni03DD", cs.getName());
        String[] text =
                {
                        "-57 -195 -21 321 73 -67 67 179 78 -78 70 hstemhm",
                        "54 33 hintmask 10001100",
                        "409 445 rmoveto",
                        "-11 7 rlineto",
                        "-10 -18 -19 -7 -24 0 rrcurveto",
                        "hintmask 10110100",
                        "-43 0 -43 8 -44 0 -123 0 -36 -121 -1 -101 rrcurveto",
                        "-1 -360 rlineto",
                        "0 -19 0 -28 14 -14 6 -6 9 -2 10 0 12 0 7 3 7 6 9 10 4 12 0 26 0 62 -45 71 0 49 0 45 21 43 50 0 rrcurveto",
                        "hintmask 11000100",
                        "27 0 27 -6 27 0 50 0 35 39 12 54 rrcurveto",
                        "-11 5 rlineto", "-13 -16 -23 -9 -20 0 rrcurveto",
                        "hintmask 10110100", "-103 hlineto",
                        "-46 0 -29 -35 -13 -39 8 113 -28 144 162 -4 rrcurveto",
                        "hintmask 10001100", "91 hlineto",
                        "55 0 26 35 17 53 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03DE
     */
    public void testuni03DE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03DE");
        assertNotNull(cs);
        assertEquals("uni03DE", cs.getName());
        String[] text =
                {
                        "36 -146 41 392 48 391 41 hstemhm",
                        "214 57 -10 56 hintmask 11110000",
                        "293 -146 rmoveto",
                        "40 0 38 18 23 12 rrcurveto",
                        "-7 19 rlineto",
                        "-19 -6 -16 -2 -14 0 -21 0 -46 6 0 33 0 12 4 15 11 20 rrcurveto",
                        "203 354 -356 0 160 277 rlineto",
                        "hintmask 11101000",
                        "16 29 8 25 0 22 0 49 -39 30 -41 0 -41 0 -40 -19 -19 -12 rrcurveto",
                        "7 -18 rlineto",
                        "18 6 16 2 14 0 30 0 39 -9 0 -35 0 -15 -4 -19 -9 -17 rrcurveto",
                        "-199 -344 356 0 -164 -287 rlineto",
                        "hintmask 11110000", "-17 -29 -10 -22 0 -21 rrcurveto",
                        "-42 36 -32 43 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03DF
     */
    public void testuni03DF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03DF");
        assertNotNull(cs);
        assertEquals("uni03DF", cs.getName());
        String[] text =
                {
                        "36 287 48 hstem",
                        "49 440 vstem",
                        "461 287 rmoveto",
                        "28 48 -356 0 193 335 -55 1 -194 -336 -28 -48 356 0 -210 -362 56 -2 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03E0
     */
    public void testuni03E0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03E0");
        assertNotNull(cs);
        assertEquals("uni03E0", cs.getName());
        String[] text =
                {
                        "301 647 50 hstem",
                        "228 59 80 71 202 105 vstem",
                        "546 -119 rmoveto",
                        "-1 60 -36 0 vhcurveto",
                        "85 98 54 149 0 131 0 146 -42 106 -95 96 -89 91 -77 36 -133 0 -116 0 -97 -39 -86 -87 0 0 50 -35 0 1 39 48 65 36 64 17 rrcurveto",
                        "-299 59 308 14 vlineto",
                        "84 0 66 -25 64 -64 36 -37 26 -38 19 -41 -41 -10 -52 -29 -31 -22 -31 -22 -31 -35 -15 -39 -20 -53 -8 -65 0 -74 rrcurveto",
                        "71 hlineto",
                        "0 54 5 69 8 38 9 49 39 34 25 22 9 8 51 17 31 9 19 -61 6 -67 0 -75 0 -150 -37 -91 -57 -68 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03E1
     */
    public void testuni03E1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03E1");
        assertNotNull(cs);
        assertEquals("uni03E1", cs.getName());
        String[] text =
                {
                        "-6 527 15 hstem",
                        "35 415 vstem",
                        "41 542 rmoveto",
                        "-6 -15 rlineto",
                        "63 -5 57 -17 51 -28 21 -13 20 -13 18 -15 rrcurveto",
                        "-130 -103 32 -37 133 105 rlineto",
                        "13 -13 12 -15 11 -16 5 -6 4 -7 5 -7 rrcurveto",
                        "-132 -104 32 -37 124 98 rlineto",
                        "15 -32 10 -33 6 -35 11 -58 -4 -59 -16 -61 rrcurveto",
                        "17 hlineto",
                        "27 68 13 68 -3 66 -3 66 -19 59 -37 52 -38 53 -48 38 -62 25 -61 24 -67 11 -74 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F0
     */
    public void testuni03F0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F0");
        assertNotNull(cs);
        assertEquals("uni03F0", cs.getName());
        String[] text =
                {
                        "6 -12 73 273 74 hstem",
                        "154 34 132 34 vstem",
                        "154 273 rmoveto",
                        "0 -44 -8 -56 -14 -64 -47 -32 -24 -29 0 -26 0 -26 15 -13 29 0 28 0 18 10 5 24 5 20 31 46 49 62 32 40 29 32 29 27 rrcurveto",
                        "-8 -51 -3 -40 0 -31 0 -87 20 -47 46 0 35 0 35 37 34 62 rrcurveto",
                        "1 1 -1 2 -14 14 -2 2 -2 -2 rlineto",
                        "-29 -29 -26 -14 -26 0 -25 0 -12 20 0 41 0 40 5 51 12 65 50 35 26 29 0 27 0 26 -15 13 -29 0 -28 0 -18 -11 -5 -23 rrcurveto",
                        "-5 -20 -31 -46 -49 -62 -34 -42 -30 -34 -30 -27 11 55 4 42 0 33 0 88 -21 47 -45 0 -36 0 -34 -37 -34 -62 rrcurveto",
                        "-1 -2 1 -1 14 -15 2 -1 2 1 rlineto",
                        "29 29 26 14 26 0 25 0 12 -20 0 -41 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F1
     */
    public void testuni03F1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F1");
        assertNotNull(cs);
        assertEquals("uni03F1", cs.getName());
        String[] text =
                {
                        "-37 -196 68 116 34 384 36 hstem",
                        "34 69 254 73 vstem",
                        "223 22 rmoveto",
                        "-49 -71 31 146 158 74 49 49 93 38 -119 -73 -145 -83 -47 -51 hvcurveto",
                        "207 187 rmoveto",
                        "136 -79 97 -128 -98 -91 -72 -208 -274 49 -84 170 vhcurveto",
                        "86 0 19 -30 8 -18 rrcurveto",
                        "23 7 rlineto",
                        "-8 41 -22 68 -95 0 -154 0 -27 54 -13 144 41 -55 52 -27 62 0 rrcurveto",
                        "127 78 86 135 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F2
     */
    public void testuni03F2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F2");
        assertNotNull(cs);
        assertEquals("uni03F2", cs.getName());
        String[] text =
                {"-56 -12 28 394 32 hstem", "39 91 vstem", "130 195 rmoveto",
                        "211 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F3
     */
    public void testuni03F3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F3");
        assertNotNull(cs);
        assertEquals("uni03F3", cs.getName());
        String[] text =
                {"-242 -213 29 626 -20 101 96 hstemhm",
                        "104 96 -75 75 hintmask 11101000", "51 -184 rmoveto",
                        "-16 callsubr", "hintmask 11110000", "53 755 rmoveto",
                        "-15 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F4
     */
    public void testuni03F4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F4");
        assertNotNull(cs);
        assertEquals("uni03F4", cs.getName());
        String[] text =
                {
                        "197 -12 34 280 45 277 34 hstem",
                        "37 92 441 92 vstem",
                        "570 302 rmoveto",
                        "-2 -174 -87 -106 -113 0 -115 0 -114 103 -10 177 rrcurveto",
                        "440 45 rmoveto", "-440 hlineto",
                        "7 195 105 82 93 0 132 0 92 -94 11 -183 rrcurveto",
                        "93 -18 rmoveto", "-50 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F5
     */
    public void testuni03F5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F5");
        assertNotNull(cs);
        assertEquals("uni03F5", cs.getName());
        String[] text =
                {
                        "-80 -12 44 173 44 149 44 hstem",
                        "358 365 rmoveto",
                        "16 21 rlineto",
                        "-36 38 -44 18 -53 0 rrcurveto",
                        "-78 -126 -67 -164 -116 67 -107 135 hvcurveto",
                        "90 0 45 54 15 22 rrcurveto",
                        "-15 16 rlineto",
                        "-28 -28 -38 -20 -45 0 -89 0 -51 73 -8 100 rrcurveto",
                        "218 44 -219 hlineto",
                        "3 52 17 42 21 21 32 32 34 2 28 0 18 0 47 -2 44 -31 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F6
     */
    public void testuni03F6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F6");
        assertNotNull(cs);
        assertEquals("uni03F6", cs.getName());
        String[] text =
                {
                        "-80 -12 44 173 44 149 44 hstem",
                        "312 77 vstem",
                        "67 65 rmoveto",
                        "-15 -21 rlineto",
                        "26 -30 44 -26 63 0 rrcurveto",
                        "76 128 67 164 115 -70 108 -133 hvcurveto",
                        "-90 0 -44 -54 -15 -23 rrcurveto",
                        "14 -15 rlineto",
                        "25 24 38 24 48 0 89 0 46 -75 11 -74 rrcurveto",
                        "-215 -44 219 hlineto",
                        "0 -81 -24 -41 -18 -18 -31 -30 -28 -3 -44 0 -42 0 -27 11 -31 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F8
     */
    public void testuni03F8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F8");
        assertNotNull(cs);
        assertEquals("uni03F8", cs.getName());
        String[] text =
                {"27 -12 30 386 38 hstem", "83 74 253 86 vstem",
                        "410 199 rmoveto", "-108 -55 -73 -83 vhcurveto",
                        "-29 0 -23 11 -33 26 -5 -8 -15 -22 -10 -3 rrcurveto",
                        "209 vlineto", "146 57 27 51 80 65 -47 -158 vhcurveto",
                        "-262 -411 rmoveto",
                        "14 45 -5 97 0 80 31 -14 28 -8 42 0 rrcurveto",
                        "135 103 99 154 114 -85 87 -121 hvcurveto",
                        "-40 0 -52 -12 -41 -31 rrcurveto", "72 vlineto",
                        "0 124 11 51 13 34 rrcurveto",
                        "-11 18 -76 -34 rlineto",
                        "-10 -42 -1 -66 0 -85 rrcurveto", "-478 vlineto",
                        "0 -124 -11 -60 -13 -35 rrcurveto", "11 -17 rlineto",
                        "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03F9
     */
    public void testuni03F9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03F9");
        assertNotNull(cs);
        assertEquals("uni03F9", cs.getName());
        String[] text =
                {"88 -12 45 592 34 hstem", "39 89 vstem", "558 121 rmoveto",
                        "260 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03FB
     */
    public void testuni03FB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03FB");
        assertNotNull(cs);
        assertEquals("uni03FB", cs.getName());
        String[] text =
                {
                        "72 17 -21 hstem",
                        "62 34 332 69 vstem",
                        "428 hmoveto",
                        "11 -18 58 18 0 431 -22 11 -60 -11 -136 -341 -136 341 -29 11 -52 -11 0 -648 9 -6 26 6 0 536 -1 59 24 -67 rlineto",
                        "128 -305 rlineto",
                        "3 -6 4 -4 4 0 6 0 4 4 3 6 rrcurveto",
                        "122 300 35 92 -1 -68 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03FD
     */
    public void testuni03FD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03FD");
        assertNotNull(cs);
        assertEquals("uni03FD", cs.getName());
        String[] text =
                {"88 -12 45 592 34 hstem", "461 90 vstem", "82 539 rmoveto",
                        "261 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03FE
     */
    public void testuni03FE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03FE");
        assertNotNull(cs);
        assertEquals("uni03FE", cs.getName());
        String[] text =
                {
                        "88 -12 45 236 116 240 34 hstem",
                        "39 89 168 117 vstem",
                        "558 121 rmoveto",
                        "260 callsubr",
                        "-203 148 rmoveto",
                        "33 25 26 31 33 -30 26 -28 -32 -27 -29 -30 -30 23 -27 36 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni03FF
     */
    public void testuni03FF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni03FF");
        assertNotNull(cs);
        assertEquals("uni03FF", cs.getName());
        String[] text =
                {
                        "88 -12 45 231 116 245 34 hstem",
                        "164 116 181 90 vstem",
                        "82 539 rmoveto",
                        "261 callsubr",
                        "169 -299 rmoveto",
                        "33 25 27 31 32 -30 26 -28 -32 -26 -28 -30 -30 23 -28 35 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0400
     */
    public void testuni0400() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0400");
        assertNotNull(cs);
        assertEquals("uni0400", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 74 -21 hstemhm",
                        "97 80 hintmask 00111011",
                        "348 606 rmoveto",
                        "-67 callsubr",
                        "hintmask 00110111",
                        "262 callsubr",
                        "hintmask 00111011",
                        "-65 callsubr",
                        "hintmask 10110111",
                        "-64 callsubr",
                        "hintmask 01111011",
                        "263 callsubr",
                        "25 213 rmoveto",
                        "-76 -46 154 -63 rlineto",
                        "21 -8 14 -3 8 0 10 0 5 4 0 10 0 7 -4 7 -11 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni040D
     */
    public void testuni040D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni040D");
        assertNotNull(cs);
        assertEquals("uni040D", cs.getName());
        String[] text =
                {"199 1 27 590 26 76 -21 hstem", "106 81 327 80 vstem", "",
                        "594 574 rmoveto", "268 callsubr", "-296 748 rmoveto",
                        "25 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0450
     */
    public void testuni0450() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0450");
        assertNotNull(cs);
        assertEquals("uni0450", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "-89 393 rmoveto", "67 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni045D
     */
    public void testuni045D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni045D");
        assertNotNull(cs);
        assertEquals("uni045D", cs.getName());
        String[] text =
                {"76 1 27 374 29 hstem", "108 75 206 74 vstem",
                        "144 428 rmoveto", "288 callsubr", "10 239 rmoveto",
                        "71 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0470
     */
    public void testuni0470() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0470");
        assertNotNull(cs);
        assertEquals("uni0470", cs.getName());
        String[] text =
                {
                        "186 1 27 590 27 hstem",
                        "96 69 136 80 142 68 vstem",
                        "614 535 rmoveto",
                        "-73 -18 -61 -78 hvcurveto",
                        "0 -38 -9 -180 -133 -28 rrcurveto",
                        "424 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "26 hlineto",
                        "40 15 -14 -30 hvcurveto",
                        "-423 vlineto",
                        "-65 16 -71 59 0 159 rrcurveto",
                        "98 -31 52 -61 vhcurveto",
                        "-31 hlineto",
                        "-11 -9 -1 -11 hvcurveto",
                        "0 -5 5 -2 8 -2 22 -6 39 -11 0 -128 0 -174 103 -59 102 -12 rrcurveto",
                        "-53 vlineto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "52 vlineto",
                        "103 12 107 64 0 193 0 102 38 11 22 7 8 2 7 2 0 7 rrcurveto",
                        "10 -11 2 -12 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0471
     */
    public void testuni0471() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0471");
        assertNotNull(cs);
        assertEquals("uni0471", cs.getName());
        String[] text =
                {
                        "137 -198 27 601 -20 248 27 hstemhm",
                        "71 70 -54 67 128 75 127 68 -54 69 hintmask 11110100",
                        "282 20 rmoveto",
                        "-83 10 -58 52 0 160 rrcurveto",
                        "hintmask 11101100",
                        "0 39 13 44 0 38 rrcurveto",
                        "36 -12 31 -43 vhcurveto",
                        "-45 hlineto",
                        "-11 -9 -1 -11 hvcurveto",
                        "0 -5 6 -2 7 -2 29 -6 11 -19 0 -27 rrcurveto",
                        "hintmask 11110101",
                        "0 -34 -16 -47 0 -50 0 -165 94 -61 117 -11 rrcurveto",
                        "-116 vlineto",
                        "-28 -9 -16 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-18 hlineto",
                        "-33 -10 16 28 hvcurveto",
                        "116 vlineto",
                        "117 11 93 60 0 166 rrcurveto",
                        "hintmask 11100110",
                        "0 50 -15 47 0 34 0 27 10 19 29 6 8 2 5 2 0 5 rrcurveto",
                        "11 -8 1 -11 vhcurveto", "-45 hlineto",
                        "-43 -13 -31 -36 hvcurveto", "hintmask 11110101",
                        "0 -38 14 -44 0 -39 0 -160 -55 -52 -86 -10 rrcurveto",
                        "-1 665 -1 2 rlineto",
                        "0 -23 -2 -14 -36 -68 2 0 vhcurveto",
                        "-2 -2 0 -18 rlineto", "-6 3 -3 5 vhcurveto",
                        "19 hlineto", "34 9 -15 -29 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni0476
     */
    public void testuni0476() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0476");
        assertNotNull(cs);
        assertEquals("uni0476", cs.getName());
        String[] text =
                {
                        "162 9 -21 629 41 -40 26 64 -21 hstemhm",
                        "hintmask 11010000",
                        "582 658 rmoveto",
                        "306 callsubr",
                        "hintmask 10110000",
                        "307 callsubr",
                        "hintmask 11010000",
                        "308 callsubr",
                        "-247 165 rmoveto",
                        "-9 -7 -6 -11 0 -11 0 -12 4 -5 3 -2 rrcurveto",
                        "95 -86 rlineto",
                        "2 -1 3 -1 3 0 2 0 3 1 3 2 2 3 2 4 0 4 rrcurveto",
                        "4 vlineto",
                        "-33 54 -13 73 -38 0 -9 0 -8 -5 -6 -4 rrcurveto",
                        "-133 -6 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -9 3 -7 5 -4 rrcurveto",
                        "99 -84 rlineto",
                        "2 -2 3 0 2 0 4 0 3 2 2 1 3 3 2 3 0 4 0 2 -1 2 0 1 rrcurveto",
                        "-62 114 rlineto",
                        "-6 9 -8 3 -13 0 -9 0 -9 -6 -6 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0477
     */
    public void testuni0477() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0477");
        assertNotNull(cs);
        assertEquals("uni0477", cs.getName());
        String[] text =
                {
                        "36 10 -21 413 27 -27 40 218 -20 hstemhm",
                        "",
                        "hintmask 10110000",
                        "431 402 rmoveto",
                        "309 callsubr",
                        "hintmask 11010000",
                        "310 callsubr",
                        "-196 251 rmoveto",
                        "-10 -6 -7 -12 0 -12 0 -5 2 -5 4 -6 rrcurveto",
                        "102 -121 rlineto",
                        "2 -2 3 -1 2 0 3 0 2 1 3 2 4 2 3 4 0 4 0 2 0 1 -1 1 rrcurveto",
                        "-64 146 rlineto",
                        "-4 8 -7 4 -12 1 -1 1 -1 0 -2 0 -7 0 -7 -3 -7 -4 rrcurveto",
                        "-135 -8 rmoveto",
                        "-9 -7 -5 -11 0 -10 0 -6 2 -7 6 -6 rrcurveto",
                        "114 -109 rlineto",
                        "1 -3 2 0 3 0 2 0 4 1 2 3 4 2 2 4 0 4 0 0 0 2 -1 1 rrcurveto",
                        "-79 139 rlineto",
                        "-4 9 -7 3 -12 0 -9 0 -8 -3 -8 -6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0492
     */
    public void testuni0492() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0492");
        assertNotNull(cs);
        assertEquals("uni0492", cs.getName());
        String[] text =
                {"-3 1 27 259 39 279 40 -27 27 hstemhm",
                        "102 80 hintmask 11101000", "343 605 rmoveto",
                        "224 callsubr", "hintmask 11011000", "225 callsubr",
                        "hintmask 11101000", "-247 0 rlineto",
                        "hintmask 11011000", "-77 hlineto",
                        "-13 -115 1 0 hvcurveto", "-2 -1 0 -20 rlineto",
                        "-4 4 -3 4 vhcurveto", "30 hlineto",
                        "42 10 -10 -35 hvcurveto",
                        "-247 -83 -39 83 -215 vlineto",
                        "-31 -16 -13 -39 vhcurveto", "-26 hlineto",
                        "-5 -4 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 87 2 39 36 93 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto", "-26 hlineto",
                        "-41 -14 16 28 hvcurveto",
                        "215 107 39 -107 247 vlineto", "hintmask 11101000",
                        "26 14 6 22 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0493
     */
    public void testuni0493() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0493");
        assertNotNull(cs);
        assertEquals("uni0493", cs.getName());
        String[] text =
                {"-99 1 27 181 39 143 39 -28 29 hstemhm",
                        "106 75 171 27 hintmask 11101100", "181 209 rmoveto",
                        "93 39 -93 93 hlineto", "42 6 8 33 vhcurveto",
                        "39 hlineto", "58 0 22 -58 13 -58 rrcurveto",
                        "27 4 rlineto", "-6 51 -4 47 -2 53 rrcurveto",
                        "-185 0 -38 -1 rlineto", "hintmask 11011100",
                        "-112 2 -3 -2 0 -22 rlineto", "",
                        "-3 2 -2 4 vhcurveto", "30 hlineto",
                        "36 5 -10 -38 hvcurveto",
                        "-106 -85 -39 85 -137 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-23 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 72 2 36 39 72 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-23 hlineto",
                        "-33 -10 15 29 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0494
     */
    public void testuni0494() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0494");
        assertNotNull(cs);
        assertEquals("uni0494", cs.getName());
        String[] text =
                {"92 -172 29 144 27 315 31 231 40 -27 27 hstemhm",
                        "102 80 -10 23 275 79 hintmask 11110101",
                        "343 605 rmoveto", "224 callsubr", "hintmask 11101101",
                        "225 callsubr", "hintmask 11110101", "-247 0 rlineto",
                        "hintmask 11101101", "226 callsubr",
                        "hintmask 11110101", "26 14 6 22 vhcurveto",
                        "331 -512 rmoveto", "241 -215 40 -150 vhcurveto",
                        "-31 vlineto",
                        "153 133 -50 -210 -169 -68 -57 -75 hvcurveto",
                        "-48 0 -31 14 -21 19 -18 17 -13 24 0 27 rrcurveto",
                        "hintmask 11100011", "-24 -152 23 hlineto",
                        "0 5 1 29 2 5 1 3 6 6 10 0 15 0 22 -26 82 0 rrcurveto",
                        "126 89 118 147 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0495
     */
    public void testuni0495() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0495");
        assertNotNull(cs);
        assertEquals("uni0495", cs.getName());
        String[] text =
                {
                        "10 -234 34 201 27 167 34 162 39 -28 29 hstemhm",
                        "106 75 171 27 -3 78 hintmask 11110101",
                        "106 72 rmoveto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-23 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 72 2 36 39 72 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-23 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "123 vlineto",
                        "93 -2 102 -39 0 -178 0 -108 -28 -68 -73 0 -66 0 -10 43 -6 33 -4 24 -17 12 -23 0 rrcurveto",
                        "-23 -15 -15 -29 -43 52 -59 106 120 65 108 124 200 -164 31 -109 hvcurveto",
                        "112 vlineto", "42 6 8 33 vhcurveto", "39 hlineto",
                        "hintmask 11110110", "58 0 22 -58 13 -58 rrcurveto",
                        "27 4 rlineto", "-6 51 -4 47 -2 53 rrcurveto",
                        "-185 0 -38 -1 rlineto", "hintmask 11101101",
                        "283 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0496
     */
    public void testuni0496() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0496");
        assertNotNull(cs);
        assertEquals("uni0496", cs.getName());
        String[] text =
                {
                        "366 -1 29 295 43 -43 20 247 61 -33 27 hstemhm",
                        "388 80 hintmask 11000100",
                        "24 -1 rmoveto",
                        "66 1 rlineto",
                        "72 1 28 69 39 110 36 102 16 41 107 0 rrcurveto",
                        "-252 vlineto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "252 vlineto",
                        "107 0 16 -41 36 -102 32 -92 26 -64 49 -18 20 -14 21 -12 15 -17 30 -35 14 -44 4 -25 rrcurveto",
                        "27 0 -6 147 rlineto",
                        "-1 17 -12 5 -17 0 -12 0 -18 6 -21 18 -28 32 -34 63 -35 89 rrcurveto",
                        "hintmask 10110100",
                        "-24 60 -19 47 -62 0 72 25 16 102 10 63 4 29 19 28 20 0 12 0 12 -7 9 -11 8 -8 13 -5 12 0 rrcurveto",
                        "19 21 17 25 23 -17 27 -47 hvcurveto",
                        "-63 0 -48 -49 -7 -58 -8 -56 -10 -75 -53 -32 rrcurveto",
                        "hintmask 11001100",
                        "-24 -15 -45 0 -33 0 rrcurveto",
                        "208 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "26 hlineto",
                        "40 15 -14 -30 hvcurveto",
                        "-208 vlineto",
                        "-34 0 -44 0 -24 15 -53 32 -10 75 -8 56 rrcurveto",
                        "hintmask 10110100",
                        "-7 58 -48 49 -63 0 rrcurveto",
                        "-47 -17 -27 -23 -25 21 -17 19 hvcurveto",
                        "11 0 14 5 8 8 9 11 12 7 12 0 20 0 19 -28 4 -29 10 -63 16 -102 72 -25 -62 0 -19 -47 -24 -60 -52 -133 -51 -75 -32 0 rrcurveto",
                        "-10 hlineto", "-4 -3 -3 -5 hvcurveto", "-19 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0497
     */
    public void testuni0497() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0497");
        assertNotNull(cs);
        assertEquals("uni0497", cs.getName());
        String[] text =
                {
                        "185 0 28 182 17 -17 34 119 70 -31 27 hstemhm",
                        "293 75 hintmask 10100100",
                        "293 244 rmoveto",
                        "-12 hlineto",
                        "-52 0 -28 14 -42 87 -29 62 -28 27 -31 0 rrcurveto",
                        "-34 -15 -17 -23 -20 15 -18 21 hvcurveto",
                        "18 0 18 8 8 0 12 0 11 -21 9 -22 rrcurveto",
                        "hintmask 11000100",
                        "21 -51 38 -37 32 -6 -36 0 -45 -20 -18 -50 -14 -38 -36 -94 -34 0 rrcurveto",
                        "-9 hlineto",
                        "-4 -7 -1 -7 hvcurveto",
                        "0 -17 3 -1 68 1 rlineto",
                        "45 2 28 70 13 41 rrcurveto",
                        "hintmask 10100100",
                        "19 59 15 37 80 1 rrcurveto",
                        "-138 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-7 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 56 2 36 39 58 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-8 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "138 vlineto",
                        "82 -1 15 -37 19 -59 15 -43 27 -70 23 0 43 0 40 -84 8 -44 rrcurveto",
                        "25 0 -6 135 rlineto",
                        "-1 19 -13 2 -16 0 -18 0 -26 3 -47 126 rrcurveto",
                        "hintmask 11010100",
                        "-19 49 -44 21 -37 0 33 5 34 37 24 51 11 22 9 21 13 0 7 0 19 -8 17 0 rrcurveto",
                        "22 15 19 20 22 -16 17 -34 hvcurveto",
                        "-30 0 -29 -27 -29 -61 rrcurveto", "hintmask 10101100",
                        "-41 -87 -29 -14 -52 0 rrcurveto", "-14 116 hlineto",
                        "29 10 13 33 vhcurveto", "8 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -58 -2 -39 -36 -56 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "7 hlineto", "34 9 -13 -29 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni0498
     */
    public void testuni0498() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0498");
        assertNotNull(cs);
        assertEquals("uni0498", cs.getName());
        String[] text =
                {
                        "41 -233 38 183 37 311 37 251 34 hstemhm",
                        "265 59 51 80 -50 92 hintmask 11111010",
                        "121 -166 rmoveto",
                        "29 -45 37 -22 41 0 53 0 43 29 0 55 0 49 -28 55 -47 33 117 1 131 53 0 150 0 107 -86 41 -71 20 rrcurveto",
                        "hintmask 11111100",
                        "273 callsubr",
                        "hintmask 11111010",
                        "117 39 -109 -51 -108 -87 -43 -70 hvcurveto",
                        "",
                        "-76 0 -32 34 -21 61 -11 32 -10 13 -28 0 -23 0 -11 -21 0 -26 0 -27 21 -26 27 -22 21 -16 29 -19 41 -11 56 -22 34 -56 0 -63 rrcurveto",
                        "-25 -25 -26 -36 vhcurveto",
                        "-29 0 -17 13 -21 23 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni0499
     */
    public void testuni0499() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni0499");
        assertNotNull(cs);
        assertEquals("uni0499", cs.getName());
        String[] text =
                {
                        "-79 -233 38 411 32 162 32 hstemhm",
                        "40 27 182 59 -22 66 -61 75 hintmask 11111000",
                        "105 -166 rmoveto",
                        "30 -45 36 -22 41 0 54 0 42 29 0 65 0 66 -27 43 -48 22 rrcurveto",
                        "hintmask 11110010",
                        "104 16 29 67 0 49 0 82 -68 29 -26 3 rrcurveto",
                        "hintmask 11110100",
                        "287 callsubr",
                        "hintmask 11110010",
                        "50 28 -49 -46 -81 -69 -20 -33 hvcurveto",
                        "-51 0 -28 22 -5 34 -4 33 -23 4 -11 0 -18 0 -12 -15 0 -14 0 -49 46 -40 79 -6 rrcurveto",
                        "hintmask 11111000",
                        "62 -11 25 -32 0 -79 0 -25 -24 -37 -37 0 -29 0 -16 13 -22 23 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni049A
     */
    public void testuni049A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni049A");
        assertNotNull(cs);
        assertEquals("uni049A", cs.getName());
        String[] text =
                {
                        "128 1 27 304 39 218 63 -34 27 hstemhm",
                        "106 81 hintmask 11101000",
                        "589 28 rmoveto",
                        "-57 0 -13 34 -70 113 rrcurveto",
                        "-74 120 rlineto",
                        "-16 28 -28 25 -26 0 73 24 35 92 22 59 16 45 25 21 10 0 27 0 26 -25 26 0 rrcurveto",
                        "21 23 18 24 23 -16 23 -52 hvcurveto",
                        "-108 0 -26 -89 -9 -29 -15 -53 -31 -64 -54 -31 -26 -14 -48 -1 -37 0 rrcurveto",
                        "203 vlineto", "hintmask 11011000",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-503 vlineto", "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 30 hvcurveto",
                        "261 vlineto", "56 0 33 -26 45 -78 rrcurveto",
                        "76 -121 rlineto", "88 -141 78 34 27 -141 rrcurveto",
                        "28 0 -7 149 rlineto", "7 4 13 -26 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni049B
     */
    public void testuni049B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni049B");
        assertNotNull(cs);
        assertEquals("uni049B", cs.getName());
        String[] text =
                {
                        "-3 1 27 182 34 119 70 -31 27 hstemhm",
                        "90 75 299 23 hintmask 11011100",
                        "90 72 rmoveto",
                        "288 vlineto",
                        "29 -9 13 -34 vhcurveto",
                        "-7 hlineto",
                        "-5 -3 3 5 hvcurveto",
                        "0 19 2 2 rlineto",
                        "0 56 -2 36 39 58 2 0 vhcurveto",
                        "2 -2 0 -19 rlineto",
                        "-5 -4 -3 -5 vhcurveto",
                        "-8 hlineto",
                        "-33 -10 -13 -29 hvcurveto",
                        "-116 19 vlineto",
                        "57 0 36 14 46 87 rrcurveto",
                        "hintmask 11101100",
                        "32 61 31 27 34 0 rrcurveto",
                        "38 14 -17 -22 -20 -16 -19 -24 hvcurveto",
                        "-20 0 -20 8 -9 0 -13 0 -11 -21 -12 -22 -27 -51 -38 -37 -36 -5 40 0 51 -21 19 -49 16 -38 40 -91 37 0 11 0 21 -2 1 -19 rrcurveto",
                        "5 -135 -23 0 rlineto",
                        "-6 44 -19 60 -42 12 -48 14 -32 70 -17 41 -24 59 -16 38 -95 0 rrcurveto",
                        "-138 vlineto", "-29 10 -15 33 vhcurveto", "8 hlineto",
                        "5 4 -3 -5 hvcurveto", "0 -19 -2 -2 rlineto",
                        "0 -58 2 -39 -36 -56 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto", "5 3 3 5 vhcurveto", "7 hlineto",
                        "34 9 15 29 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni049C
     */
    public void testuni049C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni049C");
        assertNotNull(cs);
        assertEquals("uni049C", cs.getName());
        String[] text =
                {
                        "101 1 27 295 43 224 61 -33 27 hstemhm",
                        "106 81 80 44 hintmask 11101100",
                        "311 121 rmoveto",
                        "151 vlineto",
                        "16 -22 12 -30 16 -40 44 -109 31 -70 80 -1 rrcurveto",
                        "73 -1 1 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-10 hlineto",
                        "-36 0 -57 75 -58 133 -25 57 -20 44 -59 5 rrcurveto",
                        "6 vlineto",
                        "70 31 16 95 10 59 5 29 21 28 23 0 13 0 13 -7 10 -11 9 -9 15 -4 13 0 rrcurveto",
                        "21 23 17 25 23 -18 27 -53 hvcurveto",
                        "-70 0 -53 -49 -8 -58 -8 -49 -9 -64 -43 -37 rrcurveto",
                        "156 -44 -178 vlineto",
                        "-24 -5 -31 -1 -25 0 rrcurveto", "", "208 vlineto",
                        "hintmask 11011100", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-503 vlineto", "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 30 hvcurveto",
                        "252 vlineto", "34 -1 26 -4 20 -9 rrcurveto",
                        "-188 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni049D
     */
    public void testuni049D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni049D");
        assertNotNull(cs);
        assertEquals("uni049D", cs.getName());
        String[] text =
                {
                        "56 1 27 182 34 129 69 -40 27 hstemhm",
                        "104 75 67 44 hintmask 11101100",
                        "290 72 rmoveto",
                        "125 vlineto",
                        "46 -17 13 -29 15 -38 17 -41 29 -71 50 -1 rrcurveto",
                        "73 -1 2 2 0 19 rlineto",
                        "7 -7 1 -4 vhcurveto",
                        "-8 hlineto",
                        "-37 0 -40 91 -16 38 -20 49 -39 21 -54 0 51 8 26 50 16 38 10 22 13 28 11 0 7 0 10 -1 5 -4 8 -4 12 -5 10 0 rrcurveto",
                        "21 16 18 20 25 -17 20 -38 hvcurveto",
                        "-48 0 -25 -55 -21 -45 -17 -39 -21 -39 -49 -15 rrcurveto",
                        "105 -44 -110 -67 114 vlineto", "hintmask 11011100",
                        "41 22 3 27 4 4 3 5 vhcurveto", "0 19 -2 2 rlineto",
                        "0 -55 -2 -39 -36 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "19 hlineto", "34 9 -16 -28 hvcurveto", "-289 vlineto",
                        "-28 -9 -13 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 57 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 -19 -32 2 39 vhcurveto", "141 vlineto",
                        "26 0 22 -1 19 -2 rrcurveto", "-135 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni049E
     */
    public void testuni049E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni049E");
        assertNotNull(cs);
        assertEquals("uni049E", cs.getName());
        String[] text =
                {
                        "101 -1 29 295 43 121 39 64 61 -33 27 hstemhm",
                        "",
                        "106 81 hintmask 11110100",
                        "583 -1 rmoveto",
                        "1 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-10 hlineto",
                        "-36 0 -57 75 -58 133 -26 60 -21 47 -69 0 80 25 17 102 11 63 5 29 21 28 23 0 13 0 13 -7 10 -11 9 -9 15 -4 13 0 rrcurveto",
                        "21 23 17 25 23 -18 27 -53 hvcurveto",
                        "-70 0 -53 -49 -8 -58 -9 -56 -11 -75 -59 -32 -24 -14 -45 -1 -36 0 rrcurveto",
                        "121 101 39 -101 48 vlineto", "hintmask 11101100",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-48 -89 -39 89 -416 vlineto",
                        "-28 -13 -15 -41 vhcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 30 hvcurveto", "252 vlineto",
                        "111 -2 18 -41 39 -100 44 -110 31 -69 80 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni049F
     */
    public void testuni049F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni049F");
        assertNotNull(cs);
        assertEquals("uni049F", cs.getName());
        String[] text =
                {
                        "-22 1 27 345 69 36 34 hstem",
                        "104 74 vstem",
                        "178 69 rmoveto",
                        "140 vlineto",
                        "75 -5 19 -37 22 -54 17 -41 29 -71 50 -1 rrcurveto",
                        "73 -1 2 2 0 19 rlineto",
                        "7 -7 1 -4 vhcurveto",
                        "-8 hlineto",
                        "-37 0 -40 91 -15 38 -21 49 -39 21 -54 0 51 8 26 50 16 38 10 22 13 28 11 0 8 0 9 -1 6 -4 7 -4 12 -5 10 0 rrcurveto",
                        "21 17 18 20 25 -18 20 -38 hvcurveto",
                        "-48 0 -25 -55 -20 -45 -22 -49 -28 -49 -80 0 rrcurveto",
                        "234 157 34 -157 vlineto",
                        "2 50 20 56 65 41 rrcurveto",
                        "-15 21 rlineto",
                        "-74 -38 -23 -41 -12 -28 -10 28 -25 45 -74 34 rrcurveto",
                        "-15 -21 rlineto", "66 -41 19 -56 2 -50 rrcurveto",
                        "-76 -34 76 -406 hlineto", "-30 -9 -14 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto", "",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 57 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-8 hlineto", "-33 -11 13 28 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04A0
     */
    public void testuni04A0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A0");
        assertNotNull(cs);
        assertEquals("uni04A0", cs.getName());
        String[] text =
                {
                        "251 -1 29 310 43 208 63 -44 37 -27 28 hstemhm",
                        "257 80 hintmask 11100100",
                        "741 -1 rmoveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-10 hlineto",
                        "-36 0 -55 76 -60 132 -27 60 -28 62 -69 0 77 25 34 91 22 58 10 28 26 29 12 0 14 0 13 -5 13 -7 13 -7 13 -6 13 0 rrcurveto",
                        "21 23 18 24 23 -16 23 -52 hvcurveto",
                        "-86 0 -30 -52 -24 -58 -21 -51 -25 -63 -57 -32 -24 -13 -45 -2 -36 0 rrcurveto",
                        "193 vlineto", "hintmask 11001100",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "hintmask 11010100",
                        "0 19 rlineto", "hintmask 11001100", "-2 1 rlineto",
                        "hintmask 11010100", "0 -93 -1 -36 vhcurveto",
                        "-67 hlineto", "hintmask 11001100", "1 -58 vlineto",
                        "-137 0 -18 -167 17 0 rlineto",
                        "10 29 13 30 18 30 rrcurveto", "hintmask 11010100",
                        "10 19 20 21 33 0 rrcurveto", "108 hlineto",
                        "9 -7 4 -11 0 -16 rrcurveto", "-503 vlineto",
                        "-28 -14 -15 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-39 -16 13 30 hvcurveto", "267 vlineto",
                        "119 -2 17 -57 41 -99 44 -108 30 -71 80 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A1
     */
    public void testuni04A1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A1");
        assertNotNull(cs);
        assertEquals("uni04A1", cs.getName());
        String[] text =
                {
                        "67 1 27 345 69 -41 30 hstemhm",
                        "185 75 hintmask 11010000",
                        "260 69 rmoveto",
                        "140 vlineto",
                        "74 -5 19 -37 22 -54 17 -41 29 -71 50 -1 rrcurveto",
                        "72 -1 3 2 0 19 rlineto",
                        "7 -7 1 -4 vhcurveto",
                        "-8 hlineto",
                        "-37 0 -40 91 -16 38 -20 49 -39 21 -54 0 51 8 26 50 16 38 10 22 13 28 10 0 8 0 9 -1 6 -4 8 -4 12 -5 10 0 rrcurveto",
                        "21 16 18 20 25 -17 20 -38 hvcurveto",
                        "-48 0 -25 -55 -21 -45 -22 -49 -27 -48 -79 -1 rrcurveto",
                        "116 vlineto", "29 10 13 33 vhcurveto", "8 hlineto",
                        "4 4 3 5 hvcurveto", "0 19 rlineto",
                        "hintmask 10110000", "-2 2 rlineto",
                        "0 -57 -2 -39 vhcurveto",
                        "-46 0 -36 2 -22 0 -75 0 -18 -134 17 0 rlineto",
                        "26 101 30 1 54 2 27 -3 7 -15 0 -25 rrcurveto",
                        "-289 vlineto", "-28 -9 -13 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 57 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-8 hlineto", "-33 -10 13 28 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04A2
     */
    public void testuni04A2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A2");
        assertNotNull(cs);
        assertEquals("uni04A2", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 hstem", "106 81 327 80 vstem",
                        "512 1 rmoveto", "94 0 31 -99 9 -43 rrcurveto",
                        "28 0 -7 147 rlineto", "13 -14 7 -7 vhcurveto",
                        "-16 hlineto", "-31 -5 10 36 hvcurveto", "502 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "252 327 -252 vlineto", "",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 52 2 33 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A3
     */
    public void testuni04A3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A3");
        assertNotNull(cs);
        assertEquals("uni04A3", cs.getName());
        String[] text =
                {"60 0 28 184 34 156 29 hstem", "104 74 205 75 vstem",
                        "458 74 rmoveto", "280 vlineto", "41 6 7 34 vhcurveto",
                        "25 hlineto", "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -98 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "21 hlineto",
                        "36 5 -9 -39 hvcurveto", "-108 -205 109 vlineto",
                        "41 7 6 34 vhcurveto", "20 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -108 -3 -103 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "26 hlineto",
                        "35 6 -9 -38 hvcurveto", "-280 vlineto",
                        "0 -38 -5 -8 -36 -1 rrcurveto", "-26 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 103 2 108 -2 1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto", "-20 hlineto",
                        "-34 1 -7 6 0 40 rrcurveto", "137 205 -138 vlineto",
                        "-39 -4 -7 -37 vhcurveto", "-21 hlineto",
                        "-3 -2 -2 -4 hvcurveto", "0 -21 2 -2 66 1 rlineto",
                        "104 0 22 -103 6 -25 rrcurveto", "20 0 -5 136 rlineto",
                        "12 -7 8 -14 vhcurveto", "-16 hlineto",
                        "-32 -4 11 35 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A4
     */
    public void testuni04A4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A4");
        assertNotNull(cs);
        assertEquals("uni04A4", cs.getName());
        String[] text =
                {"352 1 27 296 39 243 40 -28 27 hstemhm",
                        "106 81 327 80 228 26 hintmask 11101110",
                        "514 72 rmoveto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "502 vlineto", "0 7 1 7 2 5 7 11 12 2 15 0 rrcurveto",
                        "81 hlineto", "66 0 28 -53 16 -72 rrcurveto",
                        "26 4 -19 161 rlineto",
                        "-32 0 -30 -2 -38 0 -14 0 -17 2 -17 0 rrcurveto",
                        "-49 hlineto", "hintmask 11011110",
                        "-28 -1 -34 0 -18 0 rrcurveto", "hintmask 11101110",
                        "-39 -87 1 0 hvcurveto", "hintmask 11011110",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 rlineto",
                        "hintmask 11101110", "-2 1 rlineto",
                        "hintmask 11011110", "0 -93 -1 -36 vhcurveto",
                        "hintmask 11101110", "-39 -87 1 0 hvcurveto",
                        "hintmask 11011110", "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto", "27 hlineto",
                        "39 15 -14 -30 hvcurveto", "-502 vlineto",
                        "-28 -13 -16 -41 vhcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "252 327 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A5
     */
    public void testuni04A5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A5");
        assertNotNull(cs);
        assertEquals("uni04A5", cs.getName());
        String[] text =
                {"223 -1 29 184 34 145 39 -28 29 hstemhm",
                        "104 74 205 75 229 26 hintmask 11101110",
                        "497 430 rmoveto", "-82 -1 rlineto",
                        "hintmask 11011110", "-98 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "21 hlineto",
                        "36 5 -9 -39 hvcurveto", "-108 -205 109 vlineto",
                        "41 7 6 34 vhcurveto", "20 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -108 -3 -103 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "26 hlineto",
                        "35 6 -9 -38 hvcurveto", "-280 vlineto",
                        "0 -38 -5 -8 -36 -1 rrcurveto", "-26 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 103 2 108 -2 1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto", "-20 hlineto",
                        "-34 1 -7 6 0 40 rrcurveto", "137 205 -138 vlineto",
                        "-39 -4 -7 -37 vhcurveto", "-21 hlineto",
                        "-3 -2 -2 -4 hvcurveto",
                        "0 -21 2 -2 97 2 113 -2 1 2 0 21 rlineto",
                        "3 -2 3 -4 vhcurveto", "-25 hlineto",
                        "-35 -5 6 40 hvcurveto", "0 280 0 8 rlineto",
                        "hintmask 11101110", "1 23 16 6 21 0 rrcurveto",
                        "81 hlineto", "66 0 28 -53 16 -72 rrcurveto",
                        "26 4 -20 160 rlineto", "-31 0 -30 -2 -38 0 rrcurveto",
                        "hintmask 11011110", "-14 0 -18 3 -17 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A6
     */
    public void testuni04A6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A6");
        assertNotNull(cs);
        assertEquals("uni04A6", cs.getName());
        String[] text =
                {
                        "464 -172 29 144 27 315 31 230 41 -27 28 hstemhm",
                        "106 81 293 81 -17 23 275 79 hintmask 1110111010000000",
                        "921 93 rmoveto",
                        "0 239 -209 41 -151 1 rrcurveto",
                        "200 vlineto",
                        "0 30 24 13 28 1 rrcurveto",
                        "29 hlineto",
                        "5 3 4 4 hvcurveto",
                        "hintmask 1111011010000000",
                        "0 19 rlineto",
                        "hintmask 1110111010000000",
                        "-2 1 rlineto",
                        "hintmask 1111011010000000",
                        "228 callsubr",
                        "hintmask 1110111010000000",
                        "229 callsubr",
                        "hintmask 1111011010000000",
                        "-2 -1 0 -20 rlineto",
                        "hintmask 1110111010000000",
                        "230 callsubr",
                        "hintmask 1111011010000000",
                        "33 5 11 31 vhcurveto",
                        "221 hlineto",
                        "32 4 -16 -28 hvcurveto",
                        "-488 vlineto",
                        "-28 -13 -16 -41 vhcurveto",
                        "-22 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 89 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 31 hvcurveto",
                        "271 vlineto",
                        "151 -1 130 -51 0 -208 0 -169 -68 -57 -75 0 -48 0 -31 14 -21 19 -18 17 -13 24 0 27 rrcurveto",
                        "hintmask 1110110110000000", "-24 -152 23 hlineto",
                        "0 5 1 29 2 5 1 3 6 6 10 0 15 0 23 -26 82 0 rrcurveto",
                        "125 89 118 147 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A7
     */
    public void testuni04A7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A7");
        assertNotNull(cs);
        assertEquals("uni04A7", cs.getName());
        String[] text =
                {
                        "286 -234 34 199 29 167 34 161 39 -27 29 hstemhm",
                        "106 75 203 74 194 77 hintmask 11110111",
                        "106 353 rmoveto",
                        "-279 vlineto",
                        "-35 -3 -11 -38 vhcurveto",
                        "-30 hlineto",
                        "-4 -2 -2 -3 hvcurveto",
                        "0 -22 2 -2 110 2 111 -2 1 2 0 21 rlineto",
                        "4 -2 2 -3 vhcurveto",
                        "-27 hlineto",
                        "-35 -5 8 38 hvcurveto",
                        "277 vlineto",
                        "35 20 4 21 vhcurveto",
                        "121 hlineto",
                        "20 21 -2 -37 hvcurveto",
                        "-277 vlineto",
                        "-35 -4 -11 -37 vhcurveto",
                        "-27 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 107 2 115 -2 1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto",
                        "-30 hlineto",
                        "-35 -6 8 38 hvcurveto",
                        "121 vlineto",
                        "94 -2 100 -41 0 -176 0 -108 -29 -68 -73 0 -66 0 -9 43 -6 33 -4 24 -17 12 -24 0 rrcurveto",
                        "-23 -15 -15 -29 -43 52 -59 106 120 65 108 124 199 -162 32 -109 hvcurveto",
                        "125 vlineto", "hintmask 11101111", "291 callsubr",
                        "hintmask 11110111", "0 21 rlineto",
                        "hintmask 11101111", "-1 2 rlineto",
                        "hintmask 11110111", "292 callsubr",
                        "hintmask 11101111", "-110 2 rlineto",
                        "hintmask 11110111", "-2 -2 0 -22 rlineto",
                        "hintmask 11101111", "293 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04A8
     */
    public void testuni04A8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A8");
        assertNotNull(cs);
        assertEquals("uni04A8", cs.getName());
        String[] text =
                {
                        "175 -148 40 512 38 178 39 hstemhm",
                        "34 92 142 85 196 77 18 23 -21 21 hintmask 11111100",
                        "390 23 rmoveto",
                        "-29 70 -8 78 0 36 rrcurveto",
                        "127 34 70 61 81 20 -73 -123 vhcurveto",
                        "0 -119 -100 -55 -59 -11 rrcurveto",
                        "160 -131 rmoveto",
                        "-69 0 -46 43 -30 55 125 14 96 82 0 139 rrcurveto",
                        "104 -41 113 -137 -129 -51 -110 -136 vhcurveto",
                        "0 -44 9 -62 24 -60 -130 32 -45 126 0 140 0 126 81 166 118 0 37 0 34 -3 28 -52 16 -29 14 -15 26 0 22 0 12 20 0 20 rrcurveto",
                        "0 22 -17 21 -22 17 -25 20 -42 18 -63 0 -159 0 -152 -149 0 -181 0 -193 98 -127 188 -18 41 -76 71 -63 113 0 rrcurveto",
                        "65 hlineto", "hintmask 11111110",
                        "18 16 -18 -17 hvcurveto", "23 2 rlineto",
                        "-2 19 -2 30 0 19 rrcurveto", "hintmask 11111101",
                        "0 27 2 27 2 28 rrcurveto", "-21 2 rlineto",
                        "-39 -12 -40 -84 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04A9
     */
    public void testuni04A9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04A9");
        assertNotNull(cs);
        assertEquals("uni04A9", cs.getName());
        String[] text =
                {
                        "56 -116 28 359 26 124 28 hstem",
                        "35 79 96 74 158 70 vstem",
                        "312 3 rmoveto",
                        "-23 49 -5 55 0 25 rrcurveto",
                        "79 27 60 51 65 15 -53 -79 vhcurveto",
                        "0 -83 -59 -47 -71 -6 rrcurveto",
                        "131 -91 rmoveto",
                        "-59 0 -37 30 -24 39 105 9 84 57 0 103 rrcurveto",
                        "84 -52 63 -98 -97 -55 -71 -101 vhcurveto",
                        "0 -30 7 -43 19 -41 -99 27 -23 98 0 88 0 75 54 122 95 0 32 0 29 -2 25 -36 14 -20 12 -10 22 0 20 0 10 13 0 14 rrcurveto",
                        "0 15 -15 15 -18 12 -22 14 -38 13 -54 0 -135 0 -110 -101 0 -127 0 -136 75 -89 141 -15 34 -53 58 -44 95 0 rrcurveto",
                        "57 hlineto", "16 17 -31 -12 hvcurveto",
                        "29 2 rlineto",
                        "-2 13 -5 39 0 14 0 18 1 34 2 19 rrcurveto",
                        "-27 1 rlineto", "-27 -10 -42 -73 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04AA
     */
    public void testuni04AA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04AA");
        assertNotNull(cs);
        assertEquals("uni04AA", cs.getName());
        String[] text =
                {
                        "143 -233 38 183 41 592 37 hstem",
                        "37 87 238 59 vstem",
                        "219 -166 rmoveto",
                        "29 -45 36 -22 41 0 54 0 42 29 0 55 0 49 -28 55 -47 33 rrcurveto",
                        "9 hlineto",
                        "97 0 89 48 68 89 rrcurveto",
                        "-23 15 rlineto",
                        "-71 -78 -68 -33 -93 0 rrcurveto",
                        "-155 -75 159 146 203 142 84 79 hvcurveto",
                        "138 0 58 -81 26 -86 rrcurveto",
                        "30 4 rlineto",
                        "-10 52 -9 48 -3 55 -57 3 -39 42 -123 0 -166 0 -153 -146 0 -197 0 -138 75 -142 159 -38 57 -21 34 -56 0 -64 0 -25 -24 -26 -36 0 rrcurveto",
                        "-30 0 -16 13 -22 23 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04AB
     */
    public void testuni04AB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04AB");
        assertNotNull(cs);
        assertEquals("uni04AB", cs.getName());
        String[] text =
                {
                        "-93 -229 39 178 44 376 34 hstem",
                        "37 77 177 59 vstem",
                        "148 -161 rmoveto",
                        "29 -45 37 -23 41 0 54 0 41 31 0 64 0 64 -25 43 -45 22 39 12 33 29 32 55 rrcurveto",
                        "-18 14 rlineto",
                        "-31 -45 -38 -28 -43 0 rrcurveto",
                        "-77 -63 81 117 108 49 70 66 hvcurveto",
                        "59 0 6 -43 4 -33 3 -25 20 -11 21 0 rrcurveto",
                        "21 18 15 29 53 -51 49 -96 -108 -89 -92 -142 hvcurveto",
                        "0 -128 74 -91 118 -1 44 -15 18 -33 0 -67 0 -25 -23 -38 -37 0 -30 0 -15 14 -23 23 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04AC
     */
    public void testuni04AC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04AC");
        assertNotNull(cs);
        assertEquals("uni04AC", cs.getName());
        String[] text =
                {"61 0 25 575 39 hstem", "242 80 vstem", "322 75 rmoveto",
                        "483 vlineto", "33 12 9 36 vhcurveto", "79 hlineto",
                        "55 0 17 -11 21 -80 rrcurveto",
                        "23 5 -33 155 -26 -6 rlineto",
                        "1 -7 -2 -17 -15 0 rrcurveto", "-428 hlineto",
                        "-16 0 -2 16 1 8 rrcurveto",
                        "-26 6 -33 -155 24 -5 rlineto",
                        "20 80 17 11 55 0 rrcurveto", "91 hlineto",
                        "36 13 -9 -31 hvcurveto", "-488 vlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 75 1 rlineto",
                        "97 1 35 -71 14 -71 rrcurveto", "27 0 -7 146 rlineto",
                        "-1 12 -13 8 -7 0 rrcurveto", "-17 hlineto",
                        "-33 -3 19 31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04AD
     */
    public void testuni04AD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04AD");
        assertNotNull(cs);
        assertEquals("uni04AD", cs.getName());
        String[] text =
                {"-55 0 28 360 39 hstem", "184 75 vstem", "259 76 rmoveto",
                        "312 71 vlineto", "59 0 -6 -10 16 -75 rrcurveto",
                        "20 139 hlineto", "-26 -4 rlineto",
                        "1 -6 -7 -5 -14 0 rrcurveto", "-300 hlineto",
                        "-15 0 -6 5 1 6 rrcurveto",
                        "-25 4 -1 -139 20 0 rlineto",
                        "20 76 -9 9 49 0 rrcurveto", "77 -314 hlineto",
                        "0 -39 -5 -9 -35 -1 rrcurveto", "-41 hlineto",
                        "-4 -2 -2 -3 hvcurveto", "0 -22 88 2 rlineto",
                        "107 2 16 -86 6 -26 rrcurveto", "22 0 -3 117 rlineto",
                        "-1 14 -10 7 -10 0 rrcurveto", "-17 hlineto",
                        "-31 -5 12 36 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04AE
     */
    public void testuni04AE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04AE");
        assertNotNull(cs);
        assertEquals("uni04AE", cs.getName());
        String[] text =
                {"40 1 27 590 27 hstem", "254 80 vstem", "254 72 rmoveto",
                        "-36 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04AF
     */
    public void testuni04AF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04AF");
        assertNotNull(cs);
        assertEquals("uni04AF", cs.getName());
        String[] text =
                {"73 -228 27 603 27 hstem", "250 75 vstem", "250 -157 rmoveto",
                        "-29 -9 -15 -33 vhcurveto", "-20 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 69 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "0 157 149 358 rlineto",
                        "12 28 15 16 30 0 rrcurveto", "22 hlineto",
                        "6 3 2 6 hvcurveto", "0 19 -1 2 rlineto",
                        "0 -79 -2 -9 -13 -79 2 0 vhcurveto",
                        "-1 -2 0 -20 rlineto", "-3 1 -4 5 vhcurveto",
                        "29 hlineto", "21 4 -3 -10 hvcurveto",
                        "0 -6 -3 -14 -4 -9 rrcurveto",
                        "-127 -312 -130 312 rlineto",
                        "-5 10 -4 13 0 6 rrcurveto", "9 6 4 19 vhcurveto",
                        "29 hlineto", "4 2 4 4 hvcurveto", "0 19 -1 2 rlineto",
                        "0 -103 -2 -6 -13 -93 2 0 vhcurveto",
                        "-1 -2 0 -20 rlineto", "-6 7 -1 3 vhcurveto",
                        "12 hlineto",
                        "14 0 10 -2 5 -3 13 -8 10 -18 6 -13 rrcurveto",
                        "160 -370 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B0
     */
    public void testuni04B0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B0");
        assertNotNull(cs);
        assertEquals("uni04B0", cs.getName());
        String[] text =
                {"40 1 27 182 40 368 27 hstem", "254 80 vstem",
                        "334 210 rmoveto", "153 40 -153 43 hlineto",
                        "149 281 rlineto", "18 32 13 12 30 0 rrcurveto",
                        "21 hlineto", "6 4 2 5 hvcurveto", "0 20 -2 1 rlineto",
                        "0 -78 -1 -9 -13 -79 1 0 vhcurveto",
                        "-1 -1 0 -20 rlineto", "-3 1 -4 4 vhcurveto",
                        "30 hlineto", "20 5 -3 -11 hvcurveto",
                        "0 -5 -3 -9 -8 -14 rrcurveto",
                        "-127 -235 -140 235 rlineto",
                        "-8 14 -4 9 0 6 rrcurveto", "9 6 4 19 vhcurveto",
                        "29 hlineto", "4 2 4 4 hvcurveto", "0 19 -1 1 rlineto",
                        "0 -109 -1 -6 -13 -93 1 0 vhcurveto",
                        "-1 -1 0 -20 rlineto", "-6 7 -1 3 vhcurveto",
                        "12 hlineto",
                        "15 0 9 -2 5 -3 13 -8 9 -11 11 -20 rrcurveto",
                        "170 -293 0 -31 -169 0 0 -40 169 0 0 -138 rlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-27 hlineto",
                        "-39 -16 13 31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B1
     */
    public void testuni04B1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B1");
        assertNotNull(cs);
        assertEquals("uni04B1", cs.getName());
        String[] text =
                {"73 -228 27 201 39 363 27 hstem", "250 75 vstem",
                        "250 -157 rmoveto", "-29 -9 -15 -33 vhcurveto",
                        "-20 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 67 2 36 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-19 hlineto", "-33 -10 15 29 hvcurveto",
                        "157 176 39 -160 vlineto", "133 319 rlineto",
                        "12 28 15 16 30 0 rrcurveto", "22 hlineto",
                        "6 3 2 6 hvcurveto", "0 19 -1 2 rlineto",
                        "0 -79 -2 -9 -13 -79 2 0 vhcurveto",
                        "-1 -2 0 -20 rlineto", "-3 1 -4 5 vhcurveto",
                        "29 hlineto", "21 4 -3 -10 hvcurveto",
                        "0 -6 -3 -14 -4 -9 rrcurveto",
                        "-127 -312 -130 312 rlineto",
                        "-5 10 -4 13 0 6 rrcurveto", "9 6 4 19 vhcurveto",
                        "29 hlineto", "4 2 4 4 hvcurveto", "0 19 -1 2 rlineto",
                        "0 -103 -2 -6 -13 -93 2 0 vhcurveto",
                        "-1 -2 0 -20 rlineto", "-6 7 -1 3 vhcurveto",
                        "12 hlineto",
                        "14 0 10 -2 5 -3 13 -8 10 -18 6 -13 rrcurveto",
                        "139 -319 -161 0 0 -39 178 0 4 -12 rlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04B2
     */
    public void testuni04B2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B2");
        assertNotNull(cs);
        assertEquals("uni04B2", cs.getName());
        String[] text =
                {"144 1 -20 21 26 590 28 hstem", "521 2 rmoveto",
                        "-35 -66 -3 0 hvcurveto", "-3 2 0 20 rlineto",
                        "4 3 3 3 vhcurveto", "24 hlineto",
                        "24 8 3 8 hvcurveto", "0 7 -8 12 -11 15 rrcurveto",
                        "-136 188 rlineto",
                        "-6 8 -4 3 -4 0 -3 0 -5 -5 -7 -9 rrcurveto",
                        "-132 -181 rlineto", "-9 -13 -5 -10 0 -8 rrcurveto",
                        "-11 10 -7 19 vhcurveto", "19 hlineto",
                        "5 -1 1 -3 0 -3 rrcurveto", "0 -20 -3 -2 rlineto",
                        "0 -97 2 -15 -5 -79 -2 0 vhcurveto",
                        "-1 2 0 20 rlineto", "5 5 2 6 vhcurveto", "12 hlineto",
                        "36 0 27 21 23 32 rrcurveto", "154 210 rlineto",
                        "7 9 3 8 0 6 0 10 -5 9 -9 11 rrcurveto",
                        "-171 225 rlineto", "-24 31 -14 18 -32 0 rrcurveto",
                        "-2 hlineto", "-5 -7 1 6 hvcurveto",
                        "0 20 5 1 rlineto",
                        "26 0 64 -1 11 0 5 0 92 1 30 0 rrcurveto",
                        "0 4 -1 1 vhcurveto", "-20 vlineto",
                        "-5 -2 -2 -3 vhcurveto", "-40 hlineto",
                        "-17 -6 -4 -7 hvcurveto",
                        "0 -8 8 -13 10 -14 rrcurveto", "125 -176 rlineto",
                        "5 -7 4 -4 3 0 3 0 4 4 6 8 rrcurveto",
                        "129 175 rlineto", "10 14 5 13 0 7 rrcurveto",
                        "9 -7 3 -14 vhcurveto", "-30 hlineto",
                        "-4 -3 2 5 hvcurveto", "0 20 2 1 rlineto",
                        "21 0 67 -1 11 0 5 0 75 1 17 0 rrcurveto",
                        "3 -1 0 -20 rlineto", "-3 -1 -4 -8 vhcurveto",
                        "-17 hlineto", "-28 0 -23 -8 -33 -45 rrcurveto",
                        "-140 -190 rlineto",
                        "-9 -12 -4 -9 0 -9 0 -10 6 -10 10 -13 rrcurveto",
                        "177 -232 rlineto", "25 -34 17 -18 14 0 rrcurveto",
                        "23 4 -9 -11 hvcurveto", "5 -149 -27 0 rlineto",
                        "-8 41 -26 102 -68 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B3
     */
    public void testuni04B3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B3");
        assertNotNull(cs);
        assertEquals("uni04B3", cs.getName());
        String[] text =
                {"-22 -1 29 374 29 hstem", "342 hmoveto",
                        "85 0 18 -72 12 -56 rrcurveto", "20 0 -5 136 rlineto",
                        "-1 13 -6 7 -14 0 rrcurveto", "-17 hlineto",
                        "-18 0 -6 2 -31 44 rrcurveto", "-104 147 rlineto",
                        "-1 3 -1 2 0 2 0 1 0 2 2 2 rrcurveto",
                        "93 122 rlineto", "28 37 15 10 32 0 rrcurveto",
                        "4 hlineto", "7 5 1 7 hvcurveto", "0 19 -1 2 rlineto",
                        "0 -49 -2 -32 -30 -48 2 0 vhcurveto",
                        "-3 -3 0 -19 rlineto", "-5 3 -2 4 vhcurveto",
                        "15 hlineto", "18 3 -2 -8 hvcurveto",
                        "0 -6 -2 -9 -14 -20 rrcurveto", "-67 -92 rlineto",
                        "-3 -5 -3 -3 -2 0 -2 0 -2 3 -4 6 rrcurveto",
                        "-61 92 rlineto", "-12 18 -4 9 0 5 rrcurveto",
                        "7 3 5 20 vhcurveto", "16 hlineto",
                        "4 3 3 5 hvcurveto",
                        "0 18 -3 3 -110 -2 -84 2 -2 -3 0 -19 rlineto",
                        "-4 6 -3 6 vhcurveto", "3 hlineto",
                        "34 0 17 -17 20 -30 rrcurveto", "100 -146 rlineto",
                        "2 -3 1 -2 0 -2 0 -2 -1 -2 -2 -2 rrcurveto",
                        "-92 -122 rlineto", "-23 -29 -16 -17 -30 0 rrcurveto",
                        "-9 hlineto", "-9 -4 -4 -6 hvcurveto",
                        "0 -17 2 -2 rlineto", "0 47 2 29 33 52 -2 0 vhcurveto",
                        "1 2 0 19 rlineto", "5 -2 3 -5 vhcurveto",
                        "-13 hlineto", "-17 -7 2 9 hvcurveto",
                        "0 5 4 7 13 20 rrcurveto", "65 92 rlineto",
                        "3 4 3 4 2 0 2 0 2 -2 3 -5 rrcurveto",
                        "59 -80 rlineto", "22 -35 5 -8 0 -4 rrcurveto",
                        "-7 -5 -2 -18 vhcurveto", "-11 hlineto",
                        "-6 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 40 1 26 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B4
     */
    public void testuni04B4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B4");
        assertNotNull(cs);
        assertEquals("uni04B4", cs.getName());
        String[] text =
                {"362 1 27 -26 35 577 39 -35 28 hstemhm",
                        "250 81 347 81 hintmask 10001100", "250 572 rmoveto",
                        "-497 vlineto", "0 -40 -6 -6 -33 -1 rrcurveto",
                        "-26 hlineto", "-5 -4 -5 -5 hvcurveto",
                        "0 -17 2 -2 rlineto", "hintmask 01001100",
                        "108 3 rlineto", "hintmask 10011100",
                        "149 1 232 -2 0 0 101 -1 27 -70 15 -71 rrcurveto",
                        "26 0 -4 149 rlineto", "14 -14 6 -7 vhcurveto",
                        "-17 hlineto", "-33 -2 18 31 hvcurveto", "495 vlineto",
                        "0 33 2 12 36 1 rrcurveto", "30 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -3 1 -116 -1 -108 1 -2 -1 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "30 hlineto",
                        "38 -1 1 -13 0 -32 rrcurveto", "-489 vlineto",
                        "hintmask 01101100", "-32 -3 -14 -36 vhcurveto",
                        "-269 hlineto", "-31 -8 5 41 hvcurveto", "489 vlineto",
                        "33 12 9 36 vhcurveto", "64 hlineto",
                        "56 0 17 -11 20 -80 rrcurveto",
                        "23 5 -33 156 -26 -7 rlineto",
                        "1 -7 -1 -17 -16 0 rrcurveto", "-399 hlineto",
                        "-16 0 -1 16 1 8 rrcurveto",
                        "-27 7 -32 -156 23 -5 rlineto",
                        "20 80 17 11 55 0 rrcurveto", "77 hlineto",
                        "36 12 -11 -31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B5
     */
    public void testuni04B5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B5");
        assertNotNull(cs);
        assertEquals("uni04B5", cs.getName());
        String[] text =
                {"220 0 28 -28 39 362 40 -39 29 hstemhm",
                        "188 75 283 75 hintmask 00101100", "301 401 rmoveto",
                        "36 hlineto", "59 0 -6 -9 16 -75 rrcurveto",
                        "21 139 hlineto", "-27 -4 rlineto",
                        "1 -6 -7 -5 -14 0 rrcurveto", "-299 hlineto",
                        "-16 0 -6 5 2 6 rrcurveto",
                        "-26 4 -1 -139 20 0 rlineto", "hintmask 10011100",
                        "20 76 -9 9 50 0 rrcurveto", "32 hlineto",
                        "36 5 -9 -38 hvcurveto", "-284 vlineto",
                        "-39 -5 -4 -36 vhcurveto", "-16 hlineto",
                        "-3 -2 -2 -4 hvcurveto", "0 -21 2 -2 rlineto",
                        "hintmask 01001100", "93 1 326 0 rlineto",
                        "106 0 18 -103 7 -25 rrcurveto", "21 0 -4 135 rlineto",
                        "hintmask 10011100", "-1 14 -10 7 -10 0 rrcurveto",
                        "-17 hlineto", "-31 -5 12 36 hvcurveto", "278 vlineto",
                        "41 7 7 34 vhcurveto", "25 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -2 2 -112 -2 -98 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "21 hlineto",
                        "35 5 -9 -39 hvcurveto", "-266 vlineto",
                        "hintmask 01101100", "-34 -3 -15 -37 vhcurveto",
                        "-203 hlineto", "-35 -5 12 37 hvcurveto",
                        "267 vlineto", "41 8 5 30 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04B6
     */
    public void testuni04B6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B6");
        assertNotNull(cs);
        assertEquals("uni04B6", cs.getName());
        String[] text =
                {"133 0 25 216 58 321 26 hstem", "97 81 271 80 54 27 vstem",
                        "529 74 rmoveto", "503 vlineto", "37 6 5 34 vhcurveto",
                        "29 hlineto", "4 2 2 4 hvcurveto",
                        "0 21 -115 -2 -114 2 0 -22 rlineto",
                        "-3 1 -2 3 vhcurveto", "30 hlineto",
                        "36 4 -7 -35 hvcurveto", "-222 vlineto",
                        "-61 -54 -67 -2 -29 0 rrcurveto",
                        "-72 -42 27 82 hvcurveto", "170 vlineto",
                        "31 2 11 42 vhcurveto", "17 hlineto",
                        "4 2 1 4 hvcurveto",
                        "0 21 -108 -1 -108 1 0 -21 rlineto",
                        "-3 2 -2 5 vhcurveto", "17 hlineto",
                        "39 5 -7 -35 hvcurveto", "-166 vlineto",
                        "-91 39 -80 114 vhcurveto",
                        "58 0 61 8 80 81 rrcurveto", "-257 vlineto",
                        "-34 -4 -13 -36 vhcurveto", "-39 hlineto",
                        "-4 -1 -2 -3 hvcurveto", "0 -22 72 1 rlineto",
                        "92 1 43 -60 11 -82 rrcurveto", "27 0 -7 146 rlineto",
                        "-1 15 -13 5 -7 0 rrcurveto", "-17 hlineto",
                        "-33 -3 18 31 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B7
     */
    public void testuni04B7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B7");
        assertNotNull(cs);
        assertEquals("uni04B7", cs.getName());
        String[] text =
                {"15 0 28 110 36 228 29 hstem", "86 75 190 74 vstem",
                        "425 76 rmoveto", "278 vlineto", "41 7 7 34 vhcurveto",
                        "25 hlineto", "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -92 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "16 hlineto",
                        "36 5 -9 -39 hvcurveto", "-125 vlineto",
                        "-31 -36 -35 -19 -55 0 rrcurveto",
                        "-61 -8 44 68 hvcurveto", "74 vlineto",
                        "32 7 10 34 vhcurveto", "15 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -2 2 -102 -3 -85 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "8 hlineto",
                        "35 5 -9 -38 hvcurveto", "-65 vlineto",
                        "-78 22 -74 100 vhcurveto",
                        "53 0 54 14 36 51 rrcurveto", "-127 vlineto",
                        "-39 -5 -9 -36 vhcurveto", "-16 hlineto",
                        "-4 -2 -2 -4 hvcurveto", "0 -21 2 -2 62 1 rlineto",
                        "100 1 22 -80 9 -49 rrcurveto", "20 0 -4 135 rlineto",
                        "14 -11 7 -10 vhcurveto", "-17 hlineto",
                        "-31 -5 12 36 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04B8
     */
    public void testuni04B8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B8");
        assertNotNull(cs);
        assertEquals("uni04B8", cs.getName());
        String[] text =
                {"133 1 27 222 59 309 27 hstem", "97 81 102 45 124 80 vstem",
                        "325 127 rmoveto", "132 vlineto",
                        "39 10 41 17 44 31 rrcurveto", "-246 vlineto",
                        "-28 -14 -15 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-40 -15 13 30 hvcurveto", "503 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-219 vlineto", "-46 -30 -45 -11 -33 -4 rrcurveto",
                        "205 -45 -206 vlineto", "-65 2 -37 29 0 77 rrcurveto",
                        "156 vlineto", "28 13 17 41 vhcurveto", "27 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -94 -1 -35 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "26 hlineto", "40 15 -14 -31 hvcurveto",
                        "-145 vlineto", "-99 39 -79 114 vhcurveto",
                        "10 0 10 0 10 1 rrcurveto", "-124 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04B9
     */
    public void testuni04B9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04B9");
        assertNotNull(cs);
        assertEquals("uni04B9", cs.getName());
        String[] text =
                {"15 1 27 118 35 221 29 hstem", "71 75 88 44 57 75 vstem",
                        "278 83 rmoveto", "74 vlineto",
                        "20 7 18 11 19 14 rrcurveto", "-113 vlineto",
                        "-39 -4 -9 -37 vhcurveto", "-16 hlineto",
                        "-4 -2 -2 -4 hvcurveto", "0 -21 2 -2 rlineto",
                        "0 62 2 40 38 56 -2 0 vhcurveto", "2 2 0 22 rlineto",
                        "3 -2 2 -3 vhcurveto", "-17 hlineto",
                        "-36 -4 10 38 hvcurveto", "278 vlineto",
                        "41 7 7 33 vhcurveto", "26 hlineto",
                        "3 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -92 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "15 hlineto",
                        "36 5 -9 -39 hvcurveto", "-129 vlineto",
                        "-17 -17 -19 -11 -21 -7 rrcurveto",
                        "126 -44 -134 vlineto", "-6 -1 -7 0 -6 0 rrcurveto",
                        "-62 -7 34 78 hvcurveto", "67 vlineto",
                        "32 6 10 34 vhcurveto", "15 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -102 -3 -86 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "8 hlineto",
                        "35 6 -9 -38 hvcurveto", "-58 vlineto",
                        "-106 35 -45 98 vhcurveto", "11 0 10 0 9 1 rrcurveto",
                        "-64 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04BA
     */
    public void testuni04BA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04BA");
        assertNotNull(cs);
        assertEquals("uni04BA", cs.getName());
        String[] text =
                {"157 1 27 367 46 177 27 hstem", "106 81 297 81 vstem",
                        "187 320 rmoveto", "70 50 75 25 31 0 rrcurveto",
                        "76 45 -40 -81 hvcurveto", "-202 vlineto",
                        "-29 -9 -15 -37 vhcurveto", "-13 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 65 2 39 42 74 -2 0 vhcurveto", "3 2 0 19 rlineto",
                        "5 -5 3 -5 vhcurveto", "-21 hlineto",
                        "-35 -11 15 29 hvcurveto", "210 vlineto",
                        "103 -47 56 -100 vhcurveto",
                        "-63 0 -74 -23 -94 -55 rrcurveto", "211 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-503 vlineto", "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 79 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-19 hlineto", "-40 -15 13 30 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04BB
     */
    public void testuni04BB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04BB");
        assertNotNull(cs);
        assertEquals("uni04BB", cs.getName());
        String[] text =
                {"42 1 27 273 47 54 27 hstem", "102 75 208 75 vstem",
                        "177 72 rmoveto", "157 vlineto",
                        "47 47 43 25 29 0 rrcurveto",
                        "56 33 -19 -81 hvcurveto", "-129 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "118 vlineto",
                        "103 -47 55 -73 vhcurveto",
                        "-39 0 -58 -15 -66 -66 rrcurveto", "91 vlineto",
                        "28 9 16 34 vhcurveto", "15 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -64 -2 -36 -39 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto",
                        "-286 vlineto", "-29 -9 -15 -34 vhcurveto",
                        "-19 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 68 2 36 39 65 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-15 hlineto", "-33 -10 15 29 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04BC
     */
    public void testuni04BC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04BC");
        assertNotNull(cs);
        assertEquals("uni04BC", cs.getName());
        String[] text =
                {
                        "306 -12 34 364 44 102 63 29 34 hstem",
                        "10 40 119 90 vstem",
                        "678 430 rmoveto",
                        "311 callsubr",
                        "25 -308 rmoveto",
                        "-53 -51 -61 -49 -93 0 -135 0 -102 141 0 186 0 13 0 13 1 11 rrcurveto",
                        "498 hlineto",
                        "-11 142 -81 130 -192 0 -154 0 -102 -92 -35 -136 rrcurveto",
                        "-12 hlineto",
                        "-67 -54 10 43 28 27 21 23 20 14 18 16 19 -14 10 -15 -45 -50 -57 -64 -70 57 -18 77 hvcurveto",
                        "30 hlineto",
                        "-3 -21 -2 -23 0 -23 0 -158 96 -173 215 0 110 0 57 37 79 73 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04BD
     */
    public void testuni04BD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04BD");
        assertNotNull(cs);
        assertEquals("uni04BD", cs.getName());
        String[] text =
                {
                        "33 -12 49 201 39 91 57 -17 34 hstemhm",
                        "24 37 80 75 203 80 hintmask 11011110",
                        "221 277 rmoveto",
                        "312 callsubr",
                        "208 -184 rmoveto",
                        "-34 -38 -35 -18 -55 0 -73 0 -71 79 0 102 0 8 1 6 0 6 rrcurveto",
                        "263 hlineto",
                        "11 8 6 11 84 -32 103 -131 hvcurveto",
                        "-78 0 -80 -60 -28 -105 -51 2 -38 12 0 33 rrcurveto",
                        "hintmask 11101110",
                        "26 23 18 20 19 13 17 14 17 -14 9 -13 -41 -44 -51 -58 -61 51 -17 68 vhcurveto",
                        "-1 -12 -1 -14 0 -13 0 -109 57 -102 138 0 71 0 60 37 37 52 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04BE
     */
    public void testuni04BE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04BE");
        assertNotNull(cs);
        assertEquals("uni04BE", cs.getName());
        String[] text =
                {
                        "306 -209 38 159 34 364 44 102 63 29 34 hstem",
                        "10 40 119 90 222 60 vstem",
                        "678 430 rmoveto",
                        "311 callsubr",
                        "6 -572 rmoveto",
                        "-16 7 rlineto",
                        "-22 -22 -16 -14 -29 0 -37 0 -23 26 0 26 0 61 37 40 53 42 32 18 29 25 34 31 rrcurveto",
                        "-23 24 rlineto",
                        "-53 -51 -61 -49 -93 0 -135 0 -102 141 0 186 0 13 0 13 1 11 rrcurveto",
                        "498 hlineto",
                        "-11 142 -81 130 -192 0 -154 0 -102 -92 -35 -136 rrcurveto",
                        "-12 hlineto",
                        "-67 -54 10 43 28 27 21 23 20 14 18 16 19 -14 10 -15 -45 -50 -57 -64 -70 57 -18 77 hvcurveto",
                        "30 hlineto",
                        "-3 -21 -2 -23 0 -23 0 -158 96 -173 215 0 25 0 23 2 20 4 -38 -35 -29 -42 0 -42 0 -55 42 -29 54 0 41 0 37 22 29 45 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04BF
     */
    public void testuni04BF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04BF");
        assertNotNull(cs);
        assertEquals("uni04BF", cs.getName());
        String[] text =
                {
                        "40 -208 39 157 49 201 39 91 57 -17 34 hstemhm",
                        "24 37 80 75 93 59 51 80 hintmask 1110111110000000",
                        "221 277 rmoveto",
                        "312 callsubr",
                        "235 -418 rmoveto",
                        "-15 8 rlineto",
                        "-22 -23 -16 -13 -30 0 -36 0 -24 26 0 25 0 60 44 45 42 39 19 14 17 17 14 20 rrcurveto",
                        "-20 16 rlineto",
                        "-34 -38 -35 -18 -55 0 -73 0 -71 79 0 102 0 8 1 6 0 6 rrcurveto",
                        "263 hlineto",
                        "11 8 6 11 84 -32 103 -131 hvcurveto",
                        "-78 0 -80 -60 -28 -105 -51 2 -38 12 0 33 rrcurveto",
                        "hintmask 1111011110000000",
                        "26 23 18 20 19 13 17 14 17 -14 9 -13 -41 -44 -51 -58 -61 51 -17 68 vhcurveto",
                        "-1 -12 -1 -14 0 -13 0 -109 57 -102 138 0 12 0 11 1 11 2 -34 -34 -27 -40 0 -41 0 -55 42 -29 54 0 41 0 36 22 29 45 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C0
     */
    public void testuni04C0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C0");
        assertNotNull(cs);
        assertEquals("uni04C0", cs.getName());
        String[] text =
                {"-208 1 27 590 27 hstem", "106 81 vstem", "187 574 rmoveto",
                        "-58 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C1
     */
    public void testuni04C1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C1");
        assertNotNull(cs);
        assertEquals("uni04C1", cs.getName());
        String[] text =
                {
                        "354 -1 29 295 43 224 61 -33 27 53 31 hstemhm",
                        "304 70 14 80 14 71 hintmask 11101111",
                        "832 -1 rmoveto",
                        "270 callsubr",
                        "hintmask 11011111",
                        "271 callsubr",
                        "hintmask 11101111",
                        "272 callsubr",
                        "-213 775 rmoveto",
                        "20 -12 10 -27 -22 -10 -16 -15 vhcurveto",
                        "0 -2 1 -1 0 -1 rrcurveto",
                        "-5 vlineto",
                        "-22 -25 -14 -30 -32 -23 17 20 vhcurveto",
                        "0 1 1 2 0 1 rrcurveto",
                        "4 vlineto",
                        "15 -10 16 -22 -27 -11 -9 -22 -52 57 -24 66 64 62 25 52 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C2
     */
    public void testuni04C2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C2");
        assertNotNull(cs);
        assertEquals("uni04C2", cs.getName());
        String[] text =
                {
                        "172 1 27 182 34 127 67 -36 27 61 31 hstemhm",
                        "217 73 9 75 12 73 hintmask 11101111",
                        "374 210 rmoveto",
                        "84 0 16 -38 23 -59 15 -41 26 -71 45 -1 rrcurveto",
                        "65 -1 2 2 0 19 rlineto",
                        "7 -5 1 -5 vhcurveto",
                        "-7 hlineto",
                        "-33 0 -36 91 -15 38 -18 49 -35 21 -48 0 39 7 20 41 14 43 9 31 14 22 10 0 8 0 5 -3 4 -4 6 -6 12 -4 9 0 rrcurveto",
                        "17 17 19 20 24 -9 21 -38 hvcurveto",
                        "-43 0 -28 -54 -16 -47 -20 -55 -26 -38 -61 0 rrcurveto",
                        "-17 116 hlineto",
                        "hintmask 11011111",
                        "285 callsubr",
                        "hintmask 11101111",
                        "-16 47 -29 54 -43 0 rrcurveto",
                        "-37 -10 -21 -24 -20 18 -19 17 hvcurveto",
                        "8 0 13 4 5 6 4 4 6 3 8 0 9 0 14 -22 10 -31 13 -43 20 -41 40 -7 -49 0 -34 -21 -19 -49 -14 -38 -36 -91 -33 0 rrcurveto",
                        "-8 hlineto",
                        "-4 -6 -1 -7 hvcurveto",
                        "0 -19 2 -2 65 1 rlineto",
                        "45 1 27 71 15 41 22 59 17 38 83 0 rrcurveto",
                        "-138 vlineto",
                        "-29 -9 -15 -34 vhcurveto",
                        "-7 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 56 2 36 39 58 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-8 hlineto",
                        "-33 -10 15 29 hvcurveto",
                        "85 506 rmoveto",
                        "19 -15 13 -24 -18 -16 -14 -17 vhcurveto",
                        "0 -3 0 -2 1 -2 0 -3 1 -3 0 -3 rrcurveto",
                        "-22 -21 -20 -29 -30 -20 21 21 vhcurveto",
                        "0 3 0 3 1 3 0 3 1 2 0 3 rrcurveto",
                        "16 -13 14 -22 -23 -15 -15 -18 -54 54 -33 66 63 59 33 55 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C3
     */
    public void testuni04C3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C3");
        assertNotNull(cs);
        assertEquals("uni04C3", cs.getName());
        String[] text =
                {
                        "103 -172 29 144 27 310 43 208 63 -34 27 hstemhm",
                        "106 81 -15 23 284 79 hintmask 11110101",
                        "558 93 rmoveto",
                        "0 172 -114 67 -120 24 -1 1 -1 0 -2 0 -6 1 -4 1 -6 1 73 27 34 88 21 57 10 28 26 29 12 0 13 0 14 -5 13 -7 rrcurveto",
                        "12 -7 13 -6 14 0 rrcurveto",
                        "21 23 18 24 23 -16 23 -53 hvcurveto",
                        "-85 0 -30 -52 -24 -58 -21 -51 -25 -63 -57 -32 -24 -13 -45 -2 -36 0 rrcurveto",
                        "193 vlineto", "hintmask 11101101",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-503 vlineto", "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 30 hvcurveto",
                        "267 vlineto",
                        "152 140 -46 -209 -169 -77 -57 -75 hvcurveto",
                        "-48 0 -31 14 -21 19 -18 17 -13 24 0 27 rrcurveto",
                        "hintmask 11110011", "-24 -152 23 hlineto",
                        "0 5 1 29 2 5 1 3 6 6 10 0 15 0 22 -26 82 0 rrcurveto",
                        "126 98 118 147 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C4
     */
    public void testuni04C4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C4");
        assertNotNull(cs);
        assertEquals("uni04C4", cs.getName());
        String[] text =
                {
                        "28 -234 34 201 27 167 49 119 70 -31 27 hstemhm",
                        "104 75 219 77 hintmask 11110110",
                        "251 225 rmoveto",
                        "9 2 rlineto",
                        "35 6 39 36 27 51 11 22 11 21 13 0 9 0 21 -8 19 0 rrcurveto",
                        "24 16 19 20 22 -13 17 -38 hvcurveto",
                        "-34 0 -31 -27 -33 -61 -45 -87 -36 -14 -58 0 rrcurveto",
                        "-18 116 hlineto",
                        "",
                        "hintmask 11101110",
                        "29 10 13 33 vhcurveto",
                        "8 hlineto",
                        "4 4 3 5 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -57 -2 -39 -36 -68 2 0 vhcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto",
                        "19 hlineto",
                        "34 9 -16 -28 hvcurveto",
                        "-289 vlineto",
                        "-28 -9 -13 -34 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 36 39 57 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-8 hlineto",
                        "-33 -10 13 28 hvcurveto",
                        "126 vlineto",
                        "95 124 -37 -182 -108 -46 -68 -73 hvcurveto",
                        "-66 0 -10 43 -6 33 -4 24 -17 12 -23 0 rrcurveto",
                        "-23 -15 -15 -29 -43 52 -59 106 120 82 108 124 hvcurveto",
                        "0 163 -120 51 -104 13 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C7
     */
    public void testuni04C7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C7");
        assertNotNull(cs);
        assertEquals("uni04C7", cs.getName());
        String[] text =
                {"212 -194 -21 22 29 165 27 296 39 255 27 hstem",
                        "106 81 30 23 274 80 vstem", "514 71 rmoveto",
                        "-169 -67 -66 -75 vhcurveto",
                        "-48 0 -32 14 -20 19 -18 17 -13 24 0 27 rrcurveto",
                        "-24 -152 23 hlineto",
                        "0 5 1 29 2 5 1 3 6 6 10 0 15 0 22 -26 82 0 rrcurveto",
                        "126 89 118 147 hvcurveto", "502 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "252 327 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C8
     */
    public void testuni04C8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C8");
        assertNotNull(cs);
        assertEquals("uni04C8", cs.getName());
        String[] text =
                {
                        "60 -197 34 162 29 184 34 156 29 hstem",
                        "104 74 205 75 vstem",
                        "383 74 rmoveto",
                        "-116 -31 -121 -80 vhcurveto",
                        "-65 0 -10 42 -6 34 -4 24 -17 11 -24 0 rrcurveto",
                        "-22 -16 -14 -29 -44 52 -58 107 142 49 121 150 hvcurveto",
                        "280 vlineto", "41 6 7 34 vhcurveto", "25 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -98 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "21 hlineto",
                        "36 5 -9 -39 hvcurveto", "-108 -205 109 vlineto",
                        "41 7 6 34 vhcurveto", "20 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -108 -3 -103 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "26 hlineto",
                        "35 6 -9 -38 hvcurveto", "-280 vlineto",
                        "0 -38 -5 -8 -36 -1 rrcurveto", "-26 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 103 2 108 -2 1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto", "-20 hlineto",
                        "-34 1 -7 6 0 40 rrcurveto", "137 205 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04C9
     */
    public void testuni04C9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04C9");
        assertNotNull(cs);
        assertEquals("uni04C9", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 hstem", "106 81 327 80 vstem",
                        "514 72 rmoveto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 vhcurveto",
                        "21 0 35 -1 28 0 rrcurveto",
                        "-55 -124 43 0 68 152 -21 0 -22 0 -4 0 rlineto",
                        "-40 -15 13 31 hvcurveto", "502 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "252 327 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04CA
     */
    public void testuni04CA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04CA");
        assertNotNull(cs);
        assertEquals("uni04CA", cs.getName());
        String[] text =
                {
                        "57 0 28 184 34 156 29 hstem",
                        "104 74 205 75 vstem",
                        "104 355 rmoveto",
                        "-280 vlineto",
                        "0 -38 -5 -8 -36 -1 rrcurveto",
                        "-26 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -22 1 -2 103 2 108 -2 1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto",
                        "-20 hlineto",
                        "-34 1 -7 6 0 40 rrcurveto",
                        "137 205 -138 vlineto",
                        "-39 -4 -7 -37 vhcurveto",
                        "-21 hlineto",
                        "-3 -2 -2 -4 hvcurveto",
                        "0 -21 2 -2 97 2 73 -1 -55 -124 44 0 67 152 -21 0 -22 0 -3 0 rlineto",
                        "-35 -5 6 40 hvcurveto", "280 vlineto",
                        "41 6 7 34 vhcurveto", "25 hlineto",
                        "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -98 2 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "21 hlineto",
                        "36 5 -9 -39 hvcurveto", "-108 -205 109 vlineto",
                        "41 7 6 34 vhcurveto", "20 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -108 -3 -103 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "26 hlineto",
                        "35 6 -9 -38 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04CB
     */
    public void testuni04CB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04CB");
        assertNotNull(cs);
        assertEquals("uni04CB", cs.getName());
        String[] text =
                {"133 0 26 215 58 321 26 hstem", "97 81 191 27 53 80 vstem",
                        "529 73 rmoveto", "504 vlineto", "37 6 5 34 vhcurveto",
                        "29 hlineto", "4 2 2 4 hvcurveto",
                        "0 21 -115 -2 -114 2 0 -22 rlineto",
                        "-3 1 -2 3 vhcurveto", "30 hlineto", "",
                        "36 4 -7 -35 hvcurveto", "-222 vlineto",
                        "-61 -54 -67 -2 -29 0 rrcurveto",
                        "-72 -42 27 82 hvcurveto", "170 vlineto",
                        "31 2 11 42 vhcurveto", "17 hlineto",
                        "4 2 1 4 hvcurveto",
                        "0 21 -108 -1 -108 1 0 -21 rlineto",
                        "-3 2 -2 5 vhcurveto", "17 hlineto",
                        "39 5 -7 -35 hvcurveto", "-166 vlineto",
                        "-91 39 -80 114 vhcurveto",
                        "58 0 61 8 80 81 rrcurveto", "-256 vlineto",
                        "-31 -3 -18 -33 vhcurveto", "-17 hlineto",
                        "-6 -14 -5 -15 hvcurveto", "-7 -146 27 0 rlineto",
                        "12 82 42 60 91 -1 rrcurveto", "72 -1 0 22 rlineto",
                        "3 -1 2 -4 vhcurveto", "-39 hlineto",
                        "-36 -4 13 34 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04CC
     */
    public void testuni04CC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04CC");
        assertNotNull(cs);
        assertEquals("uni04CC", cs.getName());
        String[] text =
                {"15 -1 29 110 36 228 29 hstem", "86 75 190 74 vstem",
                        "425 76 rmoveto", "278 vlineto", "41 7 7 34 vhcurveto",
                        "25 hlineto", "4 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -92 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "16 hlineto",
                        "36 5 -9 -39 hvcurveto", "-125 vlineto",
                        "-31 -36 -35 -19 -55 0 rrcurveto",
                        "-61 -8 44 68 hvcurveto", "74 vlineto",
                        "32 7 10 34 vhcurveto", "15 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -2 2 -102 -3 -85 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "8 hlineto",
                        "35 5 -9 -38 hvcurveto", "-65 vlineto",
                        "-78 22 -74 100 vhcurveto",
                        "53 0 54 14 36 51 rrcurveto", "-127 vlineto",
                        "-36 -5 -12 -32 vhcurveto", "-16 hlineto",
                        "-10 -11 -7 -14 hvcurveto", "-5 -135 22 0 rlineto",
                        "9 59 21 70 100 -1 rrcurveto",
                        "62 -1 2 2 0 21 rlineto", "4 -2 2 -4 vhcurveto",
                        "-16 hlineto", "-36 -5 9 39 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04D0
     */
    public void testuni04D0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D0");
        assertNotNull(cs);
        assertEquals("uni04D0", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 60 31 hstem",
                        "234 71 108 70 vstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "45 492 rmoveto",
                        "20 -11 10 -27 -23 -9 -16 -15 vhcurveto",
                        "0 -2 1 -1 0 -1 rrcurveto",
                        "-5 vlineto",
                        "-22 -25 -14 -30 -32 -23 17 20 vhcurveto",
                        "4 vlineto",
                        "0 1 1 1 0 2 rrcurveto",
                        "15 -11 16 -21 -27 -12 -9 -22 -52 58 -24 66 63 62 25 52 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D1
     */
    public void testuni04D1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D1");
        assertNotNull(cs);
        assertEquals("uni04D1", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 47 31 hstemhm",
                        "39 72 -61 73 -35 73 96 74 -40 74 53 25 hintmask 1011010011000000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111100011000000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "hintmask 0011001101000000",
                        "40 332 rmoveto",
                        "19 -15 13 -24 -18 -17 -14 -17 vhcurveto",
                        "0 -3 1 -2 0 -2 1 -3 0 -3 0 -3 rrcurveto",
                        "-22 -21 -20 -29 -30 -20 21 21 vhcurveto",
                        "0 3 1 3 0 3 1 3 0 2 0 3 rrcurveto",
                        "16 -12 14 -22 -23 -16 -15 -18 -54 55 -33 65 vhcurveto",
                        "64 59 33 55 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D2
     */
    public void testuni04D2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D2");
        assertNotNull(cs);
        assertEquals("uni04D2", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 74 91 hstem", "232 91 70 90 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-206 474 rmoveto", "223 callsubr",
                        "161 hmoveto", "81 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D3
     */
    public void testuni04D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D3");
        assertNotNull(cs);
        assertEquals("uni04D3", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 85 91 hstemhm",
                        "39 72 -61 73 -35 91 70 90 -48 74 53 25 hintmask 1011010011000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111100011000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr",
                        "hintmask 0011001001000000", "-203 327 rmoveto",
                        "56 callsubr", "hintmask 0011000101000000",
                        "161 hmoveto", "57 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D4
     */
    public void testuni04D4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D4");
        assertNotNull(cs);
        assertEquals("uni04D4", cs.getName());
        String[] text =
                {"364 -1 29 -26 39 225 39 24 34 245 39 -29 28 hstemhm",
                        "429 83 hintmask 01111010", "471 3 rmoveto",
                        "30 callsubr", "hintmask 10110110", "31 callsubr",
                        "-200 302 rmoveto", "32 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D5
     */
    public void testuni04D5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D5");
        assertNotNull(cs);
        assertEquals("uni04D5", cs.getName());
        String[] text =
                {
                        "186 -12 49 -49 42 188.331665039 34.6683349609 155 34 -30 30 hstemhm",
                        "39 72 -61 73 175 73 201 76 hintmask 0011000110000000",
                        "372 253 rmoveto", "60 callsubr", "-74 -38 rmoveto",
                        "61 callsubr", "hintmask 0110010110000000",
                        "62 callsubr", "-33 172 rmoveto", "63 callsubr",
                        "hintmask 1011001110000000", "64 callsubr",
                        "hintmask 0110101110000000", "65 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04D6
     */
    public void testuni04D6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D6");
        assertNotNull(cs);
        assertEquals("uni04D6", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 52 31 hstemhm",
                        "102 80 -33 71 108 70 -22 25 hintmask 0011101010000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011010000000", "-66 callsubr",
                        "hintmask 0011101010000000", "-65 callsubr",
                        "hintmask 1011011100100000", "-64 callsubr",
                        "hintmask 0111101100100000", "-63 callsubr",
                        "hintmask 0011001011000000", "180 169 rmoveto",
                        "20 -11 10 -27 -23 -9 -16 -15 vhcurveto",
                        "0 -2 1 -1 0 -1 rrcurveto", "-5 vlineto",
                        "-22 -25 -14 -30 -32 -23 17 20 vhcurveto", "4 vlineto",
                        "0 1 1 1 0 2 rrcurveto",
                        "15 -11 16 -21 -27 -12 -9 -22 -52 58 -24 66 vhcurveto",
                        "63 62 25 52 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D7
     */
    public void testuni04D7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D7");
        assertNotNull(cs);
        assertEquals("uni04D7", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 48 30 hstemhm",
                        "34 76 -7 72 96 74 -33 80 hintmask 11111001",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "hintmask 11110110",
                        "47 300 rmoveto",
                        "20 -15 12 -24 -18 -17 -14 -17 vhcurveto",
                        "0 -2 1 -2 0 -3 1 -3 0 -3 0 -3 rrcurveto",
                        "-21 -21 -21 -28 -31 -20 21 22 vhcurveto",
                        "0 2 1 3 0 3 1 3 0 3 0 3 rrcurveto",
                        "16 -12 13 -22 -23 -15 -14 -19 -54 54 -32 66 vhcurveto",
                        "63 59 32 55 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04D8
     */
    public void testuni04D8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04D8");
        assertNotNull(cs);
        assertEquals("uni04D8", cs.getName());
        String[] text =
                {"167 -12 34 194 44 364 34 hstem", "546 89 vstem",
                        "126 216 rmoveto", "133 callsubr", "-24 307 rmoveto",
                        "134 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04DA
     */
    public void testuni04DA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04DA");
        assertNotNull(cs);
        assertEquals("uni04DA", cs.getName());
        String[] text =
                {"167 -12 34 194 44 364 34 48 91 hstem",
                        "186 90 99 91 80 89 vstem", "126 216 rmoveto",
                        "133 callsubr", "-24 307 rmoveto", "134 callsubr",
                        "107 204 rmoveto", "264 callsubr", "189 1 rmoveto",
                        "259 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04DB
     */
    public void testuni04DB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04DB");
        assertNotNull(cs);
        assertEquals("uni04DB", cs.getName());
        String[] text =
                {"-65 -12 34 131 39 201 49 85 91 hstemhm",
                        "48 79 -39 91 70 90 -9 76 hintmask 11111001",
                        "62 336 rmoveto", "313 callsubr", "284 -200 rmoveto",
                        "314 callsubr", "hintmask 11110100", "-54 419 rmoveto",
                        "56 callsubr", "hintmask 11110010", "161 hmoveto",
                        "57 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04DC
     */
    public void testuni04DC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04DC");
        assertNotNull(cs);
        assertEquals("uni04DC", cs.getName());
        String[] text =
                {"354 -1 29 295 43 224 61 -33 27 60 91 hstemhm",
                        "302 91 -5 80 -5 91 hintmask 11101010",
                        "832 -1 rmoveto", "270 callsubr", "hintmask 11011010",
                        "271 callsubr", "hintmask 11101010", "272 callsubr",
                        "hintmask 11001100", "-464 750 rmoveto", "37 callsubr",
                        "hintmask 11001001", "161 hmoveto",
                        "-24 20 -21 25 25 21 21 24 25 -21 21 -25 vhcurveto",
                        "-25 -20 -21 -25 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04DD
     */
    public void testuni04DD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04DD");
        assertNotNull(cs);
        assertEquals("uni04DD", cs.getName());
        String[] text =
                {"160 1 27 182 34 127 67 -36 27 98 91 hstemhm",
                        "204 91 -2 75 -3 91 hintmask 11101010",
                        "368 210 rmoveto", "284 callsubr", "hintmask 11011010",
                        "285 callsubr", "hintmask 11101010", "286 callsubr",
                        "hintmask 11001100", "-164 500 rmoveto", "70 callsubr",
                        "hintmask 11001001", "161 hmoveto", "56 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04DE
     */
    public void testuni04DE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04DE");
        assertNotNull(cs);
        assertEquals("uni04DE", cs.getName());
        String[] text =
                {
                        "41 -12 37 311 37 251 34 52 91 hstemhm",
                        "140 91 70 91 -17 80 -50 92 hintmask 11111000",
                        "140 756 rmoveto",
                        "315 callsubr",
                        "hintmask 11111100",
                        "161 hmoveto",
                        "316 callsubr",
                        "-53 -731 rmoveto",
                        "-76 0 -32 34 -21 61 -11 32 -10 13 -28 0 -23 0 -11 -21 0 -26 0 -27 21 -27 27 -21 31 -24 49 -31 81 0 rrcurveto",
                        "hintmask 11111001", "118 134 53 151 hvcurveto",
                        "0 107 -86 41 -71 20 rrcurveto", "hintmask 11111010",
                        "273 callsubr", "hintmask 11111001",
                        "117 39 -109 -51 -108 -87 -43 -70 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04DF
     */
    public void testuni04DF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04DF");
        assertNotNull(cs);
        assertEquals("uni04DF", cs.getName());
        String[] text =
                {
                        "-99 -12 32 196 32 162 32 85 91 hstemhm",
                        "40 27 7 91 70 91 -40 66 -61 75 hintmask 1111110000000000",
                        "74 572 rmoveto", "222 callsubr",
                        "hintmask 1111111000000000", "161 hmoveto",
                        "-25 21 -20 24 26 20 20 25 25 -20 21 -26 vhcurveto",
                        "-24 -21 -21 -25 hvcurveto", "-46 -552 rmoveto",
                        "-51 0 -28 22 -5 34 -4 33 -23 4 -11 0 rrcurveto",
                        "-18 -12 -15 -14 -54 55 -42 91 hvcurveto",
                        "hintmask 1111110010000000", "145 38 80 56 hvcurveto",
                        "0 82 -68 29 -26 3 rrcurveto",
                        "hintmask 1111110100000000", "287 callsubr",
                        "hintmask 1111110010000000",
                        "50 28 -49 -46 -81 -69 -20 -33 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04E0
     */
    public void testuni04E0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E0");
        assertNotNull(cs);
        assertEquals("uni04E0", cs.getName());
        String[] text =
                {"107 -211 37 780 40 hstem", "64 26 385 89 vstem",
                        "167 646 rmoveto", "146 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E1
     */
    public void testuni04E1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E1");
        assertNotNull(cs);
        assertEquals("uni04E1", cs.getName());
        String[] text =
                {"-75 -229 29 591 39 hstem", "327 74 vstem", "107 430 rmoveto",
                        "159 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E2
     */
    public void testuni04E2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E2");
        assertNotNull(cs);
        assertEquals("uni04E2", cs.getName());
        String[] text =
                {"199 1 27 590 26 89 44 hstem", "106 81 327 80 vstem",
                        "467 733 rmoveto", "12 11 17 12 7 -4 8 -9 hvcurveto",
                        "-246 hlineto", "-11 -10 -18 -11 -7 3 -8 9 hvcurveto",
                        "372 -159 rmoveto", "268 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E3
     */
    public void testuni04E3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E3");
        assertNotNull(cs);
        assertEquals("uni04E3", cs.getName());
        String[] text =
                {"76 1 27 374 29 108 44 hstem", "108 75 206 74 vstem",
                        "409 539 rmoveto", "82 callsubr", "-20 -111 rmoveto",
                        "288 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E4
     */
    public void testuni04E4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E4");
        assertNotNull(cs);
        assertEquals("uni04E4", cs.getName());
        String[] text =
                {"199 1 27 590 26 63 91 hstem",
                        "106 81 21 91 98 91 26 80 vstem", "594 574 rmoveto",
                        "268 callsubr", "-386 681 rmoveto", "317 callsubr",
                        "189 1 rmoveto", "27 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E5
     */
    public void testuni04E5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E5");
        assertNotNull(cs);
        assertEquals("uni04E5", cs.getName());
        String[] text =
                {"76 1 27 374 29 96 91 hstemhm",
                        "108 75 -12 91 70 90 -33 74 hintmask 11101000",
                        "171 572 rmoveto", "56 callsubr", "hintmask 11100100",
                        "161 hmoveto", "57 callsubr", "-188 -144 rmoveto",
                        "-109 3 -3 -2 0 -22 rlineto", "-4 2 -1 4 vhcurveto",
                        "30 hlineto", "hintmask 11110010",
                        "36 4 -11 -42 hvcurveto", "-274 vlineto",
                        "0 -35 -3 -11 -37 -1 rrcurveto", "-31 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -22 1 -2 rlineto",
                        "0 68 2 43 31 50 -2 0 vhcurveto", "1 2 0 21 rlineto",
                        "4 -2 2 -4 -33 -4 13 24 vhcurveto",
                        "0 2 206 248 0 -238 rlineto",
                        "0 -35 -4 -13 -37 -1 rrcurveto", "-31 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -22 0 -2 rlineto",
                        "0 68 2 44 45 70 -2 0 vhcurveto", "1 2 0 21 rlineto",
                        "4 -2 2 -4 vhcurveto", "-30 hlineto",
                        "-35 1 -6 11 0 37 rrcurveto", "273 vlineto",
                        "42 4 10 37 vhcurveto", "30 hlineto",
                        "4 2 2 4 hvcurveto", "0 21 -1 2 rlineto",
                        "0 -70 -2 -45 -29 -44 2 0 vhcurveto",
                        "-2 -2 0 -22 rlineto",
                        "-4 2 -1 3 34 1 -20 -24 vhcurveto",
                        "-206 -248 0 240 rlineto", "41 4 11 37 vhcurveto",
                        "30 hlineto", "4 2 2 4 hvcurveto", "0 21 -2 2 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E6
     */
    public void testuni04E6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E6");
        assertNotNull(cs);
        assertEquals("uni04E6", cs.getName());
        String[] text =
                {"197 -12 34 602 34 48 91 hstem",
                        "37 91 79 91 98 91 83 92 vstem", "662 329 rmoveto",
                        "-50 callsubr", "-328 295 rmoveto", "-49 callsubr",
                        "-127 127 rmoveto", "318 callsubr", "189 1 rmoveto",
                        "28 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E7
     */
    public void testuni04E7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E7");
        assertNotNull(cs);
        assertEquals("uni04E7", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 86 91 hstemhm",
                        "34 79 6 90 70 91 -3 79 hintmask 11111000",
                        "119 574 rmoveto",
                        "-25 20 -21 25 25 20 21 25 25 -20 20 -25 vhcurveto",
                        "-25 -20 -20 -25 hvcurveto", "hintmask 11111100",
                        "160 hmoveto", "319 callsubr", "-49 -165 rmoveto",
                        "hintmask 11111010", "-10 callsubr",
                        "-196 -204 rmoveto", "-9 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04E8
     */
    public void testuni04E8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E8");
        assertNotNull(cs);
        assertEquals("uni04E8", cs.getName());
        String[] text =
                {"197 -12 34 244 57 -11 58 254 34 hstemhm",
                        "37 91 442 92 hintmask 10111100", "570 316 rmoveto",
                        "301 callsubr", "hintmask 11011100", "302 callsubr",
                        "92 13 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "303 callsubr", "hintmask 10111100", "304 callsubr",
                        "hintmask 11011100", "305 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04E9
     */
    public void testuni04E9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04E9");
        assertNotNull(cs);
        assertEquals("uni04E9", cs.getName());
        String[] text =
                {"-22 -12 35 156 50 -22 42 160 33 hstemhm",
                        "34 79 253 80 hintmask 10111100", "366 216 rmoveto",
                        "181 callsubr", "hintmask 11011100", "182 callsubr",
                        "-3 26 rmoveto", "183 callsubr", "hintmask 10111100",
                        "184 callsubr", "hintmask 11011100", "185 callsubr",
                        "-329 -37 rmoveto", "-9 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04EA
     */
    public void testuni04EA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04EA");
        assertNotNull(cs);
        assertEquals("uni04EA", cs.getName());
        String[] text =
                {"197 -12 34 244 57 -11 58 254 34 50 90 hstemhm",
                        "37 91 76 90 99 91 86 92 hintmask 1011111110000000",
                        "570 316 rmoveto", "301 callsubr",
                        "hintmask 1101111110000000", "302 callsubr",
                        "92 13 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "303 callsubr", "hintmask 1011111110000000",
                        "304 callsubr", "hintmask 1101111110000000",
                        "305 callsubr", "-130 129 rmoveto", "209 callsubr",
                        "189 hmoveto", "318 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04EB
     */
    public void testuni04EB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04EB");
        assertNotNull(cs);
        assertEquals("uni04EB", cs.getName());
        String[] text =
                {
                        "-22 -12 35 156 50 -22 42 160 33 85 91 hstemhm",
                        "34 79 8 91 70 91 -7 80 hintmask 1011111010000000",
                        "366 216 rmoveto",
                        "181 callsubr",
                        "hintmask 1101111010000000",
                        "182 callsubr",
                        "-3 26 rmoveto",
                        "183 callsubr",
                        "hintmask 1011111000000000",
                        "184 callsubr",
                        "hintmask 1101111000000000",
                        "185 callsubr",
                        "-242 330 rmoveto",
                        "253 callsubr",
                        "hintmask 1001111100000000",
                        "161 hmoveto",
                        "56 callsubr",
                        "-248 -367 rmoveto",
                        "-102 71 -115 134 vhcurveto",
                        "hintmask 1001111010000000",
                        "142 65 126 100 104 -57 124 -148 -133 -74 -100 -137 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04EC
     */
    public void testuni04EC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04EC");
        assertNotNull(cs);
        assertEquals("uni04EC", cs.getName());
        String[] text =
                {"103 -12 33 252 56 -18 49 261 37 48 91 hstemhm",
                        "140 91 99 90 52 89 hintmask 11011111",
                        "472 307 rmoveto", "279 callsubr", "hintmask 10111111",
                        "280 callsubr", "hintmask 11011111", "281 callsubr",
                        "-332 444 rmoveto", "317 callsubr", "190 1 rmoveto",
                        "209 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04ED
     */
    public void testuni04ED() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04ED");
        assertNotNull(cs);
        assertEquals("uni04ED", cs.getName());
        String[] text =
                {"-67 -12 31 161 49 -22 41 163 31 85 91 hstemhm",
                        "40 27 20 91 70 91 -25 77 hintmask 1101111010000000",
                        "313 236 rmoveto", "-12 -5 -14 -2 -16 0 rrcurveto",
                        "hintmask 1011111010000000", "297 callsubr",
                        "hintmask 1101111010000000", "298 callsubr",
                        "-226 336 rmoveto", "72 callsubr",
                        "hintmask 1001111100000000", "161 hmoveto",
                        "252 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04EE
     */
    public void testuni04EE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04EE");
        assertNotNull(cs);
        assertEquals("uni04EE", cs.getName());
        String[] text =
                {"79 -22 62 578 27 88 44 hstem", "424 733 rmoveto",
                        "91 callsubr", "15 -693 rmoveto", "269 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04EF
     */
    public void testuni04EF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04EF");
        assertNotNull(cs);
        assertEquals("uni04EF", cs.getName());
        String[] text =
                {"8 -230 55 577 27 110 44 hstem", "386 539 rmoveto",
                        "171 callsubr", "67 -129 rmoveto", "5 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F0
     */
    public void testuni04F0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F0");
        assertNotNull(cs);
        assertEquals("uni04F0", cs.getName());
        String[] text =
                {"79 -22 62 578 27 62 91 hstem", "175 91 98 91 vstem",
                        "195 40 rmoveto", "269 callsubr", "-20 712 rmoveto",
                        "320 callsubr", "189 1 rmoveto", "27 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F1
     */
    public void testuni04F1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F1");
        assertNotNull(cs);
        assertEquals("uni04F1", cs.getName());
        String[] text =
                {
                        "8 -230 55 577 27 98 91 hstem",
                        "153 91 70 91 vstem",
                        "153 572 rmoveto",
                        "72 callsubr",
                        "161 hmoveto",
                        "-25 21 -20 24 26 20 20 25 25 -20 21 -26 -24 -21 -21 -25 vhcurveto",
                        "-106 -162 rmoveto", "5 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F2
     */
    public void testuni04F2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F2");
        assertNotNull(cs);
        assertEquals("uni04F2", cs.getName());
        String[] text =
                {
                        "79 -22 62 578 27 69 -21 hstem",
                        "195 40 rmoveto",
                        "269 callsubr",
                        "130 789 rmoveto",
                        "-6 4 -8 5 -9 0 -15 0 -8 -4 -4 -8 rrcurveto",
                        "-57 -115 rlineto",
                        "-1 -1 0 -2 0 -1 0 -4 2 -4 4 -3 2 -2 3 -1 2 0 3 0 3 0 2 2 rrcurveto",
                        "95 86 rlineto",
                        "4 4 3 7 0 8 0 11 -6 11 -9 7 rrcurveto",
                        "133 -6 rmoveto",
                        "-11 9 -9 1 -8 0 -11 0 -7 -4 -5 -8 rrcurveto",
                        "-62 -114 rlineto",
                        "-1 -1 0 -2 0 -2 0 -8 9 -6 5 0 2 0 3 1 2 1 rrcurveto",
                        "98 84 rlineto",
                        "5 5 3 7 0 8 0 11 -5 11 -8 7 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni04F3
     */
    public void testuni04F3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F3");
        assertNotNull(cs);
        assertEquals("uni04F3", cs.getName());
        String[] text =
                {"8 -230 55 577 27 228 -20 hstem", "", "313 650 rmoveto",
                        "126 callsubr", "135 -7 rmoveto",
                        "-7 5 -8 3 -9 0 -12 0 -7 -3 -5 -8 rrcurveto",
                        "-78 -139 rlineto",
                        "-1 -1 0 -2 0 -1 0 -8 9 -6 5 0 2 0 2 1 2 2 rrcurveto",
                        "114 110 rlineto",
                        "6 6 1 7 0 6 0 10 -5 11 -9 7 rrcurveto",
                        "-240 -233 rmoveto", "5 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F4
     */
    public void testuni04F4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F4");
        assertNotNull(cs);
        assertEquals("uni04F4", cs.getName());
        String[] text =
                {"132 1 27 222 58 310 27 62 90 hstemhm",
                        "97 81 14 91 98 91 -23 80 hintmask 11111101",
                        "97 573 rmoveto", "274 callsubr", "95 179 rmoveto",
                        "39 callsubr", "hintmask 11111110", "189 hmoveto",
                        "37 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F5
     */
    public void testuni04F5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F5");
        assertNotNull(cs);
        assertEquals("uni04F5", cs.getName());
        String[] text =
                {"9 1 27 118 35 221 29 96 91 hstemhm",
                        "71 75 -12 91 69 91 -50 75 hintmask 11110100",
                        "134 572 rmoveto", "56 callsubr", "hintmask 11110010",
                        "160 hmoveto", "222 callsubr", "hintmask 11111001",
                        "41 -218 rmoveto", "-129 vlineto",
                        "-32 -32 -39 -12 -49 0 rrcurveto",
                        "-62 -7 34 78 hvcurveto", "67 vlineto",
                        "32 6 10 34 vhcurveto", "15 hlineto",
                        "4 2 2 4 hvcurveto",
                        "0 21 -1 2 -102 -3 -86 3 -1 -2 0 -22 rlineto",
                        "-4 2 -1 3 vhcurveto", "8 hlineto",
                        "35 6 -9 -38 hvcurveto", "-58 vlineto",
                        "-106 35 -45 98 vhcurveto",
                        "60 0 32 14 39 29 rrcurveto", "-113 vlineto",
                        "hintmask 11110010", "-39 -4 -9 -37 vhcurveto",
                        "-16 hlineto", "-4 -2 -2 -4 hvcurveto",
                        "0 -21 2 -2 rlineto", "0 62 2 40 38 56 -2 0 vhcurveto",
                        "2 2 0 22 rlineto", "3 -2 2 -3 vhcurveto",
                        "-17 hlineto", "hintmask 11110001",
                        "-36 -4 10 38 hvcurveto", "278 vlineto",
                        "41 7 7 33 vhcurveto", "26 hlineto",
                        "3 2 2 3 hvcurveto",
                        "0 22 -1 2 -113 -2 -92 2 -2 -2 0 -22 rlineto",
                        "-4 2 -1 4 vhcurveto", "hintmask 11110010",
                        "15 hlineto", "", "36 5 -9 -39 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni04F6
     */
    public void testuni04F6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F6");
        assertNotNull(cs);
        assertEquals("uni04F6", cs.getName());
        String[] text =
                {"-3 0 29 577 40 -27 27 hstemhm",
                        "105 81 51 28 193 27 hintmask 11011100", "93 hmoveto",
                        "98 0 37 -57 9 -84 rrcurveto", "28 0 -6 145 rlineto",
                        "-1 15 -13 5 -7 0 rrcurveto", "-17 hlineto",
                        "-33 -2 18 31 hvcurveto", "501 vlineto",
                        "26 14 6 22 vhcurveto", "127 hlineto",
                        "66 0 28 -53 15 -72 rrcurveto", "27 4 rlineto",
                        "hintmask 10111100", "-20 161 rlineto",
                        "hintmask 11011100", "-242 0 rlineto",
                        "hintmask 10111100", "-78 hlineto",
                        "-13 -114 1 0 hvcurveto", "-2 -1 0 -20 rlineto",
                        "-4 3 -3 4 vhcurveto", "30 hlineto",
                        "43 9 -10 -35 hvcurveto", "-501 vlineto",
                        "-31 -15 -13 -40 vhcurveto", "-26 hlineto",
                        "-4 -4 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F7
     */
    public void testuni04F7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F7");
        assertNotNull(cs);
        assertEquals("uni04F7", cs.getName());
        String[] text =
                {"-82 0 23 -23 28 358 44 -28 29 hstemhm",
                        "104 74 hintmask 10101000", "104 hmoveto",
                        "98 1 21 -65 13 -64 rrcurveto", "20 0 -4 131 rlineto",
                        "-1 12 -13 8 -7 0 rrcurveto", "-17 hlineto",
                        "-31 -5 13 36 hvcurveto", "314 112 vlineto",
                        "58 0 14 -53 12 -58 rrcurveto",
                        "22 0 -11 155 -206 0 -38 -1 rlineto",
                        "hintmask 01011000", "-112 2 -2 -2 0 -22 rlineto",
                        "-3 2 -2 3 vhcurveto", "31 hlineto",
                        "36 5 -10 -38 hvcurveto", "-282 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F8
     */
    public void testuni04F8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F8");
        assertNotNull(cs);
        assertEquals("uni04F8", cs.getName());
        String[] text =
                {
                        "285 -1 30 -27 27 304 40 245 27 61 91 hstemhm",
                        "106 81 68 91 87 89 -78 91 63 81 hintmask 1011111101000000",
                        "187 333 rmoveto", "275 callsubr", "-81 495 rmoveto",
                        "276 callsubr", "573 1 rmoveto", "277 callsubr",
                        "hintmask 0111111001000000", "278 callsubr",
                        "-424 678 rmoveto", "320 callsubr",
                        "hintmask 0011111011000000", "189 1 rmoveto",
                        "-25 21 -21 25 25 20 21 25 24 -20 21 -25 vhcurveto",
                        "-25 -21 -21 -24 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni04F9
     */
    public void testuni04F9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni04F9");
        assertNotNull(cs);
        assertEquals("uni04F9", cs.getName());
        String[] text =
                {
                        "180 0 31 193 32 145 27 99 91 hstemhm",
                        "106 75 56 91 13 75 -19 91 19 75 hintmask 1111110010000000",
                        "237 572 rmoveto", "56 callsubr",
                        "hintmask 1111110110000000", "160 hmoveto",
                        "222 callsubr", "-291 -500 rmoveto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 36 vhcurveto", "101 -1 rlineto",
                        "hintmask 1111111010000000",
                        "111 62 52 84 94 -82 26 -96 hvcurveto",
                        "-57 101 hlineto", "29 10 15 33 vhcurveto",
                        "19 hlineto", "4 4 3 6 hvcurveto", "0 18 -2 2 rlineto",
                        "0 -68 -2 -39 -36 -68 2 0 vhcurveto",
                        "-2 -2 0 -18 rlineto", "-6 3 -3 5 vhcurveto",
                        "19 hlineto", "34 9 -15 -29 hvcurveto",
                        "235 -231 rmoveto", "295 callsubr", "166 232 rmoveto",
                        "296 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni05BA
     */
    public void testuni05BA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni05BA");
        assertNotNull(cs);
        assertEquals("uni05BA", cs.getName());
        String[] text =
                {"-501 595 70 hstem", "41 69 vstem", "41 630 rmoveto",
                        "322 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni05C6
     */
    public void testuni05C6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni05C6");
        assertNotNull(cs);
        assertEquals("uni05C6", cs.getName());
        String[] text =
                {
                        "-175 0 100 hstem",
                        "66 27 vstem",
                        "66 272 rmoveto",
                        "0 -90 -30 -67 0 -52 0 -28 1 -21 4 -14 rrcurveto",
                        "253 0 -32 100 -170 0 rlineto",
                        "5 28 2 24 2 29 3 56 -11 76 0 56 0 25 20 13 27 2 71 4 44 29 0 40 0 72 -44 0 0 0 -6 -33 -35 -2 -29 -1 rrcurveto",
                        "-46 -2 -47 -8 0 -60 0 -57 18 -61 0 -58 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni05F3
     */
    public void testuni05F3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni05F3");
        assertNotNull(cs);
        assertEquals("uni05F3", cs.getName());
        String[] text =
                {"-282 337 225 hstem", "50 134 vstem", "141 562 rmoveto",
                        "336 callsubr", "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : uni05F4
     */
    public void testuni05F4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni05F4");
        assertNotNull(cs);
        assertEquals("uni05F4", cs.getName());
        String[] text =
                {
                        "-116 337 225 hstem",
                        "50 302 vstem",
                        "141 562 rmoveto",
                        "336 callsubr",
                        "168 hmoveto",
                        "-31 0 -26 -30 -11 -56 -14 -65 -9 -35 0 -18 0 -17 12 -4 5 0 8 0 10 14 44 68 31 49 24 38 0 24 0 26 -31 6 -12 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E00
     */
    public void testuni1E00() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E00");
        assertNotNull(cs);
        assertEquals("uni1E00", cs.getName());
        String[] text =
                {
                        "194 -215 27 112 27 50 27 216 39 375 -20 hstem",
                        "250 32 107 32 vstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-188 -415 rmoveto",
                        "-47 39 -36 46 48 38 38 45 46 -40 37 -46 -47 -38 -38 -45 vhcurveto",
                        "85 56 rmoveto",
                        "30 24 -26 -30 -29 -22 -27 -32 -31 -22 27 29 29 23 27 30 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E01
     */
    public void testuni1E01() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E01");
        assertNotNull(cs);
        assertEquals("uni1E01", cs.getName());
        String[] text =
                {
                        "-50 -216 27 112 27 38 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 15 32 107 32 -18 74 53 25 hintmask 1110101101100000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 1101110101100000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "-153 -378 rmoveto",
                        "-47 39 -36 46 vhcurveto",
                        "hintmask 1100100110100000",
                        "48 38 38 45 46 -40 37 -46 -47 -38 -38 -45 hvcurveto",
                        "86 56 rmoveto",
                        "29 24 -26 -30 -29 -22 -27 -31 -32 -22 27 29 29 23 27 31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E02
     */
    public void testuni1E02() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E02");
        assertNotNull(cs);
        assertEquals("uni1E02", cs.getName());
        String[] text =
                {
                        "91 -1 34 -34 29 310 35 238 35 -28 27 48 96 hstemhm",
                        "106 81 48 96 84 77 -30 89 hintmask 0110011101000000",
                        "17 20 rmoveto",
                        "-80 callsubr",
                        "hintmask 1011011101000000",
                        "-79 callsubr",
                        "hintmask 0011011110000000",
                        "-78 callsubr",
                        "hintmask 0010111101000000",
                        "-77 callsubr",
                        "hintmask 0011011101000000",
                        "-76 callsubr",
                        "hintmask 0110111101000000",
                        "-75 callsubr",
                        "170 318 rmoveto",
                        "-74 callsubr",
                        "hintmask 1010011101000000",
                        "-73 callsubr",
                        "",
                        "503 vmoveto",
                        "hintmask 0011011110000000",
                        "-72 callsubr",
                        "48 368 rmoveto",
                        "-26 21 -22 27 26 22 22 26 27 -22 21 -26 -27 -21 -21 -27 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E03
     */
    public void testuni1E03() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E03");
        assertNotNull(cs);
        assertEquals("uni1E03", cs.getName());
        String[] text =
                {"-23 -11 34 377 43 80 96 79 -20 hstem",
                        "74 75 68 95 52 77 vstem", "149 698 rmoveto",
                        "-30 callsubr", "-333 vmoveto", "-29 callsubr",
                        "68 516 rmoveto", "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E04
     */
    public void testuni1E04() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E04");
        assertNotNull(cs);
        assertEquals("uni1E04", cs.getName());
        String[] text =
                {"91 -163 96 66 34 -34 29 310 35 238 35 -28 27 hstemhm",
                        "106 81 35 96 97 77 -30 89 hintmask 1011001101000000",
                        "17 20 rmoveto", "-80 callsubr",
                        "hintmask 1101101101000000", "-79 callsubr",
                        "hintmask 1001101110000000", "-78 callsubr",
                        "hintmask 1001011101000000", "-77 callsubr",
                        "hintmask 1001101101000000", "-76 callsubr",
                        "hintmask 1011011101000000", "-75 callsubr",
                        "170 318 rmoveto", "-74 callsubr",
                        "hintmask 1101001101000000", "-73 callsubr",
                        "503 vmoveto", "hintmask 1001101110000000",
                        "-72 callsubr", "35 -488 rmoveto", "93 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E05
     */
    public void testuni1E05() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E05");
        assertNotNull(cs);
        assertEquals("uni1E05", cs.getName());
        String[] text =
                {"-23 -163 96 56 34 377 43 255 -20 hstem",
                        "74 75 28 96 91 77 vstem", "149 698 rmoveto",
                        "-30 callsubr", "-333 vmoveto", "-29 callsubr",
                        "28 -170 rmoveto", "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E06
     */
    public void testuni1E06() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E06");
        assertNotNull(cs);
        assertEquals("uni1E06", cs.getName());
        String[] text =
                {"91 -106 44 61 34 -34 29 310 35 238 35 -28 27 hstemhm",
                        "106 81 228 77 -30 89 hintmask 1011001010000000",
                        "17 20 rmoveto", "-80 callsubr",
                        "hintmask 1101101010000000", "-79 callsubr",
                        "hintmask 1001101100000000", "-78 callsubr",
                        "hintmask 1001011010000000", "-77 callsubr",
                        "hintmask 1001101010000000", "-76 callsubr", "",
                        "hintmask 1011011010000000", "-75 callsubr",
                        "170 318 rmoveto", "-74 callsubr",
                        "hintmask 1101001010000000", "-73 callsubr",
                        "503 vmoveto", "hintmask 1001101100000000",
                        "-72 callsubr", "206 -479 rmoveto", "337 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E07
     */
    public void testuni1E07() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E07");
        assertNotNull(cs);
        assertEquals("uni1E07", cs.getName());
        String[] text =
                {"-23 -109 44 54 34 377 43 255 -20 hstem",
                        "74 75 215 77 vstem", "149 698 rmoveto",
                        "-30 callsubr", "-333 vmoveto", "-29 callsubr",
                        "214 -164 rmoveto", "171 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E08
     */
    public void testuni1E08() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E08");
        assertNotNull(cs);
        assertEquals("uni1E08", cs.getName());
        String[] text =
                {"143 -186 26 76 31 41 41 592 37 60 -21 hstem",
                        "37 87 276 53 vstem", "358 -84 rmoveto", "33 callsubr",
                        "50 903 rmoveto", "117 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E09
     */
    public void testuni1E09() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E09");
        assertNotNull(cs);
        assertEquals("uni1E09", cs.getName());
        String[] text =
                {"-98 -179 26 76 31 34 44 376 34 hstem", "37 77 137 54 vstem",
                        "210 -77 rmoveto", "66 callsubr", "75 747 rmoveto",
                        "53 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E0A
     */
    public void testuni1E0A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E0A");
        assertNotNull(cs);
        assertEquals("uni1E0A", cs.getName());
        String[] text =
                {"196 -1 29 -29 34 580 33 -28 28 52 95 hstemhm",
                        "106 81 62 95 218 92 hintmask 01101111",
                        "187 72 rmoveto", "-70 callsubr", "-170 -53 rmoveto",
                        "-69 callsubr", "hintmask 10011111", "-68 callsubr",
                        "232 727 rmoveto", "338 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E0B
     */
    public void testuni1E0B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E0B");
        assertNotNull(cs);
        assertEquals("uni1E0B", cs.getName());
        String[] text =
                {"-7 -12 42 -3 28 352 35 81 96 79 -20 hstemhm",
                        "34 78 21 96 105 75 hintmask 10111111",
                        "336 57 rmoveto", "-27 callsubr", "hintmask 01111111",
                        "-26 callsubr", "hintmask 10111111", "-25 callsubr",
                        "-2 32 rmoveto", "-24 callsubr", "-201 223 rmoveto",
                        "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E0C
     */
    public void testuni1E0C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E0C");
        assertNotNull(cs);
        assertEquals("uni1E0C", cs.getName());
        String[] text =
                {"196 -163 96 66 29 -29 34 580 33 -28 28 hstemhm",
                        "106 81 55 95 225 92 hintmask 10110111",
                        "187 72 rmoveto", "-70 callsubr", "-170 -53 rmoveto",
                        "-69 callsubr", "hintmask 11001111", "-68 callsubr",
                        "225 -134 rmoveto", "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E0D
     */
    public void testuni1E0D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E0D");
        assertNotNull(cs);
        assertEquals("uni1E0D", cs.getName());
        String[] text =
                {"-7 -163 96 55 42 -3 28 352 35 256 -20 hstemhm",
                        "34 78 76 95 51 75 hintmask 11011111",
                        "336 57 rmoveto", "-27 callsubr", "hintmask 10111111",
                        "-26 callsubr", "hintmask 11011111", "-25 callsubr",
                        "-2 32 rmoveto", "-24 callsubr", "-146 -463 rmoveto",
                        "339 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E0E
     */
    public void testuni1E0E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E0E");
        assertNotNull(cs);
        assertEquals("uni1E0E", cs.getName());
        String[] text =
                {"196 -105 44 60 29 -29 34 580 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 10110110", "187 72 rmoveto",
                        "-70 callsubr", "-170 -53 rmoveto", "-69 callsubr",
                        "hintmask 11001110", "-68 callsubr",
                        "383 -124 rmoveto", "13 10 18 11 7 -4 8 -9 hvcurveto",
                        "-245 hlineto", "-12 -10 -18 -11 -7 3 -8 9 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E0F
     */
    public void testuni1E0F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E0F");
        assertNotNull(cs);
        assertEquals("uni1E0F", cs.getName());
        String[] text =
                {"-7 -109 44 53 42 -3 28 352 35 256 -20 hstemhm",
                        "34 78 222 75 hintmask 11011110", "336 57 rmoveto",
                        "-27 callsubr", "hintmask 10111110", "-26 callsubr",
                        "hintmask 11011110", "-25 callsubr", "-2 32 rmoveto",
                        "-24 callsubr", "17 -457 rmoveto", "337 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E10
     */
    public void testuni1E10() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E10");
        assertNotNull(cs);
        assertEquals("uni1E10", cs.getName());
        String[] text =
                {"196 -182 26 76 31 48 29 -29 34 580 33 -28 28 hstemhm",
                        "106 81 30 53 292 92 hintmask 1101101110000000",
                        "187 72 rmoveto", "-70 callsubr", "-12 -152 rmoveto",
                        "23 19 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-20 0 -11 4 -26 9 rrcurveto", "-11 -22 rlineto",
                        "25 -11 17 -6 33 0 rrcurveto",
                        "61 45 29 42 39 -31 23 -40 hvcurveto",
                        "-9 0 -9 -1 -8 -2 rrcurveto", "22 52 rlineto",
                        "30 0 40 -1 62 0 rrcurveto",
                        "141 186 63 246 186 -153 152 -192 hvcurveto",
                        "-34 0 -63 0 -67 -1 rrcurveto",
                        "hintmask 1110011110000000", "-68 callsubr",
                        "hintmask 1101101110000000",
                        "0 -20 128 2 16 0 -37 -82 6 -6 rlineto",
                        "16 5 10 2 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E11
     */
    public void testuni1E11() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E11");
        assertNotNull(cs);
        assertEquals("uni1E11", cs.getName());
        String[] text =
                {"-7 -177 25 76 32 32 42 -3 28 352 35 256 -20 hstemhm",
                        "34 78 151 53 18 75 hintmask 1110111110000000",
                        "334 89 rmoveto", "-24 callsubr", "-112 -424 rmoveto",
                        "23 18 -14 -21 -27 -30 -14 -30 hvcurveto",
                        "-19 0 -11 4 -27 10 rrcurveto", "-11 -22 rlineto",
                        "26 -11 17 -6 32 0 rrcurveto",
                        "61 45 28 43 38 -30 24 -40 hvcurveto",
                        "-10 0 -8 -1 -8 -2 rrcurveto", "15 38 rlineto",
                        "38 9 32 25 31 32 rrcurveto", "-3 -69 24 0 rlineto",
                        "hintmask 1101111110000000", "-26 callsubr",
                        "hintmask 1110111110000000",
                        "0 -120 62 -90 104 -5 rrcurveto",
                        "-30 -64 7 -7 rlineto", "16 6 10 1 19 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E12
     */
    public void testuni1E12() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E12");
        assertNotNull(cs);
        assertEquals("uni1E12", cs.getName());
        String[] text =
                {"196 -1 29 -29 34 580 33 -28 28 hstemhm",
                        "106 81 375 92 hintmask 01101100", "187 72 rmoveto",
                        "-70 callsubr", "-170 -53 rmoveto", "-69 callsubr",
                        "hintmask 10011100", "-68 callsubr", "275 -76 rmoveto",
                        "340 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E13
     */
    public void testuni1E13() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E13");
        assertNotNull(cs);
        assertEquals("uni1E13", cs.getName());
        String[] text =
                {"-7 -12 42 -3 28 352 35 256 -20 hstemhm",
                        "34 78 222 75 hintmask 10111100", "336 57 rmoveto",
                        "-27 callsubr", "hintmask 01111100", "-26 callsubr",
                        "hintmask 10111100", "-25 callsubr", "-2 32 rmoveto",
                        "-24 callsubr", "-93 -405 rmoveto", "119 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E14
     */
    public void testuni1E14() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E14");
        assertNotNull(cs);
        assertEquals("uni1E14", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 87 44 hstemhm",
                        "102 80 194 25 hintmask 0011001110000000",
                        "21 832 rmoveto", "-59 -41 119 -55 rlineto",
                        "17 -7 9 -3 7 0 8 0 3 4 0 9 0 6 -3 5 -8 7 rrcurveto",
                        "hintmask 0011101110000000", "239 -151 rmoveto",
                        "-67 callsubr", "hintmask 0011011110000000",
                        "-66 callsubr", "hintmask 0011101110000000",
                        "-65 callsubr", "hintmask 1011011110000000",
                        "-64 callsubr", "hintmask 0111101110000000",
                        "-63 callsubr", "202 127 rmoveto",
                        "13 10 17 12 7 -4 8 -9 hvcurveto", "-245 hlineto",
                        "-12 -10 -18 -11 -7 4 -8 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E15
     */
    public void testuni1E15() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E15");
        assertNotNull(cs);
        assertEquals("uni1E15", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 97 44 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "50 262 rmoveto", "82 callsubr",
                        "109 226 rmoveto",
                        "-3 2 -5 1 -4 0 -27 0 -19 -16 -6 -6 rrcurveto",
                        "-2 -9 92 -98 rlineto",
                        "13 -13 5 -5 5 0 7 0 5 5 0 5 0 6 -1 7 -4 8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E16
     */
    public void testuni1E16() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E16");
        assertNotNull(cs);
        assertEquals("uni1E16", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 87 44 hstemhm",
                        "102 80 194 25 hintmask 0011001110000000",
                        "535 833 rmoveto",
                        "-96 -77 rlineto",
                        "-9 -7 -2 -5 0 -6 0 -9 4 -4 7 0 7 0 10 3 16 7 rrcurveto",
                        "111 51 rlineto", "hintmask 0011101110000000",
                        "-230 -180 rmoveto", "-67 callsubr",
                        "hintmask 0011011110000000", "-66 callsubr",
                        "hintmask 0011101110000000", "-65 callsubr",
                        "hintmask 1011011110000000", "-64 callsubr",
                        "hintmask 0111101110000000", "-63 callsubr",
                        "146 127 rmoveto", "115 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E17
     */
    public void testuni1E17() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E17");
        assertNotNull(cs);
        assertEquals("uni1E17", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 97 44 hstem",
                        "34 76 202 80 vstem",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "",
                        "50 262 rmoveto",
                        "82 callsubr",
                        "161 219 rmoveto",
                        "-64 -112 rlineto",
                        "-5 -9 0 -7 0 -5 0 -6 6 -5 6 0 5 0 5 5 13 13 rrcurveto",
                        "92 98 -2 9 rlineto",
                        "-2 2 -2 1 -2 2 -6 7 -10 10 -23 0 -4 0 -4 -1 -3 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E18
     */
    public void testuni1E18() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E18");
        assertNotNull(cs);
        assertEquals("uni1E18", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011", "353 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-64 callsubr",
                        "hintmask 01111011", "-63 callsubr", "82 -663 rmoveto",
                        "200 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E19
     */
    public void testuni1E19() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E19");
        assertNotNull(cs);
        assertEquals("uni1E19", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 hstem", "34 76 202 80 vstem",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "-50 -334 rmoveto", "341 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E1A
     */
    public void testuni1E1A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E1A");
        assertNotNull(cs);
        assertEquals("uni1E1A", cs.getName());
        String[] text =
                {
                        "68 -164 44 4 46 69 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 1100111011000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 1100110111000000", "-66 callsubr",
                        "hintmask 1100111011000000", "-65 callsubr",
                        "hintmask 1110110111000000", "-64 callsubr",
                        "hintmask 1101111011000000", "-63 callsubr",
                        "118 -726 rmoveto", "205 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E1B
     */
    public void testuni1E1B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E1B");
        assertNotNull(cs);
        assertEquals("uni1E1B", cs.getName());
        String[] text =
                {
                        "-73 -163 44 5 46 56 49 201 39 131 34 hstem",
                        "34 76 202 80 vstem",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "-10 -396 rmoveto",
                        "-19 0 -17 11 -17 12 -19 13 -22 15 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 18 0 18 -11 19 -12 21 -13 20 -13 22 0 47 0 28 31 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E1C
     */
    public void testuni1E1C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E1C");
        assertNotNull(cs);
        assertEquals("uni1E1C", cs.getName());
        String[] text =
                {
                        "68 -182 26 76 31 48 29 -28 39 288 34 82 -20 183 40 -28 28 46 52 hstemhm",
                        "102 80 126 53 15 25 hintmask 1101111011110000",
                        "267 -80 rmoveto", "165 callsubr",
                        "hintmask 1100110111110000", "-66 callsubr",
                        "hintmask 1100111011110000", "-65 callsubr",
                        "hintmask 1110110111110000", "-64 callsubr",
                        "hintmask 1101111011110000", "166 callsubr",
                        "168 885 rmoveto", "-27 hlineto",
                        "-7 -39 -51 -22 -49 0 -53 0 -47 22 -9 39 rrcurveto",
                        "-27 hlineto",
                        "5 -70 57 -43 74 0 65 0 63 42 6 71 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E1D
     */
    public void testuni1E1D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E1D");
        assertNotNull(cs);
        assertEquals("uni1E1D", cs.getName());
        String[] text =
                {
                        "-73 -187 26 76 31 42 49 201 39 131 34 58 58 hstemhm",
                        "34 76 -25 27 150 53 -3 80 -63 26 hintmask 1111110001000000",
                        "114 277 rmoveto", "-22 callsubr", "-77 -362 rmoveto",
                        "hintmask 1111111010000000", "167 callsubr",
                        "hintmask 1111111001000000", "168 callsubr",
                        "hintmask 1111110100100000", "-109 734 rmoveto",
                        "-27 -13 rlineto",
                        "8 -78 51 -58 77 0 50 0 75 35 9 101 rrcurveto",
                        "-26 13 rlineto", "-2 -62 -60 -29 -46 0 rrcurveto",
                        "-60 0 -47 40 -2 51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E1E
     */
    public void testuni1E1E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E1E");
        assertNotNull(cs);
        assertEquals("uni1E1E", cs.getName());
        String[] text =
                {"-14 -1 29 299 34 82 -20 183 40 -28 28 59 95 hstemhm",
                        "102 80 55 96 47 25 hintmask 1111011110000000",
                        "182 574 rmoveto", "-62 callsubr",
                        "hintmask 1110111110000000", "-66 callsubr",
                        "hintmask 1111011110000000", "-257 0 -74 -1 rlineto",
                        "hintmask 1110111110000000", "-61 callsubr",
                        "55 391 rmoveto", "169 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E1F
     */
    public void testuni1E1F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E1F");
        assertNotNull(cs);
        assertEquals("uni1E1F", cs.getName());
        String[] text =
                {"-197 1 27 363 39 234 34 38 96 hstem", "92 75 39 96 vstem",
                        "92 72 rmoveto", "-21 callsubr", "114 393 rmoveto",
                        "199 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E20
     */
    public void testuni1E20() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E20");
        assertNotNull(cs);
        assertEquals("uni1E20", cs.getName());
        String[] text =
                {"192 -12 36 247 34 316 37 75 44 hstem", "32 87 421 81 vstem",
                        "375 658 rmoveto", "-60 callsubr", "108 75 rmoveto",
                        "13 11 17 12 7 -4 8 -10 hvcurveto", "-244 hlineto",
                        "-12 -10 -18 -11 -7 3 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E21
     */
    public void testuni1E21() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E21");
        assertNotNull(cs);
        assertEquals("uni1E21", cs.getName());
        String[] text =
                {
                        "-17 -235 37 186 57 -54 61 84 30 248 28 -25 45 77 44 hstemhm",
                        "33 58 -31 70 -62 50 198 73 21 48 hintmask 1001011010110000",
                        "433 388 rmoveto", "96 callsubr",
                        "hintmask 1011101010110000", "97 callsubr",
                        "hintmask 1011001001110000", "-20 callsubr",
                        "hintmask 1011001100110000", "98 callsubr",
                        "hintmask 1101011001110000", "99 callsubr",
                        "-304 -395 rmoveto", "100 callsubr",
                        "hintmask 1011001100110000", "101 callsubr",
                        "187 290 rmoveto", "102 callsubr",
                        "hintmask 1001101010110000", "103 callsubr",
                        "42 256 rmoveto", "342 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E22
     */
    public void testuni1E22() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E22");
        assertNotNull(cs);
        assertEquals("uni1E22", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 53 95 hstem",
                        "106 81 119 96 112 80 vstem", "306 746 rmoveto",
                        "86 callsubr", "208 -674 rmoveto", "-59 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E23
     */
    public void testuni1E23() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E23");
        assertNotNull(cs);
        assertEquals("uni1E23", cs.getName());
        String[] text =
                {"17 1 27 367 47 81 96 79 -20 hstem",
                        "88 75 77 96 25 75 vstem", "361 72 rmoveto",
                        "-19 callsubr", "-121 276 rmoveto", "93 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E24
     */
    public void testuni1E24() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E24");
        assertNotNull(cs);
        assertEquals("uni1E24", cs.getName());
        String[] text =
                {"199 -163 96 68 27 296 39 255 27 hstem",
                        "106 81 119 95 113 80 vstem", "306 -115 rmoveto",
                        "87 callsubr", "208 187 rmoveto", "-59 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E25
     */
    public void testuni1E25() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E25");
        assertNotNull(cs);
        assertEquals("uni1E25", cs.getName());
        String[] text =
                {"17 -164 96 69 27 367 47 256 -20 hstem",
                        "88 75 49 96 53 75 vstem", "361 72 rmoveto",
                        "-19 callsubr", "-149 -411 rmoveto", "343 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E26
     */
    public void testuni1E26() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E26");
        assertNotNull(cs);
        assertEquals("uni1E26", cs.getName());
        String[] text =
                {"199 1 27 296 39 255 27 59 90 hstem",
                        "106 81 23 91 98 91 24 80 vstem", "210 749 rmoveto",
                        "39 callsubr", "189 1 rmoveto", "28 callsubr",
                        "115 -678 rmoveto", "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E27
     */
    public void testuni1E27() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E27");
        assertNotNull(cs);
        assertEquals("uni1E27", cs.getName());
        String[] text =
                {"17 1 27 367 47 85 91 80 -20 hstemhm",
                        "88 75 45 90 47 91 -75 75 hintmask 11111101",
                        "361 72 rmoveto", "-19 callsubr", "-153 277 rmoveto",
                        "81 callsubr", "hintmask 11111110", "137 hmoveto",
                        "56 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E28
     */
    public void testuni1E28() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E28");
        assertNotNull(cs);
        assertEquals("uni1E28", cs.getName());
        String[] text =
                {"199 -177 26 76 31 45 27 296 39 255 27 hstem",
                        "106 81 10 53 264 80 vstem", "514 72 rmoveto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "502 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 0 79 1 41 1 rrcurveto", "",
                        "-36 -77 7 -6 rlineto", "16 5 10 2 19 0 rrcurveto",
                        "23 18 -15 -20 -28 -30 -13 -30 hvcurveto",
                        "-19 0 -11 4 -27 9 rrcurveto", "-11 -22 rlineto",
                        "26 -11 17 -6 32 0 rrcurveto",
                        "61 45 29 42 39 -30 23 -40 hvcurveto",
                        "-10 0 -8 -1 -8 -2 rrcurveto", "19 48 rlineto",
                        "43 -1 58 -1 0 0 rrcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "252 327 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E29
     */
    public void testuni1E29() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E29");
        assertNotNull(cs);
        assertEquals("uni1E29", cs.getName());
        String[] text =
                {"17 -175 26 76 31 41 29 367 47 256 -20 hstem",
                        "88 75 5 54 139 75 vstem", "127 -73 rmoveto",
                        "23 18 -14 -21 -27 -29 -14 -31 hvcurveto",
                        "-19 0 -11 3 -27 10 rrcurveto", "-10 -22 rlineto",
                        "25 -11 17 -6 32 0 rrcurveto",
                        "61 46 29 42 39 -31 23 -40 hvcurveto",
                        "-9 0 -9 -1 -8 -2 rrcurveto", "19 46 rlineto",
                        "39 -1 48 -1 0 0 rrcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "250 vlineto",
                        "48 47 43 26 29 0 rrcurveto",
                        "56 22 -19 -81 hvcurveto", "-223 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 40 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "212 vlineto",
                        "103 -36 55 -72 vhcurveto",
                        "-39 0 -59 -16 -67 -67 rrcurveto", "339 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-2 2 -3 3 vhcurveto", "33 4 rlineto",
                        "20 9 -16 -57 hvcurveto", "-501 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 0 52 1 37 1 rrcurveto", "-34 -75 6 -6 rlineto",
                        "16 5 10 2 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E2A
     */
    public void testuni1E2A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E2A");
        assertNotNull(cs);
        assertEquals("uni1E2A", cs.getName());
        String[] text =
                {"199 -199 57 143 27 296 39 255 27 hstem",
                        "106 81 21 27 217 27 35 80 vstem", "235 -50 rmoveto",
                        "-27 -14 rlineto",
                        "8 -78 51 -57 77 0 50 0 75 34 10 101 rrcurveto",
                        "-27 14 rlineto",
                        "-2 -62 -60 -30 -46 0 -60 0 -47 40 -2 52 rrcurveto",
                        "279 122 rmoveto", "-59 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E2B
     */
    public void testuni1E2B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E2B");
        assertNotNull(cs);
        assertEquals("uni1E2B", cs.getName());
        String[] text =
                {"17 -209 57 153 27 367 47 256 -20 hstemhm",
                        "88 75 -19 26 191 75 -49 27 hintmask 11111010",
                        "361 72 rmoveto", "-19 callsubr", "hintmask 11110101",
                        "-191 -355 rmoveto", "344 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E2C
     */
    public void testuni1E2C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E2C");
        assertNotNull(cs);
        assertEquals("uni1E2C", cs.getName());
        String[] text =
                {
                        "-208 -164 44 4 46 71 27 590 27 hstem",
                        "106 81 vstem",
                        "187 574 rmoveto",
                        "-58 callsubr",
                        "29 -191 rmoveto",
                        "-19 0 -17 11 -16 11 -20 14 -22 14 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "9 34 14 14 25 0 18 0 19 -10 18 -12 21 -13 21 -13 22 0 46 0 28 30 13 60 rrcurveto",
                        "-24 7 rlineto", "-15 -42 -14 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E2D
     */
    public void testuni1E2D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E2D");
        assertNotNull(cs);
        assertEquals("uni1E2D", cs.getName());
        String[] text =
                {
                        "-237 -164 44 4 46 71 27 414 -20 101 96 hstemhm",
                        "78 95 -74 74 hintmask 11111010",
                        "173 72 rmoveto",
                        "-18 callsubr",
                        "hintmask 11111100",
                        "-95 499 rmoveto",
                        "-17 callsubr",
                        "124 -691 rmoveto",
                        "-19 0 -17 11 -17 11 -19 14 -22 14 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 34 13 14 26 0 18 0 18 -10 19 -12 21 -13 21 -13 21 0 47 0 28 30 12 60 rrcurveto",
                        "-24 7 rlineto", "-14 -42 -14 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E2E
     */
    public void testuni1E2E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E2E");
        assertNotNull(cs);
        assertEquals("uni1E2E", cs.getName());
        String[] text =
                {"-208 1 27 590 27 58 91 hstem", "6 91 9 81 9 91 vstem",
                        "cntrmask 00011100", "187 574 rmoveto", "-58 callsubr",
                        "-181 678 rmoveto", "28 callsubr", "190 hmoveto",
                        "39 callsubr", "29 141 rmoveto", "345 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E2F
     */
    public void testuni1E2F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E2F");
        assertNotNull(cs);
        assertEquals("uni1E2F", cs.getName());
        String[] text =
                {
                        "-237 1 27 414 -20 105 91 hstemhm",
                        "0 91 8 74 -12 91 hintmask 11111000",
                        "173 72 rmoveto",
                        "-18 callsubr",
                        "-173 500 rmoveto",
                        "72 callsubr",
                        "hintmask 11110100",
                        "161 hmoveto",
                        "70 callsubr",
                        "16 167 rmoveto",
                        "-62 -110 rlineto",
                        "-5 -9 0 -6 0 -5 0 -6 6 -5 6 0 4 0 6 5 12 13 rrcurveto",
                        "88 95 -2 10 -4 4 rlineto",
                        "-7 7 -10 9 -21 0 -4 0 -5 0 -2 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E30
     */
    public void testuni1E30() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E30");
        assertNotNull(cs);
        assertEquals("uni1E30", cs.getName());
        String[] text =
                {
                        "136 1 27 590 27 74 -21 hstem",
                        "106 81 vstem",
                        "187 72 rmoveto",
                        "-56 callsubr",
                        "222 748 rmoveto",
                        "-124 -87 rlineto",
                        "-13 -8 -2 -6 0 -7 0 -9 5 -5 10 0 8 0 13 3 22 8 rrcurveto",
                        "144 59 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E31
     */
    public void testuni1E31() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E31");
        assertNotNull(cs);
        assertEquals("uni1E31", cs.getName());
        String[] text =
                {"-22 1 27 374 27 269 -20 hstem", "88 75 vstem",
                        "163 205 rmoveto", "-14 callsubr", "183 598 rmoveto",
                        "53 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E32
     */
    public void testuni1E32() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E32");
        assertNotNull(cs);
        assertEquals("uni1E32", cs.getName());
        String[] text =
                {"136 -163 96 68 27 590 27 hstem", "106 81 91 96 vstem",
                        "187 72 rmoveto", "-56 callsubr", "91 -187 rmoveto",
                        "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E33
     */
    public void testuni1E33() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E33");
        assertNotNull(cs);
        assertEquals("uni1E33", cs.getName());
        String[] text =
                {"-22 -163 96 68 27 374 27 269 -20 hstem", "88 75 42 95 vstem",
                        "163 205 rmoveto", "-14 callsubr", "42 -187 rmoveto",
                        "339 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E34
     */
    public void testuni1E34() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E34");
        assertNotNull(cs);
        assertEquals("uni1E34", cs.getName());
        String[] text =
                {"136 -105 43 63 27 590 27 hstem", "106 81 vstem",
                        "187 72 rmoveto", "-56 callsubr", "269 -177 rmoveto",
                        "13 10 17 12 7 -3 7 -10 hvcurveto", "-245 hlineto",
                        "-12 -10 -17 -12 -7 4 -7 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E35
     */
    public void testuni1E35() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E35");
        assertNotNull(cs);
        assertEquals("uni1E35", cs.getName());
        String[] text =
                {"-22 -107 44 64 27 374 27 269 -20 hstem", "88 75 vstem",
                        "163 205 rmoveto", "-14 callsubr", "217 -179 rmoveto",
                        "13 11 18 11 7 -4 8 -10 hvcurveto", "-244 hlineto",
                        "-12 -10 -18 -11 -7 3 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E36
     */
    public void testuni1E36() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E36");
        assertNotNull(cs);
        assertEquals("uni1E36", cs.getName());
        String[] text =
                {"25 -163 96 66 29 -28 39 579 27 hstemhm",
                        "106 81 42 96 hintmask 10111100", "349 39 rmoveto",
                        "-55 callsubr", "hintmask 11011100", "-54 callsubr",
                        "hintmask 10111100", "-53 callsubr",
                        "-120 -154 rmoveto", "130 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E37
     */
    public void testuni1E37() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E37");
        assertNotNull(cs);
        assertEquals("uni1E37", cs.getName());
        String[] text =
                {"-241 -163 96 68 27 670 -20 hstemhm",
                        "84 96 -85 74 hintmask 11110000", "84 -115 rmoveto",
                        "300 callsubr", "hintmask 11101000", "11 187 rmoveto",
                        "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E38
     */
    public void testuni1E38() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E38");
        assertNotNull(cs);
        assertEquals("uni1E38", cs.getName());
        String[] text =
                {"25 -163 96 66 29 -28 39 579 27 88 44 hstemhm",
                        "106 81 42 96 hintmask 10111110", "349 39 rmoveto",
                        "-55 callsubr", "hintmask 11011110", "-54 callsubr",
                        "hintmask 10111110", "-53 callsubr",
                        "-120 -154 rmoveto", "130 callsubr", "38 848 rmoveto",
                        "13 11 17 12 7 -4 8 -10 hvcurveto", "-245 hlineto",
                        "-11 -11 -18 -11 -7 4 -8 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E39
     */
    public void testuni1E39() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E39");
        assertNotNull(cs);
        assertEquals("uni1E39", cs.getName());
        String[] text =
                {"-241 -163 96 68 27 670 -20 78 44 hstemhm",
                        "84 96 -85 74 hintmask 11110000", "242 756 rmoveto",
                        "105 callsubr", "hintmask 11111000", "87 -871 rmoveto",
                        "300 callsubr", "hintmask 11110100", "11 187 rmoveto",
                        "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E3A
     */
    public void testuni1E3A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E3A");
        assertNotNull(cs);
        assertEquals("uni1E3A", cs.getName());
        String[] text =
                {"25 -111 44 66 29 -28 39 579 27 hstemhm",
                        "106 81 hintmask 10111000", "349 39 rmoveto",
                        "-55 callsubr", "hintmask 11011000", "-54 callsubr",
                        "hintmask 10111000", "-53 callsubr", "39 -150 rmoveto",
                        "82 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E3B
     */
    public void testuni1E3B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E3B");
        assertNotNull(cs);
        assertEquals("uni1E3B", cs.getName());
        String[] text =
                {"-241 -111 44 68 27 670 -20 hstem", "95 74 vstem",
                        "247 -111 rmoveto", "82 callsubr", "93 183 rmoveto",
                        "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E3C
     */
    public void testuni1E3C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E3C");
        assertNotNull(cs);
        assertEquals("uni1E3C", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 579 27 hstemhm", "106 81 hintmask 01110000",
                        "349 39 rmoveto", "-55 callsubr", "hintmask 10110000",
                        "-54 callsubr", "hintmask 01110000", "-53 callsubr",
                        "-42 -96 rmoveto", "-50 hlineto",
                        "-29 -46 -39 -43 -35 -40 rrcurveto", "20 -14 rlineto",
                        "37 27 33 25 37 38 33 -36 34 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 40 -37 42 -28 47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E3D
     */
    public void testuni1E3D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E3D");
        assertNotNull(cs);
        assertEquals("uni1E3D", cs.getName());
        String[] text =
                {"-241 1 27 670 -20 hstem", "95 74 vstem", "158 -57 rmoveto",
                        "-50 hlineto", "-29 -46 -38 -43 -36 -40 rrcurveto",
                        "20 -14 rlineto",
                        "37 27 33 25 37 38 34 -36 33 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 40 -36 42 -29 47 rrcurveto",
                        "-63 129 rmoveto", "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E3E
     */
    public void testuni1E3E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E3E");
        assertNotNull(cs);
        assertEquals("uni1E3E", cs.getName());
        String[] text =
                {"338 1 27 590 28 73 -21 hstem", "665 87 rmoveto",
                        "-52 callsubr", "-161 286 rmoveto", "38 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E3F
     */
    public void testuni1E3F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E3F");
        assertNotNull(cs);
        assertEquals("uni1E3F", cs.getName());
        String[] text =
                {"259 1 27 366 48 hstem", "93 75 179 73 183 74 vstem",
                        "603 72 rmoveto", "-12 callsubr", "-199 368 rmoveto",
                        "299 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E40
     */
    public void testuni1E40() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E40");
        assertNotNull(cs);
        assertEquals("uni1E40", cs.getName());
        String[] text =
                {
                        "338 1 27 590 28 52 95 hstem",
                        "377 96 vstem",
                        "665 87 rmoveto",
                        "-52 callsubr",
                        "-248 212 rmoveto",
                        "-27 21 -21 27 26 22 21 27 26 -22 21 -26 -27 -21 -21 -26 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E41
     */
    public void testuni1E41() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E41");
        assertNotNull(cs);
        assertEquals("uni1E41", cs.getName());
        String[] text =
                {"259 1 27 366 48 83 96 hstemhm",
                        "93 75 169 96 -86 73 183 74 hintmask 11110110",
                        "603 72 rmoveto", "-12 callsubr", "hintmask 11111010",
                        "-266 271 rmoveto",
                        "-26 22 -22 26 27 21 22 26 27 -21 21 -27 vhcurveto",
                        "-26 -22 -21 -27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E42
     */
    public void testuni1E42() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E42");
        assertNotNull(cs);
        assertEquals("uni1E42", cs.getName());
        String[] text =
                {"338 -163 96 68 27 590 28 hstem", "348 95 vstem",
                        "665 87 rmoveto", "-52 callsubr", "-277 -649 rmoveto",
                        "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E43
     */
    public void testuni1E43() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E43");
        assertNotNull(cs);
        assertEquals("uni1E43", cs.getName());
        String[] text =
                {"259 -163 96 68 27 366 48 hstemhm",
                        "93 75 168 96 -85 73 183 74 hintmask 11110110",
                        "603 72 rmoveto", "-12 callsubr", "hintmask 11111010",
                        "-267 -417 rmoveto", "-15 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E44
     */
    public void testuni1E44() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E44");
        assertNotNull(cs);
        assertEquals("uni1E44", cs.getName());
        String[] text =
                {"194 1 27 590 28 52 95 hstem", "104 45 162 95 152 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "-292 725 rmoveto",
                        "338 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E45
     */
    public void testuni1E45() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E45");
        assertNotNull(cs);
        assertEquals("uni1E45", cs.getName());
        String[] text =
                {"19 1 27 366 48 81 96 hstem", "91 75 72 96 30 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-126 280 rmoveto",
                        "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E46
     */
    public void testuni1E46() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E46");
        assertNotNull(cs);
        assertEquals("uni1E46", cs.getName());
        String[] text =
                {"194 -163 96 68 27 590 28 hstem",
                        "104 45 153 96 160 45 vstem", "603 557 rmoveto",
                        "-51 callsubr", "-301 -136 rmoveto", "93 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E47
     */
    public void testuni1E47() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E47");
        assertNotNull(cs);
        assertEquals("uni1E47", cs.getName());
        String[] text =
                {"19 -163 96 68 27 366 48 hstem", "91 75 51 96 51 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-147 -406 rmoveto",
                        "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E48
     */
    public void testuni1E48() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E48");
        assertNotNull(cs);
        assertEquals("uni1E48", cs.getName());
        String[] text =
                {"194 -111 44 68 27 590 28 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "-130 -132 rmoveto",
                        "13 11 17 12 7 -4 8 -10 hvcurveto", "-245 hlineto",
                        "-11 -11 -18 -12 -7 4 -7 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E49
     */
    public void testuni1E49() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E49");
        assertNotNull(cs);
        assertEquals("uni1E49", cs.getName());
        String[] text =
                {"19 -111 44 68 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "15 -402 rmoveto",
                        "342 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E4A
     */
    public void testuni1E4A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E4A");
        assertNotNull(cs);
        assertEquals("uni1E4A", cs.getName());
        String[] text =
                {"194 1 27 590 28 hstem", "104 45 409 45 vstem",
                        "603 557 rmoveto", "-51 callsubr", "-227 -78 rmoveto",
                        "-49 hlineto", "-30 -46 -38 -43 -35 -40 rrcurveto",
                        "20 -14 rlineto",
                        "37 27 32 25 38 38 33 -36 34 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 40 -37 42 -29 47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E4B
     */
    public void testuni1E4B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E4B");
        assertNotNull(cs);
        assertEquals("uni1E4B", cs.getName());
        String[] text =
                {"19 1 27 366 48 hstem", "91 75 198 74 vstem",
                        "364 72 rmoveto", "-11 callsubr", "-70 -348 rmoveto",
                        "340 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E4C
     */
    public void testuni1E4C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E4C");
        assertNotNull(cs);
        assertEquals("uni1E4C", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 38 49 5 50 hstem",
                        "37 91 442 92 vstem",
                        "608 805 rmoveto",
                        "-95 -76 rlineto",
                        "-10 -7 -2 -5 0 -6 0 -9 4 -4 7 0 7 0 10 2 16 8 rrcurveto",
                        "111 51 rlineto", "6 -430 rmoveto", "-50 callsubr",
                        "-328 295 rmoveto", "-49 callsubr", "66 121 rmoveto",
                        "346 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E4D
     */
    public void testuni1E4D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E4D");
        assertNotNull(cs);
        assertEquals("uni1E4D", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 61 44 5 46 hstem",
                        "34 79 254 79 vstem",
                        "341 750 rmoveto",
                        "-61 -110 rlineto",
                        "-5 -9 0 -6 0 -5 0 -6 5 -5 6 0 5 0 5 4 13 13 rrcurveto",
                        "87 96 -1 9 rlineto",
                        "-1 2 -2 1 -2 2 -6 7 -10 9 -21 0 -4 0 -5 -1 -3 -1 rrcurveto",
                        "-111 -341 rmoveto", "-10 callsubr",
                        "-196 -204 rmoveto", "-9 callsubr", "270 342 rmoveto",
                        "55 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E4E
     */
    public void testuni1E4E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E4E");
        assertNotNull(cs);
        assertEquals("uni1E4E", cs.getName());
        String[] text =
                {"197 -12 34 602 34 38 49 -38 91 -48 50 hstemhm",
                        "37 91 -26 91 318 91 -32 92 hintmask 1100010010000000",
                        "662 329 rmoveto", "44 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "hintmask 1110100000000000",
                        "66 121 rmoveto", "346 callsubr",
                        "hintmask 1101000100000000", "111 7 rmoveto",
                        "37 callsubr", "hintmask 1101001000000000",
                        "-409 hmoveto",
                        "-24 21 -21 24 25 21 21 24 25 -21 21 -25 vhcurveto",
                        "-24 -21 -21 -25 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E4F
     */
    public void testuni1E4F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E4F");
        assertNotNull(cs);
        assertEquals("uni1E4F", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 61 44 5 46 38 91 hstem",
                        "34 79 2 91 69 91 1 79 vstem", "115 682 rmoveto",
                        "7 callsubr", "160 hmoveto", "8 callsubr",
                        "-45 -273 rmoveto", "-10 callsubr",
                        "-196 -204 rmoveto", "-9 callsubr", "270 342 rmoveto",
                        "55 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E50
     */
    public void testuni1E50() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E50");
        assertNotNull(cs);
        assertEquals("uni1E50", cs.getName());
        String[] text =
                {"197 -12 34 602 34 63 -21 33 44 hstem", "37 91 442 92 vstem",
                        "95 805 rmoveto", "-58 -40 119 -55 rlineto",
                        "16 -8 10 -2 7 0 7 0 4 4 0 8 0 6 -3 6 -9 7 rrcurveto",
                        "474 -402 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "117 109 rmoveto",
                        "11 9 17 12 7 -3 8 -9 hvcurveto", "-208 hlineto",
                        "-9 -9 -18 -11 -7 3 -8 7 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E51
     */
    public void testuni1E51() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E51");
        assertNotNull(cs);
        assertEquals("uni1E51", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 97 44 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "326 334 rmoveto", "116 callsubr",
                        "99 218 rmoveto",
                        "-3 2 -5 0 -4 0 -26 0 -18 -14 -6 -6 rrcurveto",
                        "-2 -10 89 -95 rlineto",
                        "12 -13 5 -5 5 0 6 0 5 6 0 4 0 6 -1 6 -3 9 rrcurveto",
                        "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E52
     */
    public void testuni1E52() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E52");
        assertNotNull(cs);
        assertEquals("uni1E52", cs.getName());
        String[] text =
                {"197 -12 34 602 34 61 -21 35 44 hstem", "37 91 442 92 vstem",
                        "603 805 rmoveto", "345 callsubr", "11 -430 rmoveto",
                        "-50 callsubr", "-328 295 rmoveto", "-49 callsubr",
                        "95 109 rmoveto", "11 9 17 12 7 -3 8 -8 hvcurveto",
                        "-209 hlineto", "-9 -9 -18 -11 -7 3 -8 7 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E53
     */
    public void testuni1E53() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E53");
        assertNotNull(cs);
        assertEquals("uni1E53", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 97 44 hstem",
                        "34 79 254 79 vstem",
                        "230 409 rmoveto",
                        "-10 callsubr",
                        "-196 -204 rmoveto",
                        "-9 callsubr",
                        "326 334 rmoveto",
                        "116 callsubr",
                        "157 228 rmoveto",
                        "-61 -111 rlineto",
                        "-5 -9 0 -6 0 -5 0 -6 5 -5 6 0 5 0 6 5 12 13 rrcurveto",
                        "88 96 -2 9 rlineto",
                        "-1 2 -2 1 -2 1 -6 7 -10 10 -21 0 -4 0 -5 -1 -3 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E54
     */
    public void testuni1E54() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E54");
        assertNotNull(cs);
        assertEquals("uni1E54", cs.getName());
        String[] text =
                {"14 1 27 254 33 304 25 -24 34 65 -21 hstemhm",
                        "106 81 225 85 hintmask 11011110", "106 71 rmoveto",
                        "-48 callsubr", "hintmask 11101110", "-47 callsubr",
                        "81 31 rmoveto", "hintmask 11011110", "-46 callsubr",
                        "157 500 rmoveto", "38 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E55
     */
    public void testuni1E55() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E55");
        assertNotNull(cs);
        assertEquals("uni1E55", cs.getName());
        String[] text =
                {"-22 -229 27 190 34 374 46 hstem", "75 74 215 78 vstem",
                        "75 -158 rmoveto", "-8 callsubr", "74 -23 rmoveto",
                        "-7 callsubr", "164 605 rmoveto", "73 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E56
     */
    public void testuni1E56() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E56");
        assertNotNull(cs);
        assertEquals("uni1E56", cs.getName());
        String[] text =
                {"14 1 27 254 33 304 25 -24 34 49 95 hstemhm",
                        "106 81 48 96 81 85 hintmask 11011111",
                        "106 71 rmoveto", "-48 callsubr", "hintmask 11101111",
                        "-47 callsubr", "81 31 rmoveto", "hintmask 11011111",
                        "-46 callsubr", "48 430 rmoveto", "201 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E57
     */
    public void testuni1E57() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E57");
        assertNotNull(cs);
        assertEquals("uni1E57", cs.getName());
        String[] text =
                {"-22 -229 27 190 34 374 46 81 96 hstem",
                        "75 74 63 96 56 78 vstem", "75 -158 rmoveto",
                        "-8 callsubr", "74 -23 rmoveto", "-7 callsubr",
                        "63 506 rmoveto", "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E58
     */
    public void testuni1E58() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E58");
        assertNotNull(cs);
        assertEquals("uni1E58", cs.getName());
        String[] text =
                {"73 1 27 256 38 304 28 49 95 hstem",
                        "106 81 41 95 93 81 vstem", "497 479 rmoveto",
                        "-44 callsubr", "-81 -1 rmoveto", "-43 callsubr",
                        "-188 272 rmoveto", "156 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E59
     */
    public void testuni1E59() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E59");
        assertNotNull(cs);
        assertEquals("uni1E59", cs.getName());
        String[] text =
                {"-154 1 27 353 61 81 96 hstemhm",
                        "89 75 -12 96 hintmask 11110000", "89 72 rmoveto",
                        "-5 callsubr", "hintmask 11101000", "63 250 rmoveto",
                        "300 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E5A
     */
    public void testuni1E5A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E5A");
        assertNotNull(cs);
        assertEquals("uni1E5A", cs.getName());
        String[] text =
                {"73 -163 96 68 27 256 38 304 28 hstem",
                        "106 81 59 95 75 81 vstem", "497 479 rmoveto",
                        "-44 callsubr", "-81 -1 rmoveto", "-43 callsubr",
                        "-170 -593 rmoveto", "339 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E5B
     */
    public void testuni1E5B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E5B");
        assertNotNull(cs);
        assertEquals("uni1E5B", cs.getName());
        String[] text =
                {"-154 -163 96 68 27 353 61 hstemhm",
                        "79 95 -85 75 hintmask 11101000", "89 72 rmoveto",
                        "-5 callsubr", "hintmask 11110000", "-10 -436 rmoveto",
                        "-17 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E5C
     */
    public void testuni1E5C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E5C");
        assertNotNull(cs);
        assertEquals("uni1E5C", cs.getName());
        String[] text =
                {"43 -163 96 68 27 256 38 304 28 79 44 hstem",
                        "106 81 59 95 75 81 vstem", "497 479 rmoveto",
                        "-44 callsubr", "-81 -1 rmoveto", "-43 callsubr",
                        "-170 -593 rmoveto", "339 callsubr", "141 848 rmoveto",
                        "91 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E5D
     */
    public void testuni1E5D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E5D");
        assertNotNull(cs);
        assertEquals("uni1E5D", cs.getName());
        String[] text =
                {"-154 -163 96 68 27 353 61 100 43 hstemhm",
                        "79 95 -85 75 hintmask 11110100", "89 72 rmoveto",
                        "-5 callsubr", "hintmask 11111000", "-10 -436 rmoveto",
                        "-17 callsubr", "229 657 rmoveto",
                        "12 11 17 12 7 -4 7 -10 hvcurveto", "-244 hlineto",
                        "-12 -10 -17 -12 -7 3 -7 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E5E
     */
    public void testuni1E5E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E5E");
        assertNotNull(cs);
        assertEquals("uni1E5E", cs.getName());
        String[] text =
                {"73 -107 44 64 27 256 38 304 28 hstem", "106 81 229 81 vstem",
                        "497 479 rmoveto", "-44 callsubr", "-81 -1 rmoveto",
                        "-43 callsubr", "17 -585 rmoveto", "170 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E5F
     */
    public void testuni1E5F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E5F");
        assertNotNull(cs);
        assertEquals("uni1E5F", cs.getName());
        String[] text =
                {"-154 -104 43 62 27 353 61 hstem", "89 75 vstem",
                        "89 72 rmoveto", "-5 callsubr", "185 -425 rmoveto",
                        "13 10 17 12 7 -4 7 -9 hvcurveto", "-245 hlineto",
                        "-12 -10 -17 -12 -7 4 -7 8 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E60
     */
    public void testuni1E60() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E60");
        assertNotNull(cs);
        assertEquals("uni1E60", cs.getName());
        String[] text =
                {
                        "-26 5 19 600 34 44 96 hstem",
                        "48 69 56 96 85 81 vstem",
                        "382 631 rmoveto",
                        "-42 callsubr",
                        "-209 119 rmoveto",
                        "-26 21 -22 27 26 22 22 26 26 -22 22 -26 -27 -21 -22 -26 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E61
     */
    public void testuni1E61() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E61");
        assertNotNull(cs);
        assertEquals("uni1E61", cs.getName());
        String[] text =
                {"-130 -12 28 396 30 81 96 hstem", "53 61 32 96 25 67 vstem",
                        "146 571 rmoveto", "130 callsubr", "-103 -431 rmoveto",
                        "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E62
     */
    public void testuni1E62() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E62");
        assertNotNull(cs);
        assertEquals("uni1E62", cs.getName());
        String[] text =
                {"-26 -163 96 72 19 600 34 hstem", "48 69 63 96 78 81 vstem",
                        "382 631 rmoveto", "-42 callsubr", "-202 -746 rmoveto",
                        "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E63
     */
    public void testuni1E63() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E63");
        assertNotNull(cs);
        assertEquals("uni1E63", cs.getName());
        String[] text =
                {"-130 -163 96 55 28 396 30 hstem", "53 61 29 95 29 67 vstem",
                        "143 -115 rmoveto", "339 callsubr", "-100 255 rmoveto",
                        "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E64
     */
    public void testuni1E64() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E64");
        assertNotNull(cs);
        assertEquals("uni1E64", cs.getName());
        String[] text =
                {
                        "-26 5 19 600 34 60 -21 27 95 hstemhm",
                        "48 69 -45 95 187 81 hintmask 11111010",
                        "382 631 rmoveto",
                        "",
                        "-42 callsubr",
                        "-49 188 rmoveto",
                        "-125 -86 rlineto",
                        "-12 -9 -3 -5 0 -7 0 -10 6 -5 9 0 9 0 12 3 22 9 rrcurveto",
                        "144 58 rlineto", "hintmask 11110110",
                        "-323 4 rmoveto",
                        "-26 21 -21 27 26 21 21 26 27 -21 21 -26 vhcurveto",
                        "-27 -21 -21 -27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E65
     */
    public void testuni1E65() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E65");
        assertNotNull(cs);
        assertEquals("uni1E65", cs.getName());
        String[] text =
                {
                        "-130 -12 28 396 30 145 86 hstemhm",
                        "53 61 -60 86 127 67 hintmask 11101100",
                        "54 630 rmoveto",
                        "-24 19 -19 24 24 19 19 24 23 -19 20 -24 vhcurveto",
                        "-24 -19 -20 -23 hvcurveto",
                        "186 40 rmoveto",
                        "161 callsubr",
                        "-197 -530 rmoveto",
                        "4 -49 3 -51 0 -42 10 2 8 1 5 0 7 0 5 -1 7 -1 26 -7 29 -4 35 0 47 0 105 29 0 99 0 80 -65 36 -81 30 rrcurveto",
                        "hintmask 11110100",
                        "-55 20 -19 20 0 40 0 55 39 15 38 0 21 0 60 -16 21 -82 rrcurveto",
                        "27 1 rlineto",
                        "-2 36 -3 34 -6 32 -31 16 -37 9 -50 0 -79 0 -59 -48 0 -67 0 -75 38 -21 73 -32 79 -34 24 -29 0 -43 0 -49 -52 -28 -35 0 rrcurveto",
                        "-37 0 -27 18 -10 11 -22 23 -11 48 -3 25 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E66
     */
    public void testuni1E66() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E66");
        assertNotNull(cs);
        assertEquals("uni1E66", cs.getName());
        String[] text =
                {"-26 5 19 600 34 61 -21 100 96 hstem",
                        "48 69 73 96 68 81 vstem", "382 631 rmoveto",
                        "-42 callsubr", "-167 67 rmoveto", "120 callsubr",
                        "-25 148 rmoveto", "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E67
     */
    public void testuni1E67() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E67");
        assertNotNull(cs);
        assertEquals("uni1E67", cs.getName());
        String[] text =
                {
                        "-130 -12 28 396 30 200 86 hstem",
                        "53 61 39 86 28 67 vstem",
                        "153 685 rmoveto",
                        "-24 19 -19 24 24 19 19 24 24 -19 19 -24 -24 -19 -19 -24 vhcurveto",
                        "16 -183 rmoveto", "121 callsubr", "-126 -362 rmoveto",
                        "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E68
     */
    public void testuni1E68() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E68");
        assertNotNull(cs);
        assertEquals("uni1E68", cs.getName());
        String[] text =
                {"-22 -163 96 72 19 600 34 44 95 hstem",
                        "48 69 63 96 78 81 vstem", "382 631 rmoveto",
                        "-42 callsubr", "-202 -746 rmoveto", "93 callsubr",
                        "865 vmoveto", "", "86 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E69
     */
    public void testuni1E69() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E69");
        assertNotNull(cs);
        assertEquals("uni1E69", cs.getName());
        String[] text =
                {"-130 -163 96 55 28 396 30 81 96 hstem",
                        "53 61 29 95 29 67 vstem", "143 571 rmoveto",
                        "339 callsubr", "-686 vmoveto", "339 callsubr",
                        "-100 255 rmoveto", "-4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E6A
     */
    public void testuni1E6A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E6A");
        assertNotNull(cs);
        assertEquals("uni1E6A", cs.getName());
        String[] text =
                {"76 1 27 578 40 55 95 hstemhm",
                        "256 96 -94 80 184 26 hintmask 11101100",
                        "77 646 rmoveto", "-41 callsubr", "hintmask 11110100",
                        "-244 103 rmoveto",
                        "-27 21 -21 27 26 22 21 27 26 -22 21 -26 vhcurveto",
                        "-27 -21 -21 -26 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E6B
     */
    public void testuni1E6B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E6B");
        assertNotNull(cs);
        assertEquals("uni1E6B", cs.getName());
        String[] text =
                {"-199 -12 55 348 39 203 96 hstemhm",
                        "89 75 -71 95 -82 58 hintmask 11110000",
                        "164 391 rmoveto", "-3 callsubr", "hintmask 11100100",
                        "-2 callsubr", "hintmask 11110000", "-1 callsubr",
                        "hintmask 11101000", "-71 546 rmoveto",
                        "-26 21 -22 27 26 21 22 26 27 -21 21 -26 vhcurveto",
                        "-27 -21 -21 -27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E6C
     */
    public void testuni1E6C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E6C");
        assertNotNull(cs);
        assertEquals("uni1E6C", cs.getName());
        String[] text =
                {"76 -163 96 68 27 578 40 hstemhm",
                        "252 96 -90 80 184 26 hintmask 11101100",
                        "77 646 rmoveto", "-41 callsubr", "hintmask 11110100",
                        "-248 -761 rmoveto", "-15 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E6D
     */
    public void testuni1E6D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E6D");
        assertNotNull(cs);
        assertEquals("uni1E6D", cs.getName());
        String[] text =
                {"-199 -163 96 55 55 348 39 hstemhm",
                        "89 75 -58 58 -30 95 hintmask 11110000",
                        "164 391 rmoveto", "-3 callsubr", "hintmask 11101000",
                        "-2 callsubr", "hintmask 11110000", "-1 callsubr",
                        "hintmask 11100100", "-30 -250 rmoveto",
                        "107 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E6E
     */
    public void testuni1E6E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E6E");
        assertNotNull(cs);
        assertEquals("uni1E6E", cs.getName());
        String[] text =
                {"76 -111 44 68 27 578 40 hstem", "258 80 184 26 vstem",
                        "77 646 rmoveto", "-41 callsubr", "-83 -757 rmoveto",
                        "124 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E6F
     */
    public void testuni1E6F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E6F");
        assertNotNull(cs);
        assertEquals("uni1E6F", cs.getName());
        String[] text =
                {"-199 -111 44 55 55 348 39 hstemhm",
                        "89 75 -58 58 hintmask 11110000", "164 391 rmoveto",
                        "-3 callsubr", "hintmask 11101000", "-2 callsubr",
                        "hintmask 11110000", "-1 callsubr", "117 -246 rmoveto",
                        "171 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E70
     */
    public void testuni1E70() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E70");
        assertNotNull(cs);
        assertEquals("uni1E70", cs.getName());
        String[] text =
                {"76 1 27 578 40 hstem", "258 80 184 26 vstem",
                        "77 646 rmoveto", "-41 callsubr", "-173 -704 rmoveto",
                        "-50 hlineto", "-29 -46 -39 -43 -35 -40 rrcurveto",
                        "20 -14 rlineto",
                        "37 27 33 25 37 38 33 -36 34 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 41 -37 42 -28 46 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E71
     */
    public void testuni1E71() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E71");
        assertNotNull(cs);
        assertEquals("uni1E71", cs.getName());
        String[] text =
                {"-199 -12 55 348 39 hstemhm",
                        "89 75 -58 58 hintmask 11100000", "164 391 rmoveto",
                        "-3 callsubr", "hintmask 11010000", "-2 callsubr",
                        "hintmask 11100000", "-1 callsubr", "34 -192 rmoveto",
                        "200 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E72
     */
    public void testuni1E72() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E72");
        assertNotNull(cs);
        assertEquals("uni1E72", cs.getName());
        String[] text =
                {"160 -157 91 54 41 589 27 hstem",
                        "89 81 36 91 70 91 68 46 vstem", "321 -12 rmoveto",
                        "-40 callsubr", "-115 -99 rmoveto", "202 callsubr",
                        "161 hmoveto", "7 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E73
     */
    public void testuni1E73() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E73");
        assertNotNull(cs);
        assertEquals("uni1E73", cs.getName());
        String[] text =
                {"16 -157 91 54 45 -6 28 347 27 hstemhm",
                        "88 75 -46 91 69 91 -14 75 hintmask 11011001",
                        "429 116 rmoveto", "0 callsubr", "hintmask 10111001",
                        "1 callsubr", "hintmask 10010100", "-312 -227 rmoveto",
                        "316 callsubr", "hintmask 10010010", "160 hmoveto",
                        "319 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E74
     */
    public void testuni1E74() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E74");
        assertNotNull(cs);
        assertEquals("uni1E74", cs.getName());
        String[] text =
                {"160 -164 44 4 46 58 41 589 27 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "81 -108 rmoveto",
                        "204 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E75
     */
    public void testuni1E75() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E75");
        assertNotNull(cs);
        assertEquals("uni1E75", cs.getName());
        String[] text =
                {
                        "16 -164 44 4 46 58 45 -6 28 347 27 hstemhm",
                        "88 75 191 75 hintmask 11101110",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 11011110",
                        "1 callsubr",
                        "-117 -236 rmoveto",
                        "-19 0 -17 11 -16 11 -20 14 -22 14 -30 0 -43 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 34 13 14 26 0 17 0 19 -10 18 -12 21 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 7 rlineto", "-14 -42 -15 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E76
     */
    public void testuni1E76() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E76");
        assertNotNull(cs);
        assertEquals("uni1E76", cs.getName());
        String[] text =
                {"160 -12 41 589 27 hstem", "89 81 356 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "38 -46 rmoveto",
                        "-50 hlineto", "-29 -46 -38 -43 -35 -40 rrcurveto",
                        "20 -14 rlineto",
                        "37 27 32 25 37 38 34 -36 33 -25 39 -29 rrcurveto",
                        "21 14 rlineto", "-36 41 -36 42 -29 46 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E77
     */
    public void testuni1E77() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E77");
        assertNotNull(cs);
        assertEquals("uni1E77", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 hstemhm",
                        "88 75 191 75 hintmask 10111000", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111000", "1 callsubr",
                        "-161 -173 rmoveto", "341 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1E78
     */
    public void testuni1E78() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E78");
        assertNotNull(cs);
        assertEquals("uni1E78", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 48 49 5 50 hstem",
                        "89 81 356 46 vstem",
                        "594 833 rmoveto",
                        "-96 -77 rlineto",
                        "-9 -7 -2 -5 0 -6 0 -9 4 -4 7 0 6 0 10 3 17 7 rrcurveto",
                        "111 51 rlineto",
                        "-321 -798 rmoveto",
                        "-40 callsubr",
                        "85 754 rmoveto",
                        "-16 0 -15 11 -14 14 -16 14 -19 16 -26 0 -36 0 -20 -33 -11 -65 rrcurveto",
                        "19 -5 rlineto",
                        "9 36 11 17 22 0 15 0 16 -12 16 -13 17 -14 18 -15 19 0 39 0 24 34 11 66 rrcurveto",
                        "-21 7 rlineto", "-12 -47 -12 -11 -18 0 rrcurveto",
                        "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E79
     */
    public void testuni1E79() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E79");
        assertNotNull(cs);
        assertEquals("uni1E79", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 96 44 5 46 hstemhm",
                        "88 75 191 75 hintmask 10111110",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 01111110",
                        "1 callsubr",
                        "-105 453 rmoveto",
                        "123 callsubr",
                        "-13 209 rmoveto",
                        "-61 -111 rlineto",
                        "-5 -8 0 -7 0 -4 0 -6 5 -5 6 0 5 0 6 5 11 12 rrcurveto",
                        "89 96 -2 10 rlineto",
                        "-2 1 -1 1 -2 2 -6 7 -10 9 -22 0 -3 0 -5 -1 -3 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E7A
     */
    public void testuni1E7A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E7A");
        assertNotNull(cs);
        assertEquals("uni1E7A", cs.getName());
        String[] text =
                {"160 -12 41 589 27 70 83 -80 82 -69 44 hstemhm",
                        "89 81 -57 82 302 82 -53 46 hintmask 1100010010000000",
                        "321 -12 rmoveto", "-40 callsubr",
                        "hintmask 1100100000000000", "121 743 rmoveto",
                        "11 9 18 12 7 -4 7 -8 hvcurveto", "-208 hlineto",
                        "-10 -8 -17 -12 -7 3 -8 7 hvcurveto",
                        "hintmask 1101001000000000", "-80 -13 rmoveto",
                        "24 17 20 21 22 -18 19 -23 -25 -16 -20 -21 hvcurveto",
                        "-23 17 -18 24 vhcurveto", "hintmask 1110000100000000",
                        "384 -3 rmoveto",
                        "19 22 16 25 26 -21 16 -20 -23 -18 -16 -26 hvcurveto",
                        "-29 24 -12 17 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E7B
     */
    public void testuni1E7B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E7B");
        assertNotNull(cs);
        assertEquals("uni1E7B", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 110 44 56 90 hstemhm",
                        "88 75 -27 91 70 91 -34 75 hintmask 1011110010000000",
                        "429 116 rmoveto", "0 callsubr",
                        "hintmask 0111110010000000", "1 callsubr",
                        "-53 423 rmoveto", "124 callsubr",
                        "hintmask 0011101000000000", "5 145 rmoveto",
                        "46 callsubr", "hintmask 0011100100000000",
                        "161 hmoveto", "36 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E7C
     */
    public void testuni1E7C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E7C");
        assertNotNull(cs);
        assertEquals("uni1E7C", cs.getName());
        String[] text =
                {
                        "116 9 -21 630 27 55 44 5 45 hstem",
                        "488 574 rmoveto",
                        "-39 callsubr",
                        "-102 170 rmoveto",
                        "-19 0 -17 11 -17 12 -19 13 -22 14 -31 0 -43 0 -22 -29 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "",
                        "9 33 14 15 25 0 18 0 19 -11 18 -12 21 -13 21 -13 22 0 46 0 28 30 12 61 rrcurveto",
                        "-23 6 rlineto", "-15 -42 -14 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E7D
     */
    public void testuni1E7D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E7D");
        assertNotNull(cs);
        assertEquals("uni1E7D", cs.getName());
        String[] text =
                {
                        "-4 9 -21 414 27 96 44 5 46 hstem",
                        "330 402 rmoveto",
                        "2 callsubr",
                        "167 vmoveto",
                        "-19 0 -17 11 -17 12 -19 13 -22 15 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "9 33 13 15 26 0 18 0 18 -11 19 -12 21 -13 21 -13 22 0 46 0 28 31 12 60 rrcurveto",
                        "-23 6 rlineto", "-15 -42 -14 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E7E
     */
    public void testuni1E7E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E7E");
        assertNotNull(cs);
        assertEquals("uni1E7E", cs.getName());
        String[] text =
                {"116 -163 96 76 -21 630 27 hstem", "255 96 vstem",
                        "488 574 rmoveto", "-39 callsubr", "-233 -689 rmoveto",
                        "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E7F
     */
    public void testuni1E7F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E7F");
        assertNotNull(cs);
        assertEquals("uni1E7F", cs.getName());
        String[] text =
                {"-4 -163 96 76 -21 414 27 hstem", "194 96 vstem",
                        "330 402 rmoveto", "2 callsubr", "-131 -517 rmoveto",
                        "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E86
     */
    public void testuni1E86() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E86");
        assertNotNull(cs);
        assertEquals("uni1E86", cs.getName());
        String[] text =
                {"414 9 -21 630 27 44 96 hstem", "391 96 vstem",
                        "323 12 rmoveto", "-38 callsubr", "68 725 rmoveto",
                        "199 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E87
     */
    public void testuni1E87() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E87");
        assertNotNull(cs);
        assertEquals("uni1E87", cs.getName());
        String[] text =
                {"243 9 -21 414 27 94 96 hstem", "321 96 vstem",
                        "202 410 rmoveto", "3 callsubr", "119 161 rmoveto",
                        "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E88
     */
    public void testuni1E88() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E88");
        assertNotNull(cs);
        assertEquals("uni1E88", cs.getName());
        String[] text =
                {"414 -163 96 76 -21 630 27 hstem", "406 95 vstem",
                        "323 12 rmoveto", "-38 callsubr", "83 -127 rmoveto",
                        "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E89
     */
    public void testuni1E89() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E89");
        assertNotNull(cs);
        assertEquals("uni1E89", cs.getName());
        String[] text =
                {"243 -163 96 76 -21 414 27 hstem", "320 96 vstem",
                        "202 410 rmoveto", "3 callsubr", "118 -525 rmoveto",
                        "92 callsubr", "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E8A
     */
    public void testuni1E8A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E8A");
        assertNotNull(cs);
        assertEquals("uni1E8A", cs.getName());
        String[] text =
                {"154 -1 29 590 28 55 95 hstem", "281 96 vstem",
                        "13 625 rmoveto", "-37 callsubr", "268 104 rmoveto",
                        "86 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E8B
     */
    public void testuni1E8B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E8B");
        assertNotNull(cs);
        assertEquals("uni1E8B", cs.getName());
        String[] text =
                {"-4 1 27 374 29 92 96 hstem", "205 96 vstem",
                        "205 571 rmoveto", "93 callsubr", "-8 -169 rmoveto",
                        "4 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E8C
     */
    public void testuni1E8C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E8C");
        assertNotNull(cs);
        assertEquals("uni1E8C", cs.getName());
        String[] text =
                {
                        "154 -1 29 590 28 60 91 hstem",
                        "193 91 99 91 vstem",
                        "13 625 rmoveto",
                        "-37 callsubr",
                        "180 106 rmoveto",
                        "-24 21 -21 25 25 20 21 24 25 -20 21 -25 -25 -21 -21 -25 vhcurveto",
                        "190 1 rmoveto", "39 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E8D
     */
    public void testuni1E8D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E8D");
        assertNotNull(cs);
        assertEquals("uni1E8D", cs.getName());
        String[] text =
                {"-4 1 27 374 29 96 91 hstem", "127 91 70 90 vstem",
                        "127 572 rmoveto", "223 callsubr", "161 hmoveto",
                        "81 callsubr", "-91 -170 rmoveto", "4 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E8E
     */
    public void testuni1E8E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E8E");
        assertNotNull(cs);
        assertEquals("uni1E8E", cs.getName());
        String[] text =
                {"73 1 27 590 27 55 96 hstemhm",
                        "241 96 -83 80 hintmask 11101000", "254 72 rmoveto",
                        "-36 callsubr", "hintmask 11110000", "-13 467 rmoveto",
                        "-26 22 -22 26 26 22 22 26 26 -22 22 -26 vhcurveto",
                        "-26 -22 -22 -26 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E8F
     */
    public void testuni1E8F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E8F");
        assertNotNull(cs);
        assertEquals("uni1E8F", cs.getName());
        String[] text =
                {"8 -230 55 577 27 94 96 hstem", "224 95 vstem",
                        "208 410 rmoveto", "5 callsubr", "16 161 rmoveto",
                        "339 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E90
     */
    public void testuni1E90() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E90");
        assertNotNull(cs);
        assertEquals("uni1E90", cs.getName());
        String[] text =
                {"103 0 39 567 40 hstem", "551 hmoveto", "-35 callsubr",
                        "286 805 rmoveto", "207 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E91
     */
    public void testuni1E91() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E91");
        assertNotNull(cs);
        assertEquals("uni1E91", cs.getName());
        String[] text =
                {"-90 0 39 352 39 216 -20 hstem", "106 430 rmoveto",
                        "6 callsubr", "-60 216 rmoveto", "", "54 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E92
     */
    public void testuni1E92() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E92");
        assertNotNull(cs);
        assertEquals("uni1E92", cs.getName());
        String[] text =
                {"103 -163 96 67 39 567 40 hstem", "268 95 vstem",
                        "551 hmoveto", "-35 callsubr", "208 -115 rmoveto",
                        "339 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E93
     */
    public void testuni1E93() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E93");
        assertNotNull(cs);
        assertEquals("uni1E93", cs.getName());
        String[] text =
                {"-90 -163 96 67 39 352 39 hstem", "160 96 vstem",
                        "106 430 rmoveto", "6 callsubr", "-142 -545 rmoveto",
                        "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E94
     */
    public void testuni1E94() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E94");
        assertNotNull(cs);
        assertEquals("uni1E94", cs.getName());
        String[] text =
                {"103 -111 44 67 39 567 40 hstem", "551 hmoveto",
                        "-35 callsubr", "366 -111 rmoveto", "171 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E95
     */
    public void testuni1E95() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E95");
        assertNotNull(cs);
        assertEquals("uni1E95", cs.getName());
        String[] text =
                {"-90 -111 44 67 39 352 39 hstem", "106 430 rmoveto",
                        "6 callsubr", "15 -541 rmoveto", "342 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E96
     */
    public void testuni1E96() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E96");
        assertNotNull(cs);
        assertEquals("uni1E96", cs.getName());
        String[] text =
                {"17 -111 44 68 27 367 47 256 -20 hstem", "88 75 198 75 vstem",
                        "361 72 rmoveto", "-19 callsubr", "19 -406 rmoveto",
                        "116 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E97
     */
    public void testuni1E97() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E97");
        assertNotNull(cs);
        assertEquals("uni1E97", cs.getName());
        String[] text =
                {"-199 -12 55 348 39 194 90 hstemhm",
                        "15 91 -17 75 -58 58 12 91 hintmask 11101010",
                        "164 391 rmoveto", "-3 callsubr", "hintmask 11100110",
                        "-2 callsubr", "hintmask 11101010", "-1 callsubr",
                        "hintmask 11110010", "-149 534 rmoveto",
                        "-25 21 -20 25 24 21 20 25 25 -21 20 -24 vhcurveto",
                        "-25 -21 -20 -25 hvcurveto", "161 hmoveto",
                        "39 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E98
     */
    public void testuni1E98() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E98");
        assertNotNull(cs);
        assertEquals("uni1E98", cs.getName());
        String[] text =
                {
                        "243 9 -21 414 27 71 27 113 27 hstem",
                        "284 32 107 32 vstem",
                        "202 410 rmoveto",
                        "3 callsubr",
                        "82 173 rmoveto",
                        "-46 39 -37 46 48 38 39 44 47 -40 37 -46 -47 -38 -38 -46 vhcurveto",
                        "86 57 rmoveto",
                        "29 24 -26 -31 -28 -22 -28 -31 -32 -22 28 28 30 23 27 31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E99
     */
    public void testuni1E99() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E99");
        assertNotNull(cs);
        assertEquals("uni1E99", cs.getName());
        String[] text =
                {
                        "8 -230 55 577 27 71 26 113 27 hstem",
                        "184 31 108 31 vstem",
                        "208 410 rmoveto",
                        "5 callsubr",
                        "-24 173 rmoveto",
                        "-47 39 -36 46 47 38 38 45 46 -40 37 -45 -47 -38 -38 -45 vhcurveto",
                        "85 56 rmoveto",
                        "30 24 -26 -30 -29 -23 -28 -31 -31 -23 28 29 29 23 27 31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E9A
     */
    public void testuni1E9A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E9A");
        assertNotNull(cs);
        assertEquals("uni1E9A", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 46 33 118 32 hstemhm",
                        "39 72 -61 73 156 33 -21 74 53 25 hintmask 1011101011000000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111110011000000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "-93 280 rmoveto",
                        "-12 -30 rlineto",
                        "10 -5 12 -2 12 0 26 0 22 10 17 17 rrcurveto",
                        "hintmask 0011100101000000",
                        "18 18 9 22 0 25 0 25 -9 22 -18 18 -17 17 -22 9 -26 0 -8 0 -8 -1 -8 -2 rrcurveto",
                        "9 -31 rlineto",
                        "4 2 6 0 5 0 17 0 14 -6 11 -11 11 -11 6 -14 0 -17 0 -16 -6 -14 -11 -11 -11 -12 -14 -6 -17 0 -8 0 -7 1 -7 3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1E9B
     */
    public void testuni1E9B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1E9B");
        assertNotNull(cs);
        assertEquals("uni1E9B", cs.getName());
        String[] text =
                {"-202 1 27 363 39 231 37 54 96 hstem", "93 75 26 96 vstem",
                        "93 72 rmoveto", "131 callsubr", "101 409 rmoveto",
                        "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA0
     */
    public void testuni1EA0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA0");
        assertNotNull(cs);
        assertEquals("uni1EA0", cs.getName());
        String[] text =
                {"194 -163 96 68 27 216 39 375 -20 hstem", "290 96 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-148 -398 rmoveto", "93 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA1
     */
    public void testuni1EA1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA1");
        assertNotNull(cs);
        assertEquals("uni1EA1", cs.getName());
        String[] text =
                {
                        "-50 -163 96 55 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 44 96 28 74 53 25 hintmask 1101011110000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 1011101110000000", "-32 callsubr",
                        "-64 257 rmoveto", "", "-31 callsubr",
                        "-124 -360 rmoveto", "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA2
     */
    public void testuni1EA2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA2");
        assertNotNull(cs);
        assertEquals("uni1EA2", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 49 -21 125 24 hstem",
                        "280 45 21 27 15 52 vstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "2 476 rmoveto",
                        "16 -15 40 -63 -55 -27 -34 -21 -12 7 -15 19 16 11 9 12 vhcurveto",
                        "0 7 -3 6 -3 3 -1 1 -1 3 0 3 rrcurveto",
                        "5 8 9 20 22 13 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -12 -12 -14 -1 -33 rrcurveto",
                        "27 hlineto",
                        "1 25 16 13 17 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA3
     */
    public void testuni1EA3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA3");
        assertNotNull(cs);
        assertEquals("uni1EA3", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 188 28 hstemhm",
                        "39 72 -61 73 15 50 -50 43 13 28 10 50 9 74 53 25 hintmask 1011010011110000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111100011110000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-9 355 rmoveto",
                        "16 -16 42 -55 vhcurveto", "hintmask 0011001011110000",
                        "348 callsubr", "hintmask 0011000111110000",
                        "-1 2 -1 3 0 3 rrcurveto",
                        "5 3 6 19 21 8 -10 -23 vhcurveto",
                        "0 -12 -5 -11 -8 -12 -11 -18 -13 -21 -1 -34 rrcurveto",
                        "28 hlineto",
                        "2 26 10 16 17 17 17 15 14 16 0 21 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA4
     */
    public void testuni1EA4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA4");
        assertNotNull(cs);
        assertEquals("uni1EA4", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 hstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-59 522 rmoveto",
                        "26 callsubr",
                        "177 59 rmoveto",
                        "-87 -70 rlineto",
                        "-9 -6 -2 -5 0 -5 0 -8 4 -4 6 0 6 0 9 3 16 6 rrcurveto",
                        "100 47 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA5
     */
    public void testuni1EA5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA5");
        assertNotNull(cs);
        assertEquals("uni1EA5", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 204 -20 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10110111",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 01111011",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "-51 401 rmoveto",
                        "54 callsubr",
                        "143 67 rmoveto",
                        "-56 -100 rlineto",
                        "-4 -9 -1 -5 0 -4 0 -6 5 -4 6 0 4 0 5 4 11 12 rrcurveto",
                        "80 87 -1 8 rlineto",
                        "-2 1 -1 2 -2 1 -6 6 -8 9 -20 0 -3 0 -5 -1 -2 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA6
     */
    public void testuni1EA6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA6");
        assertNotNull(cs);
        assertEquals("uni1EA6", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-59 522 rmoveto", "26 callsubr", "-212 58 rmoveto",
                        "-53 -36 108 -51 rlineto",
                        "15 -6 9 -3 6 0 7 0 3 4 0 8 0 5 -2 6 -8 5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA7
     */
    public void testuni1EA7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA7");
        assertNotNull(cs);
        assertEquals("uni1EA7", cs.getName());
        String[] text =
                {"-50 -12 48 -48 41 383 30 204 -20 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 10110111",
                        "355 -12 rmoveto", "-33 callsubr", "hintmask 01111011",
                        "-32 callsubr", "-64 257 rmoveto", "-31 callsubr",
                        "-51 401 rmoveto", "54 callsubr", "-178 67 rmoveto",
                        "-3 1 -4 1 -4 0 -24 0 -16 -14 -5 -5 rrcurveto",
                        "-2 -8 80 -87 rlineto",
                        "11 -12 5 -4 4 0 6 0 5 5 0 4 0 6 -1 5 -4 8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA8
     */
    public void testuni1EA8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA8");
        assertNotNull(cs);
        assertEquals("uni1EA8", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 209 25 hstem",
                        "439 45 22 26 16 52 vstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "-59 522 rmoveto",
                        "26 callsubr",
                        "221 10 rmoveto",
                        "17 -15 40 -64 -54 -28 -35 -21 -12 7 -14 20 16 11 8 12 vhcurveto",
                        "0 7 -4 6 -2 3 -2 2 -1 2 0 3 rrcurveto",
                        "5 9 9 19 22 14 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -11 -13 -15 0 -33 rrcurveto",
                        "26 hlineto",
                        "2 26 15 12 18 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EA9
     */
    public void testuni1EA9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EA9");
        assertNotNull(cs);
        assertEquals("uni1EA9", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 204 -20 101 27 hstemhm",
                        "39 72 -61 73 144 49 -49 43 -19 74 -42 28 10 50 7 25 hintmask 1011101001001000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111110001001000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "-51 401 rmoveto",
                        "54 callsubr",
                        "hintmask 0011100100011000",
                        "171 50 rmoveto",
                        "16 -17 42 -54 -42 -31 -35 -23 -11 8 -16 18 10 13 10 12 vhcurveto",
                        "0 7 -3 7 -1 3 rrcurveto", "hintmask 0011100010111000",
                        "-1 1 -1 3 0 3 rrcurveto",
                        "5 2 7 19 21 9 -11 -23 vhcurveto",
                        "0 -11 -6 -12 -7 -12 -12 -17 -13 -22 0 -34 rrcurveto",
                        "28 hlineto", "1 26 11 16 17 17 rrcurveto",
                        "16 16 15 15 0 21 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EAA
     */
    public void testuni1EAA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EAA");
        assertNotNull(cs);
        assertEquals("uni1EAA", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 161 42 4 43 hstem",
                        "434 841 rmoveto",
                        "-21 0 -18 10 -19 11 -21 13 -24 13 -34 0 -47 0 -25 -28 -15 -56 rrcurveto",
                        "26 -5 rlineto",
                        "11 32 14 14 29 0 19 0 20 -11 21 -10 22 -13 24 -12 23 0 52 0 31 29 13 57 rrcurveto",
                        "-26 6 rlineto", "-16 -40 -15 -10 -24 0 rrcurveto",
                        "-294 -769 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-59 496 rmoveto", "-43 hlineto",
                        "-30 -34 -32 -32 -37 -28 rrcurveto", "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 34 -20 39 -17 rrcurveto",
                        "16 21 rlineto", "-36 27 -35 30 -30 37 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EAB
     */
    public void testuni1EAB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EAB");
        assertNotNull(cs);
        assertEquals("uni1EAB", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 204 -20 71 44 4 46 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 1011110111000000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111111011000000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "-51 401 rmoveto",
                        "54 callsubr",
                        "43 95 rmoveto",
                        "-19 0 -16 11 -17 11 -20 14 -22 14 -30 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 19 -11 20 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EAC
     */
    public void testuni1EAC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EAC");
        assertNotNull(cs);
        assertEquals("uni1EAC", cs.getName());
        String[] text =
                {"187 -163 96 68 27 216 39 375 -20 hstem", "290 96 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-148 -398 rmoveto", "93 callsubr",
                        "89 919 rmoveto", "-43 hlineto",
                        "-30 -33 -32 -33 -37 -28 rrcurveto", "14 -21 rlineto",
                        "38 17 32 18 37 27 33 -25 34 -19 39 -18 rrcurveto",
                        "16 21 rlineto", "-36 27 -35 31 -30 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EAD
     */
    public void testuni1EAD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EAD");
        assertNotNull(cs);
        assertEquals("uni1EAD", cs.getName());
        String[] text =
                {
                        "-45 -163 96 55 48 -48 41 383 30 203 -20 hstemhm",
                        "39 72 -61 73 44 96 28 74 53 25 hintmask 1101101111000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 1011110111000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-124 -360 rmoveto",
                        "92 callsubr", "81 760 rmoveto", "349 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EAE
     */
    public void testuni1EAE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EAE");
        assertNotNull(cs);
        assertEquals("uni1EAE", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 53 53 hstem",
                        "140 72 rmoveto",
                        "-82 callsubr",
                        "119 211 rmoveto",
                        "-81 callsubr",
                        "55 522 rmoveto",
                        "83 callsubr",
                        "-77 87 rmoveto",
                        "-96 -77 rlineto",
                        "-9 -7 -2 -5 0 -6 0 -8 3 -5 8 0 6 0 10 3 17 7 rrcurveto",
                        "111 51 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EAF
     */
    public void testuni1EAF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EAF");
        assertNotNull(cs);
        assertEquals("uni1EAF", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 57 hstemhm",
                        "39 72 -61 73 -52 27 193 74 -51 27 77 25 hintmask 1011010101000000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111100101000000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "hintmask 0011001011000000",
                        "-193 404 rmoveto",
                        "84 callsubr",
                        "143 90 rmoveto",
                        "-61 -110 rlineto",
                        "-5 -9 0 -6 0 -5 0 -6 5 -5 6 0 5 0 5 5 12 13 rrcurveto",
                        "88 95 -1 10 rlineto",
                        "-2 1 -1 2 -2 1 -6 7 -10 9 -22 0 -3 0 -5 0 -3 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB0
     */
    public void testuni1EB0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB0");
        assertNotNull(cs);
        assertEquals("uni1EB0", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 53 53 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "55 522 rmoveto", "83 callsubr", "-185 83 rmoveto",
                        "-59 -40 119 -55 rlineto",
                        "17 -8 10 -2 6 0 8 0 4 4 0 8 0 6 -4 6 -8 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB1
     */
    public void testuni1EB1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB1");
        assertNotNull(cs);
        assertEquals("uni1EB1", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 57 hstemhm",
                        "39 72 -61 73 -52 27 193 74 -51 27 77 25 hintmask 1011010101000000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 0111100101000000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr",
                        "hintmask 0011001011000000", "-193 404 rmoveto",
                        "84 callsubr", "80 100 rmoveto",
                        "-3 1 -5 1 -4 0 -26 0 -18 -15 -6 -6 rrcurveto",
                        "-2 -9 89 -96 rlineto",
                        "12 -13 5 -4 5 0 6 0 5 5 0 5 0 6 -1 6 -4 9 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB2
     */
    public void testuni1EB2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB2");
        assertNotNull(cs);
        assertEquals("uni1EB2", cs.getName());
        String[] text =
                {
                        "194 1 27 217 39 374 -20 75 -21 177 25 hstem",
                        "278 45 64 52 vstem",
                        "140 72 rmoveto",
                        "65 155 rlineto",
                        "4 12 8 6 24 0 rrcurveto",
                        "211 0 64 -173 rlineto",
                        "2 -6 1 -5 0 -5 rrcurveto",
                        "-17 -16 -11 -31 vhcurveto",
                        "-28 hlineto",
                        "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -1 rlineto",
                        "0 98 1 35 39 77 -1 0 vhcurveto",
                        "3 1 0 19 rlineto",
                        "5 -5 3 -5 vhcurveto",
                        "-11 hlineto",
                        "-40 0 -20 20 -14 39 rrcurveto",
                        "-205 542 rlineto",
                        "-8 20 -8 9 -18 0 -10 0 -8 -7 -9 -22 rrcurveto",
                        "-234 -547 rlineto",
                        "-14 -34 -18 -20 -41 0 rrcurveto",
                        "-12 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -1 rlineto",
                        "0 64 1 26 24 99 -1 0 vhcurveto",
                        "2 1 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-29 hlineto",
                        "-30 -16 9 17 hvcurveto",
                        "0 5 1 6 3 7 rrcurveto",
                        "119 212 rmoveto",
                        "-19 -7 3 6 hvcurveto",
                        "0 2 1 3 1 3 rrcurveto",
                        "104 249 99 -266 rlineto",
                        "1 553 rmoveto",
                        "17 -15 40 -64 -54 -28 -35 -21 -12 7 -14 20 16 11 8 12 vhcurveto",
                        "0 7 -4 6 -2 3 -2 2 -1 2 0 3 rrcurveto",
                        "5 9 9 19 22 14 -12 -23 vhcurveto",
                        "0 -14 -9 -8 -8 -9 -13 -11 -12 -15 0 -32 -48 3 -39 22 -8 35 rrcurveto",
                        "-28 hlineto",
                        "6 -70 57 -43 73 0 66 0 63 42 6 71 rrcurveto",
                        "-27 hlineto",
                        "-7 -35 -43 -22 -45 -3 2 25 15 12 18 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB3
     */
    public void testuni1EB3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB3");
        assertNotNull(cs);
        assertEquals("uni1EB3", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 57 130 -21 57 27 hstemhm",
                        "39 72 -61 73 -52 27 37 43 13 28 10 50 12 74 -51 27 77 25 hintmask 1011110101111010",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111111001111010",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "hintmask 0011110011110110",
                        "-193 404 rmoveto",
                        "84 callsubr",
                        "181 43 rmoveto",
                        "16 -16 42 -55 -41 -32 -35 -23 -11 9 -15 18 9 14 9 12 vhcurveto",
                        "0 7 -3 7 -2 3 -1 2 -1 2 0 3 rrcurveto",
                        "5 3 7 19 21 8 -11 -23 vhcurveto",
                        "0 -11 -5 -12 -8 -12 -11 -17 -13 -22 -1 -34 rrcurveto",
                        "28 hlineto",
                        "2 26 10 17 18 16 16 16 14 15 0 21 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB4
     */
    public void testuni1EB4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB4");
        assertNotNull(cs);
        assertEquals("uni1EB4", cs.getName());
        String[] text =
                {
                        "194 1 27 216 39 375 -20 34 52 75 42 4 43 hstem",
                        "429 841 rmoveto",
                        "-21 0 -18 10 -19 11 -21 13 -24 13 -34 0 -48 0 -24 -28 -15 -56 rrcurveto",
                        "25 -5 rlineto",
                        "11 32 15 14 28 0 20 0 20 -11 20 -10 23 -13 23 -12 24 0 51 0 31 29 14 57 rrcurveto",
                        "-27 6 rlineto", "-15 -40 -16 -10 -23 0 rrcurveto",
                        "-289 -769 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "55 502 rmoveto", "-27 hlineto",
                        "-7 -39 -52 -22 -49 0 -53 0 -47 22 -8 39 rrcurveto",
                        "-28 hlineto",
                        "6 -70 57 -43 73 0 66 0 63 42 6 71 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB5
     */
    public void testuni1EB5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB5");
        assertNotNull(cs);
        assertEquals("uni1EB5", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 58 57 138 44 5 46 hstemhm",
                        "39 72 -61 73 -52 27 193 74 -51 27 77 25 hintmask 1011110101010000",
                        "355 -12 rmoveto",
                        "-33 callsubr",
                        "hintmask 0111111001010000",
                        "-32 callsubr",
                        "-64 257 rmoveto",
                        "-31 callsubr",
                        "hintmask 0011110010110000",
                        "-193 404 rmoveto",
                        "84 callsubr",
                        "177 90 rmoveto",
                        "-19 0 -17 11 -16 12 -20 13 -22 15 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "9 33 14 15 26 0 17 0 19 -11 18 -12 21 -13 21 -13 22 0 46 0 28 31 13 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -15 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB6
     */
    public void testuni1EB6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB6");
        assertNotNull(cs);
        assertEquals("uni1EB6", cs.getName());
        String[] text =
                {"187 -163 96 68 27 216 39 375 -20 53 53 hstem",
                        "290 96 vstem", "140 72 rmoveto", "-82 callsubr",
                        "119 211 rmoveto", "-81 callsubr", "-148 -398 rmoveto",
                        "93 callsubr", "199 920 rmoveto", "-27 hlineto",
                        "-6 -39 -52 -22 -49 0 -53 0 -47 22 -8 39 rrcurveto",
                        "-28 hlineto",
                        "5 -70 57 -44 74 0 65 0 63 42 6 72 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB7
     */
    public void testuni1EB7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB7");
        assertNotNull(cs);
        assertEquals("uni1EB7", cs.getName());
        String[] text =
                {
                        "-45 -163 96 55 48 -48 41 383 30 57 57 hstemhm",
                        "39 72 -61 73 -44 26 62 96 28 74 -43 27 69 25 hintmask 1101101011010000",
                        "355 -12 rmoveto", "-33 callsubr",
                        "hintmask 1011110011010000", "-32 callsubr",
                        "-64 257 rmoveto", "-31 callsubr", "-124 -360 rmoveto",
                        "92 callsubr", "hintmask 1001100110110000",
                        "-62 763 rmoveto", "344 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB8
     */
    public void testuni1EB8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB8");
        assertNotNull(cs);
        assertEquals("uni1EB8", cs.getName());
        String[] text =
                {"68 -163 96 66 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 61 95 38 25 hintmask 1001110111000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 1001101111000000", "-66 callsubr",
                        "hintmask 1001110111000000", "-65 callsubr",
                        "hintmask 1101101111000000", "-64 callsubr",
                        "hintmask 1011110111000000", "-63 callsubr",
                        "25 -721 rmoveto", "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EB9
     */
    public void testuni1EB9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EB9");
        assertNotNull(cs);
        assertEquals("uni1EB9", cs.getName());
        String[] text =
                {"-73 -163 96 55 49 201 39 131 34 hstem",
                        "34 76 70 95 37 80 vstem", "378 93 rmoveto",
                        "-23 callsubr", "-284 200 rmoveto", "-22 callsubr",
                        "-118 -392 rmoveto", "87 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EBA
     */
    public void testuni1EBA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EBA");
        assertNotNull(cs);
        assertEquals("uni1EBA", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 41 -21 125 24 hstemhm",
                        "102 80 35 45 21 27 15 52 -1 25 hintmask 0011101111101000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011111101000", "-66 callsubr",
                        "hintmask 0011101111101000", "-65 callsubr",
                        "hintmask 1011011111101000", "-64 callsubr",
                        "hintmask 0111101111101000", "-63 callsubr",
                        "hintmask 0011001111110000", "159 153 rmoveto",
                        "350 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EBB
     */
    public void testuni1EBB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EBB");
        assertNotNull(cs);
        assertEquals("uni1EBB", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 188 28 hstemhm",
                        "34 76 43 50 -50 43 14 28 10 50 14 80 hintmask 1111100111000000",
                        "378 93 rmoveto", "-23 callsubr", "-284 200 rmoveto",
                        "-22 callsubr", "323 vmoveto",
                        "16 -17 42 -54 vhcurveto", "hintmask 1111110111000000",
                        "351 callsubr", "hintmask 1111101111000000",
                        "352 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EBC
     */
    public void testuni1EBC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EBC");
        assertNotNull(cs);
        assertEquals("uni1EBC", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 42 44 5 46 hstemhm",
                        "102 80 194 25 hintmask 0011101111000000",
                        "353 606 rmoveto",
                        "-67 callsubr",
                        "hintmask 0011011111000000",
                        "-66 callsubr",
                        "hintmask 0011101111000000",
                        "",
                        "-65 callsubr",
                        "hintmask 1011011111000000",
                        "-64 callsubr",
                        "hintmask 0111101111000000",
                        "-63 callsubr",
                        "162 126 rmoveto",
                        "-19 0 -16 11 -17 12 -19 14 -22 14 -31 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 18 0 18 -11 19 -12 20 -13 21 -13 22 0 47 0 28 31 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EBD
     */
    public void testuni1EBD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EBD");
        assertNotNull(cs);
        assertEquals("uni1EBD", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 83 44 5 46 hstem",
                        "34 76 202 80 vstem",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "-9 292 rmoveto",
                        "-19 0 -17 11 -16 12 -20 13 -22 15 -30 0 -43 0 -23 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 18 -12 21 -13 21 -13 22 0 46 0 29 31 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EBE
     */
    public void testuni1EBE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EBE");
        assertNotNull(cs);
        assertEquals("uni1EBE", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011",
                        "353 606 rmoveto",
                        "-67 callsubr",
                        "hintmask 00110111",
                        "-66 callsubr",
                        "hintmask 00111011",
                        "-65 callsubr",
                        "hintmask 10110111",
                        "-64 callsubr",
                        "hintmask 01111011",
                        "-63 callsubr",
                        "99 199 rmoveto",
                        "35 callsubr",
                        "178 56 rmoveto",
                        "-86 -69 rlineto",
                        "-9 -7 -2 -4 0 -6 0 -7 4 -4 6 0 6 0 9 2 15 7 rrcurveto",
                        "101 46 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EBF
     */
    public void testuni1EBF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EBF");
        assertNotNull(cs);
        assertEquals("uni1EBF", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 204 -20 hstem",
                        "34 76 202 80 vstem",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "-40 369 rmoveto",
                        "54 callsubr",
                        "137 67 rmoveto",
                        "-56 -100 rlineto",
                        "-5 -9 0 -5 0 -4 0 -6 5 -4 5 0 5 0 5 4 11 12 rrcurveto",
                        "80 87 -2 8 -4 4 rlineto", "",
                        "-6 6 -9 9 -19 0 -4 0 -5 -1 -1 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC0
     */
    public void testuni1EC0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC0");
        assertNotNull(cs);
        assertEquals("uni1EC0", cs.getName());
        String[] text =
                {"68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 194 25 hintmask 00111011", "353 606 rmoveto",
                        "-67 callsubr", "hintmask 00110111", "-66 callsubr",
                        "hintmask 00111011", "-65 callsubr",
                        "hintmask 10110111", "-64 callsubr",
                        "hintmask 01111011", "-63 callsubr", "99 199 rmoveto",
                        "35 callsubr", "-213 58 rmoveto",
                        "-54 -36 109 -51 rlineto",
                        "15 -6 9 -3 6 0 6 0 4 4 0 8 0 5 -3 6 -8 5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC1
     */
    public void testuni1EC1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC1");
        assertNotNull(cs);
        assertEquals("uni1EC1", cs.getName());
        String[] text =
                {"-73 -12 49 201 39 131 34 204 -20 hstem",
                        "34 76 202 80 vstem", "378 93 rmoveto", "-23 callsubr",
                        "-284 200 rmoveto", "-22 callsubr", "-40 369 rmoveto",
                        "54 callsubr", "-173 67 rmoveto",
                        "-2 1 -5 1 -4 0 -23 0 -16 -13 -6 -6 rrcurveto",
                        "-2 -8 80 -87 rlineto",
                        "12 -12 5 -4 4 0 5 0 5 5 0 4 0 6 -1 5 -3 8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC2
     */
    public void testuni1EC2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC2");
        assertNotNull(cs);
        assertEquals("uni1EC2", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 204 25 hstemhm",
                        "102 80 157 45 -8 25 4 27 15 53 hintmask 0011001110110000",
                        "500 818 rmoveto",
                        "16 -16 41 -63 -55 -27 -35 -21 -12 7 -15 19 16 11 9 12 vhcurveto",
                        "0 7 -3 6 -3 3 -1 2 -1 2 0 3 rrcurveto",
                        "5 8 9 20 22 13 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -12 -12 -14 -1 -33 rrcurveto",
                        "27 hlineto", "1 25 16 13 17 11 rrcurveto",
                        "17 11 17 11 0 22 rrcurveto",
                        "hintmask 0011101110110000", "-147 -212 rmoveto",
                        "-67 callsubr", "hintmask 0011011110110000",
                        "-66 callsubr", "hintmask 0011101110110000",
                        "-65 callsubr", "hintmask 1011011110110000",
                        "-64 callsubr", "hintmask 0111101110110000",
                        "77 -1 294 0 rlineto", "5 56 10 57 12 52 rrcurveto",
                        "", "-31 5 rlineto", "-20 -72 -29 -59 -76 0 rrcurveto",
                        "-166 hlineto", "-22 -14 6 27 hvcurveto",
                        "255 137 vlineto", "34 0 11 -15 5 -29 rrcurveto",
                        "6 -31 rlineto", "-3 3 -4 5 vhcurveto",
                        "23 0 3 3 rlineto", "hintmask 0011101101110000",
                        "-3 17 -5 45 0 34 0 33 4 37 4 25 rrcurveto",
                        "2 -1 2 -3 vhcurveto", "-22 hlineto",
                        "-4 -3 -4 -4 hvcurveto", "-7 -30 rlineto",
                        "-6 -28 -9 -16 -35 0 rrcurveto", "-137 213 hlineto",
                        "24 12 8 24 vhcurveto", "63 199 rmoveto",
                        "35 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC3
     */
    public void testuni1EC3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC3");
        assertNotNull(cs);
        assertEquals("uni1EC3", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 204 -20 101 27 hstemhm",
                        "34 76 174 49 -49 43 -15 80 -52 28 10 50 hintmask 1111110000100000",
                        "378 93 rmoveto",
                        "-35 -38 -35 -18 -55 0 -72 0 -71 79 0 102 0 8 0 6 1 6 rrcurveto",
                        "263 hlineto",
                        "hintmask 1111110010000000",
                        "11 7 6 11 84 -31 103 -132 -95 -100 -91 -152 -109 58 -102 137 hvcurveto",
                        "72 0 59 37 38 52 rrcurveto",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "-40 369 rmoveto",
                        "54 callsubr",
                        "hintmask 1111111000100000",
                        "170 50 rmoveto",
                        "16 -17 42 -54 -42 -31 -35 -23 -11 8 -16 19 9 13 10 12 vhcurveto",
                        "0 7 -2 7 -2 3 rrcurveto", "hintmask 1111110101100000",
                        "-1 1 -1 3 0 3 rrcurveto",
                        "5 3 7 19 20 9 -11 -23 vhcurveto",
                        "0 -11 -5 -12 -8 -12 -11 -17 -13 -22 -1 -34 rrcurveto",
                        "28 hlineto", "1 26 11 16 17 17 rrcurveto",
                        "17 16 14 15 0 21 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC4
     */
    public void testuni1EC4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC4");
        assertNotNull(cs);
        assertEquals("uni1EC4", cs.getName());
        String[] text =
                {
                        "68 -1 29 -28 39 288 34 82 -20 183 40 -28 28 152 42 4 43 hstemhm",
                        "102 80 194 25 hintmask 0011001111000000",
                        "368 840 rmoveto",
                        "-21 0 -18 10 -19 11 -21 13 -24 13 -35 0 -46 0 -25 -28 -15 -56 rrcurveto",
                        "25 -5 rlineto",
                        "11 32 15 14 28 0 19 0 21 -11 20 -10 23 -13 23 -12 24 0 51 0 32 29 13 57 rrcurveto",
                        "-27 6 rlineto", "-15 -40 -16 -10 -23 0 rrcurveto",
                        "hintmask 0011101111000000", "-15 -234 rmoveto",
                        "-67 callsubr", "hintmask 0011011111000000",
                        "-66 callsubr", "hintmask 0011101111000000",
                        "-65 callsubr", "hintmask 1011011111000000",
                        "-64 callsubr", "hintmask 0111101111000000",
                        "-63 callsubr", "99 167 rmoveto", "-43 hlineto",
                        "-30 -33 -32 -32 -37 -29 rrcurveto", "14 -20 rlineto",
                        "38 16 32 18 37 27 33 -25 34 -19 39 -17 rrcurveto",
                        "16 20 rlineto", "-36 28 -35 30 -30 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC5
     */
    public void testuni1EC5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC5");
        assertNotNull(cs);
        assertEquals("uni1EC5", cs.getName());
        String[] text =
                {
                        "-73 -12 49 201 39 131 34 204 -20 67 44 4 46 hstem",
                        "34 76 202 80 vstem",
                        "378 93 rmoveto",
                        "-23 callsubr",
                        "-284 200 rmoveto",
                        "-22 callsubr",
                        "-40 369 rmoveto",
                        "54 callsubr",
                        "45 91 rmoveto",
                        "-19 0 -16 11 -17 11 -20 14 -22 14 -30 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 34 13 14 26 0 17 0 19 -11 19 -11 20 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 7 rlineto", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC6
     */
    public void testuni1EC6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC6");
        assertNotNull(cs);
        assertEquals("uni1EC6", cs.getName());
        String[] text =
                {"68 -163 96 66 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "102 80 61 95 38 25 hintmask 1001110111000000",
                        "353 606 rmoveto", "-67 callsubr",
                        "hintmask 1001101111000000", "-66 callsubr",
                        "hintmask 1001110111000000", "-65 callsubr",
                        "hintmask 1101101111000000", "-64 callsubr",
                        "hintmask 1011110111000000", "-63 callsubr",
                        "25 -721 rmoveto", "87 callsubr", "97 921 rmoveto",
                        "-43 hlineto", "-31 -34 -32 -32 -37 -28 rrcurveto",
                        "14 -21 rlineto",
                        "39 17 32 18 36 27 34 -25 34 -20 39 -17 rrcurveto",
                        "15 21 rlineto", "-36 27 -34 31 -30 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC7
     */
    public void testuni1EC7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC7");
        assertNotNull(cs);
        assertEquals("uni1EC7", cs.getName());
        String[] text =
                {"-65 -163 96 55 49 201 39 131 34 204 -20 hstem",
                        "34 76 70 95 37 80 vstem", "378 93 rmoveto",
                        "-23 callsubr", "-284 200 rmoveto", "-22 callsubr",
                        "-118 -392 rmoveto", "87 callsubr", "73 761 rmoveto",
                        "-49 hlineto", "-30 -46 -38 -43 -35 -40 rrcurveto",
                        "20 -14 rlineto",
                        "37 27 32 25 38 38 33 -36 34 -25 39 -29 rrcurveto",
                        "20 14 rlineto", "-35 40 -37 42 -29 47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC8
     */
    public void testuni1EC8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC8");
        assertNotNull(cs);
        assertEquals("uni1EC8", cs.getName());
        String[] text =
                {"-208 1 27 590 27 42 -21 125 24 hstemhm",
                        "70 45 -9 81 -51 27 15 52 hintmask 11110100",
                        "187 574 rmoveto", "-58 callsubr", "hintmask 11111011",
                        "43 688 rmoveto", "350 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EC9
     */
    public void testuni1EC9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EC9");
        assertNotNull(cs);
        assertEquals("uni1EC9", cs.getName());
        String[] text =
                {
                        "-237 1 27 414 -20 208 28 hstemhm",
                        "64 50 -50 43 -8 74 -53 28 10 50 hintmask 11100100",
                        "173 72 rmoveto",
                        "370 vlineto",
                        "hintmask 11100001",
                        "-15 hlineto",
                        "-7 0 -7 -4 -11 -4 -29 -14 -11 -4 -64 -11 rrcurveto",
                        "5 -28 rlineto",
                        "17 4 12 1 13 0 rrcurveto",
                        "hintmask 11100100",
                        "14 9 -8 -53 hvcurveto",
                        "-249 vlineto",
                        "-29 -10 -15 -33 vhcurveto",
                        "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-19 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "hintmask 11110001",
                        "35 528 rmoveto",
                        "16 -17 42 -54 -42 -31 -36 -22 -12 8 -15 19 9 14 10 12 vhcurveto",
                        "0 7 -3 6 -2 3 rrcurveto", "hintmask 11101011",
                        "-1 2 -1 2 0 4 rrcurveto",
                        "5 3 6 18 21 9 -10 -23 vhcurveto",
                        "0 -12 -5 -11 -8 -12 -11 -18 -13 -21 -1 -34 rrcurveto",
                        "28 hlineto", "1 26 11 16 18 17 rrcurveto",
                        "16 15 14 16 0 21 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ECA
     */
    public void testuni1ECA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ECA");
        assertNotNull(cs);
        assertEquals("uni1ECA", cs.getName());
        String[] text =
                {"-208 -163 96 68 27 590 27 hstemhm",
                        "103 96 -93 81 hintmask 11101000", "187 574 rmoveto",
                        "-58 callsubr", "hintmask 11110000",
                        "-84 -186 rmoveto", "149 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ECB
     */
    public void testuni1ECB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ECB");
        assertNotNull(cs);
        assertEquals("uni1ECB", cs.getName());
        String[] text =
                {"-237 -163 96 68 27 414 -20 101 96 hstemhm",
                        "78 95 -84 96 -86 74 hintmask 11110010",
                        "173 72 rmoveto", "-18 callsubr", "hintmask 11111000",
                        "-95 499 rmoveto", "-17 callsubr", "hintmask 11110100",
                        "11 -686 rmoveto", "-15 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ECC
     */
    public void testuni1ECC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ECC");
        assertNotNull(cs);
        assertEquals("uni1ECC", cs.getName());
        String[] text =
                {"197 -163 96 55 34 602 34 hstem", "37 91 180 95 167 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-26 -739 rmoveto", "339 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ECD
     */
    public void testuni1ECD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ECD");
        assertNotNull(cs);
        assertEquals("uni1ECD", cs.getName());
        String[] text =
                {"-22 -163 96 55 35 386 33 hstem", "34 79 83 96 75 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "162 -320 rmoveto", "92 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ECE
     */
    public void testuni1ECE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ECE");
        assertNotNull(cs);
        assertEquals("uni1ECE", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 53 -21 125 24 hstem",
                        "37 91 136 45 21 26 16 52 146 92 vstem",
                        "662 329 rmoveto",
                        "-50 callsubr",
                        "-328 295 rmoveto",
                        "-49 callsubr",
                        "90 159 rmoveto",
                        "16 -15 40 -63 -55 -27 -34 -21 -12 7 -15 19 16 11 9 12 vhcurveto",
                        "0 7 -4 6 -2 2 -1 2 -1 3 0 3 rrcurveto",
                        "5 8 9 19 22 14 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -12 -12 -14 -1 -33 rrcurveto",
                        "26 hlineto",
                        "2 25 16 13 17 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ECF
     */
    public void testuni1ECF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ECF");
        assertNotNull(cs);
        assertEquals("uni1ECF", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 188 28 hstemhm",
                        "34 79 52 50 -50 43 13 28 10 50 58 79 hintmask 1111001110000000",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "275 395 rmoveto",
                        "16 -17 42 -54 vhcurveto", "hintmask 1111101110000000",
                        "348 callsubr", "hintmask 1111011110000000",
                        "-1 2 -1 3 0 3 rrcurveto",
                        "5 3 6 18 21 9 -10 -23 vhcurveto",
                        "0 -12 -5 -11 -8 -12 -11 -18 -13 -21 -1 -34 rrcurveto",
                        "28 hlineto",
                        "1 26 11 16 17 17 16 15 15 16 0 21 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED0
     */
    public void testuni1ED0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED0");
        assertNotNull(cs);
        assertEquals("uni1ED0", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 hstem",
                        "37 91 442 92 vstem",
                        "662 329 rmoveto",
                        "-50 callsubr",
                        "-328 295 rmoveto",
                        "-49 callsubr",
                        "34 181 rmoveto",
                        "43 callsubr",
                        "173 51 rmoveto",
                        "-87 -69 rlineto",
                        "-9 -7 -2 -4 0 -5 0 -8 4 -4 7 0 5 0 10 2 15 7 rrcurveto",
                        "100 46 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED1
     */
    public void testuni1ED1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED1");
        assertNotNull(cs);
        assertEquals("uni1ED1", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 204 -20 hstem",
                        "34 79 254 79 vstem",
                        "230 409 rmoveto",
                        "-10 callsubr",
                        "-196 -204 rmoveto",
                        "-9 callsubr",
                        "234 441 rmoveto",
                        "74 callsubr",
                        "134 67 rmoveto",
                        "-55 -100 rlineto",
                        "-5 -9 0 -5 0 -4 0 -6 5 -4 5 0 4 0 5 4 12 12 rrcurveto",
                        "80 87 -2 8 -4 4 rlineto",
                        "-6 6 -9 9 -19 0 -4 0 -5 -1 -2 -1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED2
     */
    public void testuni1ED2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED2");
        assertNotNull(cs);
        assertEquals("uni1ED2", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "34 181 rmoveto", "43 callsubr",
                        "-211 61 rmoveto", "-53 -37 108 -50 rlineto",
                        "16 -7 8 -2 7 0 6 0 3 3 0 8 0 6 -2 5 -8 6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED3
     */
    public void testuni1ED3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED3");
        assertNotNull(cs);
        assertEquals("uni1ED3", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 204 -20 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "234 441 rmoveto", "74 callsubr",
                        "-183 67 rmoveto",
                        "-2 1 -5 1 -3 0 -24 0 -16 -14 -6 -5 rrcurveto",
                        "-2 -8 81 -87 rlineto",
                        "11 -12 5 -4 4 0 5 0 5 4 0 4 0 6 0 6 -4 8 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED4
     */
    public void testuni1ED4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED4");
        assertNotNull(cs);
        assertEquals("uni1ED4", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 193 24 hstemhm",
                        "37 91 289 45 21 27 15 53 -8 92 hintmask 11111101",
                        "662 329 rmoveto",
                        "44 callsubr",
                        "-328 295 rmoveto",
                        "-49 callsubr",
                        "34 181 rmoveto",
                        "43 callsubr",
                        "hintmask 11111110",
                        "210 14 rmoveto",
                        "16 -16 40 -63 -55 -27 -34 -21 -12 7 -15 19 16 11 9 12 vhcurveto",
                        "0 7 -3 6 -3 3 -1 2 -1 2 0 3 rrcurveto",
                        "5 8 9 20 22 13 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -12 -12 -14 -1 -33 rrcurveto",
                        "27 hlineto", "1 25 16 13 17 11 rrcurveto",
                        "18 11 16 11 0 22 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED5
     */
    public void testuni1ED5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED5");
        assertNotNull(cs);
        assertEquals("uni1ED5", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 204 -20 101 27 hstemhm",
                        "34 79 183 50 -50 43 13 28 -13 79 -56 50 hintmask 1111100010000000",
                        "230 409 rmoveto",
                        "75 callsubr",
                        "-196 -204 rmoveto",
                        "-9 callsubr",
                        "234 441 rmoveto",
                        "74 callsubr",
                        "hintmask 1111110001000000",
                        "172 50 rmoveto",
                        "17 -17 41 -54 -42 -31 -35 -22 -12 8 -15 19 9 14 10 11 vhcurveto",
                        "0 7 -3 7 -2 3 rrcurveto", "hintmask 1111101101000000",
                        "-1 2 -1 2 0 4 rrcurveto",
                        "5 3 6 18 21 9 -10 -24 vhcurveto",
                        "0 -11 -5 -12 -8 -12 -11 -17 -13 -21 -1 -35 rrcurveto",
                        "28 hlineto", "1 26 11 17 17 17 rrcurveto",
                        "16 15 15 15 0 21 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED6
     */
    public void testuni1ED6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED6");
        assertNotNull(cs);
        assertEquals("uni1ED6", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 140 42 4 43 hstem",
                        "37 91 442 92 vstem",
                        "424 840 rmoveto",
                        "-21 0 -18 10 -19 11 -21 13 -24 13 -34 0 -48 0 -24 -28 -15 -56 rrcurveto",
                        "26 -5 rlineto",
                        "10 32 15 14 28 0 20 0 20 -11 20 -10 23 -13 23 -12 24 0 51 0 31 29 14 57 rrcurveto",
                        "-26 6 rlineto", "-16 -40 -16 -10 -23 0 rrcurveto",
                        "238 -511 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "34 153 rmoveto", "-43 hlineto",
                        "-31 -33 -32 -33 -37 -28 rrcurveto", "14 -20 rlineto",
                        "38 16 33 18 36 27 33 -25 35 -19 39 -17 rrcurveto",
                        "15 20 rlineto", "-36 27 -35 31 -29 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED7
     */
    public void testuni1ED7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED7");
        assertNotNull(cs);
        assertEquals("uni1ED7", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 204 -20 71 44 5 46 hstem",
                        "34 79 254 79 vstem", "230 409 rmoveto",
                        "-10 callsubr", "-196 -204 rmoveto", "-9 callsubr",
                        "234 441 rmoveto", "74 callsubr", "47 95 rmoveto",
                        "104 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED8
     */
    public void testuni1ED8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED8");
        assertNotNull(cs);
        assertEquals("uni1ED8", cs.getName());
        String[] text =
                {"197 -163 96 55 34 602 34 hstem", "37 91 180 95 167 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-26 -739 rmoveto", "339 callsubr",
                        "62 921 rmoveto", "-43 hlineto",
                        "-31 -34 -32 -32 -37 -28 rrcurveto", "14 -21 rlineto",
                        "38 17 33 18 36 27 33 -25 35 -20 39 -17 rrcurveto",
                        "15 21 rlineto", "-36 27 -35 31 -29 36 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1ED9
     */
    public void testuni1ED9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1ED9");
        assertNotNull(cs);
        assertEquals("uni1ED9", cs.getName());
        String[] text =
                {"-22 -163 96 55 35 386 33 205 -20 hstem",
                        "34 79 83 96 75 79 vstem", "230 409 rmoveto",
                        "-10 callsubr", "-196 -204 rmoveto", "-9 callsubr",
                        "162 -320 rmoveto", "92 callsubr", "75 762 rmoveto",
                        "341 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EDA
     */
    public void testuni1EDA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EDA");
        assertNotNull(cs);
        assertEquals("uni1EDA", cs.getName());
        String[] text =
                {"197 -12 34 602 34 61 -21 hstemhm",
                        "37 91 442 92 -71 37 hintmask 11111000",
                        "662 329 rmoveto", "135 callsubr", "hintmask 11110100",
                        "136 callsubr", "-328 295 rmoveto",
                        "hintmask 11111000", "-49 callsubr", "63 196 rmoveto",
                        "109 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EDB
     */
    public void testuni1EDB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EDB");
        assertNotNull(cs);
        assertEquals("uni1EDB", cs.getName());
        String[] text =
                {"0 -12 35 386 33 hstemhm",
                        "34 79 254 79 -16 34 hintmask 11110000",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "137 callsubr", "hintmask 11101000", "138 callsubr",
                        "243 465 rmoveto", "79 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EDC
     */
    public void testuni1EDC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EDC");
        assertNotNull(cs);
        assertEquals("uni1EDC", cs.getName());
        String[] text =
                {"197 -12 34 602 34 61 -21 hstemhm",
                        "37 91 442 92 -71 37 hintmask 11111000",
                        "662 329 rmoveto", "135 callsubr", "hintmask 11110100",
                        "136 callsubr", "-328 295 rmoveto",
                        "hintmask 11111000", "-49 callsubr", "-43 194 rmoveto",
                        "34 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EDD
     */
    public void testuni1EDD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EDD");
        assertNotNull(cs);
        assertEquals("uni1EDD", cs.getName());
        String[] text =
                {"0 -12 35 386 33 hstemhm",
                        "34 79 254 79 -16 34 hintmask 11110000",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "137 callsubr", "hintmask 11101000", "138 callsubr",
                        "171 465 rmoveto", "71 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EDE
     */
    public void testuni1EDE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EDE");
        assertNotNull(cs);
        assertEquals("uni1EDE", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 29 -21 125 24 hstemhm",
                        "37 91 149 45 22 26 16 52 132 92 -71 37 hintmask 1111111110000000",
                        "662 329 rmoveto",
                        "135 callsubr",
                        "hintmask 1111111101000000",
                        "136 callsubr",
                        "-328 295 rmoveto",
                        "hintmask 1111111110000000",
                        "-49 callsubr",
                        "104 135 rmoveto",
                        "16 -15 40 -64 -54 -28 -34 -21 -12 7 -15 20 16 11 9 12 vhcurveto",
                        "0 7 -4 6 -2 3 -2 1 -1 3 0 3 rrcurveto",
                        "5 9 9 19 22 14 -12 -23 vhcurveto",
                        "0 -14 -9 -8 -8 -9 -13 -12 -12 -14 0 -33 rrcurveto",
                        "26 hlineto",
                        "2 25 15 13 18 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EDF
     */
    public void testuni1EDF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EDF");
        assertNotNull(cs);
        assertEquals("uni1EDF", cs.getName());
        String[] text =
                {
                        "0 -12 35 386 33 188 28 hstemhm",
                        "34 79 55 50 -50 43 14 27 11 49 55 79 -16 34 hintmask 1111001110000000",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "137 callsubr", "hintmask 1111001101000000",
                        "138 callsubr", "278 395 rmoveto",
                        "16 -16 42 -54 vhcurveto", "hintmask 1111101100000000",
                        "-42 -32 -36 -21 -12 9 -16 18 10 13 10 12 hvcurveto",
                        "0 7 -3 6 -2 3 rrcurveto", "hintmask 1111011100000000",
                        "-1 2 -1 3 0 3 rrcurveto",
                        "5 3 6 19 21 9 -10 -23 vhcurveto",
                        "0 -12 -6 -11 -7 -12 -12 -18 -13 -21 0 -34 rrcurveto",
                        "27 hlineto",
                        "2 26 11 16 17 17 16 15 14 16 0 21 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE0
     */
    public void testuni1EE0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE0");
        assertNotNull(cs);
        assertEquals("uni1EE0", cs.getName());
        String[] text =
                {
                        "197 -12 34 602 34 37 44 5 46 hstemhm",
                        "37 91 442 92 -71 37 hintmask 11111100",
                        "662 329 rmoveto",
                        "135 callsubr",
                        "hintmask 11111010",
                        "136 callsubr",
                        "-328 295 rmoveto",
                        "hintmask 11111100",
                        "-49 callsubr",
                        "71 115 rmoveto",
                        "-19 0 -17 11 -16 12 -20 13 -22 15 -31 0 -43 0 -22 -30 -14 -59 rrcurveto",
                        "24 -5 rlineto",
                        "9 33 14 15 25 0 18 0 19 -11 18 -12 21 -13 21 -13 22 0 46 0 28 31 13 60 rrcurveto",
                        "-24 6 rlineto", "-15 -42 -14 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE1
     */
    public void testuni1EE1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE1");
        assertNotNull(cs);
        assertEquals("uni1EE1", cs.getName());
        String[] text =
                {
                        "0 -12 35 386 33 80 48 5 50 hstemhm",
                        "34 79 254 79 -16 34 hintmask 11111100",
                        "230 409 rmoveto",
                        "75 callsubr",
                        "-196 -204 rmoveto",
                        "137 callsubr",
                        "hintmask 11111010",
                        "138 callsubr",
                        "248 365 rmoveto",
                        "-17 0 -15 12 -16 13 -17 15 -20 15 -28 0 -38 0 -20 -32 -13 -65 rrcurveto",
                        "22 -6 rlineto",
                        "8 37 12 16 24 0 15 0 17 -12 16 -13 19 -14 19 -14 20 0 42 0 25 33 11 67 rrcurveto",
                        "-22 6 rlineto", "-13 -46 -12 -12 -19 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE2
     */
    public void testuni1EE2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE2");
        assertNotNull(cs);
        assertEquals("uni1EE2", cs.getName());
        String[] text =
                {"197 -163 96 55 34 602 34 hstemhm",
                        "37 91 179 96 167 92 -71 37 hintmask 11111100",
                        "662 329 rmoveto", "135 callsubr", "hintmask 11111010",
                        "136 callsubr", "-328 295 rmoveto",
                        "hintmask 11111100", "-49 callsubr",
                        "-27 -739 rmoveto", "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE3
     */
    public void testuni1EE3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE3");
        assertNotNull(cs);
        assertEquals("uni1EE3", cs.getName());
        String[] text =
                {"0 -163 96 55 35 386 33 hstemhm",
                        "34 79 81 96 77 79 -16 34 hintmask 11111100",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "137 callsubr", "hintmask 11111010", "138 callsubr",
                        "160 -320 rmoveto", "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE4
     */
    public void testuni1EE4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE4");
        assertNotNull(cs);
        assertEquals("uni1EE4", cs.getName());
        String[] text =
                {"160 -163 96 55 41 589 27 hstem", "89 81 125 96 135 46 vstem",
                        "321 -12 rmoveto", "-40 callsubr", "-26 -103 rmoveto",
                        "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE5
     */
    public void testuni1EE5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE5");
        assertNotNull(cs);
        assertEquals("uni1EE5", cs.getName());
        String[] text =
                {"16 -163 96 55 45 -6 28 347 27 hstemhm",
                        "88 75 35 95 61 75 hintmask 11011110",
                        "429 116 rmoveto", "0 callsubr", "hintmask 10111110",
                        "1 callsubr", "-231 -231 rmoveto", "87 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE6
     */
    public void testuni1EE6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE6");
        assertNotNull(cs);
        assertEquals("uni1EE6", cs.getName());
        String[] text =
                {
                        "160 -12 41 589 27 42 -21 125 24 hstemhm",
                        "89 81 93 53 -53 45 22 26 16 52 102 46 hintmask 1111100111000000",
                        "321 -12 rmoveto", "-40 callsubr", "103 771 rmoveto",
                        "16 -15 40 -64 vhcurveto", "hintmask 1111110111000000",
                        "-54 -28 -34 -21 -12 7 -15 20 16 10 9 12 hvcurveto",
                        "0 7 -3 6 -2 3 rrcurveto", "hintmask 1111101111000000",
                        "-2 1 -1 3 0 3 rrcurveto",
                        "5 8 9 20 22 14 -12 -23 vhcurveto",
                        "0 -14 -9 -8 -9 -9 -12 -12 -12 -14 0 -33 rrcurveto",
                        "26 hlineto",
                        "1 25 16 13 18 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE7
     */
    public void testuni1EE7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE7");
        assertNotNull(cs);
        assertEquals("uni1EE7", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 201 28 hstemhm",
                        "88 75 15 50 -50 43 13 28 10 50 32 75 hintmask 1011100111000000",
                        "429 116 rmoveto", "0 callsubr",
                        "hintmask 0111100111000000", "1 callsubr",
                        "-107 484 rmoveto", "16 -16 42 -55 vhcurveto",
                        "hintmask 0011110111000000", "353 callsubr",
                        "hintmask 0011101111000000", "354 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE8
     */
    public void testuni1EE8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE8");
        assertNotNull(cs);
        assertEquals("uni1EE8", cs.getName());
        String[] text =
                {"189 -12 41 589 27 45 80 hstemhm",
                        "89 81 356 46 -1 115 -38 38 hintmask 11110100",
                        "615 618 rmoveto", "141 callsubr", "hintmask 11111010",
                        "142 callsubr", "-208 202 rmoveto", "117 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EE9
     */
    public void testuni1EE9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EE9");
        assertNotNull(cs);
        assertEquals("uni1EE9", cs.getName());
        String[] text =
                {"30 -12 45 -6 28 347 27 50 82 hstemhm",
                        "88 75 191 75 -33 109 -34 34 hintmask 10111100",
                        "429 116 rmoveto", "143 callsubr", "hintmask 10111010",
                        "144 callsubr", "hintmask 10111101", "145 callsubr",
                        "hintmask 01111101", "1 callsubr", "-155 554 rmoveto",
                        "129 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EEA
     */
    public void testuni1EEA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EEA");
        assertNotNull(cs);
        assertEquals("uni1EEA", cs.getName());
        String[] text =
                {"189 -12 41 589 27 45 80 hstemhm",
                        "89 81 356 46 -1 115 -38 38 hintmask 11110100",
                        "615 618 rmoveto", "141 callsubr", "hintmask 11111010",
                        "142 callsubr", "-327 200 rmoveto", "42 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EEB
     */
    public void testuni1EEB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EEB");
        assertNotNull(cs);
        assertEquals("uni1EEB", cs.getName());
        String[] text =
                {"30 -12 45 -6 28 347 27 50 82 hstemhm",
                        "88 75 191 75 -33 109 -34 34 hintmask 10111100",
                        "429 116 rmoveto", "143 callsubr", "hintmask 10111010",
                        "144 callsubr", "hintmask 10111101", "145 callsubr",
                        "hintmask 01111101", "1 callsubr", "-216 554 rmoveto",
                        "67 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EEC
     */
    public void testuni1EEC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EEC");
        assertNotNull(cs);
        assertEquals("uni1EEC", cs.getName());
        String[] text =
                {
                        "189 -12 41 589 27 42 -21 24 80 21 24 hstemhm",
                        "89 81 96 45 21 26 16 52 100 46 -1 115 -38 38 hintmask 1111111110100000",
                        "615 618 rmoveto",
                        "141 callsubr",
                        "hintmask 1111111111010000",
                        "142 callsubr",
                        "-189 141 rmoveto",
                        "16 -15 40 -63 -55 -27 -34 -21 -12 6 -15 20 16 11 9 12 vhcurveto",
                        "0 7 -4 6 -2 3 -1 1 -1 3 0 3 rrcurveto",
                        "5 8 9 19 22 14 -12 -23 vhcurveto",
                        "0 -14 -8 -8 -9 -9 -12 -12 -12 -14 -1 -33 rrcurveto",
                        "26 hlineto",
                        "2 25 15 13 18 11 17 11 16 11 0 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EED
     */
    public void testuni1EED() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EED");
        assertNotNull(cs);
        assertEquals("uni1EED", cs.getName());
        String[] text =
                {
                        "30 -12 45 -6 28 347 27 50 82 69 28 hstemhm",
                        "88 75 15 50 -50 43 13 28 10 50 32 75 -33 109 -34 34 hintmask 1011110011100000",
                        "429 116 rmoveto", "143 callsubr",
                        "hintmask 1011110011010000", "144 callsubr",
                        "hintmask 1011110011101000", "145 callsubr",
                        "hintmask 0111110011101000", "1 callsubr",
                        "-107 484 rmoveto", "16 -16 42 -55 vhcurveto",
                        "hintmask 0011111011000000", "353 callsubr",
                        "hintmask 0011110111000000", "354 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1EEE
     */
    public void testuni1EEE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EEE");
        assertNotNull(cs);
        assertEquals("uni1EEE", cs.getName());
        String[] text =
                {
                        "189 -12 41 589 27 45 80 -71 44 4 46 hstemhm",
                        "89 81 356 46 -1 115 -38 38 hintmask 1110010100000000",
                        "615 618 rmoveto",
                        "141 callsubr",
                        "hintmask 1110011010000000",
                        "142 callsubr",
                        "hintmask 1101110000000000",
                        "-189 125 rmoveto",
                        "-19 0 -16 10 -17 12 -20 14 -21 14 -31 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 17 0 19 -11 19 -11 20 -13 21 -13 22 0 46 0 29 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EEF
     */
    public void testuni1EEF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EEF");
        assertNotNull(cs);
        assertEquals("uni1EEF", cs.getName());
        String[] text =
                {
                        "30 -12 45 -6 28 347 27 50 82 -36 44 5 46 hstemhm",
                        "88 75 191 75 -33 109 -34 34 hintmask 1011011100000000",
                        "429 116 rmoveto", "143 callsubr",
                        "hintmask 1011011010000000", "144 callsubr",
                        "hintmask 1010011101000000", "145 callsubr",
                        "hintmask 0111011101000000", "1 callsubr",
                        "hintmask 0010111000000000", "-132 453 rmoveto",
                        "104 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF0
     */
    public void testuni1EF0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF0");
        assertNotNull(cs);
        assertEquals("uni1EF0", cs.getName());
        String[] text =
                {
                        "189 -163 96 55 41 589 27 45 80 hstemhm",
                        "89 81 117 96 143 46 -1 115 -38 38 hintmask 1111110100000000",
                        "615 618 rmoveto", "141 callsubr",
                        "hintmask 1111111010000000", "142 callsubr",
                        "-328 -733 rmoveto", "93 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF1
     */
    public void testuni1EF1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF1");
        assertNotNull(cs);
        assertEquals("uni1EF1", cs.getName());
        String[] text =
                {
                        "30 -163 96 55 45 -6 28 347 27 50 82 hstemhm",
                        "88 75 32 96 63 75 -33 109 -34 34 hintmask 1101111100000000",
                        "429 116 rmoveto", "143 callsubr",
                        "hintmask 1101111010000000", "144 callsubr",
                        "hintmask 1101111101000000", "145 callsubr",
                        "hintmask 1011111101000000", "1 callsubr",
                        "-234 -231 rmoveto", "343 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1EF4
     */
    public void testuni1EF4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF4");
        assertNotNull(cs);
        assertEquals("uni1EF4", cs.getName());
        String[] text =
                {"73 -163 96 68 27 590 27 hstemhm",
                        "248 95 -89 80 hintmask 11101000", "254 72 rmoveto",
                        "-36 callsubr", "hintmask 11110000", "-6 -396 rmoveto",
                        "-26 21 -22 26 27 21 22 26 27 -21 21 -27 vhcurveto",
                        "-26 -21 -21 -27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF5
     */
    public void testuni1EF5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF5");
        assertNotNull(cs);
        assertEquals("uni1EF5", cs.getName());
        String[] text =
                {"8 -230 55 12 96 469 27 hstem", "318 96 vstem",
                        "208 410 rmoveto", "5 callsubr", "110 -525 rmoveto",
                        "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF6
     */
    public void testuni1EF6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF6");
        assertNotNull(cs);
        assertEquals("uni1EF6", cs.getName());
        String[] text =
                {
                        "73 1 27 590 27 42 -21 125 24 hstemhm",
                        "221 53 -53 45 -12 80 -46 26 16 52 hintmask 1111001000000000",
                        "254 72 rmoveto",
                        "-36 callsubr",
                        "hintmask 1111100010000000",
                        "128 478 rmoveto",
                        "16 -15 40 -64 -54 -28 -34 -21 -12 7 -15 20 16 10 9 12 vhcurveto",
                        "0 7 -3 6 -2 3 rrcurveto", "hintmask 1111010110000000",
                        "-2 1 -1 3 0 3 rrcurveto",
                        "5 8 9 20 22 14 -12 -23 vhcurveto",
                        "0 -14 -9 -8 -9 -9 -12 -12 -12 -14 0 -33 rrcurveto",
                        "26 hlineto", "1 25 16 13 18 11 rrcurveto",
                        "17 11 16 11 0 22 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF7
     */
    public void testuni1EF7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF7");
        assertNotNull(cs);
        assertEquals("uni1EF7", cs.getName());
        String[] text =
                {
                        "8 -230 55 577 27 201 28 hstemhm",
                        "196 50 -50 43 14 28 10 50 hintmask 11100110",
                        "208 410 rmoveto",
                        "0 18 -2 3 rlineto",
                        "0 -72 -2 -47 -30 -44 2 0 vhcurveto",
                        "-2 -2 0 -20 rlineto",
                        "-4 4 -3 6 vhcurveto",
                        "34 0 11 -11 16 -38 rrcurveto",
                        "126 -293 rlineto",
                        "8 -20 9 -27 0 -10 0 -9 -2 -10 -6 -12 -25 -61 -35 -86 -15 0 -10 0 -8 8 -9 9 -7 8 -9 6 -15 0 rrcurveto",
                        "-16 -22 -9 -30 -36 39 -11 19 hvcurveto",
                        "71 0 36 84 30 72 80 193 44 103 53 112 14 29 19 39 38 0 rrcurveto",
                        "7 4 3 5 hvcurveto", "0 19 -3 2 rlineto",
                        "0 -41 -2 -28 -35 -59 2 0 vhcurveto",
                        "-2 -3 0 -19 rlineto", "-3 5 -4 5 vhcurveto",
                        "4 hlineto", "22 20 -5 -21 hvcurveto",
                        "0 -6 -2 -8 -5 -9 rrcurveto",
                        "-111 -254 -110 258 rlineto",
                        "-4 9 -2 8 0 6 rrcurveto", "16 13 6 30 vhcurveto",
                        "5 6 3 5 hvcurveto", "133 190 rmoveto",
                        "16 -17 42 -54 vhcurveto", "hintmask 11110110",
                        "351 callsubr", "hintmask 11101110", "352 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF8
     */
    public void testuni1EF8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF8");
        assertNotNull(cs);
        assertEquals("uni1EF8", cs.getName());
        String[] text =
                {
                        "73 1 27 590 27 54 44 4 46 hstem",
                        "254 80 vstem",
                        "254 72 rmoveto",
                        "-36 callsubr",
                        "105 462 rmoveto",
                        "-19 0 -16 10 -17 12 -19 14 -22 14 -31 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 18 0 18 -11 19 -11 20 -13 21 -13 22 0 47 0 28 30 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -10 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1EF9
     */
    public void testuni1EF9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1EF9");
        assertNotNull(cs);
        assertEquals("uni1EF9", cs.getName());
        String[] text =
                {
                        "8 -230 55 577 27 96 44 5 46 hstem",
                        "208 410 rmoveto",
                        "5 callsubr",
                        "134 159 rmoveto",
                        "-19 0 -16 11 -17 12 -19 13 -22 15 -31 0 -43 0 -23 -30 -13 -59 rrcurveto",
                        "23 -5 rlineto",
                        "10 33 13 15 26 0 18 0 18 -11 19 -12 20 -13 21 -13 22 0 46 0 29 31 12 60 rrcurveto",
                        "-24 6 rlineto", "-14 -42 -14 -11 -22 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F00
     */
    public void testuni1F00() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F00");
        assertNotNull(cs);
        assertEquals("uni1F00", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 181 75 hstemhm",
                        "34 80 140 50 hintmask 01111100", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111100", "239 callsubr",
                        "-257 256 rmoveto", "355 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F01
     */
    public void testuni1F01() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F01");
        assertNotNull(cs);
        assertEquals("uni1F01", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 181 75 hstemhm",
                        "34 80 56 50 hintmask 01111100", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111100", "239 callsubr",
                        "-271 256 rmoveto", "356 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F02
     */
    public void testuni1F02() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F02");
        assertNotNull(cs);
        assertEquals("uni1F02", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 181 75 hstemhm",
                        "34 80 42 51 hintmask 01111100", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111100", "239 callsubr",
                        "-355 256 rmoveto", "357 callsubr", "113 -40 rmoveto",
                        "358 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F03
     */
    public void testuni1F03() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F03");
        assertNotNull(cs);
        assertEquals("uni1F03", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 179 75 hstemhm",
                        "34 80 -16 50 hintmask 01111000", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111000", "239 callsubr",
                        "-343 254 rmoveto", "hintmask 00110100",
                        "359 callsubr", "106 -40 rmoveto", "360 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F04
     */
    public void testuni1F04() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F04");
        assertNotNull(cs);
        assertEquals("uni1F04", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 181 74 hstemhm",
                        "34 80 66 50 hintmask 00111100", "170 697 rmoveto",
                        "361 callsubr", "169 7 rmoveto", "362 callsubr",
                        "47 -498 rmoveto", "hintmask 01111100", "237 callsubr",
                        "30 14 rmoveto", "238 callsubr", "hintmask 10111100",
                        "239 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F05
     */
    public void testuni1F05() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F05");
        assertNotNull(cs);
        assertEquals("uni1F05", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 179 75 hstemhm",
                        "34 80 -10 50 hintmask 01111000", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111000", "239 callsubr",
                        "-337 254 rmoveto", "hintmask 00110100",
                        "359 callsubr", "173 4 rmoveto", "363 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F06
     */
    public void testuni1F06() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F06");
        assertNotNull(cs);
        assertEquals("uni1F06", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 144 75 26 43 0 44 hstemhm",
                        "34 80 134 50 hintmask 00111111", "238 661 rmoveto",
                        "-36 -11 -18 -16 -17 5 -24 41 7 4 -9 -10 hvcurveto",
                        "0 -22 -18 -37 -42 -9 rrcurveto", "4 -18 rlineto",
                        "91 5 15 76 0 26 rrcurveto", "36 -22 37 -38 vhcurveto",
                        "66 69 rmoveto", "364 callsubr", "82 -524 rmoveto",
                        "hintmask 01111111", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 10111111", "239 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F07
     */
    public void testuni1F07() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F07");
        assertNotNull(cs);
        assertEquals("uni1F07", cs.getName());
        String[] text =
                {
                        "104 -12 64 -64 31 394 29 146 75 23 43 0 45 hstemhm",
                        "34 80 65 50 hintmask 01111111",
                        "386 206 rmoveto",
                        "237 callsubr",
                        "30 14 rmoveto",
                        "238 callsubr",
                        "hintmask 10111111",
                        "239 callsubr",
                        "-200 287 rmoveto",
                        "-40 0 -21 45 -55 0 -40 0 -22 -28 -13 -56 rrcurveto",
                        "23 -4 rlineto",
                        "11 29 13 14 22 0 38 0 30 -43 42 0 43 0 26 25 12 57 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "-62 -66 rmoveto", "365 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F08
     */
    public void testuni1F08() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F08");
        assertNotNull(cs);
        assertEquals("uni1F08", cs.getName());
        String[] text =
                {"194 1 27 216 39 366 75 hstem", "162 50 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-286 441 rmoveto", "366 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F09
     */
    public void testuni1F09() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F09");
        assertNotNull(cs);
        assertEquals("uni1F09", cs.getName());
        String[] text =
                {"194 1 27 216 39 366 75 hstem", "88 50 vstem",
                        "140 72 rmoveto", "-82 callsubr", "119 211 rmoveto",
                        "-81 callsubr", "-290 441 rmoveto", "367 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F0A
     */
    public void testuni1F0A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F0A");
        assertNotNull(cs);
        assertEquals("uni1F0A", cs.getName());
        String[] text =
                {"235 1 27 216 39 363 75 hstem", "28 50 vstem",
                        "182 72 rmoveto", "368 callsubr", "119 211 rmoveto",
                        "369 callsubr", "-461 438 rmoveto", "88 callsubr",
                        "113 -40 rmoveto", "370 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F0B
     */
    public void testuni1F0B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F0B");
        assertNotNull(cs);
        assertEquals("uni1F0B", cs.getName());
        String[] text =
                {"208 1 27 216 39 360 75 hstem", "-50 50 vstem",
                        "155 72 rmoveto", "371 callsubr", "119 211 rmoveto",
                        "372 callsubr", "-442 435 rmoveto", "373 callsubr",
                        "106 -39 rmoveto", "374 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F0C
     */
    public void testuni1F0C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F0C");
        assertNotNull(cs);
        assertEquals("uni1F0C", cs.getName());
        String[] text =
                {"201 1 27 216 39 362 74 hstem", "35 50 vstem",
                        "147 72 rmoveto", "375 callsubr", "119 211 rmoveto",
                        "372 callsubr", "-419 436 rmoveto", "376 callsubr",
                        "169 7 rmoveto", "377 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F0D
     */
    public void testuni1F0D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F0D");
        assertNotNull(cs);
        assertEquals("uni1F0D", cs.getName());
        String[] text =
                {"201 1 27 216 39 362 75 hstem", "-19 50 vstem",
                        "147 72 rmoveto", "375 callsubr", "119 211 rmoveto",
                        "372 callsubr", "-403 437 rmoveto", "378 callsubr",
                        "173 4 rmoveto", "362 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F0E
     */
    public void testuni1F0E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F0E");
        assertNotNull(cs);
        assertEquals("uni1F0E", cs.getName());
        String[] text =
                {
                        "214 1 27 216 39 249 75 26 43 0 45 hstem",
                        "83 50 vstem",
                        "161 72 rmoveto",
                        "368 callsubr",
                        "119 211 rmoveto",
                        "369 callsubr",
                        "-385 324 rmoveto",
                        "355 callsubr",
                        "65 69 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -12 -55 rrcurveto",
                        "22 -5 rlineto",
                        "",
                        "10 30 15 13 21 0 38 0 30 -43 42 0 43 0 27 26 12 56 rrcurveto",
                        "-23 6 rlineto", "-13 -34 -13 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F0F
     */
    public void testuni1F0F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F0F");
        assertNotNull(cs);
        assertEquals("uni1F0F", cs.getName());
        String[] text =
                {"216 1 27 216 39 252 75 22 44 0 45 hstem", "40 49 vstem",
                        "163 72 rmoveto", "368 callsubr", "119 211 rmoveto",
                        "369 callsubr", "-298 393 rmoveto", "379 callsubr",
                        "-62 -66 rmoveto", "380 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F10
     */
    public void testuni1F10() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F10");
        assertNotNull(cs);
        assertEquals("uni1F10", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 182 74 hstemhm",
                        "44 79 -60 71 80 50 hintmask 10111101",
                        "123 119 rmoveto", "172 callsubr", "hintmask 11011011",
                        "173 callsubr", "hintmask 10111011", "174 callsubr",
                        "hintmask 10111101", "175 callsubr", "81 579 rmoveto",
                        "-36 -11 -18 -15 -17 5 -24 41 7 4 -9 -10 hvcurveto",
                        "0 -22 -18 -38 -42 -8 rrcurveto", "4 -17 rlineto",
                        "91 4 15 76 0 25 rrcurveto", "37 -22 36 -38 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F11
     */
    public void testuni1F11() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F11");
        assertNotNull(cs);
        assertEquals("uni1F11", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 181 75 hstemhm",
                        "44 79 -60 71 18 50 hintmask 10111101",
                        "123 119 rmoveto", "172 callsubr", "hintmask 11011011",
                        "173 callsubr", "hintmask 10111011", "174 callsubr",
                        "hintmask 10111101", "175 callsubr", "89 579 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -26 15 -76 91 -4 rrcurveto", "4 17 rlineto",
                        "-42 8 -18 38 0 22 rrcurveto",
                        "11 4 8 7 41 5 24 17 16 -11 18 -36 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F12
     */
    public void testuni1F12() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F12");
        assertNotNull(cs);
        assertEquals("uni1F12", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 178 75 hstemhm",
                        "44 79 -60 71 1 51 hintmask 10111101",
                        "123 119 rmoveto", "172 callsubr", "hintmask 11011011",
                        "173 callsubr", "hintmask 10111011", "174 callsubr",
                        "hintmask 10111101", "175 callsubr", "2 576 rmoveto",
                        "357 callsubr", "113 -40 rmoveto", "358 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F13
     */
    public void testuni1F13() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F13");
        assertNotNull(cs);
        assertEquals("uni1F13", cs.getName());
        String[] text =
                {
                        "-99 -12 33 184 38 -33 28 175 29 177 75 hstemhm",
                        "44 79 -60 71 -63 50 hintmask 10111100",
                        "123 119 rmoveto",
                        "172 callsubr",
                        "hintmask 11011010",
                        "173 callsubr",
                        "hintmask 10111010",
                        "174 callsubr",
                        "hintmask 10111100",
                        "175 callsubr",
                        "8 575 rmoveto",
                        "hintmask 10011001",
                        "381 callsubr",
                        "105 -40 rmoveto",
                        "82 -135 rlineto",
                        "2 -2 1 -2 5 0 10 0 5 6 0 5 0 1 -1 3 0 1 rrcurveto",
                        "-39 152 rlineto",
                        "-3 11 -10 7 -17 0 -24 0 -14 -17 0 -17 0 -4 1 -5 2 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F14
     */
    public void testuni1F14() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F14");
        assertNotNull(cs);
        assertEquals("uni1F14", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 178 75 hstemhm",
                        "44 79 -60 71 0 51 hintmask 10111101",
                        "123 119 rmoveto", "172 callsubr", "hintmask 11011011",
                        "173 callsubr", "hintmask 10111011", "174 callsubr",
                        "hintmask 10111101", "175 callsubr", "2 576 rmoveto",
                        "382 callsubr", "168 6 rmoveto",
                        "-10 0 -17 -4 -4 -15 rrcurveto",
                        "-33 -156 0 -1 rlineto", "-3 2 -9 12 vhcurveto",
                        "3 0 4 1 1 4 rrcurveto", "76 138 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -29 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F15
     */
    public void testuni1F15() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F15");
        assertNotNull(cs);
        assertEquals("uni1F15", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 178 75 hstemhm",
                        "44 79 -60 71 -60 50 hintmask 10111100",
                        "123 119 rmoveto", "172 callsubr", "hintmask 11011010",
                        "173 callsubr", "hintmask 10111010", "174 callsubr",
                        "hintmask 10111100", "175 callsubr",
                        "hintmask 10011010", "11 576 rmoveto",
                        "hintmask 10011001", "-38 -22 -37 -35 hvcurveto",
                        "0 -26 15 -76 91 -4 rrcurveto", "4 17 rlineto",
                        "-42 8 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 17 vhcurveto",
                        "16 -11 17 -36 vhcurveto", "174 4 rmoveto",
                        "383 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F18
     */
    public void testuni1F18() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F18");
        assertNotNull(cs);
        assertEquals("uni1F18", cs.getName());
        String[] text =
                {"171 -1 29 -28 39 288 34 82 -20 183 40 -28 28 3 75 hstemhm",
                        "28 51 125 81 194 24 hintmask 0011101111000000",
                        "456 606 rmoveto", "384 callsubr",
                        "hintmask 0011011111000000", "-66 callsubr",
                        "hintmask 0011101111000000", "-257 0 -77 -1 rlineto",
                        "hintmask 1011011111000000", "385 callsubr",
                        "hintmask 0111101111000000", "78 -1 294 0 rlineto",
                        "4 56 11 57 11 52 rrcurveto", "-30 5 rlineto",
                        "-20 -72 -30 -59 -76 0 rrcurveto", "-165 hlineto",
                        "-22 -14 6 27 hvcurveto", "255 136 vlineto",
                        "34 0 11 -15 6 -29 rrcurveto", "6 -31 rlineto",
                        "-3 2 -4 6 vhcurveto", "23 0 2 3 rlineto",
                        "-2 17 -6 45 0 34 0 33 5 37 3 25 rrcurveto",
                        "2 -1 2 -2 vhcurveto", "-22 hlineto",
                        "-4 -3 -4 -4 hvcurveto", "-7 -30 rlineto",
                        "-7 -28 -8 -16 -36 0 rrcurveto", "-136 213 hlineto",
                        "24 12 8 24 vhcurveto", "-302 118 rmoveto",
                        "386 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F19
     */
    public void testuni1F19() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F19");
        assertNotNull(cs);
        assertEquals("uni1F19", cs.getName());
        String[] text =
                {"145 -1 29 -28 39 288 34 82 -20 183 40 -28 28 2 76 hstemhm",
                        "-52 50 181 80 hintmask 0011101110000000",
                        "430 606 rmoveto", "-67 callsubr",
                        "hintmask 0011011110000000", "262 callsubr",
                        "hintmask 0011101110000000", "-65 callsubr",
                        "hintmask 1011011110000000", "-64 callsubr",
                        "hintmask 0111101110000000", "263 callsubr",
                        "-287 118 rmoveto", "-39 -21 -37 -37 hvcurveto",
                        "0 -25 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "-41 8 -18 37 0 23 rrcurveto",
                        "11 3 7 8 40 5 25 16 17 -11 18 -35 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F1A
     */
    public void testuni1F1A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F1A");
        assertNotNull(cs);
        assertEquals("uni1F1A", cs.getName());
        String[] text =
                {
                        "331 -1 29 -28 39 288 34 82 -20 183 40 -28 28 -1 74 hstemhm",
                        "25 50 289 81 194 25 hintmask 0011100111000000",
                        "616 606 rmoveto",
                        "384 callsubr",
                        "hintmask 0011010111000000",
                        "-66 callsubr",
                        "hintmask 0011100111000000",
                        "-257 0 rlineto",
                        "hintmask 0011001111000000",
                        "-77 -1 rlineto",
                        "hintmask 1011010111000000",
                        "-130 1 0 -21 rlineto",
                        "-3 1 -4 7 vhcurveto",
                        "29 hlineto",
                        "39 13 -14 -31 hvcurveto",
                        "-501 vlineto",
                        "-28 -11 -16 -41 vhcurveto",
                        "-29 hlineto",
                        "-7 -1 -4 -3 hvcurveto",
                        "0 -22 129 2 rlineto",
                        "hintmask 0111100111000000",
                        "78 -1 294 0 rlineto",
                        "4 56 11 57 11 52 rrcurveto",
                        "-30 5 rlineto",
                        "-20 -72 -29 -59 -77 0 rrcurveto",
                        "-165 hlineto",
                        "-22 -14 6 27 hvcurveto",
                        "255 137 vlineto",
                        "33 0 11 -15 6 -29 rrcurveto",
                        "6 -31 rlineto",
                        "-3 3 -4 5 vhcurveto",
                        "23 0 2 3 rlineto",
                        "-2 17 -5 45 0 34 0 33 4 37 3 25 rrcurveto",
                        "2 -1 2 -2 vhcurveto",
                        "-22 hlineto",
                        "-4 -3 -4 -4 hvcurveto",
                        "-7 -30 rlineto",
                        "-7 -28 -8 -16 -35 0 rrcurveto",
                        "-137 213 hlineto",
                        "24 12 8 24 vhcurveto",
                        "hintmask 0011001111000000",
                        "-466 113 rmoveto",
                        "-36 -11 -18 -15 -17 5 -24 41 7 4 -9 -10 hvcurveto",
                        "0 -22 -18 -38 -42 -8 rrcurveto",
                        "4 -17 rlineto",
                        "hintmask 0011010111000000",
                        "91 4 15 76 0 25 rrcurveto",
                        "37 -22 36 -38 vhcurveto",
                        "113 -39 rmoveto",
                        "82 -136 rlineto",
                        "1 -2 2 -2 4 0 rrcurveto",
                        "11 4 7 5 1 -1 3 0 hvcurveto",
                        "-39 152 rlineto",
                        "-3 11 -10 7 -17 0 -24 0 -13 -18 0 -15 0 -5 0 -4 3 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F1B
     */
    public void testuni1F1B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F1B");
        assertNotNull(cs);
        assertEquals("uni1F1B", cs.getName());
        String[] text =
                {"314 -1 29 -28 39 288 34 82 -20 183 40 -28 28 -3 75 hstemhm",
                        "-50 50 348 80 hintmask 0011100110000000",
                        "599 606 rmoveto", "-67 callsubr",
                        "hintmask 0011010110000000", "262 callsubr", "",
                        "hintmask 0011100110000000", "-65 callsubr",
                        "hintmask 1011010110000000", "-64 callsubr",
                        "hintmask 0111100110000000", "387 callsubr",
                        "hintmask 0011001110000000", "-454 112 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -26 15 -76 91 -4 rrcurveto", "4 17 rlineto",
                        "-42 8 -18 38 0 23 rrcurveto",
                        "10 4 8 7 41 5 24 17 vhcurveto",
                        "16 -11 18 -36 vhcurveto", "106 -40 rmoveto",
                        "388 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F1C
     */
    public void testuni1F1C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F1C");
        assertNotNull(cs);
        assertEquals("uni1F1C", cs.getName());
        String[] text =
                {"316 -1 29 -28 39 288 34 82 -20 183 40 -28 28 -3 75 hstemhm",
                        "24 50 276 80 hintmask 0011100110000000",
                        "601 606 rmoveto", "-67 callsubr",
                        "hintmask 0011010110000000", "262 callsubr",
                        "hintmask 0011100110000000", "-65 callsubr",
                        "hintmask 1011010110000000", "-64 callsubr",
                        "hintmask 0111100110000000", "387 callsubr",
                        "hintmask 0011001110000000", "-452 112 rmoveto",
                        "88 callsubr", "169 6 rmoveto",
                        "-10 0 -18 -4 -4 -15 rrcurveto", "-32 -156 rlineto",
                        "-1 0 -1 0 -3 3 -9 12 hvcurveto",
                        "2 0 5 1 1 4 rrcurveto", "76 138 rlineto",
                        "2 4 1 4 0 4 0 11 -9 22 -28 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F1D
     */
    public void testuni1F1D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F1D");
        assertNotNull(cs);
        assertEquals("uni1F1D", cs.getName());
        String[] text =
                {
                        "306 -1 29 -28 39 288 34 82 -20 118 18 47 40 -28 28 -1 75 hstemhm",
                        "-57 50 346 80 hintmask 0011110011000000",
                        "590 606 rmoveto", "76 0 17 -51 22 -69 rrcurveto",
                        "29 5 rlineto", "hintmask 0011101011000000",
                        "-7 41 -9 61 -5 53 rrcurveto",
                        "hintmask 0011110011000000", "-256 0 rlineto",
                        "hintmask 0011100111000000", "-78 -1 rlineto",
                        "hintmask 1011101011000000", "-129 1 0 -21 rlineto",
                        "-3 0 -4 7 vhcurveto", "30 hlineto",
                        "38 14 -14 -31 hvcurveto", "-501 vlineto",
                        "-28 -12 -16 -40 vhcurveto", "-30 hlineto",
                        "-6 -1 -4 -3 hvcurveto", "", "0 -22 129 2 rlineto",
                        "hintmask 0111110011000000", "78 -1 293 0 rlineto",
                        "5 56 11 57 11 52 rrcurveto", "-30 5 rlineto",
                        "-20 -72 -30 -59 -76 0 rrcurveto", "-165 hlineto",
                        "-22 -15 6 27 hvcurveto", "255 137 vlineto",
                        "34 0 11 -15 5 -29 rrcurveto", "6 -31 rlineto",
                        "1 -3 2 -4 6 0 rrcurveto", "23 0 2 3 rlineto",
                        "-2 17 -6 45 0 34 0 33 5 37 3 25 rrcurveto",
                        "2 -1 2 -2 vhcurveto", "-22 hlineto",
                        "-4 0 -3 -4 -1 -4 rrcurveto", "-7 -30 rlineto",
                        "-6 -28 -9 -16 -35 0 rrcurveto", "-137 213 hlineto",
                        "24 13 8 24 vhcurveto", "hintmask 0011100111000000",
                        "-453 114 rmoveto", "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -75 90 -5 rrcurveto", "4 18 rlineto",
                        "-41 7 -18 38 0 23 rrcurveto",
                        "10 4 8 7 40 5 25 17 vhcurveto",
                        "15 -10 18 -36 vhcurveto", "173 4 rmoveto",
                        "-10 0 -18 -4 -3 -15 rrcurveto",
                        "-33 -156 -1 -1 rlineto", "-3 3 -9 12 vhcurveto",
                        "2 0 5 0 1 5 rrcurveto", "76 138 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -29 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F20
     */
    public void testuni1F20() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F20");
        assertNotNull(cs);
        assertEquals("uni1F20", cs.getName());
        String[] text =
                {"27 394 48 181 74 hstemhm",
                        "99 71 161 50 -10 75 hintmask 11101000",
                        "173 442 rmoveto", "242 callsubr", "151 344 rmoveto",
                        "-36 -11 -18 -15 -17 5 -24 41 hvcurveto",
                        "hintmask 11110000", "389 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F21
     */
    public void testuni1F21() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F21");
        assertNotNull(cs);
        assertEquals("uni1F21", cs.getName());
        String[] text =
                {"27 394 48 181 75 hstem", "99 71 60 50 91 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "121 345 rmoveto",
                        "390 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F22
     */
    public void testuni1F22() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F22");
        assertNotNull(cs);
        assertEquals("uni1F22", cs.getName());
        String[] text =
                {"27 394 48 179 74 hstem", "99 71 80 51 70 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "71 342 rmoveto",
                        "391 callsubr", "113 -39 rmoveto", "392 callsubr", "",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F23
     */
    public void testuni1F23() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F23");
        assertNotNull(cs);
        assertEquals("uni1F23", cs.getName());
        String[] text =
                {"27 394 48 175 75 hstem", "99 71 24 50 127 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "84 339 rmoveto",
                        "381 callsubr", "105 -40 rmoveto", "393 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F24
     */
    public void testuni1F24() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F24");
        assertNotNull(cs);
        assertEquals("uni1F24", cs.getName());
        String[] text =
                {"27 394 48 178 75 hstem", "99 71 90 50 61 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "80 342 rmoveto",
                        "88 callsubr", "169 6 rmoveto", "394 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F25
     */
    public void testuni1F25() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F25");
        assertNotNull(cs);
        assertEquals("uni1F25", cs.getName());
        String[] text =
                {"27 394 48 176 75 hstem", "99 71 26 50 125 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "86 340 rmoveto",
                        "395 callsubr", "173 4 rmoveto", "396 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F26
     */
    public void testuni1F26() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F26");
        assertNotNull(cs);
        assertEquals("uni1F26", cs.getName());
        String[] text =
                {"27 394 48 39 18 86 75 26 43 0 45 hstem",
                        "99 71 147 51 3 75 vstem", "173 442 rmoveto",
                        "242 callsubr", "138 307 rmoveto", "397 callsubr",
                        "65 69 rmoveto", "398 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F27
     */
    public void testuni1F27() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F27");
        assertNotNull(cs);
        assertEquals("uni1F27", cs.getName());
        String[] text =
                {"27 394 48 146 75 23 43 0 45 hstem",
                        "99 71 78 50 73 75 vstem", "173 442 rmoveto",
                        "242 callsubr", "200 376 rmoveto", "399 callsubr",
                        "-62 -66 rmoveto", "400 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F28
     */
    public void testuni1F28() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F28");
        assertNotNull(cs);
        assertEquals("uni1F28", cs.getName());
        String[] text =
                {"290 1 27 296 39 255 27 4 75 hstem",
                        "29 51 117 80 327 81 vstem", "604 72 rmoveto",
                        "401 callsubr", "-584 400 rmoveto", "386 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F29
     */
    public void testuni1F29() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F29");
        assertNotNull(cs);
        assertEquals("uni1F29", cs.getName());
        String[] text =
                {"290 1 27 296 39 255 27 4 75 hstem",
                        "-41 50 188 80 327 81 vstem", "604 72 rmoveto",
                        "401 callsubr", "-584 400 rmoveto", "402 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F2A
     */
    public void testuni1F2A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F2A");
        assertNotNull(cs);
        assertEquals("uni1F2A", cs.getName());
        String[] text =
                {
                        "",
                        "457 1 27 296 39 255 27 -2 75 hstemhm",
                        "27 51 286 80 327 81 hintmask 11101110",
                        "771 72 rmoveto",
                        "401 callsubr",
                        "hintmask 11011110",
                        "-753 394 rmoveto",
                        "-37 -10 -18 -16 -16 5 -25 41 6 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto",
                        "5 -17 rlineto",
                        "hintmask 11101110",
                        "403 callsubr",
                        "112 -40 rmoveto",
                        "82 -135 rlineto",
                        "2 -2 1 -2 5 0 10 0 5 6 0 5 0 1 -1 3 0 1 rrcurveto",
                        "-39 152 rlineto",
                        "-3 11 -10 7 -17 0 -24 0 -14 -18 0 -16 0 -4 1 -5 2 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F2B
     */
    public void testuni1F2B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F2B");
        assertNotNull(cs);
        assertEquals("uni1F2B", cs.getName());
        String[] text =
                {"446 1 27 296 39 255 27 -3 75 hstemhm",
                        "-48 49 352 81 326 81 hintmask 11101110",
                        "760 72 rmoveto", "404 callsubr", "hintmask 11011110",
                        "-748 393 rmoveto", "hintmask 11101110",
                        "405 callsubr", "hintmask 11011110", "406 callsubr",
                        "105 -39 rmoveto", "407 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F2C
     */
    public void testuni1F2C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F2C");
        assertNotNull(cs);
        assertEquals("uni1F2C", cs.getName());
        String[] text =
                {"449 1 27 296 39 255 27 -2 75 hstemhm",
                        "18 50 288 81 326 81 hintmask 11101110",
                        "763 72 rmoveto", "408 callsubr", "hintmask 11011110",
                        "-755 394 rmoveto", "409 callsubr",
                        "hintmask 11101110", "410 callsubr", "169 6 rmoveto",
                        "411 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F2D
     */
    public void testuni1F2D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F2D");
        assertNotNull(cs);
        assertEquals("uni1F2D", cs.getName());
        String[] text =
                {"439 1 27 296 39 255 27 1 75 hstem",
                        "-51 50 348 80 327 80 vstem", "754 72 rmoveto",
                        "412 callsubr", "-745 397 rmoveto", "413 callsubr",
                        "174 4 rmoveto", "414 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F2E
     */
    public void testuni1F2E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F2E");
        assertNotNull(cs);
        assertEquals("uni1F2E", cs.getName());
        String[] text =
                {"423 1 27 296 39 169 74 12 27 -13 44 0 45 hstemhm",
                        "100 50 180 81 326 81 hintmask 1111011110000000",
                        "737 72 rmoveto", "415 callsubr", "-647 282 rmoveto",
                        "416 callsubr", "hintmask 1110111110000000",
                        "65 70 rmoveto", "417 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F2F
     */
    public void testuni1F2F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F2F");
        assertNotNull(cs);
        assertEquals("uni1F2F", cs.getName());
        String[] text =
                {
                        "433 1 27 296 39 172 75 8 27 -12 43 0 45 hstemhm",
                        "25 50 265 81 327 80 hintmask 1111011110000000",
                        "748 72 rmoveto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "1 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 31 hvcurveto",
                        "502 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "26 hlineto",
                        "39 16 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "27 hlineto",
                        "39 15 -14 -30 hvcurveto",
                        "-502 vlineto",
                        "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 94 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 31 hvcurveto",
                        "252 327 vlineto",
                        "hintmask 1110111110000000",
                        "-601 352 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -12 -55 rrcurveto",
                        "22 -5 rlineto",
                        "10 30 14 13 21 0 38 0 31 -43 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "-62 -66 rmoveto", "395 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F30
     */
    public void testuni1F30() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F30");
        assertNotNull(cs);
        assertEquals("uni1F30", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 191 75 hstemhm",
                        "94 74 -34 51 hintmask 11110000", "168 442 rmoveto",
                        "179 callsubr", "-43 602 rmoveto",
                        "-37 -10 -19 -15 -16 5 -25 41 hvcurveto",
                        "hintmask 11101000", "6 4 -9 -9 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "5 -17 rlineto",
                        "90 5 16 75 0 26 rrcurveto", "36 -22 37 -38 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F31
     */
    public void testuni1F31() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F31");
        assertNotNull(cs);
        assertEquals("uni1F31", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 191 75 hstemhm",
                        "73 50 -29 74 hintmask 11101000", "168 442 rmoveto",
                        "179 callsubr", "-35 602 rmoveto", "hintmask 11110000",
                        "418 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F32
     */
    public void testuni1F32() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F32");
        assertNotNull(cs);
        assertEquals("uni1F32", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 199 75 hstemhm",
                        "55 50 -11 74 hintmask 11101000",
                        "168 442 rmoveto",
                        "179 callsubr",
                        "-123 610 rmoveto",
                        "-36 -10 -18 -16 -16 4 -25 41 hvcurveto",
                        "hintmask 11110000",
                        "7 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto",
                        "5 -17 rlineto",
                        "90 5 15 75 0 26 rrcurveto",
                        "36 -22 37 -38 vhcurveto",
                        "113 -40 rmoveto",
                        "82 -135 rlineto",
                        "2 -2 1 -2 5 0 10 0 5 6 0 5 0 1 -1 3 0 1 rrcurveto",
                        "-39 152 rlineto",
                        "-3 11 -11 7 -17 0 -24 0 -13 -18 0 -16 0 -4 1 -5 2 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F33
     */
    public void testuni1F33() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F33");
        assertNotNull(cs);
        assertEquals("uni1F33", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 197 75 hstem",
                        "-9 50 53 74 vstem",
                        "168 442 rmoveto",
                        "179 callsubr",
                        "-117 608 rmoveto",
                        "418 callsubr",
                        "105 -40 rmoveto",
                        "82 -135 rlineto",
                        "2 -2 1 -2 5 0 10 0 5 6 0 5 0 1 -1 3 0 1 rrcurveto",
                        "-39 152 rlineto",
                        "-3 11 -10 7 -18 0 -23 0 -14 -17 0 -17 0 -4 1 -5 2 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F34
     */
    public void testuni1F34() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F34");
        assertNotNull(cs);
        assertEquals("uni1F34", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 198 75 hstemhm",
                        "53 51 -10 74 hintmask 11101000", "168 442 rmoveto",
                        "179 callsubr", "-125 609 rmoveto",
                        "-36 -10 -18 -16 -16 4 -25 41 hvcurveto",
                        "hintmask 11110000", "7 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "5 -17 rlineto", "",
                        "90 5 16 75 0 26 rrcurveto", "36 -22 37 -39 vhcurveto",
                        "169 6 rmoveto", "-10 0 -17 -4 -4 -15 rrcurveto",
                        "-33 -156 rlineto", "-1 0 -1 0 -3 3 -9 12 hvcurveto",
                        "3 0 4 1 1 4 rrcurveto", "76 138 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -29 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F35
     */
    public void testuni1F35() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F35");
        assertNotNull(cs);
        assertEquals("uni1F35", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 198 75 hstem", "-9 50 53 74 vstem",
                        "168 442 rmoveto", "179 callsubr", "-117 609 rmoveto",
                        "373 callsubr", "174 4 rmoveto", "383 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F36
     */
    public void testuni1F36() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F36");
        assertNotNull(cs);
        assertEquals("uni1F36", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 162 75 26 43 0 45 hstemhm",
                        "94 74 -21 51 hintmask 11111100",
                        "168 442 rmoveto",
                        "179 callsubr",
                        "-30 573 rmoveto",
                        "113 callsubr",
                        "hintmask 11111010",
                        "7 3 -8 -10 hvcurveto",
                        "0 -23 -17 -37 -42 -9 rrcurveto",
                        "4 -17 rlineto",
                        "91 5 15 76 0 25 rrcurveto",
                        "36 -22 37 -38 vhcurveto",
                        "65 69 rmoveto",
                        "-40 0 -20 45 -56 0 -40 0 -22 -28 -12 -56 rrcurveto",
                        "22 -4 rlineto",
                        "11 30 14 13 21 0 38 0 30 -43 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -13 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F37
     */
    public void testuni1F37() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F37");
        assertNotNull(cs);
        assertEquals("uni1F37", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 165 76 22 44 0 44 hstemhm",
                        "79 50 -35 74 hintmask 11111010",
                        "168 442 rmoveto",
                        "-15 hlineto",
                        "hintmask 11111100",
                        "-7 0 -7 -3 -10 -5 -17 -8 -27 -13 -61 -8 rrcurveto",
                        "5 -30 rlineto",
                        "17 4 12 1 13 0 rrcurveto",
                        "hintmask 11111010",
                        "14 9 -7 -38 hvcurveto",
                        "-264 vlineto",
                        "-51 31 -32 57 vhcurveto",
                        "43 0 42 45 21 37 rrcurveto",
                        "-21 17 rlineto",
                        "-19 -24 -23 -22 -29 0 rrcurveto",
                        "-19 -9 15 30 hvcurveto",
                        "33 643 rmoveto",
                        "-40 0 -20 44 -56 0 -40 0 -22 -28 -12 -55 rrcurveto",
                        "22 -5 rlineto",
                        "",
                        "hintmask 11111100",
                        "11 30 14 14 21 0 38 0 30 -44 42 0 43 0 27 26 12 56 rrcurveto",
                        "-23 6 rlineto", "-13 -34 -13 -10 -21 0 rrcurveto",
                        "-61 -66 rmoveto", "-39 -22 -38 -35 hvcurveto",
                        "0 -26 16 -76 90 -4 rrcurveto", "3 17 rlineto",
                        "-41 8 -18 37 0 23 rrcurveto",
                        "11 4 7 8 40 5 25 17 16 -11 18 -35 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F38
     */
    public void testuni1F38() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F38");
        assertNotNull(cs);
        assertEquals("uni1F38", cs.getName());
        String[] text =
                {"-118 1 27 590 27 5 75 hstem", "23 50 124 80 vstem",
                        "277 574 rmoveto", "419 callsubr", "-264 654 rmoveto",
                        "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F39
     */
    public void testuni1F39() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F39");
        assertNotNull(cs);
        assertEquals("uni1F39", cs.getName());
        String[] text =
                {"-136 1 27 590 27 4 75 hstem", "-49 50 178 80 vstem",
                        "259 574 rmoveto", "419 callsubr", "-248 653 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -26 15 -75 91 -5 rrcurveto", "4 17 rlineto",
                        "-42 9 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 16 17 -11 17 -36 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F3A
     */
    public void testuni1F3A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F3A");
        assertNotNull(cs);
        assertEquals("uni1F3A", cs.getName());
        String[] text =
                {"50 1 27 590 27 -1 74 hstemhm",
                        "23 51 291 80 hintmask 11011000", "445 574 rmoveto",
                        "419 callsubr", "hintmask 10111000",
                        "-431 647 rmoveto",
                        "-36 -11 -18 -15 -17 5 -24 41 7 3 -9 -10 hvcurveto",
                        "0 -22 -18 -38 -42 -8 rrcurveto", "5 -17 rlineto",
                        "91 4 15 76 0 26 rrcurveto", "36 -22 36 -38 vhcurveto",
                        "112 -39 rmoveto", "420 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F3B
     */
    public void testuni1F3B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F3B");
        assertNotNull(cs);
        assertEquals("uni1F3B", cs.getName());
        String[] text =
                {
                        "22 1 27 590 27 0 75 hstem",
                        "-57 50 344 80 vstem",
                        "417 574 rmoveto",
                        "28 14 16 41 vhcurveto",
                        "27 hlineto",
                        "4 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -86 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 3 -3 5 vhcurveto",
                        "26 hlineto",
                        "40 15 -14 -30 hvcurveto",
                        "-503 vlineto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto",
                        "",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-27 hlineto",
                        "-39 -16 13 30 hvcurveto",
                        "-414 649 rmoveto",
                        "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto",
                        "4 17 rlineto",
                        "-41 8 -18 38 0 22 rrcurveto",
                        "11 4 8 7 40 5 24 17 16 -10 18 -36 vhcurveto",
                        "105 -40 rmoveto",
                        "82 -135 rlineto",
                        "2 -3 1 -1 5 0 10 0 5 6 0 5 0 1 -1 3 0 1 rrcurveto",
                        "-39 151 rlineto",
                        "-3 12 -10 7 -17 0 -24 0 -14 -18 0 -16 0 -4 1 -5 2 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F3C
     */
    public void testuni1F3C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F3C");
        assertNotNull(cs);
        assertEquals("uni1F3C", cs.getName());
        String[] text =
                {"32 1 27 590 27 1 75 hstem", "13 50 284 80 vstem",
                        "427 574 rmoveto", "419 callsubr", "-424 650 rmoveto",
                        "-36 -10 -18 -16 -16 4 -25 41 7 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "5 -17 rlineto",
                        "90 5 15 75 0 26 rrcurveto", "36 -21 37 -39 vhcurveto",
                        "169 6 rmoveto", "-10 0 -17 -4 -4 -15 rrcurveto",
                        "-33 -156 rlineto", "-1 0 -1 0 -3 3 -9 12 hvcurveto",
                        "3 0 4 1 1 3 rrcurveto", "76 139 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -29 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F3D
     */
    public void testuni1F3D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F3D");
        assertNotNull(cs);
        assertEquals("uni1F3D", cs.getName());
        String[] text =
                {"31 1 27 515 18 57 27 2 75 hstem", "-52 50 348 80 vstem",
                        "426 574 rmoveto", "419 callsubr", "-418 651 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -25 15 -76 91 -5 rrcurveto", "4 18 rlineto",
                        "-42 8 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 16 17 -11 17 -36 vhcurveto",
                        "174 4 rmoveto", "-11 0 -17 -4 -4 -15 rrcurveto",
                        "-33 -156 0 -1 rlineto", "-3 2 -9 12 vhcurveto",
                        "3 0 4 1 2 3 rrcurveto", "75 139 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -28 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F3E
     */
    public void testuni1F3E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F3E");
        assertNotNull(cs);
        assertEquals("uni1F3E", cs.getName());
        String[] text =
                {
                        "6 1 27 509 75 6 27 -7 43 0 45 hstemhm",
                        "80 50 190 81 hintmask 11101110",
                        "401 574 rmoveto",
                        "421 callsubr",
                        "-331 541 rmoveto",
                        "88 callsubr",
                        "hintmask 11011110",
                        "66 69 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "11 29 14 14 21 0 38 0 31 -43 42 0 43 0 26 26 12 56 rrcurveto",
                        "-22 6 rlineto", "-14 -34 -13 -11 -20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F3F
     */
    public void testuni1F3F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F3F");
        assertNotNull(cs);
        assertEquals("uni1F3F", cs.getName());
        String[] text =
                {
                        "29 1 27 405 17 87 75 6 27 -11 44 0 45 hstemhm",
                        "23 50 270 81 hintmask 11110111",
                        "424 574 rmoveto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -94 -1 -35 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "27 hlineto",
                        "39 15 -14 -30 hvcurveto",
                        "-503 vlineto",
                        "-28 -13 -15 -41 vhcurveto",
                        "-27 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 94 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 30 hvcurveto",
                        "hintmask 11101111",
                        "-279 607 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -29 -12 -55 rrcurveto",
                        "22 -5 rlineto",
                        "10 30 14 14 21 0 39 0 30 -44 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 7 rlineto", "-13 -35 -13 -10 -21 0 rrcurveto",
                        "-62 -66 rmoveto", "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -75 90 -5 rrcurveto", "4 17 rlineto",
                        "-41 8 -18 38 0 23 rrcurveto",
                        "10 4 8 7 41 4 25 16 16 -10 18 -36 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F40
     */
    public void testuni1F40() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F40");
        assertNotNull(cs);
        assertEquals("uni1F40", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 171 75 hstem", "34 79 132 50 72 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "201 483 rmoveto",
                        "-36 -11 -19 -15 -16 5 -25 41 7 4 -9 -9 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "4 -17 rlineto",
                        "91 5 15 75 0 26 rrcurveto", "36 -22 37 -38 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F41
     */
    public void testuni1F41() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F41");
        assertNotNull(cs);
        assertEquals("uni1F41", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 171 75 hstem", "34 79 71 49 134 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "210 483 rmoveto", "380 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F42
     */
    public void testuni1F42() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F42");
        assertNotNull(cs);
        assertEquals("uni1F42", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 169 75 hstem", "34 79 52 50 152 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "121 481 rmoveto", "355 callsubr",
                        "113 -40 rmoveto", "422 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F43
     */
    public void testuni1F43() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F43");
        assertNotNull(cs);
        assertEquals("uni1F43", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 169 75 hstemhm",
                        "34 79 -11 50 215 79 hintmask 11110100",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "128 481 rmoveto", "hintmask 11101100",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -26 15 -75 91 -5 rrcurveto", "3 17 rlineto",
                        "-41 9 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 4 25 16 16 -10 18 -36 vhcurveto",
                        "106 -40 rmoveto", "423 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F44
     */
    public void testuni1F44() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F44");
        assertNotNull(cs);
        assertEquals("uni1F44", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 166 75 hstem", "34 79 53 50 151 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "122 478 rmoveto", "355 callsubr",
                        "169 6 rmoveto", "424 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F45
     */
    public void testuni1F45() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F45");
        assertNotNull(cs);
        assertEquals("uni1F45", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 168 76 hstemhm",
                        "34 79 -11 49 216 79 hintmask 11110100",
                        "230 409 rmoveto", "75 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "128 481 rmoveto", "hintmask 11101100",
                        "425 callsubr", "173 3 rmoveto",
                        "-10 0 -18 -3 -4 -16 rrcurveto", "-32 -156 rlineto",
                        "-1 0 0 -1 -3 2 -9 13 hvcurveto",
                        "2 0 5 1 1 4 rrcurveto", "76 139 rlineto",
                        "2 3 1 4 0 4 0 11 -9 22 -28 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F48
     */
    public void testuni1F48() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F48");
        assertNotNull(cs);
        assertEquals("uni1F48", cs.getName());
        String[] text =
                {"233 -12 34 602 34 -9 75 hstemhm",
                        "27 51 -6 92 442 92 hintmask 11001100",
                        "698 329 rmoveto", "426 callsubr", "-328 295 rmoveto",
                        "216 callsubr", "hintmask 10110100",
                        "-352 100 rmoveto", "386 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F49
     */
    public void testuni1F49() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F49");
        assertNotNull(cs);
        assertEquals("uni1F49", cs.getName());
        String[] text =
                {
                        "246 -12 34 602 34 -9 75 hstemhm",
                        "-51 50 86 92 442 92 hintmask 11011100",
                        "711 329 rmoveto",
                        "427 callsubr",
                        "-328 295 rmoveto",
                        "140 96 -106 -208 -179 -88 -109 -114 -120 -120 113 192 210 110 87 96 hvcurveto",
                        "hintmask 10111100", "-374 100 rmoveto",
                        "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -75 90 -5 rrcurveto", "4 17 rlineto",
                        "-41 9 -18 37 0 23 rrcurveto",
                        "11 3 7 8 40 5 25 16 vhcurveto",
                        "17 -11 17 -35 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F4A
     */
    public void testuni1F4A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F4A");
        assertNotNull(cs);
        assertEquals("uni1F4A", cs.getName());
        String[] text =
                {
                        "393 -12 34 602 34 -15 74 hstemhm",
                        "16 50 166 92 442 92 hintmask 11011100",
                        "858 329 rmoveto",
                        "427 callsubr",
                        "-328 295 rmoveto",
                        "216 callsubr",
                        "hintmask 10111100",
                        "-524 93 rmoveto",
                        "-36 -11 -18 -15 -17 5 -24 41 7 4 -9 -9 hvcurveto",
                        "0 -23 -18 -38 -42 -8 rrcurveto",
                        "4 -17 rlineto",
                        "91 4 15 76 0 26 rrcurveto",
                        "36 -22 36 -38 vhcurveto",
                        "113 -39 rmoveto",
                        "82 -136 rlineto",
                        "2 -2 1 -2 4 0 rrcurveto",
                        "11 5 7 5 1 -1 3 0 hvcurveto",
                        "-39 152 rlineto",
                        "-3 11 -11 7 -17 0 -24 0 -13 -17 0 -16 0 -4 1 -5 2 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F4B
     */
    public void testuni1F4B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F4B");
        assertNotNull(cs);
        assertEquals("uni1F4B", cs.getName());
        String[] text =
                {"401 -12 34 602 34 -16 75 hstemhm",
                        "-54 50 245 92 441 92 hintmask 11011100",
                        "866 329 rmoveto", "44 callsubr", "-327 295 rmoveto",
                        "428 callsubr", "hintmask 10111100", "-533 93 rmoveto",
                        "-39 -21 -37 -35 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "hintmask 11011100", "-41 8 -18 37 0 23 rrcurveto",
                        "hintmask 10111100", "11 4 7 7 40 5 25 17 vhcurveto",
                        "16 -10 17 -36 vhcurveto", "105 -39 rmoveto",
                        "420 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F4C
     */
    public void testuni1F4C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F4C");
        assertNotNull(cs);
        assertEquals("uni1F4C", cs.getName());
        String[] text =
                {"376 -12 34 602 34 -13 74 hstemhm",
                        "25 51 139 92 442 92 hintmask 11011100",
                        "841 329 rmoveto", "426 callsubr", "-328 295 rmoveto",
                        "216 callsubr", "hintmask 10111100", "-497 95 rmoveto",
                        "-37 -10 -18 -15 -17 5 -24 41 6 4 -9 -10 hvcurveto",
                        "0 -22 -18 -38 -42 -8 rrcurveto", "5 -17 rlineto",
                        "91 4 15 76 0 25 rrcurveto", "37 -22 36 -38 vhcurveto",
                        "169 7 rmoveto", "-11 0 -17 -4 -4 -16 rrcurveto",
                        "-33 -156 0 -1 rlineto", "-3 2 -9 12 vhcurveto",
                        "3 0 4 1 2 4 rrcurveto", "75 139 rlineto",
                        "2 4 1 3 0 4 0 12 -8 22 -28 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F4D
     */
    public void testuni1F4D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F4D");
        assertNotNull(cs);
        assertEquals("uni1F4D", cs.getName());
        String[] text =
                {"358 -12 34 602 34 -13 75 hstemhm",
                        "-52 50 200 92 441 92 hintmask 11011100",
                        "823 329 rmoveto", "44 callsubr", "-327 295 rmoveto",
                        "428 callsubr", "hintmask 10111100", "-488 96 rmoveto",
                        "429 callsubr", "174 4 rmoveto", "383 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F50
     */
    public void testuni1F50() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F50");
        assertNotNull(cs);
        assertEquals("uni1F50", cs.getName());
        String[] text =
                {"3 -12 47 355 52 171 75 hstemhm",
                        "86 72 -56 77 75 51 117 36 hintmask 11110110",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101110",
                        "245 callsubr", "hintmask 11110110", "246 callsubr",
                        "-213 439 rmoveto",
                        "-37 -10 -19 -15 -16 5 -25 41 6 4 -9 -9 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "", "5 -17 rlineto",
                        "91 5 15 75 0 26 rrcurveto", "36 -22 37 -38 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F51
     */
    public void testuni1F51() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F51");
        assertNotNull(cs);
        assertEquals("uni1F51", cs.getName());
        String[] text =
                {"3 -12 47 355 52 171 75 hstemhm",
                        "86 72 -56 77 14 50 179 36 hintmask 11110110",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101110",
                        "245 callsubr", "hintmask 11110110", "246 callsubr",
                        "-205 439 rmoveto", "381 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F52
     */
    public void testuni1F52() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F52");
        assertNotNull(cs);
        assertEquals("uni1F52", cs.getName());
        String[] text =
                {"3 -12 47 355 52 169 75 hstemhm",
                        "86 72 -56 77 -5 50 198 36 hintmask 11110010",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101010",
                        "245 callsubr", "hintmask 11110010", "246 callsubr",
                        "-294 437 rmoveto", "113 callsubr",
                        "hintmask 11100110", "430 callsubr", "113 -40 rmoveto",
                        "422 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F53
     */
    public void testuni1F53() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F53");
        assertNotNull(cs);
        assertEquals("uni1F53", cs.getName());
        String[] text =
                {"3 -12 47 355 52 169 75 hstemhm",
                        "86 72 -56 77 -68 50 261 36 hintmask 11110010",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101010",
                        "245 callsubr", "hintmask 11110010", "246 callsubr",
                        "-287 437 rmoveto", "hintmask 11100110",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -26 15 -75 91 -5 rrcurveto", "4 17 rlineto",
                        "-42 9 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 16 16 -11 18 -36 vhcurveto",
                        "106 -40 rmoveto", "423 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F54
     */
    public void testuni1F54() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F54");
        assertNotNull(cs);
        assertEquals("uni1F54", cs.getName());
        String[] text =
                {"3 -12 47 355 52 166 75 hstemhm",
                        "86 72 -56 77 -4 51 196 36 hintmask 11110010",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101010",
                        "245 callsubr", "hintmask 11110010", "246 callsubr",
                        "-292 434 rmoveto",
                        "-37 -10 -18 -16 -16 5 -25 41 hvcurveto",
                        "hintmask 11100110", "6 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "5 -17 rlineto",
                        "90 5 16 75 0 26 rrcurveto", "36 -22 37 -38 vhcurveto",
                        "168 6 rmoveto", "-10 0 -17 -3 -4 -16 rrcurveto",
                        "-33 -156 0 -1 rlineto", "-3 2 -9 12 vhcurveto",
                        "3 0 4 1 1 4 rrcurveto", "76 139 rlineto",
                        "2 3 1 4 0 4 0 11 -8 22 -29 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F55
     */
    public void testuni1F55() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F55");
        assertNotNull(cs);
        assertEquals("uni1F55", cs.getName());
        String[] text =
                {"3 -12 47 355 52 168 76 hstemhm",
                        "86 72 -56 77 -68 50 261 36 hintmask 11110010",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101010",
                        "245 callsubr", "hintmask 11110010", "246 callsubr",
                        "-287 437 rmoveto", "hintmask 11100110",
                        "431 callsubr", "174 3 rmoveto", "424 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F56
     */
    public void testuni1F56() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F56");
        assertNotNull(cs);
        assertEquals("uni1F56", cs.getName());
        String[] text =
                {
                        "3 -12 47 355 52 144 75 26 43 0 45 hstemhm",
                        "86 72 -56 77 91 50 102 36 hintmask 1111110110000000",
                        "458 249 rmoveto",
                        "244 callsubr",
                        "hintmask 1111101110000000",
                        "245 callsubr",
                        "hintmask 1111110110000000",
                        "246 callsubr",
                        "-198 412 rmoveto",
                        "355 callsubr",
                        "65 69 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -12 -56 rrcurveto",
                        "22 -4 rlineto",
                        "10 30 15 13 21 0 38 0 30 -43 42 0 43 0 27 26 12 56 rrcurveto",
                        "-23 6 rlineto", "-13 -34 -13 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F57
     */
    public void testuni1F57() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F57");
        assertNotNull(cs);
        assertEquals("uni1F57", cs.getName());
        String[] text =
                {
                        "3 -12 47 355 52 39 18 86 75 23 43 0 45 hstemhm",
                        "86 72 -56 77 9 50 184 36 hintmask 1111111011000000",
                        "458 249 rmoveto",
                        "244 callsubr",
                        "hintmask 1111110111000000",
                        "245 callsubr",
                        "hintmask 1111111011000000",
                        "246 callsubr",
                        "-147 477 rmoveto",
                        "-40 0 -21 45 -56 0 -40 0 -21 -28 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "11 30 14 13 21 0 38 0 30 -43 42 0 44 0 26 26 12 56 rrcurveto",
                        "-23 6 rlineto", "-13 -34 -13 -11 -20 0 rrcurveto", "",
                        "-62 -66 rmoveto", "-39 -22 -37 -35 hvcurveto",
                        "0 -26 16 -76 90 -5 rrcurveto", "4 18 rlineto",
                        "-42 8 -18 37 0 23 rrcurveto",
                        "11 4 7 8 40 5 25 17 16 -11 17 -35 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F59
     */
    public void testuni1F59() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F59");
        assertNotNull(cs);
        assertEquals("uni1F59", cs.getName());
        String[] text =
                {"205 1 27 590 27 4 75 hstem", "-43 49 380 80 vstem",
                        "386 72 rmoveto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -5 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "0 221 149 281 rlineto", "18 32 13 12 30 0 rrcurveto",
                        "21 hlineto", "6 4 2 5 hvcurveto", "0 20 -2 1 rlineto",
                        "0 -79 -1 -8 -13 -79 1 0 vhcurveto",
                        "-2 -1 0 -20 rlineto", "-3 1 -4 5 vhcurveto",
                        "30 hlineto", "20 5 -3 -11 hvcurveto",
                        "0 -5 -3 -9 -8 -14 rrcurveto",
                        "-127 -235 -140 235 rlineto",
                        "-8 14 -4 9 0 6 rrcurveto", "9 6 4 19 vhcurveto",
                        "29 hlineto", "4 2 4 4 hvcurveto", "0 19 -1 1 rlineto",
                        "0 -109 -1 -6 -13 -93 1 0 vhcurveto",
                        "-1 -1 0 -20 rlineto", "-6 7 -1 3 vhcurveto",
                        "12 hlineto",
                        "14 0 10 -2 5 -3 13 -8 9 -11 11 -20 rrcurveto",
                        "170 -293 rlineto", "-369 443 rmoveto",
                        "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -75 90 -5 rrcurveto", "4 17 rlineto",
                        "-42 9 -18 37 0 23 rrcurveto",
                        "11 4 7 8 40 5 25 16 17 -11 17 -35 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F5B
     */
    public void testuni1F5B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F5B");
        assertNotNull(cs);
        assertEquals("uni1F5B", cs.getName());
        String[] text =
                {"364 1 27 590 27 -2 75 hstemhm",
                        "-48 49 544 80 hintmask 11011000", "545 72 rmoveto",
                        "-36 callsubr", "hintmask 10111000",
                        "-533 437 rmoveto", "-39 -21 -37 -35 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "-41 8 -19 37 0 23 rrcurveto",
                        "11 4 7 8 40 5 25 17 vhcurveto",
                        "16 -11 17 -35 vhcurveto", "105 -39 rmoveto",
                        "407 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F5D
     */
    public void testuni1F5D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F5D");
        assertNotNull(cs);
        assertEquals("uni1F5D", cs.getName());
        String[] text =
                {"364 1 27 590 27 1 75 hstem", "-49 49 545 80 vstem",
                        "545 72 rmoveto", "-36 callsubr", "-534 440 rmoveto",
                        "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "-41 8 -19 37 0 23 rrcurveto",
                        "11 4 8 8 40 5 24 17 16 -11 18 -35 vhcurveto",
                        "173 4 rmoveto", "-10 0 -18 -4 -4 -16 rrcurveto",
                        "-32 -156 rlineto", "-1 0 0 -1 -3 3 -9 12 hvcurveto",
                        "2 0 5 1 1 4 rrcurveto", "76 139 rlineto",
                        "2 4 1 4 0 3 0 12 -9 22 -28 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F5F
     */
    public void testuni1F5F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F5F");
        assertNotNull(cs);
        assertEquals("uni1F5F", cs.getName());
        String[] text =
                {
                        "307 1 27 507 75 8 27 -12 43 0 45 hstemhm",
                        "27 50 411 80 hintmask 11101110",
                        "488 72 rmoveto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-40 -15 13 31 hvcurveto",
                        "0 221 149 281 rlineto",
                        "18 32 13 12 30 0 rrcurveto",
                        "21 hlineto",
                        "7 3 2 5 hvcurveto",
                        "0 20 -2 1 rlineto",
                        "0 -78 -1 -9 -13 -79 1 0 vhcurveto",
                        "-2 -1 0 -20 rlineto",
                        "-3 1 -4 5 vhcurveto",
                        "30 hlineto",
                        "20 5 -3 -11 hvcurveto",
                        "0 -5 -3 -9 -8 -14 rrcurveto",
                        "-127 -235 -140 235 rlineto",
                        "-8 14 -4 9 0 6 rrcurveto",
                        "9 6 4 19 vhcurveto",
                        "29 hlineto",
                        "4 2 4 4 hvcurveto",
                        "0 19 -1 1 rlineto",
                        "0 -109 -1 -6 -13 -93 1 0 vhcurveto",
                        "-1 -1 0 -20 rlineto",
                        "-6 7 -1 3 vhcurveto",
                        "12 hlineto",
                        "15 0 9 -2 5 -3 13 -8 9 -11 11 -20 rrcurveto",
                        "170 -293 rlineto",
                        "hintmask 11011110",
                        "-339 395 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "",
                        "11 30 14 13 21 0 38 0 31 -43 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "-62 -66 rmoveto", "395 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F60
     */
    public void testuni1F60() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F60");
        assertNotNull(cs);
        assertEquals("uni1F60", cs.getName());
        String[] text =
                {"194 -12 35 243 38 325 75 hstemhm",
                        "34 74 200 26 17 50 -40 27 195 79 hintmask 11111011",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-20 467 rmoveto", "113 callsubr",
                        "hintmask 11111101", "430 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F61
     */
    public void testuni1F61() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F61");
        assertNotNull(cs);
        assertEquals("uni1F61", cs.getName());
        String[] text =
                {"194 -12 35 243 38 309 75 hstemhm",
                        "34 74 182 49 -31 26 27 27 195 79 hintmask 11110111",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-11 451 rmoveto", "hintmask 11111011",
                        "380 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F62
     */
    public void testuni1F62() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F62");
        assertNotNull(cs);
        assertEquals("uni1F62", cs.getName());
        String[] text =
                {"194 -12 35 243 38 307 75 hstemhm",
                        "34 74 163 50 -13 26 27 27 195 79 hintmask 11110111",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-100 449 rmoveto", "113 callsubr",
                        "hintmask 11111011", "114 callsubr", "113 -40 rmoveto",
                        "433 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F63
     */
    public void testuni1F63() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F63");
        assertNotNull(cs);
        assertEquals("uni1F63", cs.getName());
        String[] text =
                {"194 -12 35 243 38 307 75 hstem",
                        "34 74 100 50 50 26 27 27 195 79 vstem",
                        "662 206 rmoveto", "250 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-93 449 rmoveto", "434 callsubr",
                        "106 -40 rmoveto", "435 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F64
     */
    public void testuni1F64() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F64");
        assertNotNull(cs);
        assertEquals("uni1F64", cs.getName());
        String[] text =
                {"194 -12 35 243 38 304 75 hstemhm",
                        "34 74 163 51 -14 26 27 27 195 79 hintmask 11110111",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-99 446 rmoveto", "113 callsubr",
                        "hintmask 11111011", "436 callsubr", "169 6 rmoveto",
                        "424 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F65
     */
    public void testuni1F65() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F65");
        assertNotNull(cs);
        assertEquals("uni1F65", cs.getName());
        String[] text =
                {"194 -12 35 243 38 306 76 hstem",
                        "34 74 100 49 51 26 27 27 195 79 vstem",
                        "662 206 rmoveto", "250 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-93 449 rmoveto", "425 callsubr",
                        "173 3 rmoveto", "437 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F66
     */
    public void testuni1F66() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F66");
        assertNotNull(cs);
        assertEquals("uni1F66", cs.getName());
        String[] text =
                {
                        "194 -12 35 243 38 276 75 26 43 0 45 hstemhm",
                        "34 74 200 26 16 50 -39 27 195 79 hintmask 1111111011000000",
                        "662 206 rmoveto", "438 callsubr",
                        "hintmask 1111111101000000", "439 callsubr",
                        "hintmask 1111111011000000", "-301 31 rmoveto",
                        "440 callsubr", "-21 418 rmoveto", "113 callsubr",
                        "hintmask 1111111101000000", "430 callsubr",
                        "65 69 rmoveto", "441 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F67
     */
    public void testuni1F67() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F67");
        assertNotNull(cs);
        assertEquals("uni1F67", cs.getName());
        String[] text =
                {
                        "194 -12 35 243 38 176 18 86 75 23 43 0 46 hstemhm",
                        "34 74 178 50 -28 26 27 27 195 79 hintmask 1111111011100000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "47 488 rmoveto", "442 callsubr",
                        "hintmask 1111111101100000", "443 callsubr",
                        "-62 -66 rmoveto", "444 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F68
     */
    public void testuni1F68() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F68");
        assertNotNull(cs);
        assertEquals("uni1F68", cs.getName());
        String[] text =
                {"265 0 59 565 34 -9 75 hstemhm",
                        "60 50 5 26 -18 88 423 88 -23 26 hintmask 11010110",
                        "530 117 rmoveto", "445 callsubr", "hintmask 11011000",
                        "-52 0 -20 7 -4 53 rrcurveto",
                        "-26 0 7 -119 211 0 rlineto",
                        "12 0 6 6 -1 10 rrcurveto", "-8 127 rlineto",
                        "hintmask 11010110", "446 callsubr",
                        "hintmask 11010001", "235 callsubr",
                        "hintmask 10110000", "-475 665 rmoveto",
                        "366 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F69
     */
    public void testuni1F69() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F69");
        assertNotNull(cs);
        assertEquals("uni1F69", cs.getName());
        String[] text =
                {"291 0 59 565 34 -9 75 hstemhm",
                        "0 50 91 26 -18 88 423 88 -23 26 hintmask 11010110",
                        "556 117 rmoveto", "232 callsubr", "hintmask 11011000",
                        "447 callsubr", "hintmask 11010110", "446 callsubr",
                        "hintmask 11010001", "235 callsubr",
                        "hintmask 10110000", "-491 665 rmoveto",
                        "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -75 90 -5 rrcurveto", "4 17 rlineto",
                        "-41 9 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 4 25 16 vhcurveto",
                        "17 -10 17 -36 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F6A
     */
    public void testuni1F6A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F6A");
        assertNotNull(cs);
        assertEquals("uni1F6A", cs.getName());
        String[] text =
                {"415 0 59 565 34 -15 75 hstemhm",
                        "18 50 197 26 -18 88 423 88 -23 26 hintmask 11010110",
                        "680 117 rmoveto", "232 callsubr", "hintmask 11011000",
                        "447 callsubr", "hintmask 11010110", "446 callsubr",
                        "hintmask 11010001", "235 callsubr",
                        "hintmask 10110000", "-667 659 rmoveto", "88 callsubr",
                        "113 -40 rmoveto", "388 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F6B
     */
    public void testuni1F6B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F6B");
        assertNotNull(cs);
        assertEquals("uni1F6B", cs.getName());
        String[] text =
                {"397 0 59 565 34 -16 75 hstemhm",
                        "-58 50 255 26 -18 88 424 87 -22 25 hintmask 11010110",
                        "663 117 rmoveto", "448 callsubr", "hintmask 11011000",
                        "219 callsubr", "hintmask 11010110", "449 callsubr",
                        "hintmask 11010001", "450 callsubr",
                        "hintmask 10110000", "-656 658 rmoveto",
                        "451 callsubr", "hintmask 11010000",
                        "-42 8 -18 37 0 23 rrcurveto", "hintmask 10110000",
                        "452 callsubr", "106 -39 rmoveto", "453 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F6C
     */
    public void testuni1F6C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F6C");
        assertNotNull(cs);
        assertEquals("uni1F6C", cs.getName());
        String[] text =
                {"358 0 59 565 34 -13 75 hstemhm",
                        "23 50 135 25 -17 88 423 88 -23 26 hintmask 11010110",
                        "623 117 rmoveto", "232 callsubr", "hintmask 11011000",
                        "454 callsubr", "hintmask 11010110", "455 callsubr",
                        "hintmask 11010001", "235 callsubr",
                        "hintmask 10110000", "-605 661 rmoveto", "88 callsubr",
                        "169 6 rmoveto", "456 callsubr", "hintmask 10010100",
                        "457 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F6D
     */
    public void testuni1F6D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F6D");
        assertNotNull(cs);
        assertEquals("uni1F6D", cs.getName());
        String[] text =
                {"362 0 59 565 34 -13 75 hstemhm",
                        "-48 50 209 26 -17 88 423 88 -23 26 hintmask 11010110",
                        "627 117 rmoveto", "458 callsubr", "hintmask 11011000",
                        "459 callsubr", "hintmask 11010110", "460 callsubr",
                        "hintmask 11010001", "461 callsubr",
                        "hintmask 10110000", "-610 661 rmoveto",
                        "429 callsubr", "174 4 rmoveto", "383 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F6E
     */
    public void testuni1F6E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F6E");
        assertNotNull(cs);
        assertEquals("uni1F6E", cs.getName());
        String[] text =
                {
                        "349 0 59 474 74 17 34 -25 44 0 45 hstemhm",
                        "88 51 59 26 -17 87 424 88 -23 26 hintmask 1110110110000000",
                        "614 117 rmoveto",
                        "111 37 81 103 0 120 rrcurveto",
                        "148 -101 133 -199 -197 -102 -149 -132 vhcurveto",
                        "0 -128 83 -95 107 -37 rrcurveto",
                        "4 -58 -101 0 rlineto",
                        "hintmask 1110111000000000",
                        "459 callsubr",
                        "hintmask 1110110110000000",
                        "462 callsubr",
                        "hintmask 1110110001000000",
                        "8 119 -26 0 rlineto",
                        "-7 -57 -21 -3 -48 0 rrcurveto",
                        "-98 hlineto",
                        "-530 548 rmoveto",
                        "-37 -10 -18 -15 -16 5 -25 41 6 4 -9 -9 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto",
                        "5 -17 rlineto",
                        "91 5 15 75 0 26 rrcurveto",
                        "36 -22 36 -38 vhcurveto",
                        "hintmask 1101110000000000",
                        "65 70 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -29 -12 -55 rrcurveto",
                        "22 -5 rlineto",
                        "10 30 14 14 21 0 39 0 30 -44 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 7 rlineto", "-13 -34 -13 -11 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F6F
     */
    public void testuni1F6F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F6F");
        assertNotNull(cs);
        assertEquals("uni1F6F", cs.getName());
        String[] text =
                {
                        "375 0 59 477 75 13 34 -24 43 0 45 hstemhm",
                        "35 49 141 26 -18 88 424 88 -23 25 hintmask 1110110110000000",
                        "641 117 rmoveto",
                        "110 37 82 103 0 120 rrcurveto",
                        "148 -101 133 -199 -198 -102 -149 -132 vhcurveto",
                        "0 -128 83 -95 108 -37 rrcurveto",
                        "4 -58 -101 0 rlineto",
                        "hintmask 1110111000000000",
                        "219 callsubr",
                        "hintmask 1110110110000000",
                        "-93 62 -39 61 0 112 rrcurveto",
                        "128 73 118 139 129 83 -106 -141 vhcurveto",
                        "0 -108 -40 -73 -92 -53 rrcurveto",
                        "-9 -127 rlineto",
                        "-10 4 -6 13 vhcurveto",
                        "207 0 rlineto",
                        "hintmask 1110110001000000",
                        "450 callsubr",
                        "hintmask 1101110000000000",
                        "-479 618 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "11 30 14 13 21 0 38 0 31 -43 42 0 43 0 26 26 12 56 rrcurveto",
                        "-22 6 rlineto", "-14 -34 -13 -11 -20 0 rrcurveto",
                        "-62 -66 rmoveto", "-39 -21 -37 -35 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "-41 8 -19 37 0 23 rrcurveto",
                        "11 4 7 8 40 5 25 17 16 -11 17 -35 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F70
     */
    public void testuni1F70() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F70");
        assertNotNull(cs);
        assertEquals("uni1F70", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 hstemhm", "34 80 hintmask 01110000",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 10110000", "239 callsubr",
                        "-316 231 rmoveto", "463 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F71
     */
    public void testuni1F71() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F71");
        assertNotNull(cs);
        assertEquals("uni1F71", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 240 -20 hstemhm",
                        "34 80 hintmask 01111000", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111000", "239 callsubr",
                        "-205 240 rmoveto", "240 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F72
     */
    public void testuni1F72() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F72");
        assertNotNull(cs);
        assertEquals("uni1F72", cs.getName());
        String[] text =
                {
                        "-99 -12 33 184 38 -33 28 175 29 hstemhm",
                        "44 79 -60 71 hintmask 10111000",
                        "123 119 rmoveto",
                        "172 callsubr",
                        "hintmask 11010100",
                        "173 callsubr",
                        "hintmask 10110100",
                        "174 callsubr",
                        "hintmask 10111000",
                        "175 callsubr",
                        "36 554 rmoveto",
                        "-13 -9 -6 -12 0 -12 0 -5 1 -5 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 4 0 3 2 3 2 3 3 1 3 0 3 0 1 0 1 -1 1 rrcurveto",
                        "-61 146 rlineto",
                        "-2 5 -4 4 -6 3 -5 3 -5 1 -6 0 -6 0 -6 -2 -6 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F73
     */
    public void testuni1F73() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F73");
        assertNotNull(cs);
        assertEquals("uni1F73", cs.getName());
        String[] text =
                {"-99 -12 33 184 38 -33 28 175 29 238 -20 hstemhm",
                        "44 79 -60 71 hintmask 10111100", "123 119 rmoveto",
                        "172 callsubr", "hintmask 11011010", "173 callsubr",
                        "hintmask 10111010", "174 callsubr",
                        "hintmask 10111100", "175 callsubr", "127 561 rmoveto",
                        "241 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F74
     */
    public void testuni1F74() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F74");
        assertNotNull(cs);
        assertEquals("uni1F74", cs.getName());
        String[] text =
                {"27 394 48 241 -20 hstem", "99 71 201 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "69 325 rmoveto",
                        "464 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F75
     */
    public void testuni1F75() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F75");
        assertNotNull(cs);
        assertEquals("uni1F75", cs.getName());
        String[] text =
                {"27 394 48 239 -20 hstem", "99 71 201 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "165 328 rmoveto",
                        "213 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F76
     */
    public void testuni1F76() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F76");
        assertNotNull(cs);
        assertEquals("uni1F76", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 258 -20 hstem",
                        "94 74 vstem",
                        "168 442 rmoveto",
                        "179 callsubr",
                        "-103 589 rmoveto",
                        "-13 -9 -6 -12 0 -12 0 -5 1 -5 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 4 2 2 2 3 3 1 3 0 3 0 1 0 1 -1 1 rrcurveto",
                        "-61 146 rlineto",
                        "-2 5 -4 4 -6 3 -5 3 -5 1 -6 0 -6 0 -6 -2 -6 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F77
     */
    public void testuni1F77() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F77");
        assertNotNull(cs);
        assertEquals("uni1F77", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 261 -20 hstem", "94 74 vstem",
                        "168 442 rmoveto", "179 callsubr", "-4 597 rmoveto",
                        "243 callsubr", "endchar", "", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F78
     */
    public void testuni1F78() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F78");
        assertNotNull(cs);
        assertEquals("uni1F78", cs.getName());
        String[] text =
                {
                        "-22 -12 35 386 33 hstem",
                        "34 79 254 79 vstem",
                        "230 409 rmoveto",
                        "-10 callsubr",
                        "-196 -204 rmoveto",
                        "-9 callsubr",
                        "143 464 rmoveto",
                        "-13 -9 -7 -11 0 -12 0 -6 2 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 3 0 4 2 3 2 2 2 2 3 0 3 0 1 -1 1 0 2 rrcurveto",
                        "-62 145 rlineto",
                        "-2 6 -4 3 -6 4 -5 2 -5 2 -5 0 -7 0 -6 -2 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F79
     */
    public void testuni1F79() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F79");
        assertNotNull(cs);
        assertEquals("uni1F79", cs.getName());
        String[] text =
                {"-22 -12 35 386 33 240 -20 hstem", "34 79 254 79 vstem",
                        "230 409 rmoveto", "-10 callsubr", "-196 -204 rmoveto",
                        "-9 callsubr", "247 477 rmoveto", "254 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F7A
     */
    public void testuni1F7A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F7A");
        assertNotNull(cs);
        assertEquals("uni1F7A", cs.getName());
        String[] text =
                {
                        "3 -12 47 355 52 hstemhm",
                        "86 72 -56 77 243 36 hintmask 11101000",
                        "458 249 rmoveto",
                        "244 callsubr",
                        "hintmask 11011000",
                        "245 callsubr",
                        "hintmask 11101000",
                        "246 callsubr",
                        "-271 418 rmoveto",
                        "-14 -9 -6 -11 0 -12 0 -6 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 4 2 3 2 2 2 1 3 0 3 0 1 0 1 -1 2 rrcurveto",
                        "-61 145 rlineto",
                        "-2 6 -4 4 -6 3 -5 2 -5 2 -5 0 -7 0 -6 -2 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F7B
     */
    public void testuni1F7B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F7B");
        assertNotNull(cs);
        assertEquals("uni1F7B", cs.getName());
        String[] text =
                {"3 -12 47 355 52 240 -20 hstemhm",
                        "86 72 -56 77 243 36 hintmask 11110100",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101100",
                        "245 callsubr", "hintmask 11110100", "246 callsubr",
                        "-149 433 rmoveto", "255 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F7C
     */
    public void testuni1F7C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F7C");
        assertNotNull(cs);
        assertEquals("uni1F7C", cs.getName());
        String[] text =
                {"194 -12 35 243 38 hstem", "34 74 200 26 27 27 195 79 vstem",
                        "662 206 rmoveto", "250 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-92 428 rmoveto", "465 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F7D
     */
    public void testuni1F7D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F7D");
        assertNotNull(cs);
        assertEquals("uni1F7D", cs.getName());
        String[] text =
                {"194 -12 35 243 38 380 -20 hstem",
                        "34 74 200 26 27 27 195 79 vstem", "662 206 rmoveto",
                        "250 callsubr", "-301 31 rmoveto", "251 callsubr",
                        "34 447 rmoveto", "243 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F80
     */
    public void testuni1F80() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F80");
        assertNotNull(cs);
        assertEquals("uni1F80", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 181 75 hstemhm",
                        "34 80 87 73 -20 50 hintmask 10111100",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 11011100", "239 callsubr",
                        "-257 256 rmoveto", "113 callsubr",
                        "hintmask 10011101", "114 callsubr",
                        "hintmask 10011110", "-43 -773 rmoveto",
                        "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F81
     */
    public void testuni1F81() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F81");
        assertNotNull(cs);
        assertEquals("uni1F81", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 181 75 hstemhm",
                        "34 80 56 50 -19 73 hintmask 10111100",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 11011100", "239 callsubr",
                        "-271 256 rmoveto", "hintmask 10011110",
                        "356 callsubr", "hintmask 10011101",
                        "-29 -773 rmoveto", "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F82
     */
    public void testuni1F82() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F82");
        assertNotNull(cs);
        assertEquals("uni1F82", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 181 75 hstemhm",
                        "34 80 42 51 -6 73 hintmask 10111100",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 11011100", "239 callsubr",
                        "-355 256 rmoveto",
                        "-36 -10 -18 -16 -16 4 -25 42 hvcurveto",
                        "hintmask 10011110", "6 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "5 -17 rlineto",
                        "90 5 16 75 0 26 rrcurveto", "36 -22 37 -39 vhcurveto",
                        "113 -40 rmoveto", "358 callsubr", "hintmask 10011101",
                        "-58 -733 rmoveto", "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F83
     */
    public void testuni1F83() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F83");
        assertNotNull(cs);
        assertEquals("uni1F83", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 179 75 hstemhm",
                        "34 80 -16 50 53 73 hintmask 10111101",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 11011101", "239 callsubr",
                        "-343 254 rmoveto", "hintmask 10011011",
                        "359 callsubr", "106 -40 rmoveto", "360 callsubr",
                        "-63 -731 rmoveto", "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F84
     */
    public void testuni1F84() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F84");
        assertNotNull(cs);
        assertEquals("uni1F84", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 181 74 hstemhm",
                        "34 80 66 50 -29 73 hintmask 10011110",
                        "170 697 rmoveto", "361 callsubr", "169 7 rmoveto",
                        "-10 0 -17 -4 -4 -16 rrcurveto", "-33 -156 rlineto",
                        "hintmask 10011101", "-1 0 0 -1 -3 3 -9 12 hvcurveto",
                        "3 0 4 1 1 4 rrcurveto", "76 139 rlineto",
                        "2 4 1 4 0 3 0 12 -8 22 -29 0 rrcurveto",
                        "47 -498 rmoveto", "hintmask 10111100", "237 callsubr",
                        "30 14 rmoveto", "238 callsubr", "hintmask 11011100",
                        "239 callsubr", "hintmask 10011101",
                        "-300 -517 rmoveto", "466 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F85
     */
    public void testuni1F85() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F85");
        assertNotNull(cs);
        assertEquals("uni1F85", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 179 75 hstemhm",
                        "34 80 -10 50 47 73 hintmask 10111101",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 11011101", "239 callsubr",
                        "-337 254 rmoveto", "hintmask 10011011",
                        "359 callsubr", "173 4 rmoveto", "363 callsubr",
                        "-136 -775 rmoveto", "466 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F86
     */
    public void testuni1F86() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F86");
        assertNotNull(cs);
        assertEquals("uni1F86", cs.getName());
        String[] text =
                {"104 -247 41 194 64 -64 31 394 29 144 75 26 43 0 44 hstemhm",
                        "34 80 69 73 -8 50 hintmask 1001111110000000",
                        "183 -83 rmoveto", "-81 vlineto",
                        "-58 38 -25 49 vhcurveto",
                        "24 0 46 15 15 69 rrcurveto", "-25 8 rlineto",
                        "-7 -27 -15 -24 -18 0 rrcurveto",
                        "-20 -14 23 55 hvcurveto", "0 52 -21 7 rlineto",
                        "3 730 rmoveto",
                        "-36 -11 -18 -16 -17 5 -24 41 hvcurveto",
                        "hintmask 1001111101000000", "7 4 -9 -10 hvcurveto",
                        "0 -22 -18 -37 -42 -9 rrcurveto", "4 -18 rlineto",
                        "91 5 15 76 0 26 rrcurveto", "36 -22 37 -38 vhcurveto",
                        "66 69 rmoveto", "364 callsubr", "82 -524 rmoveto",
                        "hintmask 1011111100000000", "237 callsubr",
                        "30 14 rmoveto", "238 callsubr",
                        "hintmask 1101111100000000", "239 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F87
     */
    public void testuni1F87() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F87");
        assertNotNull(cs);
        assertEquals("uni1F87", cs.getName());
        String[] text =
                {
                        "104 -239 41 186 64 -64 31 394 29 146 75 23 43 0 45 hstemhm",
                        "34 80 65 50 -28 73 hintmask 1011111100000000",
                        "386 206 rmoveto",
                        "237 callsubr",
                        "30 14 rmoveto",
                        "238 callsubr",
                        "hintmask 1101111100000000",
                        "239 callsubr",
                        "-200 287 rmoveto",
                        "-40 0 -21 45 -55 0 -40 0 -22 -28 -13 -56 rrcurveto",
                        "23 -4 rlineto",
                        "hintmask 1001111110000000",
                        "11 29 13 14 22 0 38 0 30 -43 42 0 43 0 26 25 12 57 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "-62 -66 rmoveto", "365 callsubr",
                        "hintmask 1001111101000000", "-38 -738 rmoveto",
                        "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F88
     */
    public void testuni1F88() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F88");
        assertNotNull(cs);
        assertEquals("uni1F88", cs.getName());
        String[] text =
                {"381 -5 38 -32 27 216 39 366 75 hstemhm",
                        "162 50 501 73 hintmask 01111100", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-286 441 rmoveto", "366 callsubr", "561 -416 rmoveto",
                        "-229 vlineto", "hintmask 10111100",
                        "-58 34 -26 45 vhcurveto",
                        "43 0 31 15 13 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 62 hvcurveto", "0 205 -11 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F89
     */
    public void testuni1F89() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F89");
        assertNotNull(cs);
        assertEquals("uni1F89", cs.getName());
        String[] text =
                {"371 -2 38 -35 27 216 39 366 75 hstemhm",
                        "88 50 565 73 hintmask 01111100", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-290 441 rmoveto", "367 callsubr", "555 -414 rmoveto",
                        "-228 vlineto", "hintmask 10111100", "467 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F8A
     */
    public void testuni1F8A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F8A");
        assertNotNull(cs);
        assertEquals("uni1F8A", cs.getName());
        String[] text =
                {"427 -2 38 -35 27 216 39 363 75 hstemhm",
                        "28 50 681 73 hintmask 01111100", "182 72 rmoveto",
                        "368 callsubr", "119 211 rmoveto", "369 callsubr",
                        "-461 438 rmoveto", "88 callsubr", "113 -40 rmoveto",
                        "370 callsubr", "628 -371 rmoveto", "-228 vlineto",
                        "hintmask 10111100", "468 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F8B
     */
    public void testuni1F8B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F8B");
        assertNotNull(cs);
        assertEquals("uni1F8B", cs.getName());
        String[] text =
                {"404 -2 38 -35 27 216 39 360 75 hstemhm",
                        "-50 50 736 73 hintmask 01111100", "155 72 rmoveto",
                        "371 callsubr", "119 211 rmoveto", "372 callsubr",
                        "-442 435 rmoveto", "373 callsubr", "106 -39 rmoveto",
                        "374 callsubr", "620 -369 rmoveto", "-228 vlineto",
                        "hintmask 10111100", "468 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F8C
     */
    public void testuni1F8C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F8C");
        assertNotNull(cs);
        assertEquals("uni1F8C", cs.getName());
        String[] text =
                {"402 -2 38 -35 27 216 39 362 74 hstemhm",
                        "35 50 649 73 hintmask 01111100", "147 72 rmoveto",
                        "375 callsubr", "119 211 rmoveto", "372 callsubr",
                        "-419 436 rmoveto", "376 callsubr", "169 7 rmoveto",
                        "377 callsubr", "540 -416 rmoveto", "-228 vlineto",
                        "hintmask 10111100", "468 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F8D
     */
    public void testuni1F8D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F8D");
        assertNotNull(cs);
        assertEquals("uni1F8D", cs.getName());
        String[] text =
                {"395 -2 38 -35 27 216 39 362 75 hstemhm",
                        "-19 50 697 73 hintmask 01111100", "147 72 rmoveto",
                        "375 callsubr", "119 211 rmoveto", "372 callsubr",
                        "-403 437 rmoveto", "", "378 callsubr",
                        "173 4 rmoveto", "362 callsubr", "514 -414 rmoveto",
                        "-228 vlineto", "hintmask 10111100", "467 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F8E
     */
    public void testuni1F8E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F8E");
        assertNotNull(cs);
        assertEquals("uni1F8E", cs.getName());
        String[] text =
                {
                        "409 -2 38 -35 27 216 39 249 75 26 43 0 45 hstemhm",
                        "82 50 609 73 hintmask 01111111",
                        "160 72 rmoveto",
                        "65 155 rlineto",
                        "4 11 8 6 25 0 rrcurveto",
                        "210 0 64 -172 rlineto",
                        "2 -6 1 -6 0 -5 rrcurveto",
                        "-16 -16 -11 -31 vhcurveto",
                        "-27 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 97 2 36 39 76 -2 0 vhcurveto",
                        "3 2 0 19 rlineto",
                        "5 -5 3 -5 vhcurveto",
                        "-11 hlineto",
                        "-40 0 -19 19 -15 39 rrcurveto",
                        "-205 542 rlineto",
                        "-7 20 -9 10 -18 0 -10 0 -8 -7 -9 -23 rrcurveto",
                        "-234 -547 rlineto",
                        "-14 -34 -18 -19 -41 0 rrcurveto",
                        "-12 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 65 2 25 25 98 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-29 hlineto",
                        "-29 -17 9 16 hvcurveto",
                        "0 6 1 6 3 7 rrcurveto",
                        "119 211 rmoveto",
                        "-18 -7 3 6 hvcurveto",
                        "0 3 0 2 2 4 rrcurveto",
                        "103 249 99 -267 rlineto",
                        "-386 324 rmoveto",
                        "88 callsubr",
                        "66 69 rmoveto",
                        "-40 0 -21 45 -56 0 -40 0 -21 -28 -13 -55 rrcurveto",
                        "23 -5 rlineto",
                        "10 30 14 13 22 0 38 0 30 -43 42 0 43 0 26 26 12 56 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "603 -366 rmoveto", "-228 vlineto",
                        "hintmask 10111111", "468 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F8F
     */
    public void testuni1F8F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F8F");
        assertNotNull(cs);
        assertEquals("uni1F8F", cs.getName());
        String[] text =
                {"417 -2 38 -35 27 216 39 252 75 22 44 0 45 hstemhm",
                        "40 49 660 73 hintmask 01111111", "163 72 rmoveto",
                        "368 callsubr", "119 211 rmoveto", "369 callsubr",
                        "-298 393 rmoveto", "379 callsubr", "",
                        "-62 -66 rmoveto", "380 callsubr", "649 -300 rmoveto",
                        "-228 vlineto", "hintmask 10111111",
                        "-59 34 -25 45 vhcurveto",
                        "43 0 31 14 14 70 rrcurveto", "-25 4 rlineto",
                        "-5 -34 -9 -16 -25 0 rrcurveto",
                        "-20 -10 20 61 hvcurveto", "0 205 -11 18 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F90
     */
    public void testuni1F90() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F90");
        assertNotNull(cs);
        assertEquals("uni1F90", cs.getName());
        String[] text =
                {"27 -221 41 574 48 181 74 hstemhm",
                        "99 71 -63 74 150 50 -10 75 hintmask 11110010",
                        "173 442 rmoveto", "242 callsubr", "151 344 rmoveto",
                        "-36 -11 -18 -15 -17 5 -24 41 hvcurveto",
                        "hintmask 11100100", "389 callsubr",
                        "hintmask 11101000", "-214 -754 rmoveto",
                        "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F91
     */
    public void testuni1F91() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F91");
        assertNotNull(cs);
        assertEquals("uni1F91", cs.getName());
        String[] text =
                {"27 -221 41 574 48 181 75 hstemhm",
                        "99 71 -63 74 49 50 91 75 hintmask 11110110",
                        "173 442 rmoveto", "242 callsubr", "121 345 rmoveto",
                        "390 callsubr", "hintmask 11101110",
                        "-184 -755 rmoveto", "469 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1F92
     */
    public void testuni1F92() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F92");
        assertNotNull(cs);
        assertEquals("uni1F92", cs.getName());
        String[] text =
                {"27 -221 41 574 48 179 74 hstemhm",
                        "99 71 -63 74 69 51 70 75 hintmask 11110110",
                        "173 442 rmoveto", "242 callsubr", "71 342 rmoveto",
                        "391 callsubr", "113 -39 rmoveto", "392 callsubr",
                        "hintmask 11101110", "-247 -713 rmoveto",
                        "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F93
     */
    public void testuni1F93() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F93");
        assertNotNull(cs);
        assertEquals("uni1F93", cs.getName());
        String[] text =
                {"27 -221 41 574 48 175 75 hstemhm",
                        "99 71 -63 74 13 50 127 75 hintmask 11110110",
                        "173 442 rmoveto", "242 callsubr", "84 339 rmoveto",
                        "381 callsubr", "105 -40 rmoveto", "393 callsubr",
                        "hintmask 11101110", "-252 -709 rmoveto",
                        "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F94
     */
    public void testuni1F94() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F94");
        assertNotNull(cs);
        assertEquals("uni1F94", cs.getName());
        String[] text =
                {"27 -221 41 574 48 178 75 hstemhm",
                        "99 71 -63 74 79 50 61 75 hintmask 11110110",
                        "173 442 rmoveto", "242 callsubr", "80 342 rmoveto",
                        "88 callsubr", "169 6 rmoveto", "394 callsubr",
                        "hintmask 11101110", "-312 -758 rmoveto",
                        "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F95
     */
    public void testuni1F95() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F95");
        assertNotNull(cs);
        assertEquals("uni1F95", cs.getName());
        String[] text =
                {"27 -221 41 574 48 176 75 hstemhm",
                        "99 71 -63 74 15 50 125 75 hintmask 11110110",
                        "173 442 rmoveto", "242 callsubr", "86 340 rmoveto",
                        "395 callsubr", "173 4 rmoveto", "396 callsubr",
                        "hintmask 11101110", "-322 -754 rmoveto",
                        "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F96
     */
    public void testuni1F96() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F96");
        assertNotNull(cs);
        assertEquals("uni1F96", cs.getName());
        String[] text =
                {"27 -233 40 587 48 39 18 86 75 26 43 0 45 hstemhm",
                        "99 71 -62 74 135 51 3 75 hintmask 1111110111000000",
                        "108 -69 rmoveto", "-82 vlineto",
                        "-58 38 -24 49 vhcurveto",
                        "24 0 46 14 15 69 rrcurveto", "-25 8 rlineto",
                        "-6 -27 -16 -24 -18 0 rrcurveto",
                        "-20 -13 23 55 hvcurveto", "0 52 -22 7 rlineto",
                        "13 498 rmoveto", "-15 hlineto",
                        "-9 0 -4 -2 -7 -4 -13 -8 -23 -11 -73 -12 rrcurveto",
                        "5 -30 rlineto", "17 4 12 1 13 0 rrcurveto",
                        "hintmask 1111111011000000", "14 9 -7 -38 hvcurveto",
                        "0 -341 11 -17 63 30 0 305 rlineto",
                        "31 48 35 34 56 0 rrcurveto",
                        "61 15 -53 -65 hvcurveto", "-279 vlineto",
                        "0 -85 2 -66 10 -42 rrcurveto", "75 -34 12 18 rlineto",
                        "-13 34 -11 51 0 124 rrcurveto", "287 vlineto",
                        "115 -46 43 -68 vhcurveto",
                        "-95 0 -49 -66 -15 -23 rrcurveto", "-3 hlineto",
                        "138 307 rmoveto", "397 callsubr", "65 69 rmoveto",
                        "398 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F97
     */
    public void testuni1F97() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F97");
        assertNotNull(cs);
        assertEquals("uni1F97", cs.getName());
        String[] text =
                {"27 -221 41 574 48 146 75 23 43 0 45 hstemhm",
                        "99 71 -63 74 67 50 73 75 hintmask 1111110110000000",
                        "173 442 rmoveto", "242 callsubr", "200 376 rmoveto",
                        "", "399 callsubr", "-62 -66 rmoveto", "400 callsubr",
                        "hintmask 1111101110000000", "-201 -720 rmoveto",
                        "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F98
     */
    public void testuni1F98() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F98");
        assertNotNull(cs);
        assertEquals("uni1F98", cs.getName());
        String[] text =
                {"490 -8 38 -29 27 296 39 255 27 4 75 hstemhm",
                        "29 51 117 81 326 81 137 73 hintmask 0111111110000000",
                        "604 72 rmoveto", "470 callsubr", "-584 400 rmoveto",
                        "-37 -10 -18 -16 -16 5 -25 41 6 4 -8 -10 hvcurveto",
                        "0 -23 -17 -37 -42 -9 rrcurveto", "4 -17 rlineto",
                        "90 5 16 75 0 26 rrcurveto", "37 -22 36 -38 vhcurveto",
                        "802 -419 rmoveto", "-229 vlineto",
                        "hintmask 1011111110000000", "-58 34 -26 44 vhcurveto",
                        "44 0 31 15 13 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 61 hvcurveto", "0 205 -11 18 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F99
     */
    public void testuni1F99() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F99");
        assertNotNull(cs);
        assertEquals("uni1F99", cs.getName());
        String[] text =
                {
                        "493 -2 38 -35 27 296 39 255 27 4 75 hstemhm",
                        "-41 50 188 80 327 81 140 73 hintmask 0111111110000000",
                        "604 72 rmoveto", "401 callsubr", "-584 400 rmoveto",
                        "402 callsubr", "805 -414 rmoveto", "-228 vlineto",
                        "hintmask 1011111110000000", "468 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F9A
     */
    public void testuni1F9A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F9A");
        assertNotNull(cs);
        assertEquals("uni1F9A", cs.getName());
        String[] text =
                {"651 -2 38 -35 27 296 39 255 27 -2 75 hstemhm",
                        "27 51 286 81 326 81 131 73 hintmask 0111011110000000",
                        "771 72 rmoveto", "470 callsubr",
                        "hintmask 0010111110000000", "-753 394 rmoveto",
                        "-37 -10 -18 -16 -16 5 -25 41 6 4 -8 -10 hvcurveto",
                        "0 -23 -17 -37 -42 -9 rrcurveto", "4 -17 rlineto",
                        "hintmask 0011011110000000", "403 callsubr",
                        "113 -40 rmoveto", "388 callsubr", "852 -368 rmoveto",
                        "-228 vlineto", "hintmask 1010011110000000",
                        "-59 34 -25 45 vhcurveto",
                        "43 0 31 14 13 70 rrcurveto", "-24 4 rlineto",
                        "-5 -34 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 61 hvcurveto", "0 205 -11 18 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F9B
     */
    public void testuni1F9B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F9B");
        assertNotNull(cs);
        assertEquals("uni1F9B", cs.getName());
        String[] text =
                {
                        "642 -2 38 -35 27 296 39 255 27 -3 75 hstemhm",
                        "-48 49 352 81 326 81 133 73 hintmask 0111011110000000",
                        "760 72 rmoveto", "404 callsubr",
                        "hintmask 0010111110000000", "-748 393 rmoveto",
                        "hintmask 0011011110000000", "405 callsubr",
                        "hintmask 0010111110000000", "406 callsubr",
                        "105 -39 rmoveto", "407 callsubr", "857 -368 rmoveto",
                        "-228 vlineto", "hintmask 1010011110000000",
                        "471 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F9C
     */
    public void testuni1F9C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F9C");
        assertNotNull(cs);
        assertEquals("uni1F9C", cs.getName());
        String[] text =
                {"656 -2 38 -35 27 296 39 255 27 -2 75 hstemhm",
                        "18 50 288 81 326 81 144 73 hintmask 0111011110000000",
                        "763 72 rmoveto", "408 callsubr",
                        "hintmask 0010111110000000", "-755 394 rmoveto",
                        "409 callsubr", "hintmask 0011011110000000",
                        "410 callsubr", "169 6 rmoveto", "411 callsubr",
                        "811 -414 rmoveto", "-228 vlineto",
                        "hintmask 1010011110000000", "468 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F9D
     */
    public void testuni1F9D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F9D");
        assertNotNull(cs);
        assertEquals("uni1F9D", cs.getName());
        String[] text =
                {
                        "643 -2 38 -35 27 296 39 255 27 1 75 hstemhm",
                        "-51 50 348 80 327 80 141 73 hintmask 0111111110000000",
                        "754 72 rmoveto", "412 callsubr", "-745 397 rmoveto",
                        "413 callsubr", "174 4 rmoveto", "414 callsubr",
                        "792 -415 rmoveto", "-228 vlineto",
                        "hintmask 1011111110000000", "467 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1F9E
     */
    public void testuni1F9E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F9E");
        assertNotNull(cs);
        assertEquals("uni1F9E", cs.getName());
        String[] text =
                {
                        "634 -2 38 -35 27 296 39 169 74 12 27 -13 44 0 45 hstemhm",
                        "100 50 180 81 326 81 148 73 hintmask 0111101111100000",
                        "737 72 rmoveto", "415 callsubr", "-647 282 rmoveto",
                        "416 callsubr", "hintmask 0011011111100000",
                        "65 70 rmoveto", "417 callsubr", "811 -366 rmoveto",
                        "-228 vlineto", "hintmask 1011001111100000",
                        "468 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1F9F
     */
    public void testuni1F9F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1F9F");
        assertNotNull(cs);
        assertEquals("uni1F9F", cs.getName());
        String[] text =
                {
                        "642 -2 38 -35 27 296 39 172 75 8 27 -12 43 0 45 hstemhm",
                        "25 50 266 80 327 81 145 73 hintmask 0111101111100000",
                        "748 72 rmoveto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-39 -15 13 31 hvcurveto",
                        "502 vlineto",
                        "28 13 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "26 hlineto",
                        "39 16 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto",
                        "28 14 16 41 vhcurveto",
                        "26 hlineto",
                        "5 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 5 vhcurveto",
                        "26 hlineto",
                        "39 16 -14 -30 hvcurveto",
                        "-502 vlineto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-39 -16 13 31 hvcurveto",
                        "252 327 vlineto",
                        "hintmask 0011011111100000",
                        "-601 352 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -20 -28 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "10 30 15 13 20 0 38 0 31 -43 42 0 44 0 26 26 12 56 rrcurveto",
                        "-23 6 rlineto", "-13 -34 -13 -11 -21 0 rrcurveto",
                        "-62 -66 rmoveto", "373 callsubr", "889 -300 rmoveto",
                        "-228 vlineto", "hintmask 1011001111100000",
                        "471 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA0
     */
    public void testuni1FA0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA0");
        assertNotNull(cs);
        assertEquals("uni1FA0", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 325 75 hstemhm",
                        "34 74 200 26 -25 73 -31 50 -40 27 195 79 hintmask 1111110011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-20 467 rmoveto", "113 callsubr",
                        "hintmask 1111100101000000", "430 callsubr",
                        "hintmask 1111101001000000", "-32 -779 rmoveto",
                        "472 callsubr", "hintmask 1111100011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA1
     */
    public void testuni1FA1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA1");
        assertNotNull(cs);
        assertEquals("uni1FA1", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 309 75 hstemhm",
                        "34 74 182 49 -31 26 -25 73 -21 27 195 79 hintmask 1111101011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-11 451 rmoveto",
                        "hintmask 1111110001000000", "380 callsubr",
                        "hintmask 1111100101000000", "-41 -763 rmoveto",
                        "472 callsubr", "hintmask 1111100011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA2
     */
    public void testuni1FA2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA2");
        assertNotNull(cs);
        assertEquals("uni1FA2", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 307 75 hstemhm",
                        "34 74 163 50 -13 26 -25 73 -21 27 195 79 hintmask 1111101011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-100 449 rmoveto", "113 callsubr",
                        "hintmask 1111110001000000", "114 callsubr",
                        "113 -40 rmoveto", "433 callsubr",
                        "hintmask 1111100101000000", "-65 -721 rmoveto",
                        "472 callsubr", "hintmask 1111100011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA3
     */
    public void testuni1FA3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA3");
        assertNotNull(cs);
        assertEquals("uni1FA3", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 307 75 hstemhm",
                        "34 74 100 50 50 26 -25 73 -21 27 195 79 hintmask 1111111011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-93 449 rmoveto", "434 callsubr",
                        "106 -40 rmoveto", "435 callsubr",
                        "hintmask 1111110101000000", "-65 -721 rmoveto",
                        "472 callsubr", "hintmask 1111110011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA4
     */
    public void testuni1FA4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA4");
        assertNotNull(cs);
        assertEquals("uni1FA4", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 304 75 hstemhm",
                        "34 74 163 51 -14 26 -25 73 -21 27 195 79 hintmask 1111101011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-99 446 rmoveto", "113 callsubr",
                        "hintmask 1111110001000000", "436 callsubr",
                        "169 6 rmoveto", "424 callsubr",
                        "hintmask 1111100101000000", "-122 -764 rmoveto",
                        "472 callsubr", "hintmask 1111100011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA5
     */
    public void testuni1FA5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA5");
        assertNotNull(cs);
        assertEquals("uni1FA5", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 306 76 hstemhm",
                        "34 74 100 49 51 26 -25 73 -21 27 195 79 hintmask 1111111011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-93 449 rmoveto", "425 callsubr",
                        "173 3 rmoveto", "437 callsubr",
                        "hintmask 1111110101000000", "-132 -764 rmoveto",
                        "472 callsubr", "hintmask 1111110011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA6
     */
    public void testuni1FA6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA6");
        assertNotNull(cs);
        assertEquals("uni1FA6", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 276 75 26 43 0 45 hstemhm",
                        "34 74 200 26 -25 73 -32 50 -39 27 195 79 hintmask 1111111100110000",
                        "662 206 rmoveto", "438 callsubr",
                        "hintmask 1111111001010000", "439 callsubr",
                        "hintmask 1111111100110000", "-301 31 rmoveto",
                        "440 callsubr", "-21 418 rmoveto", "113 callsubr",
                        "hintmask 1111111001010000", "430 callsubr",
                        "65 69 rmoveto", "441 callsubr",
                        "hintmask 1111111010010000", "-96 -799 rmoveto",
                        "-81 vlineto", "-58 38 -25 48 vhcurveto",
                        "24 0 46 14 15 70 rrcurveto", "-24 8 rlineto",
                        "-7 -27 -16 -24 -18 0 rrcurveto",
                        "-20 -13 23 54 hvcurveto", "0 53 -22 6 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA7
     */
    public void testuni1FA7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA7");
        assertNotNull(cs);
        assertEquals("uni1FA7", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 176 18 86 75 23 43 0 46 hstemhm",
                        "34 74 178 50 -28 26 -25 73 -21 27 195 79 hintmask 1111111101011000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "47 488 rmoveto", "442 callsubr",
                        "hintmask 1111111110001000", "443 callsubr",
                        "-62 -66 rmoveto", "444 callsubr",
                        "hintmask 1111111100101000", "-37 -734 rmoveto",
                        "472 callsubr", "hintmask 1111111100011000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA8
     */
    public void testuni1FA8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA8");
        assertNotNull(cs);
        assertEquals("uni1FA8", cs.getName());
        String[] text =
                {
                        "438 0 38 -38 59 565 34 -9 75 hstemhm",
                        "6 51 5 25 -17 88 423 88 -23 26 99 73 hintmask 0110101101000000",
                        "477 117 rmoveto", "232 callsubr",
                        "hintmask 0110110001000000", "454 callsubr",
                        "hintmask 0110101101000000", "455 callsubr",
                        "hintmask 0110100011000000", "235 callsubr",
                        "hintmask 0001100001000000", "-475 665 rmoveto",
                        "-37 -10 -18 -16 -16 5 -25 41 6 4 -8 -10 hvcurveto",
                        "0 -23 -18 -37 -42 -9 rrcurveto", "5 -17 rlineto",
                        "91 5 15 75 0 26 rrcurveto", "37 -22 36 -38 vhcurveto",
                        "774 -412 rmoveto", "-228 vlineto",
                        "hintmask 1000100001000000", "-58 34 -26 44 vhcurveto",
                        "44 0 30 15 14 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 62 hvcurveto", "0 205 -11 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FA9
     */
    public void testuni1FA9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FA9");
        assertNotNull(cs);
        assertEquals("uni1FA9", cs.getName());
        String[] text =
                {
                        "445 0 38 -38 59 565 34 -9 75 hstemhm",
                        "-80 50 91 25 -17 88 423 88 -23 26 106 74 hintmask 0110101101000000",
                        "476 117 rmoveto", "232 callsubr",
                        "hintmask 0110110001000000", "454 callsubr",
                        "hintmask 0110101101000000", "455 callsubr",
                        "hintmask 0110100011000000", "235 callsubr",
                        "hintmask 0001100001000000", "-491 665 rmoveto",
                        "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -75 90 -5 rrcurveto", "4 17 rlineto",
                        "-41 9 -18 37 0 23 rrcurveto",
                        "11 4 7 7 40 5 25 16 vhcurveto",
                        "17 -10 17 -36 vhcurveto", "797 -412 rmoveto",
                        "-228 vlineto", "hintmask 1000100001000000",
                        "473 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FAA
     */
    public void testuni1FAA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FAA");
        assertNotNull(cs);
        assertEquals("uni1FAA", cs.getName());
        String[] text =
                {
                        "585 0 38 -38 59 565 34 -15 75 hstemhm",
                        "18 50 197 26 -18 88 423 88 -23 26 42 73 hintmask 0110101101000000",
                        "680 117 rmoveto", "232 callsubr",
                        "hintmask 0110110001000000", "447 callsubr",
                        "hintmask 0110101101000000", "446 callsubr",
                        "hintmask 0110100011000000", "235 callsubr",
                        "hintmask 0001100001000000", "-667 659 rmoveto",
                        "88 callsubr", "113 -40 rmoveto", "388 callsubr",
                        "796 -366 rmoveto", "-228 vlineto",
                        "hintmask 1000100001000000", "-58 34 -26 45 vhcurveto",
                        "43 0 31 15 13 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-20 -10 20 62 hvcurveto", "0 205 -11 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FAB
     */
    public void testuni1FAB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FAB");
        assertNotNull(cs);
        assertEquals("uni1FAB", cs.getName());
        String[] text =
                {
                        "579 0 38 -38 59 565 34 -16 75 hstemhm",
                        "-58 50 255 26 -18 88 424 87 -22 25 54 73 hintmask 0110101101000000",
                        "663 117 rmoveto", "448 callsubr",
                        "hintmask 0110110001000000", "219 callsubr",
                        "hintmask 0110101101000000", "449 callsubr",
                        "hintmask 0110100011000000", "450 callsubr",
                        "hintmask 0001100001000000", "-656 658 rmoveto",
                        "451 callsubr", "hintmask 0010100001000000",
                        "-42 8 -18 37 0 23 rrcurveto",
                        "hintmask 0001100001000000", "452 callsubr",
                        "106 -39 rmoveto", "453 callsubr", "803 -366 rmoveto",
                        "-228 vlineto", "hintmask 1000100001000000",
                        "474 callsubr", "", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FAC
     */
    public void testuni1FAC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FAC");
        assertNotNull(cs);
        assertEquals("uni1FAC", cs.getName());
        String[] text =
                {
                        "564 0 38 -38 59 565 34 -13 75 hstemhm",
                        "23 50 135 25 -17 88 423 88 -23 26 78 74 hintmask 0110101101000000",
                        "623 117 rmoveto", "232 callsubr",
                        "hintmask 0110110001000000", "454 callsubr",
                        "hintmask 0110101101000000", "455 callsubr",
                        "hintmask 0110100011000000", "235 callsubr",
                        "hintmask 0001100001000000", "-605 661 rmoveto",
                        "88 callsubr", "169 6 rmoveto", "456 callsubr",
                        "hintmask 0000101001000000", "457 callsubr",
                        "714 -414 rmoveto", "-228 vlineto",
                        "hintmask 1000100001000000", "-58 35 -26 44 vhcurveto",
                        "44 0 30 15 14 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 62 hvcurveto", "0 205 -12 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FAD
     */
    public void testuni1FAD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FAD");
        assertNotNull(cs);
        assertEquals("uni1FAD", cs.getName());
        String[] text =
                {
                        "579 0 38 -38 59 565 34 -13 75 hstemhm",
                        "-48 50 209 26 -17 88 423 88 -23 26 89 73 hintmask 0110101101000000",
                        "627 117 rmoveto", "458 callsubr",
                        "hintmask 0110110001000000", "459 callsubr",
                        "hintmask 0110101101000000", "460 callsubr",
                        "hintmask 0110100011000000", "461 callsubr",
                        "hintmask 0001100001000000", "-610 661 rmoveto",
                        "429 callsubr", "174 4 rmoveto", "383 callsubr",
                        "725 -412 rmoveto", "-228 vlineto",
                        "hintmask 1000100001000000", "474 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1FAE
     */
    public void testuni1FAE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FAE");
        assertNotNull(cs);
        assertEquals("uni1FAE", cs.getName());
        String[] text =
                {
                        "553 0 38 -38 59 474 74 17 34 -25 44 0 45 hstemhm",
                        "71 50 60 26 -18 88 423 88 -23 26 94 73 hintmask 0111011011010000",
                        "596 117 rmoveto", "445 callsubr",
                        "hintmask 0111011100010000",
                        "-53 0 -19 7 -4 53 rrcurveto",
                        "-26 0 7 -119 211 0 rlineto",
                        "12 0 6 6 -1 10 rrcurveto", "-8 127 rlineto",
                        "hintmask 0111011011010000", "446 callsubr",
                        "hintmask 0111011000110000", "235 callsubr",
                        "-530 548 rmoveto", "416 callsubr",
                        "hintmask 0010111000010000", "65 70 rmoveto",
                        "417 callsubr", "759 -365 rmoveto", "-228 vlineto",
                        "hintmask 1010011000010000", "-58 34 -26 44 vhcurveto",
                        "44 0 31 15 13 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 62 hvcurveto", "0 205 -11 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FAF
     */
    public void testuni1FAF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FAF");
        assertNotNull(cs);
        assertEquals("uni1FAF", cs.getName());
        String[] text =
                {
                        "572 0 38 -38 59 477 75 13 34 -24 43 0 45 hstemhm",
                        "17 50 141 25 -17 88 423 88 -23 26 86 74 hintmask 0111011011010000",
                        "623 117 rmoveto", "232 callsubr",
                        "hintmask 0111011100010000", "454 callsubr",
                        "hintmask 0111011011010000", "455 callsubr",
                        "hintmask 0111011000110000", "235 callsubr",
                        "hintmask 0010111100010000", "-479 618 rmoveto",
                        "475 callsubr", "-62 -66 rmoveto",
                        "-38 -22 -37 -35 hvcurveto",
                        "0 -26 15 -76 91 -4 rrcurveto", "3 17 rlineto",
                        "-41 8 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 17 16 -11 17 -36 vhcurveto",
                        "827 -299 rmoveto", "-228 vlineto",
                        "hintmask 1010011000010000", "-58 34 -26 45 vhcurveto",
                        "43 0 31 15 14 69 rrcurveto", "-25 5 rlineto",
                        "-4 -35 -9 -16 -26 0 rrcurveto",
                        "-20 -9 20 62 hvcurveto", "0 205 -12 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FB0
     */
    public void testuni1FB0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB0");
        assertNotNull(cs);
        assertEquals("uni1FB0", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 58 58 hstemhm",
                        "34 80 -12 27 217 26 hintmask 01111010",
                        "386 206 rmoveto", "237 callsubr", "30 14 rmoveto",
                        "238 callsubr", "hintmask 10111010", "239 callsubr",
                        "hintmask 00110110", "-372 207 rmoveto",
                        "-27 -13 rlineto",
                        "7 -78 51 -58 78 0 50 0 74 35 10 101 rrcurveto",
                        "-26 13 rlineto", "-3 -62 -59 -29 -46 0 rrcurveto",
                        "-61 0 -46 40 -2 51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FB1
     */
    public void testuni1FB1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB1");
        assertNotNull(cs);
        assertEquals("uni1FB1", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 100 43 hstemhm",
                        "34 80 hintmask 01111000", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111000", "239 callsubr",
                        "-136 100 rmoveto", "13 11 17 12 7 -4 7 -10 hvcurveto",
                        "-245 hlineto", "-11 -11 -17 -12 -7 4 -7 9 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FB2
     */
    public void testuni1FB2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB2");
        assertNotNull(cs);
        assertEquals("uni1FB2", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 hstemhm",
                        "34 80 87 73 hintmask 10111100", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 11011100", "239 callsubr",
                        "-316 231 rmoveto", "463 callsubr", "16 -748 rmoveto",
                        "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FB3
     */
    public void testuni1FB3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB3");
        assertNotNull(cs);
        assertEquals("uni1FB3", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 hstemhm",
                        "34 80 87 73 hintmask 10111100", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 11011100", "239 callsubr",
                        "-300 -517 rmoveto", "466 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FB4
     */
    public void testuni1FB4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB4");
        assertNotNull(cs);
        assertEquals("uni1FB4", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 240 -20 hstemhm",
                        "34 80 87 73 hintmask 10111110", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 11011110", "239 callsubr",
                        "-205 240 rmoveto", "240 callsubr", "-95 -757 rmoveto",
                        "466 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FB6
     */
    public void testuni1FB6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB6");
        assertNotNull(cs);
        assertEquals("uni1FB6", cs.getName());
        String[] text =
                {"104 -12 64 -64 31 394 29 112 43 0 45 hstemhm",
                        "34 80 hintmask 01111100", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 10111100", "239 callsubr",
                        "-194 155 rmoveto", "476 callsubr", "endchar", "", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FB7
     */
    public void testuni1FB7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB7");
        assertNotNull(cs);
        assertEquals("uni1FB7", cs.getName());
        String[] text =
                {"104 -239 41 186 64 -64 31 394 29 112 43 0 45 hstemhm",
                        "34 80 87 73 hintmask 10111111", "386 206 rmoveto",
                        "237 callsubr", "30 14 rmoveto", "238 callsubr",
                        "hintmask 11011111", "239 callsubr",
                        "-194 155 rmoveto", "476 callsubr",
                        "-106 -672 rmoveto", "466 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FB8
     */
    public void testuni1FB8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB8");
        assertNotNull(cs);
        assertEquals("uni1FB8", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 54 52 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "53 522 rmoveto", "106 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FB9
     */
    public void testuni1FB9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FB9");
        assertNotNull(cs);
        assertEquals("uni1FB9", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 87 44 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "31 442 rmoveto", "12 11 18 11 7 -4 8 -9 hvcurveto",
                        "-245 hlineto", "-12 -10 -18 -11 -7 3 -8 9 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FBA
     */
    public void testuni1FBA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FBA");
        assertNotNull(cs);
        assertEquals("uni1FBA", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-355 436 rmoveto", "477 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FBB
     */
    public void testuni1FBB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FBB");
        assertNotNull(cs);
        assertEquals("uni1FBB", cs.getName());
        String[] text =
                {"194 1 27 216 39 375 -20 hstem", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "-273 441 rmoveto", "-11 0 -13 -6 -4 -11 rrcurveto",
                        "-53 -143 rlineto",
                        "-1 -3 0 -5 0 -1 0 -7 7 -6 8 0 4 0 4 3 3 4 rrcurveto",
                        "92 122 rlineto",
                        "4 5 1 6 0 4 0 21 -21 17 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1FBC
     */
    public void testuni1FBC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FBC");
        assertNotNull(cs);
        assertEquals("uni1FBC", cs.getName());
        String[] text =
                {"402 -5 38 -32 27 216 39 375 -20 hstemhm",
                        "734 74 hintmask 01111000", "140 72 rmoveto",
                        "-82 callsubr", "119 211 rmoveto", "-81 callsubr",
                        "296 25 rmoveto", "-229 vlineto", "",
                        "hintmask 10111000", "473 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FBD
     */
    public void testuni1FBD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FBD");
        assertNotNull(cs);
        assertEquals("uni1FBD", cs.getName());
        String[] text =
                {"-320 577 75 hstem", "89 50 vstem", "79 652 rmoveto",
                        "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FBE
     */
    public void testuni1FBE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FBE");
        assertNotNull(cs);
        assertEquals("uni1FBE", cs.getName());
        String[] text =
                {"-170 -254 38 hstem", "129 73 vstem", "129 59 rmoveto",
                        "-229 vlineto", "-58 34 -26 45 vhcurveto",
                        "43 0 31 15 13 69 rrcurveto", "-24 5 rlineto",
                        "-5 -35 -9 -16 -25 0 rrcurveto",
                        "-21 -9 20 62 hvcurveto", "0 205 -11 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FBF
     */
    public void testuni1FBF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FBF");
        assertNotNull(cs);
        assertEquals("uni1FBF", cs.getName());
        String[] text =
                {"-319 577 75 hstem", "89 50 vstem", "79 652 rmoveto",
                        "88 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC0
     */
    public void testuni1FC0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC0");
        assertNotNull(cs);
        assertEquals("uni1FC0", cs.getName());
        String[] text =
                {
                        "-80 584 43 0 45 hstem",
                        "85 260 vstem",
                        "276 627 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "11 30 14 13 21 0 38 0 31 -43 42 0 43 0 26 26 12 56 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC1
     */
    public void testuni1FC1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC1");
        assertNotNull(cs);
        assertEquals("uni1FC1", cs.getName());
        String[] text =
                {"-133 529 91 56 43 0 45 hstem", "59 90 70 91 vstem",
                        "59 575 rmoveto", "347 callsubr", "160 hmoveto",
                        "8 callsubr", "24 144 rmoveto", "475 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC2
     */
    public void testuni1FC2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC2");
        assertNotNull(cs);
        assertEquals("uni1FC2", cs.getName());
        String[] text =
                {"27 -221 41 574 48 241 -20 hstemhm",
                        "99 71 -63 74 190 75 hintmask 11110100",
                        "173 442 rmoveto", "242 callsubr", "69 325 rmoveto",
                        "464 callsubr", "hintmask 11101100",
                        "-132 -735 rmoveto", "469 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FC3
     */
    public void testuni1FC3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC3");
        assertNotNull(cs);
        assertEquals("uni1FC3", cs.getName());
        String[] text =
                {"27 -221 41 574 48 hstemhm",
                        "99 71 -63 74 190 75 hintmask 11101000",
                        "173 442 rmoveto", "242 callsubr", "hintmask 11011000",
                        "-63 -410 rmoveto", "469 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC4
     */
    public void testuni1FC4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC4");
        assertNotNull(cs);
        assertEquals("uni1FC4", cs.getName());
        String[] text =
                {"27 -221 41 574 48 239 -20 hstemhm",
                        "99 71 -63 74 190 75 hintmask 11110100",
                        "173 442 rmoveto", "242 callsubr", "165 328 rmoveto",
                        "213 callsubr", "hintmask 11101100",
                        "-228 -738 rmoveto", "469 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FC6
     */
    public void testuni1FC6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC6");
        assertNotNull(cs);
        assertEquals("uni1FC6", cs.getName());
        String[] text =
                {"27 394 48 110 43 0 45 hstem", "99 71 201 75 vstem",
                        "173 442 rmoveto", "242 callsubr", "178 242 rmoveto",
                        "478 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC7
     */
    public void testuni1FC7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC7");
        assertNotNull(cs);
        assertEquals("uni1FC7", cs.getName());
        String[] text =
                {"27 -217 41 570 48 110 43 0 45 hstemhm",
                        "99 71 -63 74 190 75 hintmask 11111010",
                        "173 442 rmoveto", "242 callsubr", "178 242 rmoveto",
                        "478 callsubr", "hintmask 11110110",
                        "-241 -648 rmoveto", "-81 vlineto",
                        "-58 38 -25 48 vhcurveto",
                        "25 0 46 14 15 70 rrcurveto", "-25 8 rlineto",
                        "-7 -27 -16 -24 -17 0 rrcurveto",
                        "-21 -12 23 54 hvcurveto", "0 53 -22 6 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC8
     */
    public void testuni1FC8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC8");
        assertNotNull(cs);
        assertEquals("uni1FC8", cs.getName());
        String[] text =
                {
                        "189 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "223 80 hintmask 00111010",
                        "474 606 rmoveto",
                        "-67 callsubr",
                        "hintmask 00110110",
                        "262 callsubr",
                        "hintmask 00111010",
                        "-65 callsubr",
                        "hintmask 10110110",
                        "-64 callsubr",
                        "hintmask 01111010",
                        "387 callsubr",
                        "-345 108 rmoveto",
                        "-13 -9 -6 -12 0 -12 0 -5 1 -5 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 0 3 0 4 0 3 1 3 2 3 3 1 3 0 3 0 1 0 1 -1 1 rrcurveto",
                        "-61 146 rlineto",
                        "-2 5 -4 4 -6 3 -6 3 -4 1 -6 0 -6 0 -6 -2 -6 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FC9
     */
    public void testuni1FC9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FC9");
        assertNotNull(cs);
        assertEquals("uni1FC9", cs.getName());
        String[] text =
                {"172 -1 29 -28 39 288 34 82 -20 183 40 -28 28 hstemhm",
                        "205 81 hintmask 00111010", "457 606 rmoveto", "",
                        "384 callsubr", "hintmask 00110110", "-66 callsubr",
                        "hintmask 00111010", "-257 0 -77 -1 rlineto",
                        "hintmask 10110110", "385 callsubr",
                        "hintmask 01111010", "78 -1 294 0 rlineto",
                        "4 56 11 57 11 52 rrcurveto", "-30 5 rlineto",
                        "-20 -72 -30 -59 -76 0 rrcurveto", "-165 hlineto",
                        "-22 -14 6 27 hvcurveto", "255 136 vlineto",
                        "34 0 11 -15 6 -29 rrcurveto", "6 -31 rlineto",
                        "-3 2 -4 6 vhcurveto", "23 0 2 3 rlineto",
                        "-2 17 -6 45 0 34 0 33 5 37 3 25 rrcurveto",
                        "2 -1 2 -2 vhcurveto", "-22 hlineto",
                        "-4 0 -3 -4 -1 -4 rrcurveto", "-6 -30 rlineto",
                        "-7 -28 -8 -16 -36 0 rrcurveto", "-136 213 hlineto",
                        "24 12 8 24 vhcurveto", "-262 118 rmoveto",
                        "214 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FCA
     */
    public void testuni1FCA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FCA");
        assertNotNull(cs);
        assertEquals("uni1FCA", cs.getName());
        String[] text =
                {
                        "303 1 27 296 39 255 27 hstem",
                        "210 81 326 81 vstem",
                        "617 72 rmoveto",
                        "408 callsubr",
                        "-628 396 rmoveto",
                        "-13 -10 -7 -11 0 -12 0 -5 2 -5 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 3 0 4 2 3 2 2 3 2 3 0 3 rrcurveto",
                        "1 -1 1 0 vhcurveto",
                        "-62 146 rlineto",
                        "-2 6 -4 4 -6 3 -5 3 -5 1 -5 0 -7 0 -6 -2 -5 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FCB
     */
    public void testuni1FCB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FCB");
        assertNotNull(cs);
        assertEquals("uni1FCB", cs.getName());
        String[] text =
                {"294 1 27 296 39 255 27 hstem", "201 81 326 81 vstem",
                        "608 72 rmoveto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-5 -2 -3 -5 hvcurveto",
                        "0 -19 1 -2 rlineto", "0 94 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "502 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "", "39 15 -14 -30 hvcurveto",
                        "-211 -326 211 vlineto", "28 13 16 41 vhcurveto",
                        "27 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -94 -1 -35 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -42 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 94 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-27 hlineto", "-39 -15 13 31 hvcurveto",
                        "252 326 vlineto", "-565 402 rmoveto",
                        "-10 0 -13 -6 -4 -11 rrcurveto", "-53 -143 rlineto",
                        "-1 -3 -1 -5 0 -1 0 -7 8 -7 8 0 4 0 4 4 3 4 rrcurveto",
                        "92 122 rlineto",
                        "3 5 1 6 0 4 0 20 -21 18 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1FCC
     */
    public void testuni1FCC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FCC");
        assertNotNull(cs);
        assertEquals("uni1FCC", cs.getName());
        String[] text =
                {"393 -1 38 -36 27 296 39 255 27 hstemhm",
                        "106 81 327 80 131 73 hintmask 01111110",
                        "514 72 rmoveto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 rlineto", "hintmask 10111110", "2 -2 rlineto",
                        "hintmask 01111110", "0 93 2 36 vhcurveto",
                        "hintmask 10111110", "39 87 -2 0 hvcurveto",
                        "hintmask 01111110", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "502 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "40 15 -14 -30 hvcurveto",
                        "-211 -327 211 vlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto", "",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 rlineto", "hintmask 10111110", "2 -2 rlineto",
                        "hintmask 01111110", "0 93 2 35 vhcurveto",
                        "hintmask 10111110", "40 86 -2 0 hvcurveto",
                        "hintmask 01111110", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 13 31 hvcurveto", "252 327 vlineto",
                        "211 -12 rmoveto", "-229 vlineto", "hintmask 10111110",
                        "474 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FCD
     */
    public void testuni1FCD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FCD");
        assertNotNull(cs);
        assertEquals("uni1FCD", cs.getName());
        String[] text =
                {"-163 576 74 hstem", "92 51 vstem", "83 650 rmoveto",
                        "479 callsubr", "112 -39 rmoveto", "480 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FCE
     */
    public void testuni1FCE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FCE");
        assertNotNull(cs);
        assertEquals("uni1FCE", cs.getName());
        String[] text =
                {"-163 573 74 hstem", "92 51 vstem", "83 647 rmoveto",
                        "479 callsubr", "168 7 rmoveto",
                        "-10 0 -17 -4 -4 -16 rrcurveto",
                        "-33 -155 0 -1 rlineto", "-3 2 -10 12 vhcurveto",
                        "3 0 4 1 1 4 rrcurveto", "76 139 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -29 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1FCF
     */
    public void testuni1FCF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FCF");
        assertNotNull(cs);
        assertEquals("uni1FCF", cs.getName());
        String[] text =
                {
                        "-181 506 75 26 43 0 45 hstem",
                        "175 51 vstem",
                        "166 581 rmoveto",
                        "382 callsubr",
                        "65 69 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -28 -12 -55 rrcurveto",
                        "21 -5 rlineto",
                        "11 30 14 13 21 0 38 0 31 -43 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 6 rlineto", "-13 -34 -14 -11 -20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD0
     */
    public void testuni1FD0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD0");
        assertNotNull(cs);
        assertEquals("uni1FD0", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 78 58 hstem", "5 27 62 74 81 26 vstem",
                        "168 442 rmoveto", "179 callsubr", "-136 563 rmoveto",
                        "-27 -13 rlineto",
                        "7 -78 51 -58 78 0 49 0 75 35 10 101 rrcurveto",
                        "-26 13 rlineto",
                        "-3 -62 -59 -29 -46 0 -61 0 -46 40 -2 51 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD1
     */
    public void testuni1FD1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD1");
        assertNotNull(cs);
        assertEquals("uni1FD1", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 117 44 hstem", "94 74 vstem",
                        "168 442 rmoveto", "179 callsubr", "89 453 rmoveto",
                        "13 11 18 11 7 -4 8 -10 hvcurveto", "-245 hlineto",
                        "-11 -11 -18 -11 -7 4 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FD2
     */
    public void testuni1FD2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD2");
        assertNotNull(cs);
        assertEquals("uni1FD2", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 117 91 hstemhm",
                        "12 91 -9 74 5 91 hintmask 11101100",
                        "168 442 rmoveto",
                        "179 callsubr",
                        "hintmask 11110100",
                        "-156 498 rmoveto",
                        "37 callsubr",
                        "161 hmoveto",
                        "128 callsubr",
                        "-124 207 rmoveto",
                        "-13 -9 -6 -11 0 -13 0 -5 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 3 1 3 3 3 2 1 3 0 3 0 1 0 1 -1 1 rrcurveto",
                        "-61 146 rlineto",
                        "-2 5 -4 4 -6 3 -5 3 -5 1 -6 0 -6 0 -6 -2 -6 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD3
     */
    public void testuni1FD3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD3");
        assertNotNull(cs);
        assertEquals("uni1FD3", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 105 91 hstemhm",
                        "9 91 -6 74 2 91 hintmask 11101100", "168 442 rmoveto",
                        "179 callsubr", "hintmask 11110100",
                        "-159 486 rmoveto", "222 callsubr", "161 hmoveto",
                        "223 callsubr", "29 212 rmoveto", "213 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD6
     */
    public void testuni1FD6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD6");
        assertNotNull(cs);
        assertEquals("uni1FD6", cs.getName());
        String[] text =
                {"-209 -12 53 401 -20 132 43 0 45 hstem", "94 74 vstem",
                        "168 442 rmoveto", "179 callsubr", "22 511 rmoveto",
                        "441 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD7
     */
    public void testuni1FD7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD7");
        assertNotNull(cs);
        assertEquals("uni1FD7", cs.getName());
        String[] text =
                {
                        "-209 -12 53 401 -20 108 91 55 44 0 45 hstemhm",
                        "18 90 -14 74 10 91 hintmask 11111011",
                        "168 442 rmoveto",
                        "179 callsubr",
                        "hintmask 11111101",
                        "-150 489 rmoveto",
                        "57 callsubr",
                        "160 hmoveto",
                        "72 callsubr",
                        "24 145 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -29 -12 -55 rrcurveto",
                        "22 -5 rlineto",
                        "10 30 15 14 21 0 38 0 30 -44 42 0 43 0 27 26 11 56 rrcurveto",
                        "-22 7 rlineto", "-13 -35 -13 -10 -21 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD8
     */
    public void testuni1FD8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD8");
        assertNotNull(cs);
        assertEquals("uni1FD8", cs.getName());
        String[] text =
                {"-197 1 27 590 27 47 52 hstem", "111 81 vstem",
                        "192 574 rmoveto", "421 callsubr", "96 734 rmoveto",
                        "208 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FD9
     */
    public void testuni1FD9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FD9");
        assertNotNull(cs);
        assertEquals("uni1FD9", cs.getName());
        String[] text =
                {"-208 1 27 590 27 83 44 hstem", "106 81 vstem",
                        "187 574 rmoveto", "-58 callsubr", "77 657 rmoveto",
                        "337 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FDA
     */
    public void testuni1FDA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FDA");
        assertNotNull(cs);
        assertEquals("uni1FDA", cs.getName());
        String[] text =
                {
                        "-106 1 27 590 27 hstem",
                        "209 81 vstem",
                        "290 574 rmoveto",
                        "28 13 16 41 vhcurveto",
                        "27 hlineto",
                        "4 3 3 5 hvcurveto",
                        "0 19 -2 1 rlineto",
                        "0 -93 -1 -35 -40 -86 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto",
                        "-5 4 -3 4 vhcurveto",
                        "26 hlineto",
                        "40 15 -14 -30 hvcurveto",
                        "-503 vlineto",
                        "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto",
                        "-27 hlineto",
                        "-39 -15 13 30 hvcurveto",
                        "-303 649 rmoveto",
                        "-13 -10 -7 -11 0 -12 0 -5 2 -5 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 3 0 4 2 3 2 2 3 2 3 0 3 0 1 -1 1 0 1 rrcurveto",
                        "-62 145 rlineto",
                        "-2 6 -4 4 -5 3 -6 3 -5 1 -5 0 -6 0 -7 -2 -5 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FDB
     */
    public void testuni1FDB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FDB");
        assertNotNull(cs);
        assertEquals("uni1FDB", cs.getName());
        String[] text =
                {"-115 1 27 590 27 hstem", "200 80 vstem", "280 574 rmoveto",
                        "419 callsubr", "-223 654 rmoveto", "481 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FDD
     */
    public void testuni1FDD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FDD");
        assertNotNull(cs);
        assertEquals("uni1FDD", cs.getName());
        String[] text =
                {"-166 575 75 hstem", "30 50 vstem", "90 650 rmoveto",
                        "-39 -21 -37 -35 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "-41 8 -18 37 0 23 rrcurveto",
                        "11 3 7 8 40 5 25 17 16 -11 17 -35 vhcurveto",
                        "105 -39 rmoveto", "480 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FDE
     */
    public void testuni1FDE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FDE");
        assertNotNull(cs);
        assertEquals("uni1FDE", cs.getName());
        String[] text =
                {"-170 575 75 hstem", "28 50 vstem", "88 650 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -26 15 -75 91 -5 rrcurveto", "4 17 rlineto",
                        "-42 9 -18 37 0 23 rrcurveto",
                        "10 4 8 7 41 5 25 16 16 -11 18 -36 vhcurveto",
                        "174 4 rmoveto", "-11 0 -17 -4 -4 -16 rrcurveto",
                        "-33 -155 0 -1 rlineto", "-3 2 -10 12 vhcurveto",
                        "3 0 4 1 2 4 rrcurveto", "75 139 rlineto",
                        "2 4 1 4 0 4 0 11 -8 22 -28 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1FDF
     */
    public void testuni1FDF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FDF");
        assertNotNull(cs);
        assertEquals("uni1FDF", cs.getName());
        String[] text =
                {
                        "-145 601 75 22 44 0 45 hstem",
                        "119 49 vstem",
                        "241 742 rmoveto",
                        "-40 0 -21 45 -55 0 -41 0 -21 -29 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "11 30 14 14 21 0 38 0 31 -44 42 0 43 0 26 26 12 56 rrcurveto",
                        "-22 7 rlineto", "-14 -35 -13 -10 -20 0 rrcurveto",
                        "-62 -66 rmoveto", "-39 -21 -37 -36 hvcurveto",
                        "0 -26 15 -76 90 -4 rrcurveto", "4 17 rlineto",
                        "-41 8 -19 38 0 23 rrcurveto",
                        "10 4 8 8 40 5 24 17 16 -11 18 -35 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE0
     */
    public void testuni1FE0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE0");
        assertNotNull(cs);
        assertEquals("uni1FE0", cs.getName());
        String[] text =
                {"3 -12 47 355 52 58 58 hstemhm",
                        "86 72 -56 77 -64 27 216 27 37 36 hintmask 11110011",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101011",
                        "245 callsubr", "hintmask 11110011", "246 callsubr",
                        "hintmask 11100111", "-316 400 rmoveto",
                        "-27 -13 rlineto",
                        "7 -78 51 -58 77 0 50 0 75 35 10 101 rrcurveto",
                        "-27 13 rlineto", "-2 -62 -60 -29 -46 0 rrcurveto",
                        "-60 0 -46 40 -2 51 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE1
     */
    public void testuni1FE1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE1");
        assertNotNull(cs);
        assertEquals("uni1FE1", cs.getName());
        String[] text =
                {"3 -12 47 355 52 97 44 hstemhm", "",
                        "86 72 -56 77 243 36 hintmask 11110100",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101100",
                        "245 callsubr", "hintmask 11110100", "246 callsubr",
                        "-80 290 rmoveto", "13 10 18 11 7 -4 8 -9 hvcurveto",
                        "-245 hlineto", "-12 -10 -18 -11 -7 4 -8 8 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE2
     */
    public void testuni1FE2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE2");
        assertNotNull(cs);
        assertEquals("uni1FE2", cs.getName());
        String[] text =
                {
                        "3 -12 47 355 52 76 91 hstemhm",
                        "86 72 -56 77 -51 91 70 91 42 36 hintmask 11110011",
                        "458 249 rmoveto",
                        "244 callsubr",
                        "hintmask 11101011",
                        "245 callsubr",
                        "hintmask 11110011",
                        "246 callsubr",
                        "hintmask 11100111",
                        "-330 314 rmoveto",
                        "37 callsubr",
                        "161 hmoveto",
                        "318 callsubr",
                        "-123 207 rmoveto",
                        "-14 -9 -6 -11 0 -13 0 -5 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 4 1 3 3 2 2 1 3 0 3 0 1 0 1 -1 1 rrcurveto",
                        "-61 146 rlineto",
                        "-2 5 -4 4 -6 3 -5 3 -5 1 -5 0 -7 0 -6 -2 -5 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE3
     */
    public void testuni1FE3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE3");
        assertNotNull(cs);
        assertEquals("uni1FE3", cs.getName());
        String[] text =
                {"3 -12 47 355 52 85 91 hstemhm",
                        "86 72 -56 77 -41 91 69 91 33 36 hintmask 11110011",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101011",
                        "245 callsubr", "hintmask 11110011", "246 callsubr",
                        "hintmask 11100111", "-320 323 rmoveto", "56 callsubr",
                        "160 hmoveto", "72 callsubr", "29 212 rmoveto",
                        "247 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE4
     */
    public void testuni1FE4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE4");
        assertNotNull(cs);
        assertEquals("uni1FE4", cs.getName());
        String[] text =
                {"27 -11 30 385 38 187 75 hstem", "83 74 122 50 81 86 vstem",
                        "148 -212 rmoveto", "248 callsubr", "340 442 rmoveto",
                        "249 callsubr", "-141 505 rmoveto", "88 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE5
     */
    public void testuni1FE5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE5");
        assertNotNull(cs);
        assertEquals("uni1FE5", cs.getName());
        String[] text =
                {"27 -11 30 385 38 171 75 hstem", "83 74 61 50 142 86 vstem",
                        "148 -212 rmoveto", "248 callsubr", "340 442 rmoveto",
                        "249 callsubr", "-132 489 rmoveto", "418 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE6
     */
    public void testuni1FE6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE6");
        assertNotNull(cs);
        assertEquals("uni1FE6", cs.getName());
        String[] text =
                {
                        "3 -12 47 355 52 111 44 0 45 hstemhm",
                        "86 72 -56 77 243 36 hintmask 11111010",
                        "458 249 rmoveto",
                        "244 callsubr",
                        "hintmask 11110110",
                        "245 callsubr",
                        "hintmask 11111010",
                        "246 callsubr",
                        "-128 348 rmoveto",
                        "-40 0 -21 45 -56 0 -40 0 -21 -29 -13 -55 rrcurveto",
                        "22 -5 rlineto",
                        "11 30 14 14 21 0 38 0 30 -44 42 0 44 0 26 26 12 56 rrcurveto",
                        "-23 7 rlineto", "-13 -35 -13 -10 -20 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE7
     */
    public void testuni1FE7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE7");
        assertNotNull(cs);
        assertEquals("uni1FE7", cs.getName());
        String[] text =
                {
                        "3 -12 47 355 52 72 91 56 43 0 45 hstemhm",
                        "86 72 -56 77 -47 91 69 91 39 36 hintmask 1111110011000000",
                        "458 249 rmoveto", "244 callsubr",
                        "hintmask 1111101011000000", "245 callsubr",
                        "hintmask 1111110011000000", "246 callsubr",
                        "hintmask 1111100111000000", "-326 311 rmoveto",
                        "236 callsubr", "160 hmoveto", "28 callsubr",
                        "24 144 rmoveto", "441 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE8
     */
    public void testuni1FE8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE8");
        assertNotNull(cs);
        assertEquals("uni1FE8", cs.getName());
        String[] text =
                {"73 1 27 590 27 47 52 hstem", "254 80 vstem",
                        "254 72 rmoveto", "-36 callsubr", "179 524 rmoveto",
                        "208 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FE9
     */
    public void testuni1FE9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FE9");
        assertNotNull(cs);
        assertEquals("uni1FE9", cs.getName());
        String[] text =
                {"73 1 27 590 27 74 44 hstem", "254 80 vstem",
                        "254 72 rmoveto", "-36 callsubr", "157 438 rmoveto",
                        "12 11 18 12 6 -4 8 -10 hvcurveto", "-244 hlineto",
                        "-12 -10 -17 -12 -7 3 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FEA
     */
    public void testuni1FEA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FEA");
        assertNotNull(cs);
        assertEquals("uni1FEA", cs.getName());
        String[] text =
                {
                        "205 1 27 590 27 hstem",
                        "383 80 vstem",
                        "383 72 rmoveto",
                        "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "",
                        "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto",
                        "-26 hlineto",
                        "-39 -16 13 31 hvcurveto",
                        "0 221 149 281 rlineto",
                        "18 32 13 12 30 0 rrcurveto",
                        "21 hlineto",
                        "6 4 2 5 hvcurveto",
                        "0 20 -2 1 rlineto",
                        "0 -78 -1 -9 -13 -79 1 0 vhcurveto",
                        "-2 -1 0 -20 rlineto",
                        "-3 1 -4 5 vhcurveto",
                        "30 hlineto",
                        "20 5 -3 -11 hvcurveto",
                        "0 -5 -3 -9 -8 -14 rrcurveto",
                        "-127 -235 -140 235 rlineto",
                        "-8 14 -4 9 0 6 rrcurveto",
                        "9 6 4 19 vhcurveto",
                        "29 hlineto",
                        "4 2 4 4 hvcurveto",
                        "0 19 -1 1 rlineto",
                        "0 -109 -1 -6 -13 -93 1 0 vhcurveto",
                        "-1 -1 0 -20 rlineto",
                        "-6 7 -1 3 vhcurveto",
                        "12 hlineto",
                        "15 0 9 -2 5 -3 13 -8 9 -11 11 -20 rrcurveto",
                        "170 -293 rlineto",
                        "-399 435 rmoveto",
                        "-13 -9 -6 -11 0 -12 0 -6 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 3 1 3 3 3 2 1 3 0 3 0 1 0 1 -1 2 rrcurveto",
                        "-61 145 rlineto",
                        "-2 5 -4 4 -6 4 -5 2 -5 2 -6 0 -6 0 -6 -2 -6 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FEB
     */
    public void testuni1FEB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FEB");
        assertNotNull(cs);
        assertEquals("uni1FEB", cs.getName());
        String[] text =
                {"188 1 27 590 27 hstem", "366 81 vstem", "366 72 rmoveto",
                        "217 callsubr", "-318 444 rmoveto", "213 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FEC
     */
    public void testuni1FEC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FEC");
        assertNotNull(cs);
        assertEquals("uni1FEC", cs.getName());
        String[] text =
                {"96 1 27 254 33 228 18 58 25 -24 34 -7 75 hstemhm",
                        "-31 50 169 81 225 85 hintmask 1110101110000000",
                        "188 71 rmoveto", "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-27 hlineto", "-39 -15 13 30 hvcurveto",
                        "221 vlineto", "23 -7 18 -3 35 0 rrcurveto",
                        "182 52 119 85 59 -36 109 -185 hvcurveto",
                        "-25 0 -61 -2 -51 -3 rrcurveto",
                        "hintmask 1111001110000000", "-47 callsubr",
                        "81 31 rmoveto", "hintmask 1110101110000000",
                        "19 7 44 7 19 0 rrcurveto",
                        "69 74 -25 -127 -108 -56 -45 -98 hvcurveto",
                        "-25 0 -35 2 -11 3 rrcurveto",
                        "hintmask 1110011110000000", "-240 402 rmoveto",
                        "-38 -22 -37 -36 hvcurveto",
                        "0 -25 15 -76 91 -5 rrcurveto", "4 18 rlineto",
                        "-42 8 -18 37 0 23 rrcurveto",
                        "11 4 7 7 41 5 25 16 vhcurveto",
                        "17 -11 17 -36 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FED
     */
    public void testuni1FED() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FED");
        assertNotNull(cs);
        assertEquals("uni1FED", cs.getName());
        String[] text =
                {
                        "-126 529 91 hstem",
                        "55 91 69 91 vstem",
                        "55 575 rmoveto",
                        "7 callsubr",
                        "160 hmoveto",
                        "8 callsubr",
                        "-123 206 rmoveto",
                        "-13 -9 -7 -11 0 -12 0 -6 2 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 3 0 4 1 3 3 2 2 2 3 0 3 0 1 -1 1 0 2 rrcurveto",
                        "-62 145 rlineto",
                        "-2 5 -4 4 -6 4 -5 2 -5 2 -5 0 -6 0 -7 -2 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FEE
     */
    public void testuni1FEE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FEE");
        assertNotNull(cs);
        assertEquals("uni1FEE", cs.getName());
        String[] text =
                {"-133 529 91 hstem", "55 91 69 91 vstem", "55 575 rmoveto",
                        "7 callsubr", "160 hmoveto", "8 callsubr",
                        "29 211 rmoveto", "212 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FEF
     */
    public void testuni1FEF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FEF");
        assertNotNull(cs);
        assertEquals("uni1FEF", cs.getName());
        String[] text =
                {
                        "-262 552 177 hstem",
                        "53 128 vstem",
                        "73 724 rmoveto",
                        "-13 -9 -7 -11 0 -13 0 -5 2 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 3 0 4 1 3 3 2 2 2 3 0 3 0 1 -1 1 0 1 rrcurveto",
                        "-62 146 rlineto",
                        "-2 5 -4 4 -6 4 -5 2 -5 1 -5 0 -7 0 -6 -1 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FF2
     */
    public void testuni1FF2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF2");
        assertNotNull(cs);
        assertEquals("uni1FF2", cs.getName());
        String[] text =
                {"203 -239 41 186 35 243 38 hstemhm",
                        "34 74 200 26 -25 73 -21 27 195 79 hintmask 11111011",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "-92 428 rmoveto", "465 callsubr",
                        "hintmask 11110101", "40 -740 rmoveto", "472 callsubr",
                        "hintmask 11110011", "-21 6 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FF3
     */
    public void testuni1FF3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF3");
        assertNotNull(cs);
        assertEquals("uni1FF3", cs.getName());
        String[] text =
                {"194 -239 41 186 35 243 38 hstemhm",
                        "34 74 200 26 -25 73 -21 27 195 79 hintmask 11111011",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "hintmask 11110101",
                        "-52 -312 rmoveto", "472 callsubr",
                        "hintmask 11110011", "-21 6 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni1FF4
     */
    public void testuni1FF4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF4");
        assertNotNull(cs);
        assertEquals("uni1FF4", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 380 -20 hstemhm",
                        "34 74 200 26 -25 73 -21 27 195 79 hintmask 1111110110000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "34 447 rmoveto", "243 callsubr",
                        "hintmask 1111101010000000", "-86 -759 rmoveto",
                        "472 callsubr", "hintmask 1111100110000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FF6
     */
    public void testuni1FF6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF6");
        assertNotNull(cs);
        assertEquals("uni1FF6", cs.getName());
        String[] text =
                {"194 -12 35 243 38 230 43 0 45 hstem",
                        "34 74 200 26 27 27 195 79 vstem", "662 206 rmoveto",
                        "250 callsubr", "-301 31 rmoveto", "251 callsubr",
                        "51 340 rmoveto", "482 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FF7
     */
    public void testuni1FF7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF7");
        assertNotNull(cs);
        assertEquals("uni1FF7", cs.getName());
        String[] text =
                {
                        "194 -239 41 186 35 243 38 230 43 0 45 hstemhm",
                        "34 74 200 26 -25 73 -21 27 195 79 hintmask 1111111011000000",
                        "662 206 rmoveto", "432 callsubr", "-301 31 rmoveto",
                        "251 callsubr", "51 340 rmoveto", "482 callsubr",
                        "hintmask 1111110101000000", "-103 -652 rmoveto",
                        "472 callsubr", "hintmask 1111110011000000",
                        "-21 6 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FF8
     */
    public void testuni1FF8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF8");
        assertNotNull(cs);
        assertEquals("uni1FF8", cs.getName());
        String[] text =
                {
                        "266 -12 34 602 34 hstem",
                        "105 92 442 91 vstem",
                        "730 329 rmoveto",
                        "198 -134 131 -180 -180 -131 -152 -196 -197 139 -125 173 190 123 141 200 vhcurveto",
                        "-327 295 rmoveto",
                        "",
                        "140 96 -106 -208 -179 -88 -109 -115 -120 -119 113 192 210 110 87 96 hvcurveto",
                        "-416 95 rmoveto",
                        "-13 -9 -6 -11 0 -12 0 -6 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 3 1 3 3 3 2 1 3 0 3 0 1 0 1 -1 1 rrcurveto",
                        "-61 146 rlineto",
                        "-2 5 -4 4 -6 4 -5 2 -5 2 -6 0 -6 0 -6 -2 -6 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FF9
     */
    public void testuni1FF9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FF9");
        assertNotNull(cs);
        assertEquals("uni1FF9", cs.getName());
        String[] text =
                {"197 -12 34 602 34 hstem", "37 91 442 92 vstem",
                        "662 329 rmoveto", "-50 callsubr", "-328 295 rmoveto",
                        "-49 callsubr", "-284 101 rmoveto", "481 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FFA
     */
    public void testuni1FFA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FFA");
        assertNotNull(cs);
        assertEquals("uni1FFA", cs.getName());
        String[] text =
                {"269 0 59 565 34 hstemhm",
                        "119 26 -18 88 424 88 -23 25 hintmask 11011000",
                        "535 117 rmoveto", "111 37 81 103 0 120 rrcurveto",
                        "148 -101 133 -199 -198 -102 -149 -132 vhcurveto",
                        "0 -128 83 -95 108 -37 rrcurveto",
                        "4 -58 -101 0 rlineto", "hintmask 11100000",
                        "219 callsubr", "hintmask 11011000", "462 callsubr",
                        "hintmask 11000100", "450 callsubr",
                        "-552 660 rmoveto", "477 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FFB
     */
    public void testuni1FFB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FFB");
        assertNotNull(cs);
        assertEquals("uni1FFB", cs.getName());
        String[] text =
                {"214 0 59 565 34 hstemhm",
                        "64 26 -18 88 423 88 -23 26 hintmask 11011000",
                        "479 117 rmoveto", "218 callsubr", "hintmask 11100000",
                        "219 callsubr", "hintmask 11011000", "220 callsubr",
                        "hintmask 11000100", "221 callsubr",
                        "-417 666 rmoveto", "213 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FFC
     */
    public void testuni1FFC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FFC");
        assertNotNull(cs);
        assertEquals("uni1FFC", cs.getName());
        String[] text =
                {"385 0 38 -38 59 565 34 hstemhm",
                        "42 25 -17 88 423 88 -23 26 66 73 hintmask 01101101",
                        "457 117 rmoveto", "232 callsubr", "hintmask 01110001",
                        "233 callsubr", "hintmask 01101101", "234 callsubr",
                        "hintmask 01100011", "235 callsubr", "266 253 rmoveto",
                        "-228 vlineto", "hintmask 10100001",
                        "-58 34 -26 44 vhcurveto",
                        "44 0 30 15 14 69 rrcurveto", "-25 5 rlineto",
                        "-5 -35 -8 -16 -26 0 rrcurveto",
                        "-20 -9 20 62 hvcurveto", "0 205 -12 17 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni1FFD
     */
    public void testuni1FFD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FFD");
        assertNotNull(cs);
        assertEquals("uni1FFD", cs.getName());
        String[] text =
                {"-302 461 183 hstem", "39 123 vstem", "121 644 rmoveto",
                        "-11 0 -13 -6 -4 -11 rrcurveto", "-52 -143 rlineto",
                        "-1 -3 -1 -5 0 -1 0 -7 7 -7 8 0 5 0 3 4 3 4 rrcurveto",
                        "92 122 rlineto",
                        "4 5 1 6 0 4 0 20 -21 18 -20 0 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni1FFE
     */
    public void testuni1FFE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni1FFE");
        assertNotNull(cs);
        assertEquals("uni1FFE", cs.getName());
        String[] text =
                {"-333 568 76 hstem", "29 50 vstem", "89 644 rmoveto",
                        "431 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2016
     */
    public void testuni2016() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2016");
        assertNotNull(cs);
        assertEquals("uni2016", cs.getName());
        String[] text =
                {"-223 61 39 63 39 vstem", "100 -189 rmoveto",
                        "1046 -39 -1046 vlineto", "141 hmoveto",
                        "1046 -39 -1046 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni202F
     */
    public void testuni202F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni202F");
        assertNotNull(cs);
        assertEquals("uni202F", cs.getName());
        String[] text = {"-345 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2031
     */
    public void testuni2031() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2031");
        assertNotNull(cs);
        assertEquals("uni2031", cs.getName());
        String[] text =
                {
                        "700 -22 29 -26 29 204 32 -28 32 47 29 152 37 18 32 hstemhm",
                        "59 51 136 31 103 52 136 30 56 51 137 30 44 51 137 30 hintmask 0000111111111110",
                        "110 392 rmoveto",
                        "58 42 83 49 18 27 -11 -49 -58 -36 -89 -55 vhcurveto",
                        "-18 -27 14 52 hvcurveto",
                        "254 123 rmoveto",
                        "-103 callsubr",
                        "16 -424 rmoveto",
                        "hintmask 0101111111111110",
                        "-102 callsubr",
                        "52 -14 rmoveto",
                        "-101 callsubr",
                        "317 -66 rmoveto",
                        "488 callsubr",
                        "123 147 rmoveto",
                        "489 callsubr",
                        "hintmask 1010111111111110",
                        "139 -151 rmoveto",
                        "-27 -17 26 40 64 47 77 45 18 27 -14 -48 hvcurveto",
                        "-51 -36 -94 -57 vhcurveto",
                        "123 147 rmoveto",
                        "74 -48 18 -39 -75 -56 -84 -76 -63 36 -45 54 84 44 112 64 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2036
     */
    public void testuni2036() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2036");
        assertNotNull(cs);
        assertEquals("uni2036", cs.getName());
        String[] text =
                {
                        "-135 520 183 hstem",
                        "46 247 vstem",
                        "185 697 rmoveto",
                        "-13 -9 -6 -11 0 -12 0 -6 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 4 0 3 1 3 3 3 2 1 3 0 3 0 1 -1 1 0 2 rrcurveto",
                        "-62 145 rlineto",
                        "-1 5 -4 4 -6 4 -6 2 -5 2 -5 0 -6 0 -7 -2 -5 -4 rrcurveto",
                        "-120 -5 rmoveto",
                        "-13 -9 -6 -11 0 -12 0 -6 1 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 4 0 3 0 4 1 2 3 3 2 1 3 0 3 0 1 0 1 -1 2 rrcurveto",
                        "-61 145 rlineto",
                        "-2 6 -4 3 -6 4 -5 2 -5 2 -6 0 -6 0 -6 -2 -6 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2037
     */
    public void testuni2037() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2037");
        assertNotNull(cs);
        assertEquals("uni2037", cs.getName());
        String[] text =
                {
                        "-1 528 180 hstem",
                        "56 391 vstem",
                        "75 703 rmoveto",
                        "492 callsubr",
                        "125 hmoveto",
                        "-13 -10 -7 -11 0 -12 0 -5 2 -5 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 3 0 4 2 3 2 2 3 2 3 0 2 0 1 -1 1 0 2 rrcurveto",
                        "-62 145 rlineto",
                        "-2 6 -4 4 -6 3 -5 3 -5 1 -5 0 -7 0 -6 -2 -5 -3 rrcurveto",
                        "139 -3 rmoveto",
                        "-13 -9 -7 -11 0 -13 0 -5 2 -4 3 -4 rrcurveto",
                        "101 -123 rlineto",
                        "2 -2 3 -1 3 0 4 0 3 1 3 3 2 2 2 3 0 3 0 1 -1 1 0 1 rrcurveto",
                        "-62 146 rlineto",
                        "-2 5 -4 4 -5 4 -6 2 -5 2 -5 0 -6 0 -7 -2 -5 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni203B
     */
    public void testuni203B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni203B");
        assertNotNull(cs);
        assertEquals("uni203B", cs.getName());
        String[] text =
                {
                        "73 -48 107 110 107 101 106 hstem",
                        "15 106 94 107 95 106 vstem",
                        "72 458 rmoveto",
                        "180 -240 -178 -236 25 -19 172 230 193 -255 25 18 -198 262 200 266 -25 18 -195 -258 -174 233 rlineto",
                        "118 -47 rmoveto",
                        "-88 callsubr",
                        "-200 -207 rmoveto",
                        "-30 24 -24 29 29 24 24 30 29 -24 24 -29 -29 -24 -24 -29 vhcurveto",
                        "402 -1 rmoveto",
                        "-30 24 -24 29 30 23 24 30 29 -23 24 -30 -29 -24 -24 -29 vhcurveto",
                        "-200 -217 rmoveto", "-89 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni203E
     */
    public void testuni203E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni203E");
        assertNotNull(cs);
        assertEquals("uni203E", cs.getName());
        String[] text =
                {"-78 644 44 hstem", "388 688 rmoveto", "",
                        "-352 -44 352 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2042
     */
    public void testuni2042() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2042");
        assertNotNull(cs);
        assertEquals("uni2042", cs.getName());
        String[] text =
                {
                        "103 21 -21 103 58 294 57 hstem",
                        "110 55 111 55 106 54 vstem",
                        "292 452 rmoveto",
                        "-29 -33 -44 -5 0 -38 0 -12 11 -12 14 0 32 0 7 51 21 38 21 -33 7 -56 33 0 12 0 13 10 0 15 0 34 -42 9 -29 31 rrcurveto",
                        "15 3 15 1 17 0 rrcurveto",
                        "29 29 5 26 9 -6 17 -22 hvcurveto",
                        "-29 0 -14 -27 -39 -17 2 26 15 34 0 23 rrcurveto",
                        "20 -14 10 -14 -16 -11 -16 -18 vhcurveto",
                        "0 -22 17 -23 3 -33 -38 15 -15 28 -29 0 rrcurveto",
                        "-20 -8 -13 -12 -27 27 -5 42 hvcurveto",
                        "13 0 12 -1 12 -2 rrcurveto",
                        "-167 -352 rmoveto",
                        "-29 -32 -43 -6 0 -37 0 -13 11 -12 14 0 32 0 6 51 22 38 21 -33 6 -56 34 0 12 0 13 10 0 15 0 35 -42 8 -29 32 rrcurveto",
                        "15 2 15 2 17 0 rrcurveto",
                        "29 29 5 26 9 -6 16 -23 hvcurveto",
                        "-28 0 -14 -27 -40 -17 3 26 15 34 0 23 rrcurveto",
                        "20 -14 10 -15 -15 -11 -16 -18 vhcurveto",
                        "0 -22 17 -23 3 -33 -38 15 -15 29 -29 0 rrcurveto",
                        "-20 -8 -15 -11 -26 27 -6 42 hvcurveto",
                        "13 0 12 -1 11 -2 rrcurveto",
                        "327 hmoveto",
                        "-29 -32 -43 -6 0 -37 0 -13 11 -12 14 0 32 0 6 51 22 39 21 -34 6 -56 33 0 13 0 12 10 0 16 0 34 -42 8 -29 32 rrcurveto",
                        "16 2 15 2 16 0 rrcurveto",
                        "30 28 5 26 9 -5 16 -23 hvcurveto",
                        "-29 0 -13 -27 -39 -17 2 26 14 34 0 23 rrcurveto",
                        "20 -13 10 -15 -15 -11 -15 -19 vhcurveto",
                        "0 -22 17 -23 3 -33 -38 16 -15 28 -29 0 rrcurveto",
                        "-21 -8 -14 -12 -26 29 -6 41 hvcurveto",
                        "13 0 11 -1 12 -2 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni204A
     */
    public void testuni204A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni204A");
        assertNotNull(cs);
        assertEquals("uni204A", cs.getName());
        String[] text =
                {
                        "-63 59 338 vstem",
                        "67 337 rmoveto",
                        "80 -16 101 -4 100 26 -55 -192 -35 -274 0 -1 rrcurveto",
                        "3 -6 35 1 rlineto",
                        "0 0 26 268 75 253 6 19 6 33 -13 0 -21 0 -26 -25 0 0 -90 -16 -106 3 -94 31 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni204B
     */
    public void testuni204B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni204B");
        assertNotNull(cs);
        assertEquals("uni204B", cs.getName());
        String[] text =
                {"101 -233 26 823 26 -24 28 hstemhm",
                        "104 59 62 59 hintmask 11011000", "192 616 rmoveto",
                        "32 1 -32 -31 hvcurveto", "-696 vlineto",
                        "-51 -17 -13 -14 -23 -8 22 40 vhcurveto",
                        "701 vlineto", "0 53 10 6 19 1 rrcurveto",
                        "92 -759 rmoveto", "370 vlineto",
                        "14 -7 31 -5 32 0 rrcurveto",
                        "106 96 57 166 hvcurveto", "hintmask 10111000",
                        "152 -69 56 -139 vhcurveto", "hintmask 11011000",
                        "-48 0 -53 -4 -56 0 rrcurveto", "hintmask 10111000",
                        "-34 0 34 0 -169 4 rrcurveto", "-21 vlineto",
                        "-4 2 -3 4 vhcurveto", "29 hlineto",
                        "36 4 -17 -45 hvcurveto", "-700 vlineto",
                        "0 -54 -6 -7 -34 -1 rrcurveto", "-29 hlineto",
                        "-4 -2 -3 -4 hvcurveto",
                        "0 -21 104 1 118 0 107 -1 0 21 rlineto",
                        "5 -2 2 -4 vhcurveto", "-29 hlineto",
                        "-32 1 -7 9 0 53 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni204F
     */
    public void testuni204F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni204F");
        assertNotNull(cs);
        assertEquals("uni204F", cs.getName());
        String[] text =
                {
                        "-282 -9 104 205 106 hstemhm",
                        "42 38 -25 106 hintmask 11010000",
                        "55 353 rmoveto",
                        "-87 callsubr",
                        "52 -258 rmoveto",
                        "hintmask 11100000",
                        "-39 -26 -39 -60 hvcurveto",
                        "0 -60 50 -40 59 -11 rrcurveto",
                        "6 20 rlineto",
                        "-53 12 -24 33 0 21 0 8 1 11 3 8 6 -5 10 -2 9 0 rrcurveto",
                        "hintmask 11010000",
                        "30 22 24 29 28 -22 23 -32 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2094
     */
    public void testuni2094() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2094");
        assertNotNull(cs);
        assertEquals("uni2094", cs.getName());
        String[] text =
                {"-194 -117 25 66 28 128 31 hstem", "44 57 113 55 vstem",
                        "101 -26 rmoveto", "109 hlineto",
                        "-4 -29 -25 -37 -31 0 rrcurveto",
                        "-24 -25 13 53 hvcurveto", "38 156 rmoveto",
                        "21 0 24 -16 14 -22 12 -19 4 -25 0 -25 rrcurveto",
                        "-21 -170 vlineto", "3 -62 16 -57 86 0 rrcurveto",
                        "72 48 71 74 73 -40 60 -85 hvcurveto",
                        "-46 0 -31 -23 -25 -35 rrcurveto", "20 -16 rlineto",
                        "19 22 20 21 38 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2098
     */
    public void testuni2098() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2098");
        assertNotNull(cs);
        assertEquals("uni2098", cs.getName());
        String[] text =
                {"-113 365 28 58 -21 86 31 121 29 hstem",
                        "28 29 122 31 122 28 vstem", "210 547 rmoveto",
                        "87 -31 -87 -87 -31 87 -86 31 86 86 31 vlineto",
                        "-268 -16 rmoveto", "493 callsubr", "29 hmoveto",
                        "494 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2099
     */
    public void testuni2099() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2099");
        assertNotNull(cs);
        assertEquals("uni2099", cs.getName());
        String[] text =
                {"-113 365 28 123 31 121 29 hstem", "28 29 275 28 vstem",
                        "296 516 rmoveto", "-204 31 204 hlineto",
                        "-268 -16 rmoveto", "493 callsubr", "29 hmoveto",
                        "494 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni20A2
     */
    public void testuni20A2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni20A2");
        assertNotNull(cs);
        assertEquals("uni20A2", cs.getName());
        String[] text =
                {
                        "-63 276 47 227 11 hstemhm",
                        "24 87 102 67 74 25 -13 26 hintmask 11110100",
                        "241 -16 rmoveto",
                        "72 0 55 56 20 67 rrcurveto",
                        "-24 7 rlineto",
                        "-17 -48 -32 -26 -35 -9 rrcurveto",
                        "153 vlineto",
                        "31 43 61 11 vhcurveto",
                        "6 0 7 -1 5 -10 6 -14 13 -7 17 0 rrcurveto",
                        "19 12 22 18 22 -19 17 -29 hvcurveto",
                        "-38 0 -32 -55 -20 -29 rrcurveto",
                        "-2 0 2 83 -15 0 rlineto",
                        "-6 0 -7 -3 -9 -4 -26 -12 -10 -5 -39 -9 rrcurveto",
                        "5 -25 rlineto",
                        "20 4 19 -3 0 -36 rrcurveto",
                        "-197 vlineto",
                        "-68 22 -34 87 0 152 0 137 51 120 89 0 46 0 62 -40 7 -84 rrcurveto",
                        "26 2 rlineto", "hintmask 11111000",
                        "-13 156 -25 -2 0 -8 rlineto",
                        "-10 -3 -3 -5 vhcurveto",
                        "-14 0 -31 24 -48 0 rrcurveto",
                        "-128 -101 -121 -185 hvcurveto",
                        "-175 84 -120 133 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni20A8
     */
    public void testuni20A8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni20A8");
        assertNotNull(cs);
        assertEquals("uni20A8", cs.getName());
        String[] text =
                {
                        "284 -9 25 -15 24 230 35 83 26 164 26 hstemhm",
                        "95 73 155 79 82 56 144 61 hintmask 0111111110000000",
                        "402 432 rmoveto",
                        "0 45 -13 36 -29 30 -39 41 -57 5 -51 0 -95 0 -71 -6 -19 -5 rrcurveto",
                        "-17 vlineto",
                        "-4 2 -2 5 vhcurveto",
                        "27 2 rlineto",
                        "2 1 2 0 2 0 rrcurveto",
                        "24 3 -16 -25 hvcurveto",
                        "-452 vlineto",
                        "-25 -12 -15 -37 vhcurveto",
                        "",
                        "-24 hlineto",
                        "-4 -2 -3 -4 hvcurveto",
                        "0 -17 1 -2 rlineto",
                        "0 84 2 32 35 79 -2 0 vhcurveto",
                        "1 2 0 17 rlineto",
                        "4 -3 3 -4 vhcurveto",
                        "-24 hlineto",
                        "-35 -14 12 28 hvcurveto",
                        "190 vlineto",
                        "61 0 1 -5 3 -6 rrcurveto",
                        "84 -173 rlineto",
                        "21 -43 36 -34 47 0 13 0 14 3 9 3 rrcurveto",
                        "-4 19 rlineto",
                        "-32 -5 -25 34 -18 40 rrcurveto",
                        "-86 184 rlineto",
                        "35 14 75 50 0 96 rrcurveto",
                        "-79 -2 rmoveto",
                        "0 -38 -10 -31 -16 -25 -19 -31 -25 -15 -61 0 rrcurveto",
                        "-24 266 hlineto",
                        "21 5 4 2 29 0 49 0 52 -26 0 -107 rrcurveto",
                        "155 -302 rmoveto",
                        "6 -128 rlineto",
                        "9 2 7 0 5 0 6 0 6 0 6 -2 rrcurveto",
                        "hintmask 1011111110000000",
                        "23 -6 28 -3 32 0 50 0 89 22 0 90 0 73 -62 28 -73 32 -48 21 -22 11 0 38 0 51 39 16 35 0 19 0 55 -11 27 -96 rrcurveto",
                        "21 1 -11 108 rlineto",
                        "-17 10 -48 14 -46 0 -72 0 -58 -45 0 -62 0 -67 38 -17 66 -28 74 -32 22 -26 0 -39 0 -46 -47 -21 -34 0 -34 0 -27 17 -10 9 rrcurveto",
                        "-23 23 -9 43 -1 21 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni20AF
     */
    public void testuni20AF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni20AF");
        assertNotNull(cs);
        assertEquals("uni20AF", cs.getName());
        String[] text =
                {
                        "561 -1 25 345 34 149 30 hstem",
                        "496 77 354 81 vstem",
                        "301 582 rmoveto",
                        "20 34 23 23 31 23 rrcurveto",
                        "-5 13 rlineto",
                        "-49 -22 -42 -28 -35 -49 -72 -10 -66 -25 -75 -43 rrcurveto",
                        "10 -20 rlineto",
                        "63 28 58 27 62 12 -28 -48 -22 -65 -18 -91 rrcurveto",
                        "-55 -276 rlineto",
                        "-6 -29 -14 -12 -34 0 rrcurveto",
                        "-27 hlineto",
                        "-4 0 -3 -4 -1 -4 rrcurveto",
                        "-3 -17 116 2 rlineto",
                        "32 0 19 -2 83 0 rrcurveto",
                        "199 115 156 175 142 -108 110 -139 hvcurveto",
                        "-97 -240 rmoveto",
                        "20 100 17 64 20 46 rrcurveto",
                        "5 hlineto",
                        "144 61 -109 -116 -138 -51 -160 -206 -66 -1 5 17 hvcurveto",
                        "0 6 0 3 1 4 rrcurveto",
                        "422 -255 rmoveto",
                        "22 41 17 94 17 72 24 -13 24 -6 38 0 rrcurveto",
                        "174 97 165 105 80 -56 56 -92 hvcurveto",
                        "-43 0 -59 -14 -47 -38 -28 -24 -35 -31 -29 -125 rrcurveto",
                        "-40 -178 rlineto",
                        "-26 -111 -23 -54 -19 -31 rrcurveto", "7 -16 rlineto",
                        "409 483 rmoveto", "-108 -59 -132 -112 vhcurveto",
                        "-27 0 -18 9 -24 24 -7 -7 -18 -20 -9 -2 rrcurveto",
                        "43 185 rlineto", "31 132 57 24 46 0 rrcurveto",
                        "56 41 -25 -80 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni20B1
     */
    public void testuni20B1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni20B1");
        assertNotNull(cs);
        assertEquals("uni20B1", cs.getName());
        String[] text =
                {"-63 1 24 228 30 71 39 46 40 78 22 -21 30 hstemhm",
                        "90 72 166 69 hintmask 11110011", "318 354 rmoveto",
                        "-18 -49 -39 -22 -57 0 -20 0 -12 3 -10 2 rrcurveto",
                        "66 vlineto", "166 85 rmoveto", "-18 vlineto",
                        "0 -10 0 -10 -1 -8 rrcurveto", "-165 46 hlineto",
                        "160 40 rmoveto", "-160 67 hlineto",
                        "hintmask 11110111",
                        "16 6 19 6 15 0 45 0 48 -15 17 -64 rrcurveto",
                        "110 hmoveto", "-40 hlineto",
                        "-14 51 -44 58 -116 0 -20 0 -32 -1 -46 -3 rrcurveto",
                        "hintmask 11111011", "-44 -2 -43 -3 -12 0 rrcurveto",
                        "-17 vlineto", "-3 0 -3 6 vhcurveto",
                        "4 0 11 1 8 0 rrcurveto", "16 24 -5 -35 hvcurveto",
                        "-38 -63 -40 63 -46 -63 -39 63 -290 vlineto",
                        "-25 -12 -14 -37 vhcurveto", "-14 hlineto",
                        "-4 -2 -3 -4 hvcurveto", "0 -17 1 -2 rlineto",
                        "0 74 2 32 35 78 -2 0 vhcurveto", "2 2 0 17 rlineto",
                        "4 -4 3 -4 vhcurveto", "-23 hlineto",
                        "-36 -14 12 27 hvcurveto", "199 vlineto",
                        "11 -6 11 -4 24 0 97 0 51 47 24 54 rrcurveto",
                        "52 39 -39 hlineto", "3 15 1 15 0 15 rrcurveto",
                        "1 35 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2100
     */
    public void testuni2100() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2100");
        assertNotNull(cs);
        assertEquals("uni2100", cs.getName());
        String[] text =
                {
                        "204 -12 33 239 25 127 32 240 25 hstem",
                        "34 79 290 81 114 72 vstem",
                        "511 -12 rmoveto",
                        "60 0 35 29 31 32 rrcurveto",
                        "-26 22 rlineto",
                        "-26 -29 -39 -21 -15 0 rrcurveto",
                        "-17 -30 13 74 95 51 57 42 6 15 -4 -20 hvcurveto",
                        "0 -19 -3 1 0 -12 rrcurveto",
                        "-11 7 -12 28 10 30 8 24 33 -23 37 -72 -80 -92 -82 -109 -41 43 -65 65 vhcurveto",
                        "-306 455 rmoveto", "495 callsubr", "20 93 rmoveto",
                        "496 callsubr", "442 180 rmoveto", "497 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2101
     */
    public void testuni2101() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2101");
        assertNotNull(cs);
        assertEquals("uni2101", cs.getName());
        String[] text =
                {
                        "204 -14 24 250 23 129 32 240 25 hstemhm",
                        "34 79 299 35 -2 71 48 76 -27 40 hintmask 1111101100000000",
                        "513 -14 rmoveto",
                        "70 57 33 60 hvcurveto",
                        "0 36 -45 30 -53 26 -18 8 -8 15 0 20 rrcurveto",
                        "23 16 23 31 vhcurveto",
                        "hintmask 1111101010000000",
                        "27 23 -32 -44 hvcurveto",
                        "37 -3 3 71 rlineto",
                        "-28 23 -25 8 -33 0 -66 0 -56 -30 0 -56 0 -28 16 -18 44 -25 rrcurveto",
                        "hintmask 1111110100000000",
                        "27 -16 32 -21 0 -30 rrcurveto",
                        "-35 -24 -14 -25 -43 -25 34 49 vhcurveto",
                        "-35 -2 4 -97 rlineto", "30 0 33 -8 34 0 rrcurveto",
                        "-308 457 rmoveto", "495 callsubr", "20 93 rmoveto",
                        "496 callsubr", "442 180 rmoveto",
                        "hintmask 1111100010000000", "497 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2102
     */
    public void testuni2102() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2102");
        assertNotNull(cs);
        assertEquals("uni2102", cs.getName());
        String[] text =
                {"143 -12 41 592 37 hstem", "37 87 88 34 vstem",
                        "212 88 rmoveto",
                        "-59 60 -29 95 0 91 0 107 39 74 49 46 rrcurveto",
                        "143 -573 rmoveto", "97 0 89 48 68 89 rrcurveto",
                        "-23 15 rlineto",
                        "-71 -78 -68 -33 -93 0 -42 0 -36 12 -30 20 rrcurveto",
                        "527 vlineto",
                        "35 22 36 11 28 0 138 0 58 -81 26 -86 rrcurveto",
                        "30 4 rlineto",
                        "-10 52 -9 48 -3 55 -57 3 -39 42 -123 0 rrcurveto",
                        "-166 -153 -146 -197 -161 103 -166 215 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2106
     */
    public void testuni2106() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2106");
        assertNotNull(cs);
        assertEquals("uni2106", cs.getName());
        String[] text =
                {
                        "254 -15 39 383 33 239 25 hstem",
                        "55 80 112 75 98 79 vstem",
                        "533 199 rmoveto",
                        "5 20 4 21 0 11 0 12 -2 20 -34 0 -33 0 -31 -19 -41 -41 rrcurveto",
                        "20 -18 rlineto",
                        "15 18 12 9 8 0 2 0 3 -3 0 -7 0 -5 -2 -10 -3 -12 rrcurveto",
                        "-29 -111 rlineto",
                        "-2 -11 -5 -27 0 -13 0 -33 14 -15 46 0 34 0 36 17 37 42 -5 -15 -2 -9 0 -2 0 -12 3 -21 33 0 33 0 31 20 41 41 rrcurveto",
                        "-20 17 rlineto",
                        "-14 -17 -13 -10 -7 0 -3 0 -3 3 0 7 0 6 2 9 3 12 rrcurveto",
                        "50 210 rlineto",
                        "-20 -3 -44 -6 -12 0 rrcurveto",
                        "-30 -127 rlineto",
                        "-20 -85 -59 -38 -19 0 -11 0 -2 8 0 18 0 10 3 17 3 15 rrcurveto",
                        "-342 315 rmoveto", "499 callsubr", "504 319 rmoveto",
                        "497 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni210C
     */
    public void testuni210C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni210C");
        assertNotNull(cs);
        assertEquals("uni210C", cs.getName());
        String[] text =
                {
                        "77 -69 55 507 53 hstem",
                        "94 60 69 57 193 72 vstem",
                        "545 169 rmoveto",
                        "0 121 -85 82 -109 34 -43 -37 -50 -29 -50 -28 -32 31 -22 44 0 45 0 47 28 35 37 26 31 -23 33 -24 40 0 56 0 40 46 28 44 rrcurveto",
                        "-13 4 rlineto",
                        "-15 -26 -29 -15 -29 0 -39 0 -36 22 -27 29 -62 -65 -103 -45 0 -105 0 -115 129 -51 0 -95 0 -27 -19 -22 -20 -14 rrcurveto",
                        "-65 50 -95 -75 11 -11 31 24 65 -51 rlineto",
                        "52 51 97 45 0 83 0 47 -32 43 -29 34 26 17 38 24 32 0 97 0 61 -126 0 -86 0 -82 -35 -67 -69 -46 -27 26 -38 28 -39 0 rrcurveto",
                        "-55 0 -42 -45 -33 -37 rrcurveto",
                        "10 -8 rlineto",
                        "17 20 23 15 26 0 47 0 43 -37 28 -32 33 81 183 38 0 188 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni210D
     */
    public void testuni210D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni210D");
        assertNotNull(cs);
        assertEquals("uni210D", cs.getName());
        String[] text =
                {"251 1 27 296 39 254 28 hstem", "73 34 51 81 326 81 vstem",
                        "107 611 rmoveto", "28 -7 23 -12 0 -18 rrcurveto",
                        "-502 vlineto", "0 -17 -23 -13 -28 -7 rrcurveto",
                        "458 37 rmoveto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-5 -2 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "502 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-211 -326 211 vlineto", "28 13 16 41 vhcurveto",
                        "27 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -94 -1 -35 -39 -139 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "6 0 7 -1 8 0 rrcurveto", "-588 vlineto",
                        "-8 -1 -7 0 -6 0 rrcurveto", "-27 hlineto",
                        "-4 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 145 2 35 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-27 hlineto",
                        "-39 -15 13 31 hvcurveto", "252 326 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni210E
     */
    public void testuni210E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni210E");
        assertNotNull(cs);
        assertEquals("uni210E", cs.getName());
        String[] text =
                {
                        "38 -12 53 352 49 256 -20 hstemhm",
                        "317 80 -11 78 hintmask 11101000",
                        "41 hmoveto",
                        "4 -12 73 24 56 240 rlineto",
                        "78 99 60 42 35 0 21 0 18 -14 0 -31 0 -18 -5 -24 -8 -31 rrcurveto",
                        "-42 -161 rlineto",
                        "hintmask 11110000",
                        "500 callsubr",
                        "hintmask 11101000",
                        "8 29 6 31 0 21 0 60 -30 18 -38 0 -52 0 -65 -23 -91 -108 rrcurveto",
                        "89 387 -22 0 rlineto",
                        "-22 -9 -15 -4 -20 -4 -17 -3 -38 -6 -16 0 rrcurveto",
                        "-4 -25 rlineto", "-3 2 -2 3 vhcurveto",
                        "33 4 rlineto", "13 7 -10 -19 hvcurveto",
                        "0 -10 -2 -13 -4 -16 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni210F
     */
    public void testuni210F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni210F");
        assertNotNull(cs);
        assertEquals("uni210F", cs.getName());
        String[] text =
                {
                        "38 -12 53 352 49 256 -20 hstemhm",
                        "317 80 -11 78 hintmask 11101000",
                        "235 515 rmoveto",
                        "128 27 0 40 -118 -25 32 141 -22 0 rlineto",
                        "-22 -9 -15 -4 -20 -4 -17 -3 -38 -6 -16 0 rrcurveto",
                        "-4 -25 rlineto",
                        "-3 2 -2 3 vhcurveto",
                        "33 4 rlineto",
                        "13 7 -10 -19 hvcurveto",
                        "0 -10 -2 -13 -4 -16 rrcurveto",
                        "-9 -38 -111 -24 0 -40 101 22 -115 -498 4 -12 73 24 56 240 rlineto",
                        "78 99 60 42 35 0 21 0 18 -14 0 -31 0 -18 -5 -24 -8 -31 rrcurveto",
                        "-42 -161 rlineto",
                        "hintmask 11110000",
                        "500 callsubr",
                        "hintmask 11101000",
                        "8 29 6 31 0 21 0 60 -30 18 -38 0 -52 0 -65 -23 -91 -108 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2115
     */
    public void testuni2115() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2115");
        assertNotNull(cs);
        assertEquals("uni2115", cs.getName());
        String[] text =
                {"232 1 27 590 28 hstem", "57 34 51 45 409 44 vstem",
                        "91 599 rmoveto", "25 -15 23 -19 3 -15 rrcurveto",
                        "-462 vlineto", "0 -27 -12 -32 -39 -1 rrcurveto",
                        "549 529 rmoveto", "30 15 31 40 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -1 1 rlineto",
                        "0 -72 -1 -39 -36 -74 1 0 vhcurveto",
                        "-5 -1 0 -19 rlineto", "-5 8 -3 5 vhcurveto",
                        "27 hlineto", "41 13 -34 -27 hvcurveto",
                        "0 -379 0 -23 rlineto", "-11 -2 -4 -3 vhcurveto",
                        "-8 0 -16 28 -28 37 -131 176 -218 265 0 0 rrcurveto",
                        "-169 0 -2 -4 0 -16 rlineto", "-5 7 -3 5 vhcurveto",
                        "5 hlineto", "6 0 7 -2 8 -2 rrcurveto",
                        "-586 -33 vlineto", "-5 -8 -4 -5 hvcurveto",
                        "0 -18 7 -2 rlineto",
                        "0 109 2 36 39 72 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-27 hlineto",
                        "-39 -15 30 30 hvcurveto", "351 vlineto",
                        "34 1 15 8 vhcurveto", "7 0 10 -11 17 -22 rrcurveto",
                        "350 -441 rlineto", "10 -15 14 -6 15 -1 rrcurveto",
                        "14 7 10 19 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2119
     */
    public void testuni2119() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2119");
        assertNotNull(cs);
        assertEquals("uni2119", cs.getName());
        String[] text =
                {
                        "155 1 27 256 38 304 28 hstem",
                        "81 34 52 81 230 81 vstem",
                        "115 619 rmoveto",
                        "501 callsubr",
                        "133 256 rmoveto",
                        "66 0 70 2 37 17 42 18 96 53 0 105 0 50 -18 41 -35 34 -49 45 -70 5 -63 0 -117 0 -155 -7 -21 -5 rrcurveto",
                        "-19 vlineto", "-4 3 -3 5 vhcurveto",
                        "42 2 0 -590 -56 0 rlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 155 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 14 30 hvcurveto", "230 406 rmoveto",
                        "502 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni211A
     */
    public void testuni211A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni211A");
        assertNotNull(cs);
        assertEquals("uni211A", cs.getName());
        String[] text =
                {"211 -201 57 132 34 602 34 hstem", "37 91 75 34 333 92 vstem",
                        "203 103 rmoveto",
                        "-45 52 -30 76 0 96 0 112 32 77 43 47 rrcurveto",
                        "34 -494 rmoveto", "524 vlineto",
                        "31 21 34 10 32 0 rrcurveto",
                        "141 95 -106 -208 -179 -88 -109 -114 hvcurveto",
                        "-46 0 -46 17 -39 30 rrcurveto", "425 260 rmoveto",
                        "-45 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni211D
     */
    public void testuni211D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni211D");
        assertNotNull(cs);
        assertEquals("uni211D", cs.getName());
        String[] text =
                {
                        "155 1 27 256 38 304 28 hstem",
                        "81 34 52 81 230 81 vstem",
                        "115 619 rmoveto",
                        "501 callsubr",
                        "444 451 rmoveto",
                        "0 50 -18 41 -35 34 -49 45 -70 5 -63 0 -117 0 -155 -7 -21 -5 rrcurveto",
                        "-19 vlineto", "-4 3 -3 5 vhcurveto",
                        "42 2 0 -590 -56 0 rlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 155 2 35 40 86 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-26 hlineto",
                        "-40 -15 14 30 hvcurveto", "212 vlineto",
                        "68 0 29 -6 5 -7 rrcurveto", "103 -192 rlineto",
                        "25 -47 45 -38 59 0 15 0 18 2 10 4 rrcurveto",
                        "-4 21 rlineto", "-39 -5 -31 38 -23 44 rrcurveto",
                        "-107 205 rlineto", "44 14 94 57 0 105 rrcurveto",
                        "-81 -1 rmoveto", "502 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2120
     */
    public void testuni2120() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2120");
        assertNotNull(cs);
        assertEquals("uni2120", cs.getName());
        String[] text =
                {
                        "249 283 24 -12 19 318 20 hstemhm",
                        "22 62 -60 30 -20 30 125 69 -48 29 hintmask 01100000",
                        "634 344 rmoveto",
                        "1 -2 0 -3 0 -2 rrcurveto",
                        "-11 -2 -12 -5 vhcurveto",
                        "-14 hlineto",
                        "hintmask 10100000",
                        "-9 -8 -2 -5 hvcurveto",
                        "0 -8 6 -6 rlineto",
                        "hintmask 01100000",
                        "0 46 2 20 21 44 -2 0 vhcurveto",
                        "6 6 rlineto",
                        "hintmask 10100000",
                        "8 vlineto",
                        "hintmask 01100000",
                        "5 -6 2 -13 vhcurveto",
                        "-14 hlineto",
                        "-8 0 -2 14 -2 16 rrcurveto",
                        "-23 266 0 6 rlineto",
                        "11 3 5 6 vhcurveto",
                        "15 hlineto",
                        "5 12 1 5 hvcurveto",
                        "0 8 -3 6 -82 0 -107 -265 -112 265 -89 0 -5 -6 0 -8 rlineto",
                        "0 -3 5 -2 12 -1 rrcurveto",
                        "16 hlineto",
                        "6 3 -5 -12 hvcurveto",
                        "0 -2 0 -3 rlineto",
                        "-6 -86 -8 -95 -6 -85 -1 -14 -3 -16 -7 0 rrcurveto",
                        "-14 hlineto",
                        "hintmask 10100000",
                        "-12 -6 -2 -5 hvcurveto",
                        "0 -8 5 -6 rlineto",
                        "hintmask 01100000",
                        "0 29 2 19 21 39 -2 0 vhcurveto",
                        "3 6 rlineto",
                        "hintmask 10100000",
                        "8 vlineto",
                        "hintmask 01100000",
                        "5 -10 2 -7 vhcurveto",
                        "-15 hlineto",
                        "-5 -1 9 14 hvcurveto",
                        "6 vlineto",
                        "4 64 5 64 5 65 rrcurveto",
                        "99 -238 rlineto",
                        "4 -7 9 -3 4 0 10 0 4 4 3 6 rrcurveto",
                        "98 243 rlineto",
                        "-388 95 rmoveto",
                        "-25 1 5 16 -68 0 rrcurveto",
                        "hintmask 10110010",
                        "-53 -66 -37 -59 hvcurveto",
                        "0 -63 73 -29 42 -16 29 -11 23 -14 0 -50 0 -43 -26 -24 -35 0 -35 0 -33 42 -5 40 rrcurveto",
                        "hintmask 10101000",
                        "-1 8 -30 -3 rlineto",
                        "hintmask 10100110",
                        "4 -37 6 -12 0 -55 rrcurveto",
                        "30 1 rlineto",
                        "1 5 0 3 -1 2 2 -1 1 -1 3 -1 10 -6 16 -9 42 0 69 0 51 52 0 58 0 65 -55 24 -50 18 rrcurveto",
                        "hintmask 10110001",
                        "-21 7 -48 18 0 47 0 32 23 26 29 0 44 0 21 -33 9 -45 rrcurveto",
                        "29 4 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2124
     */
    public void testuni2124() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2124");
        assertNotNull(cs);
        assertEquals("uni2124", cs.getName());
        String[] text =
                {
                        "122 0 39 -39 29 576 41 hstemhm",
                        "hintmask 01100000",
                        "119 29 rmoveto",
                        "-57 0 411 576 58 0 rlineto",
                        "40 -605 rmoveto",
                        "4 56 11 57 11 52 rrcurveto",
                        "-30 5 rlineto",
                        "hintmask 10100000",
                        "-20 -72 -29 -59 -77 0 rrcurveto",
                        "-233 hlineto",
                        "-16 -9 4 9 hvcurveto",
                        "0 5 3 6 6 9 rrcurveto",
                        "374 519 rlineto",
                        "20 28 4 10 0 11 0 7 -3 3 -19 0 -13 0 -19 -1 -31 -3 rrcurveto",
                        "-336 hlineto",
                        "-47 0 3 9 -37 3 -4 -54 -10 -72 -8 -41 rrcurveto",
                        "30 -5 rlineto", "21 69 18 51 75 0 rrcurveto",
                        "200 hlineto", "7 3 -2 -6 hvcurveto",
                        "0 -5 -3 -7 -5 -7 rrcurveto", "-389 -541 rlineto",
                        "-5 -8 -3 -8 0 -7 rrcurveto", "hintmask 01100000",
                        "-10 5 -5 14 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2126
     */
    public void testuni2126() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2126");
        assertNotNull(cs);
        assertEquals("uni2126", cs.getName());
        String[] text =
                {"165 0 59 565 34 hstemhm",
                        "42 25 -17 88 423 88 -23 26 hintmask 11011000",
                        "457 117 rmoveto", "232 callsubr", "hintmask 11100000",
                        "233 callsubr", "hintmask 11011000", "234 callsubr",
                        "hintmask 11000100", "235 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2127
     */
    public void testuni2127() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2127");
        assertNotNull(cs);
        assertEquals("uni2127", cs.getName());
        String[] text =
                {"165 42 34 565 58 hstemhm",
                        "42 25 -17 88 423 88 -23 26 hintmask 11011000",
                        "457 583 rmoveto", "111 -38 81 -103 0 -120 rrcurveto",
                        "-148 -101 -132 -199 -197 -102 148 132 vhcurveto",
                        "0 129 83 94 108 38 rrcurveto", "4 58 -101 0 rlineto",
                        "hintmask 11100000", "-53 0 -19 -8 -5 -52 rrcurveto",
                        "-25 0 7 118 211 0 rlineto", "11 6 -6 -10 hvcurveto",
                        "-8 -126 rlineto", "hintmask 11011000",
                        "-92 -63 -39 -60 0 -113 rrcurveto",
                        "-128 72 -117 139 130 82 105 141 vhcurveto",
                        "0 108 -40 73 -91 54 rrcurveto", "-9 126 rlineto",
                        "-1 10 5 6 12 0 rrcurveto", "208 0 rlineto",
                        "hintmask 11000100", "7 -118 -26 0 rlineto",
                        "-6 56 -22 4 -48 0 rrcurveto", "-98 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2136
     */
    public void testuni2136() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2136");
        assertNotNull(cs);
        assertEquals("uni2136", cs.getName());
        String[] text =
                {"-33 0 100 325 108 hstem", "370 38 vstem", "238 533 rmoveto",
                        "330 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2137
     */
    public void testuni2137() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2137");
        assertNotNull(cs);
        assertEquals("uni2137", cs.getName());
        String[] text =
                {"-166 210 24 vstem", "234 296 rmoveto", "", "331 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2138
     */
    public void testuni2138() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2138");
        assertNotNull(cs);
        assertEquals("uni2138", cs.getName());
        String[] text =
                {"-63 413 107 hstemhm", "271 60 -56 67 hintmask 11000000",
                        "331 291 rmoveto", "332 callsubr", "hintmask 10100000",
                        "333 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2139
     */
    public void testuni2139() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2139");
        assertNotNull(cs);
        assertEquals("uni2139", cs.getName());
        String[] text =
                {"-203 1 32 478 120 hstemhm",
                        "96 119 -113 117 hintmask 11010000", "219 76 rmoveto",
                        "369 -36 vlineto", "-44 -15 -36 -10 -73 -16 rrcurveto",
                        "10 -35 rlineto", "32 9 8 1 9 0 rrcurveto",
                        "9 4 -14 -23 hvcurveto", "-266 vlineto",
                        "-28 -10 -15 -33 vhcurveto", "-9 hlineto",
                        "-5 -3 -3 -6 hvcurveto", "0 -23 2 -2 rlineto",
                        "0 83 2 36 39 75 -2 0 vhcurveto", "2 2 0 23 rlineto",
                        "6 -4 3 -4 vhcurveto", "-9 hlineto",
                        "-33 -10 15 28 hvcurveto", "hintmask 11100000",
                        "-123 495 rmoveto",
                        "-33 26 -27 33 33 27 27 33 33 -27 27 -33 vhcurveto",
                        "-33 -26 -27 -33 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni216C
     */
    public void testuni216C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni216C");
        assertNotNull(cs);
        assertEquals("uni216C", cs.getName());
        String[] text =
                {
                        "22 -2 25 -25 43 510 27 hstemhm",
                        "98 81 hintmask 10110000",
                        "98 506 rmoveto",
                        "-437 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -4 -6 -6 -5 -3 -3 -8 -1 -14 -1 rrcurveto",
                        "-30 -1 -1 0 rlineto",
                        "-4 0 -2 -2 -1 -4 rrcurveto",
                        "0 -17 0 -2 3 0 rlineto",
                        "hintmask 01110000",
                        "450 0 2 0 0 2 19 166 1 3 -3 0 -18 0 -2 0 -1 -2 rlineto",
                        "-9 -28 -12 -29 -18 -31 -9 -15 -10 -11 -15 -7 -7 -4 -10 -1 -10 0 rrcurveto",
                        "-195 465 hlineto",
                        "0 8 0 7 1 7 0 7 4 6 6 5 4 3 8 2 13 0 rrcurveto",
                        "30 1 3 0 rlineto", "3 1 1 2 1 3 rrcurveto",
                        "0 2 0 15 0 3 -3 0 rlineto",
                        "-11 -1 -99 -2 -4 0 -11 0 -95 3 -4 0 rrcurveto",
                        "-3 -3 hlineto", "-16 vlineto", "-5 3 -2 4 vhcurveto",
                        "1 0 30 -1 rlineto",
                        "13 0 9 -2 3 -3 6 -4 4 -6 1 -9 rrcurveto",
                        "1 -4 0 -6 0 -11 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni216D
     */
    public void testuni216D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni216D");
        assertNotNull(cs);
        assertEquals("uni216D", cs.getName());
        String[] text =
                {"87 -12 41 514 37 hstem", "32 87 vstem", "326 -12 rmoveto",
                        "91 0 79 48 67 89 rrcurveto", "-22 15 rlineto",
                        "-72 -78 -57 -33 -87 0 rrcurveto",
                        "-144 -62 153 127 183 121 51 75 hvcurveto",
                        "124 0 57 -81 25 -86 rrcurveto", "31 5 rlineto",
                        "-10 51 -9 48 -3 55 -58 4 -33 41 -113 0 rrcurveto",
                        "-144 -150 -115 -175 -157 89 -145 205 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni216E
     */
    public void testuni216E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni216E");
        assertNotNull(cs);
        assertEquals("uni216E", cs.getName());
        String[] text =
                {
                        "155 -2 29 -29 25 524 33 -27 27 hstemhm",
                        "94 81 352 94 hintmask 01001100",
                        "20 17 rmoveto",
                        "0 -17 0 -2 2 0 rlineto",
                        "hintmask 10101100",
                        "293 hlineto",
                        "101 0 64 29 65 58 45 40 31 65 0 78 0 77 -16 43 -46 56 -72 87 -92 49 -163 0 rrcurveto",
                        "hintmask 01011100",
                        "-210 0 -2 0 0 -3 0 -16 rlineto",
                        "-4 2 -3 5 vhcurveto",
                        "30 -1 rlineto",
                        "14 0 8 -2 4 -3 5 -5 4 -6 1 -8 1 -4 0 -6 0 -11 rrcurveto",
                        "-439 vlineto",
                        "0 -8 0 -8 -1 -5 -1 -8 -3 -6 -6 -5 -4 -3 -8 -1 -14 -1 rrcurveto",
                        "-30 -1 rlineto",
                        "-4 0 -2 -1 -1 -5 rrcurveto",
                        "155 526 rmoveto",
                        "hintmask 10101100",
                        "25 2 29 2 33 0 75 -1 47 -20 50 -46 69 -63 24 -50 0 -123 0 -90 -32 -44 -58 -46 -34 -27 -43 -10 -75 0 -46 0 -36 4 -28 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni216F
     */
    public void testuni216F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni216F");
        assertNotNull(cs);
        assertEquals("uni216F", cs.getName());
        String[] text =
                {
                        "314 0 24 528 27 hstem",
                        "92 38 vstem",
                        "202 579 rmoveto",
                        "-147 -19 hlineto",
                        "-3 1 -4 7 vhcurveto",
                        "28 -1 rlineto",
                        "15 0 18 -1 3 -23 1 -8 0 -8 0 -5 rrcurveto",
                        "-36 -438 rlineto",
                        "-1 -23 -1 -9 -12 -9 -3 -2 -8 -2 -14 0 rrcurveto",
                        "-30 -1 rlineto",
                        "-4 -4 -1 -6 hvcurveto",
                        "-19 vlineto",
                        "0 57 3 37 37 56 -3 0 vhcurveto",
                        "19 vlineto",
                        "0 3 -2 3 -6 1 rrcurveto",
                        "-29 1 rlineto",
                        "-14 0 -8 1 -3 3 -12 10 2 6 0 25 rrcurveto",
                        "32 388 204 -452 rlineto",
                        "3 -6 4 -5 6 0 7 0 5 3 4 8 rrcurveto",
                        "209 462 40 -398 rlineto",
                        "0 -4 2 -9 -1 -9 -1 -7 -2 -7 -7 -5 -3 -2 -8 -2 -14 0 rrcurveto",
                        "-29 -1 rlineto",
                        "-5 0 -2 -2 -1 -5 rrcurveto",
                        "-19 vlineto",
                        "0 64 3 41 46 72 -3 0 vhcurveto",
                        "19 vlineto",
                        "0 3 -1 3 -8 1 rrcurveto",
                        "-29 1 rlineto",
                        "-13 0 -9 2 -3 2 -7 5 -4 6 -1 8 -1 4 -2 7 0 11 rrcurveto",
                        "-42 438 rlineto", "-2 32 13 12 27 1 rrcurveto",
                        "28 hlineto", "3 0 4 1 1 7 rrcurveto",
                        "19 -127 vlineto", "-211 -466 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni217C
     */
    public void testuni217C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni217C");
        assertNotNull(cs);
        assertEquals("uni217C", cs.getName());
        String[] text =
                {"-241 1 27 670 -20 hstem", "95 74 vstem", "95 72 rmoveto",
                        "-13 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni217D
     */
    public void testuni217D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni217D");
        assertNotNull(cs);
        assertEquals("uni217D", cs.getName());
        String[] text =
                {"-98 -12 44 376 34 hstem", "37 77 vstem", "384 91 rmoveto",
                        "-28 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni217E
     */
    public void testuni217E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni217E");
        assertNotNull(cs);
        assertEquals("uni217E", cs.getName());
        String[] text =
                {"-7 -12 42 -3 28 352 35 256 -20 hstemhm",
                        "34 78 222 75 hintmask 10111100", "336 57 rmoveto",
                        "-27 callsubr", "hintmask 01111100", "-26 callsubr",
                        "hintmask 10111100", "-25 callsubr", "-2 32 rmoveto",
                        "-24 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni217F
     */
    public void testuni217F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni217F");
        assertNotNull(cs);
        assertEquals("uni217F", cs.getName());
        String[] text =
                {"259 1 27 366 48 hstem", "93 75 179 73 183 74 vstem",
                        "603 72 rmoveto", "-12 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2180
     */
    public void testuni2180() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2180");
        assertNotNull(cs);
        assertEquals("uni2180", cs.getName());
        String[] text =
                {"630 -2 29 586 33 hstem", "58 92 375 81 376 92 vstem",
                        "520 37 rmoveto", "-28 -6 -34 -4 -41 0 rrcurveto",
                        "-146 -121 53 202 254 158 77 131 hvcurveto",
                        "29 0 27 -1 23 -2 5 -7 2 -12 0 -17 rrcurveto",
                        "-505 vlineto", "0 -14 -2 -12 -3 -6 rrcurveto",
                        "92 hmoveto", "-4 6 -2 12 0 14 rrcurveto",
                        "505 vlineto",
                        "0 17 2 12 5 6 24 3 27 1 29 0 rrcurveto",
                        "119 170 -65 -266 -202 -120 -53 -146 hvcurveto",
                        "-43 0 -34 4 -27 6 rrcurveto", "68 609 rmoveto",
                        "-229 hlineto",
                        "-306 -87 -202 -138 -199 129 -109 198 hvcurveto",
                        "361 hlineto", "198 130 109 199 hvcurveto",
                        "0 117 -64 216 -330 7 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2181
     */
    public void testuni2181() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2181");
        assertNotNull(cs);
        assertEquals("uni2181", cs.getName());
        String[] text =
                {
                        "196 -1 34 -34 29 585 33 -28 28 hstemhm",
                        "106 81 86 63.2523193359 225.747680664 92 hintmask 00001110",
                        "187 440 rmoveto",
                        "9 -9 9 -9 6 -5 36 -32 23 -38 3 -52 2 -30 -5 -27 -13 -26 -16 -32 -24 -31 -30 -21 rrcurveto",
                        "-170 -109 rmoveto",
                        "hintmask 01001110",
                        "0 -20 128 2 rlineto",
                        "hintmask 10101110",
                        "36 0 43 -2 103 0 rrcurveto",
                        "141 186 63 246 186 -153 152 -192 hvcurveto",
                        "-34 0 -63 0 -67 -1 rrcurveto",
                        "hintmask 01011110",
                        "-68 callsubr",
                        "215 500 rmoveto",
                        "-9 6 -18 7 -18 3 rrcurveto",
                        "39 vlineto",
                        "hintmask 10101110",
                        "35 35 4 49 216 75 -175 -154 -202 -125 -49 -141 -98 -11 7 32 vhcurveto",
                        "0 45 6 -8 rlineto",
                        "41 15 32 23 29 38 31 39 14 48 -4 55 -5 82 -29 60 -70 50 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2182
     */
    public void testuni2182() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2182");
        assertNotNull(cs);
        assertEquals("uni2182", cs.getName());
        String[] text =
                {
                        "630 -2 29 586 33 hstem",
                        "58 91 221 64 91 81 92 64 220 92 vstem",
                        "657 519 rmoveto",
                        "-11 7 -20 7 -20 3 rrcurveto",
                        "38 vlineto",
                        "0 17 2 12 5 6 24 3 27 1 29 0 120 -1 169 -68 0 -265 0 -201 -123 -51 -143 0 -43 0 -34 4 -27 6 -4 6 -2 12 0 14 rrcurveto",
                        "0 54 11 -14 rlineto",
                        "54 19 91 62 0 121 0 125 -70 57 -35 26 rrcurveto",
                        "-143 -410 rmoveto",
                        "11 14 0 -54 rlineto",
                        "0 -14 -2 -12 -3 -6 -28 -6 -34 -4 -42 0 -144 0 -123 51 0 201 0 256 159 77 130 1 30 0 27 -1 23 -3 5 -6 2 -12 0 -17 rrcurveto",
                        "-38 vlineto",
                        "-19 -3 -21 -7 -10 -7 -36 -26 -69 -57 0 -125 0 -121 90 -62 54 -19 rrcurveto",
                        "11 337 rmoveto", "-321 vlineto",
                        "-37 23 -54 60 0 76 0 91 57 33 34 38 rrcurveto",
                        "81 -321 rmoveto", "", "321 vlineto",
                        "35 -38 57 -33 0 -91 0 -76 -55 -60 -37 -23 rrcurveto",
                        "74 521 rmoveto", "-229 hlineto",
                        "-325 -7 -68 -210 0 -123 rrcurveto",
                        "-199 129 -109 198 vhcurveto", "361 hlineto",
                        "198 130 109 199 hvcurveto",
                        "0 117 -64 216 -330 7 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2183
     */
    public void testuni2183() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2183");
        assertNotNull(cs);
        assertEquals("uni2183", cs.getName());
        String[] text =
                {
                        "87 -12 41 514 37 hstem",
                        "466 87 vstem",
                        "260 -12 rmoveto",
                        "205 88 145 157 163 -131 127 -163 hvcurveto",
                        "-113 0 -33 -41 -57 -4 -3 -55 -10 -48 -9 -51 rrcurveto",
                        "30 -5 rlineto", "26 86 56 81 125 0 rrcurveto",
                        "75 120 -51 -183 -127 -62 -153 -143 hvcurveto",
                        "-87 0 -58 33 -71 78 rrcurveto", "-23 -15 rlineto",
                        "68 -89 78 -48 92 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2184
     */
    public void testuni2184() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2184");
        assertNotNull(cs);
        assertEquals("uni2184", cs.getName());
        String[] text =
                {
                        "-80 -9 44 375 34 hstem",
                        "308 77 vstem",
                        "18 96 rmoveto",
                        "34 -74 61 -31 70 0 rrcurveto",
                        "133 69 106 115 124 -84 108 -120 -106 -52 -57 -47 -36 27 -5 9 hvcurveto",
                        "24 0 20 13 2 20 6 34 10 44 66 0 rrcurveto",
                        "73 48 -68 -108 -122 -59 -77 -90 hvcurveto",
                        "-50 0 -47 25 -32 44 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2196
     */
    public void testuni2196() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2196");
        assertNotNull(cs);
        assertEquals("uni2196", cs.getName());
        String[] text =
                {"337 338 600 rmoveto", "-130 -8 -96 18 -47 23 rrcurveto",
                        "-16 -16 rlineto", "45 -108 -14 -168 0 0 rrcurveto",
                        "28 -29 rlineto", "32 87 3 62 -4 42 rrcurveto",
                        "615 -615 37 37 -616 615 rlineto",
                        "45 0 72 3 73 29 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2197
     */
    public void testuni2197() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2197");
        assertNotNull(cs);
        assertEquals("uni2197", cs.getName());
        String[] text =
                {"340 760 341 rmoveto", "-8 129 19 97 22 47 rrcurveto",
                        "-16 16 rlineto", "-107 -45 -168 14 -1 0 rrcurveto",
                        "-28 -28 rlineto", "87 -32 62 -3 42 4 rrcurveto",
                        "-615 -615 36 -37 616 616 rlineto",
                        "-1 -46 4 -72 29 -72 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2198
     */
    public void testuni2198() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2198");
        assertNotNull(cs);
        assertEquals("uni2198", cs.getName());
        String[] text =
                {"337 501 -70 rmoveto", "", "130 8 97 -19 46 -22 rrcurveto",
                        "17 16 rlineto", "-45 108 14 167 0 1 rrcurveto",
                        "-29 28 rlineto", "-31 -87 -4 -61 5 -43 rrcurveto",
                        "-616 616 -36 -37 616 -615 rlineto",
                        "-46 0 -72 -4 -72 -28 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2199
     */
    public void testuni2199() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2199");
        assertNotNull(cs);
        assertEquals("uni2199", cs.getName());
        String[] text =
                {"340 82 189 rmoveto", "8 -129 -19 -97 -22 -47 rrcurveto",
                        "16 -16 rlineto", "107 45 168 -14 1 0 rrcurveto",
                        "28 28 rlineto", "-87 32 -61 3 -43 -4 rrcurveto",
                        "615 615 -36 37 -615 -616 rlineto",
                        "0 45 -4 73 -29 72 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni219A
     */
    public void testuni219A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni219A");
        assertNotNull(cs);
        assertEquals("uni219A", cs.getName());
        String[] text =
                {
                        "629 239 52 hstem",
                        "275 448 rmoveto",
                        "-86 -97 -81 -56 -49 -17 rrcurveto",
                        "-23 vlineto",
                        "108 -44 108 -128 0 -1 rrcurveto",
                        "40 hlineto",
                        "-39 84 -41 46 -33 27 rrcurveto",
                        "334 0 -110 -327 41 0 110 327 495 0 0 52 -477 0 109 324 -41 0 -110 -324 -351 0 rlineto",
                        "32 31 49 54 30 72 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni219B
     */
    public void testuni219B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni219B");
        assertNotNull(cs);
        assertEquals("uni219B", cs.getName());
        String[] text =
                {
                        "629 239 52 hstem",
                        "856 82 rmoveto",
                        "85 97 82 55 49 17 rrcurveto",
                        "23 vlineto",
                        "-108 44 -108 129 -1 1 rrcurveto",
                        "-40 hlineto",
                        "39 -84 42 -46 33 -27 rrcurveto",
                        "-334 0 109 324 -41 0 -110 -324 -494 0 0 -52 477 0 -110 -327 41 0 111 327 351 0 rlineto",
                        "-33 -31 -48 -54 -31 -72 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni21AE
     */
    public void testuni21AE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21AE");
        assertNotNull(cs);
        assertEquals("uni21AE", cs.getName());
        String[] text =
                {
                        "597 239 52 hstem",
                        "895 291 rmoveto",
                        "-316 0 109 324 -42 0 -109 -324 -333 0 rlineto",
                        "26 32 18 25 10 16 21 33 15 28 10 23 rrcurveto",
                        "-39 hlineto",
                        "-40 -46 -39 -37 -39 -29 -38 -28 -32 -20 -28 -10 rrcurveto",
                        "-23 vlineto",
                        "40 -16 35 -21 28 -26 63 -57 38 -37 13 -16 rrcurveto",
                        "40 hlineto", "-32 68 -33 52 -37 37 rrcurveto",
                        "316 0 -110 -327 41 0 110 327 334 0 rlineto",
                        "-37 -36 -33 -53 -32 -67 rrcurveto", "", "40 hlineto",
                        "13 16 38 37 63 57 29 25 34 21 40 17 rrcurveto",
                        "23 vlineto",
                        "-28 10 -32 19 -38 29 -39 29 -39 37 -40 45 rrcurveto",
                        "-39 hlineto",
                        "10 -23 15 -28 21 -32 10 -16 18 -25 26 -33 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21BC
     */
    public void testuni21BC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21BC");
        assertNotNull(cs);
        assertEquals("uni21BC", cs.getName());
        String[] text =
                {"586 397 52 hstem", "59 398 rmoveto", "35 vlineto",
                        "33 16 33 21 32 26 32 25 38 37 44 49 rrcurveto",
                        "40 hlineto", "-33 -68 -33 -53 -36 -37 rrcurveto",
                        "818 -52 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21BD
     */
    public void testuni21BD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21BD");
        assertNotNull(cs);
        assertEquals("uni21BD", cs.getName());
        String[] text =
                {"586 239 52 hstem", "61 291 rmoveto", "510 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21C0
     */
    public void testuni21C0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21C0");
        assertNotNull(cs);
        assertEquals("uni21C0", cs.getName());
        String[] text =
                {"586 397 52 hstem", "1027 398 rmoveto", "511 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21C1
     */
    public void testuni21C1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21C1");
        assertNotNull(cs);
        assertEquals("uni21C1", cs.getName());
        String[] text =
                {
                        "586 239 52 hstem",
                        "1029 291 rmoveto",
                        "-36 vlineto",
                        "-33 -16 -33 -21 -32 -26 -32 -25 -38 -37 -44 -49 rrcurveto",
                        "-39 hlineto", "32 68 34 53 35 37 rrcurveto",
                        "-818 52 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21CB
     */
    public void testuni21CB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21CB");
        assertNotNull(cs);
        assertEquals("uni21CB", cs.getName());
        String[] text =
                {
                        "586 239 52 106 52 hstem",
                        "61 397 rmoveto",
                        "36 vlineto",
                        "34 16 32 21 32 26 32 25 38 37 44 49 rrcurveto",
                        "39 hlineto",
                        "-32 -68 -33 -53 -36 -37 rrcurveto",
                        "818 -52 hlineto",
                        "-2 -107 rmoveto",
                        "-35 vlineto",
                        "-33 -16 -34 -21 -31 -26 -32 -25 -38 -37 -44 -49 rrcurveto",
                        "-40 hlineto", "33 68 33 53 35 37 rrcurveto",
                        "-817 52 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21CC
     */
    public void testuni21CC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21CC");
        assertNotNull(cs);
        assertEquals("uni21CC", cs.getName());
        String[] text =
                {"586 239 52 106 52 hstem", "61 291 rmoveto", "510 callsubr",
                        "-2 107 rmoveto", "511 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21CD
     */
    public void testuni21CD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21CD");
        assertNotNull(cs);
        assertEquals("uni21CD", cs.getName());
        String[] text =
                {
                        "573 147 53 128 52 hstem",
                        "538 328 rmoveto",
                        "-43 -128 -242 0 rlineto",
                        "-19 28 -21 22 -23 17 22 23 17 20 14 18 rrcurveto",
                        "312 52 rmoveto",
                        "-278 hlineto",
                        "24 44 12 23 0 1 rrcurveto",
                        "-38 hlineto",
                        "-40 -46 -39 -37 -39 -29 -38 -28 -33 -20 -27 -10 rrcurveto",
                        "-23 vlineto",
                        "40 -16 34 -21 29 -26 63 -57 38 -37 12 -16 rrcurveto",
                        "40 hlineto",
                        "-9 23 -10 22 -10 20 rrcurveto",
                        "191 0 -80 -235 42 0 79 235 499 0 0 53 -481 0 43 128 438 1 0 51 -420 0 79 235 -42 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21CE
     */
    public void testuni21CE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21CE");
        assertNotNull(cs);
        assertEquals("uni21CE", cs.getName());
        String[] text =
                {
                        "742 150 52 129 50 hstem",
                        "665 331 rmoveto",
                        "334 hlineto",
                        "14 -19 18 -21 23 -24 -22 -17 -21 -21 -19 -27 rrcurveto",
                        "-370 hlineto",
                        "1 129 rmoveto",
                        "-43 -129 -327 0 rlineto",
                        "-19 27 -21 22 -23 17 23 24 18 20 14 19 rrcurveto",
                        "395 50 rmoveto",
                        "-363 hlineto",
                        "24 45 12 22 0 1 rrcurveto",
                        "-38 hlineto",
                        "-40 -46 -39 -37 -39 -29 -38 -28 -33 -19 -27 -11 rrcurveto",
                        "-23 vlineto",
                        "40 -16 34 -21 29 -25 63 -58 38 -37 12 -16 rrcurveto",
                        "40 hlineto", "-9 24 -10 22 -11 21 rrcurveto",
                        "277 0 -80 -237 42 0 80 237 356 0 rlineto",
                        "-11 -21 -11 -23 -9 -24 rrcurveto", "40 hlineto",
                        "12 16 38 37 64 58 28 25 35 21 40 16 rrcurveto",
                        "23 vlineto",
                        "-28 11 -33 19 -38 28 -39 29 -39 37 -40 46 rrcurveto",
                        "-38 hlineto", "0 -1 12 -22 24 -44 rrcurveto",
                        "-285 0 79 235 -42 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21CF
     */
    public void testuni21CF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21CF");
        assertNotNull(cs);
        assertEquals("uni21CF", cs.getName());
        String[] text =
                {
                        "573 149 53 128 53 hstem",
                        "514 202 rmoveto",
                        "43 128 242 0 rlineto",
                        "19 -28 22 -22 22 -17 -21 -23 -18 -20 -13 -18 rrcurveto",
                        "-355 -53 rmoveto",
                        "-80 -237 42 0 80 237 279 0 rlineto",
                        "-25 -44 -12 -22 0 -1 rrcurveto",
                        "39 hlineto",
                        "40 45 39 37 39 29 38 29 32 20 28 9 rrcurveto",
                        "23 vlineto",
                        "-40 17 -35 21 -28 25 -63 58 -38 37 -13 16 rrcurveto",
                        "-40 hlineto",
                        "10 -24 9 -21 11 -20 rrcurveto",
                        "-192 0 78 232 -41 0 -78 -232 -498 -1 0 -52 480 0 -43 -128 -437 -1 0 -52 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni21D5
     */
    public void testuni21D5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni21D5");
        assertNotNull(cs);
        assertEquals("uni21D5", cs.getName());
        String[] text =
                {
                        "-38 117 52 128 51 vstem",
                        "297 643 rmoveto",
                        "-754 vlineto",
                        "-18 -14 -21 -18 -25 -23 -16 22 -22 21 -26 19 rrcurveto",
                        "739 vlineto",
                        "27 19 22 21 16 22 24 -22 21 -18 18 -14 rrcurveto",
                        "51 -32 rmoveto",
                        "45 -25 22 -12 1 0 rrcurveto",
                        "39 vlineto",
                        "-46 40 -37 39 -29 38 -28 39 -20 32 -10 28 rrcurveto",
                        "-23 hlineto",
                        "-16 -40 -21 -34 -25 -29 -58 -63 -37 -38 -16 -13 rrcurveto",
                        "-40 vlineto", "24 10 22 10 21 11 rrcurveto",
                        "-675 vlineto", "-21 11 -23 10 -24 10 rrcurveto",
                        "-40 vlineto",
                        "16 -12 37 -38 58 -64 25 -29 21 -34 16 -40 rrcurveto",
                        "23 hlineto",
                        "10 28 20 33 28 38 29 38 37 39 46 40 rrcurveto",
                        "39 vlineto", "-1 0 -22 -12 -44 -24 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2201
     */
    public void testuni2201() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2201");
        assertNotNull(cs);
        assertEquals("uni2201", cs.getName());
        String[] text =
                {"-55 -11 61 471 61 hstem", "47 69 vstem", "225 -11 rmoveto",
                        "94 0 51 67 21 101 rrcurveto", "-70 hlineto",
                        "-13 -58 -25 -49 -58 0 rrcurveto",
                        "-87 -22 114 122 120 22 115 87 hvcurveto",
                        "58 0 25 -49 13 -59 rrcurveto", "70 hlineto",
                        "-22 102 -51 67 -93 0 rrcurveto",
                        "-72 -106 -40 -256 -257 106 -40 72 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2204
     */
    public void testuni2204() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2204");
        assertNotNull(cs);
        assertEquals("uni2204", cs.getName());
        String[] text =
                {
                        "-101 0 65 207 65 170 65 hstem",
                        "297 69 vstem",
                        "194 272 rmoveto",
                        "103 -207 -178 hlineto",
                        "159 442 rmoveto",
                        "19 -170 -80 hlineto",
                        "149 235 rmoveto",
                        "-64 0 23 65 -36 11 -28 -76 -220 0 0 -65 196 0 -61 -170 -125 0 0 -65 102 0 -74 -207 -44 0 0 -65 20 0 rlineto",
                        "-25 -68 37 -12 29 80 270 0 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2206
     */
    public void testuni2206() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2206");
        assertNotNull(cs);
        assertEquals("uni2206", cs.getName());
        String[] text =
                {"83 0 26 hstem", "260 616 rmoveto", "-246 -601 rlineto",
                        "-3 -6 -1 -3 0 -2 rrcurveto", "-3 5 -1 11 vhcurveto",
                        "533 0 12 0 rlineto",
                        "3 1 1 1 0 2 0 2 -1 3 -3 6 rrcurveto",
                        "-253 601 rlineto", "-48 -80 rmoveto",
                        "213 -510 -418 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni220A
     */
    public void testuni220A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni220A");
        assertNotNull(cs);
        assertEquals("uni220A", cs.getName());
        String[] text =
                {"-126 60 54 105 54 104 55 hstem", "234 60 rmoveto",
                        "98 54 -98 hlineto", "-126 0 -16 57 -11 48 rrcurveto",
                        "251 54 -251 hlineto", "11 53 22 50 120 1 rrcurveto",
                        "98 55 -98 hlineto",
                        "-148 -57 -75 -111 -128 74 -58 131 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni220C
     */
    public void testuni220C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni220C");
        assertNotNull(cs);
        assertEquals("uni220C", cs.getName());
        String[] text =
                {
                        "0 0 57 200 57 201 57 hstem",
                        "194 257 rmoveto",
                        "209 hlineto",
                        "-13 -107 -79 -93 -116 0 rrcurveto",
                        "-73 hlineto",
                        "158 438 rmoveto",
                        "64 -32 49 -67 10 -82 rrcurveto",
                        "-189 hlineto",
                        "-174 258 rmoveto",
                        "-57 155 vlineto",
                        "16 0 17 -2 16 -4 rrcurveto",
                        "-70 -195 -125 0 0 -57 104 0 -72 -200 -41 0 0 -57 21 0 -24 -65 37 -12 28 77 88 0 rlineto",
                        "157 126 130 156 hvcurveto",
                        "0 116 -71 103 -103 44 rrcurveto",
                        "33 91 -37 12 -32 -90 rlineto",
                        "-23 6 -24 4 -26 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni220D
     */
    public void testuni220D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni220D");
        assertNotNull(cs);
        assertEquals("uni220D", cs.getName());
        String[] text =
                {"-126 60 54 104 54 105 55 hstem", "127 432 rmoveto",
                        "-98 -55 98 hlineto", "126 0 17 -57 10 -48 rrcurveto",
                        "-251 -54 251 hlineto",
                        "-10 -53 -23 -50 -120 -1 rrcurveto",
                        "-98 -54 98 hlineto",
                        "147 58 74 112 127 -73 59 -132 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2210
     */
    public void testuni2210() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2210");
        assertNotNull(cs);
        assertEquals("uni2210", cs.getName());
        String[] text =
                {
                        "166 -13 28 -27 40 576 27 hstemhm",
                        "111 80 294 81 hintmask 10111000",
                        "485 561 rmoveto",
                        "27 -13 16 -41 vhcurveto",
                        "-22 hlineto",
                        "-5 -3 3 6 hvcurveto",
                        "0 18 2 2 rlineto",
                        "0 89 -2 35 39 87 2 0 vhcurveto",
                        "2 -2 0 -18 rlineto",
                        "-6 -4 -3 -4 vhcurveto",
                        "-26 hlineto",
                        "",
                        "-40 -15 -13 -30 hvcurveto",
                        "-502 vlineto",
                        "-31 24 -13 28 vhcurveto",
                        "29 hlineto",
                        "5 3 -5 -4 hvcurveto",
                        "hintmask 01111000",
                        "0 -18 -2 -2 rlineto",
                        "-2 0 -122 2 -6 0 -71 0 -55 2 -62 0 -70 0 -55 -2 -61 0 rrcurveto",
                        "hintmask 10111000", "-14 0 -104 -1 -8 0 rrcurveto",
                        "hintmask 01111000", "-1 1 0 19 rlineto",
                        "hintmask 10111000", "3 1 5 7 vhcurveto", "30 hlineto",
                        "31 20 6 38 hvcurveto", "502 vlineto",
                        "27 -14 16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 3 6 hvcurveto", "0 18 2 2 rlineto",
                        "0 93 -2 36 39 82 2 0 vhcurveto", "2 -2 0 -18 rlineto",
                        "-6 -4 -3 -4 vhcurveto", "-22 hlineto",
                        "-39 -16 -13 -30 hvcurveto", "-488 vlineto",
                        "hintmask 01111000", "-33 6 -12 31 vhcurveto",
                        "221 hlineto", "31 5 16 28 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2213
     */
    public void testuni2213() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2213");
        assertNotNull(cs);
        assertEquals("uni2213", cs.getName());
        String[] text =
                {"26 192 49 225 50 hstem", "239 50 vstem", "461 466 rmoveto",
                        "-395 50 395 hlineto", "-172 -324 rmoveto",
                        "-174 -50 174 -173 49 173 173 50 -173 172 -49 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2214
     */
    public void testuni2214() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2214");
        assertNotNull(cs);
        assertEquals("uni2214", cs.getName());
        String[] text =
                {"26 182 49 245 97 hstemhm", "223 97 -71 49 hintmask 11010000",
                        "298 231 rmoveto",
                        "173 -49 -173 -174 -49 174 -173 49 173 173 49 vlineto",
                        "hintmask 11100000", "-248 293 rmoveto",
                        "-26 19 -22 30 28 20 22 26 28 -24 21 -24 vhcurveto",
                        "-27 -22 -22 -27 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2215
     */
    public void testuni2215() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2215");
        assertNotNull(cs);
        assertEquals("uni2215", cs.getName());
        String[] text =
                {"26 21 -21 hstem", "17 499 vstem", "66 hmoveto",
                        "450 573 -50 0 -449 -573 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2216
     */
    public void testuni2216() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2216");
        assertNotNull(cs);
        assertEquals("uni2216", cs.getName());
        String[] text =
                {"26 21 -21 hstem", "17 499 vstem", "466 hmoveto",
                        "50 0 -450 573 -49 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2218
     */
    public void testuni2218() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2218");
        assertNotNull(cs);
        assertEquals("uni2218", cs.getName());
        String[] text =
                {
                        "-160 72 28 144 28 hstem",
                        "71 33 133 34 vstem",
                        "71 172 rmoveto",
                        "-55 45 -45 55 55 45 45 55 55 -45 45 -55 -55 -45 -45 -55 vhcurveto",
                        "166 -1 rmoveto",
                        "-34 -25 -37 -41 -42 -25 36 35 35 24 38 43 45 21 -41 -32 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2219
     */
    public void testuni2219() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2219");
        assertNotNull(cs);
        assertEquals("uni2219", cs.getName());
        String[] text =
                {
                        "-248 185 108 hstem",
                        "73 108 vstem",
                        "127 185 rmoveto",
                        "31 23 24 29 31 -27 24 -27 -29 -25 -26 -29 -28 21 -25 33 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni221B
     */
    public void testuni221B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni221B");
        assertNotNull(cs);
        assertEquals("uni221B", cs.getName());
        String[] text =
                {
                        "61 358 25 144 24 113 24 45 39 hstemhm",
                        "44 49 95 57 -29 58 hintmask 11111100",
                        "188 624 rmoveto",
                        "15 callsubr",
                        "hintmask 11111010",
                        "24 55 -7 -57 -69 -58 -13 -18 hvcurveto",
                        "-33 0 -10 8 -8 10 -6 7 -6 7 -14 0 rrcurveto",
                        "-11 -13 -10 -10 -21 52 -16 38 79 66 46 69 hvcurveto",
                        "0 58 -46 27 -34 3 rrcurveto",
                        "hintmask 11111100",
                        "29 16 22 23 0 29 rrcurveto",
                        "37 -33 22 -52 -87 -29 -53 -17 -3 4 -15 19 23 3 17 12 vhcurveto",
                        "1 25 35 10 19 0 rrcurveto", "20 20 -9 -31 hvcurveto",
                        "300 109 rmoveto", "512 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni221C
     */
    public void testuni221C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni221C");
        assertNotNull(cs);
        assertEquals("uni221C", cs.getName());
        String[] text =
                {"64 365 24 74 35 235 39 hstem", "172 46 vstem",
                        "218 603 rmoveto", "8 -7 2 -6 vhcurveto",
                        "-7 0 -11 -12 -8 -9 -2 -3 -5 -8 0 -7 rrcurveto",
                        "-76 -91 vlineto", "23 34 59 82 45 70 rrcurveto",
                        "-30 9 -154 -218 4 -12 144 0 0 -50 rlineto",
                        "-21 -5 -3 -18 vhcurveto", "-14 hlineto",
                        "-4 -1 -3 -1 hvcurveto", "-21 vlineto",
                        "0 37 1 24 27 43 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 3 -4 vhcurveto", "-16 hlineto",
                        "-18 -4 6 19 hvcurveto", "49 52 vlineto",
                        "2 35 -54 0 rlineto", "270 235 rmoveto",
                        "512 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2223
     */
    public void testuni2223() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2223");
        assertNotNull(cs);
        assertEquals("uni2223", cs.getName());
        String[] text =
                {"-296 -212 -21 931 -20 hstem", "81 44 vstem",
                        "125 -233 rmoveto", "931 -44 -931 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2224
     */
    public void testuni2224() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2224");
        assertNotNull(cs);
        assertEquals("uni2224", cs.getName());
        String[] text =
                {
                        "-296 -212 -21 931 -20 hstem",
                        "81 44 vstem",
                        "125 -233 rmoveto",
                        "0 447 117 346 -42 0 -75 -222 0 360 -44 0 0 -492 -118 -350 42 0 76 227 0 -316 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2225
     */
    public void testuni2225() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2225");
        assertNotNull(cs);
        assertEquals("uni2225", cs.getName());
        String[] text =
                {"-90 -212 -21 931 -20 hstem", "81 44 162 45 vstem",
                        "125 -233 rmoveto", "931 -44 -931 vlineto",
                        "251 hmoveto", "931 -45 -931 vlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2226
     */
    public void testuni2226() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2226");
        assertNotNull(cs);
        assertEquals("uni2226", cs.getName());
        String[] text =
                {
                        "8 -212 -21 931 -20 hstem",
                        "121 45 161 45 vstem",
                        "448 572 rmoveto",
                        "-76 -119 0 245 -45 0 0 -315 -161 -253 0 568 -45 0 0 -637 -101 -160 42 -11 59 92 0 -215 45 0 0 285 161 253 rlineto",
                        "-538 45 608 vlineto", "119 186 rlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2236
     */
    public void testuni2236() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2236");
        assertNotNull(cs);
        assertEquals("uni2236", cs.getName());
        String[] text =
                {"26 72 107 156 106 hstem", "210 107 vstem", "210 125 rmoveto",
                        "-89 callsubr", "263 vmoveto", "-88 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2241
     */
    public void testuni2241() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2241");
        assertNotNull(cs);
        assertEquals("uni2241", cs.getName());
        String[] text =
                {"26 213 59 6 59 hstem", "57 390 vstem", "57 209 rmoveto",
                        "12 -3 rlineto",
                        "24 44 50 28 35 0 20 0 19 -9 19 -13 rrcurveto",
                        "-100 -297 38 -12 96 287 rlineto",
                        "19 -11 19 -10 20 0 24 0 65 13 30 107 rrcurveto",
                        "-16 6 rlineto",
                        "-22 -50 -50 -17 -28 0 -13 0 -15 6 -15 9 rrcurveto",
                        "90 270 -38 10 -87 -259 rlineto",
                        "-24 15 -23 14 -22 0 -60 0 -55 -63 -12 -65 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2249
     */
    public void testuni2249() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2249");
        assertNotNull(cs);
        assertEquals("uni2249", cs.getName());
        String[] text =
                {"26 87 59 6 59 22 59 6 59 hstem", "54 396 vstem",
                        "54 83 rmoveto", "13 -4 rlineto",
                        "23 45 51 28 35 0 12 0 11 -4 11 -5 rrcurveto",
                        "-62 -184 38 -12 59 176 5 -3 rlineto",
                        "24 -17 25 -16 26 0 24 0 65 13 31 106 rrcurveto",
                        "-17 7 rlineto",
                        "-22 -50 -49 -17 -28 0 -20 0 -23 14 -24 14 rrcurveto",
                        "25 72 rlineto",
                        "14 -7 14 -6 15 0 24 0 65 13 31 107 rrcurveto",
                        "-17 6 rlineto",
                        "-22 -50 -49 -17 -29 0 -9 0 -10 3 -10 5 rrcurveto",
                        "87 257 -38 10 -83 -248 -9 6 rlineto",
                        "-26 16 -26 16 -22 0 -61 0 -55 -63 -12 -65 rrcurveto",
                        "13 -3 rlineto",
                        "23 45 51 27 35 0 24 0 24 -14 23 -16 rrcurveto",
                        "-24 -73 rlineto",
                        "-16 10 -16 6 -14 0 -61 0 -55 -64 -12 -64 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2259
     */
    public void testuni2259() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2259");
        assertNotNull(cs);
        assertEquals("uni2259", cs.getName());
        String[] text =
                {"26 144 49 76 49 hstem", "461 193 rmoveto", "-85 callsubr",
                        "174 vmoveto", "-85 callsubr", "-180 277 rmoveto",
                        "119 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2262
     */
    public void testuni2262() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2262");
        assertNotNull(cs);
        assertEquals("uni2262", cs.getName());
        String[] text =
                {
                        "26 105 44 63 44 64 44 hstem",
                        "461 364 rmoveto",
                        "-135 0 65 193 -38 10 -69 -203 -218 0 0 -44 204 0 -22 -64 -182 0 0 -44 167 0 -21 -63 -146 0 0 -44 131 0 rlineto",
                        "-49 -146 38 -12 53 158 222 0 0 44 -207 0 21 63 186 0 0 44 -171 0 21 64 150 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni226A
     */
    public void testuni226A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni226A");
        assertNotNull(cs);
        assertEquals("uni226A", cs.getName());
        String[] text =
                {"283 69 335 hstem", "122 239 rmoveto", "-86 callsubr",
                        "-20 112 rmoveto",
                        "317 116 0 49 -390 -141 0 -48 390 -142 0 50 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni226B
     */
    public void testuni226B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni226B");
        assertNotNull(cs);
        assertEquals("uni226B", cs.getName());
        String[] text =
                {"283 28 335 hstem", "663 194 rmoveto",
                        "-317 -116 0 -50 390 142 0 47 -390 142 0 -49 rlineto",
                        "20 -112 rmoveto",
                        "-317 -116 0 -50 390 142 0 47 -390 142 0 -50 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni226E
     */
    public void testuni226E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni226E");
        assertNotNull(cs);
        assertEquals("uni226E", cs.getName());
        String[] text =
                {
                        "26 68 390 vstem",
                        "347 313 rmoveto",
                        "111 41 0 50 -92 -33 62 186 -38 10 -72 -213 -250 -91 0 -48 182 -66 -64 -190 38 -12 63 189 171 -63 0 50 -156 57 rlineto",
                        "-3 116 rmoveto", "-34 -102 -123 45 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni226F
     */
    public void testuni226F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni226F");
        assertNotNull(cs);
        assertEquals("uni226F", cs.getName());
        String[] text =
                {
                        "26 68 390 vstem",
                        "255 189 rmoveto",
                        "28 84 102 -37 rlineto",
                        "-177 -65 rmoveto",
                        "-140 -50 0 -50 120 43 -52 -155 38 -12 62 184 222 81 0 48 -160 58 80 239 -38 10 -79 -235 -193 70 0 -50 179 -65 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2270
     */
    public void testuni2270() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2270");
        assertNotNull(cs);
        assertEquals("uni2270", cs.getName());
        String[] text =
                {
                        "26 11 47 hstem",
                        "282 303 rmoveto",
                        "-31 -91 -109 40 rlineto",
                        "-74 -241 rmoveto",
                        "116 0 -18 -52 38 -12 21 64 233 0 0 47 -217 0 32 96 185 -68 0 50 -170 62 41 122 129 48 0 49 -110 -40 rlineto",
                        "60 180 -38 10 -69 -207 -233 -84 0 -47 168 -62 -37 -109 -131 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2271
     */
    public void testuni2271() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2271");
        assertNotNull(cs);
        assertEquals("uni2271", cs.getName());
        String[] text =
                {
                        "26 11 47 hstem",
                        "250 202 rmoveto",
                        "30 88 105 -39 rlineto",
                        "-317 -240 rmoveto",
                        "77 0 -18 -52 38 -12 21 64 272 0 0 47 -256 0 29 87 227 83 0 47 -164 59 75 223 -38 10 -73 -219 -190 69 rlineto",
                        "0 -50 175 -63 -40 -119 -135 -49 0 -50 116 42 -24 -70 -92 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2285
     */
    public void testuni2285() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2285");
        assertNotNull(cs);
        assertEquals("uni2285", cs.getName());
        String[] text =
                {
                        "21 43 42 269 42 hstem",
                        "437 49 vstem",
                        "281 354 rmoveto",
                        "94 -5 62 -31 0 -106 rrcurveto",
                        "-103 -89 -24 -97 vhcurveto",
                        "-61 hlineto",
                        "-151 269 rmoveto",
                        "201 0 -92 -269 -109 0 0 -42 95 0 -35 -102 38 -12 39 114 75 0 rlineto",
                        "128 107 24 147 hvcurveto",
                        "0 136 -86 38 -105 7 rrcurveto",
                        "32 91 -38 11 -35 -101 -3 0 -212 0 rlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2296
     */
    public void testuni2296() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2296");
        assertNotNull(cs);
        assertEquals("uni2296", cs.getName());
        String[] text =
                {"63 -8 38 164 39 164 39 hstem", "465 194 rmoveto",
                        "-10 -92 -79 -72 -94 0 -95 0 -78 72 -9 92 rrcurveto",
                        "365 39 rmoveto", "-365 hlineto",
                        "9 93 78 71 95 0 95 0 79 -71 9 -93 rrcurveto",
                        "-183 -241 rmoveto", "513 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2298
     */
    public void testuni2298() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2298");
        assertNotNull(cs);
        assertEquals("uni2298", cs.getName());
        String[] text =
                {
                        "63 125 314 vstem",
                        "425 329 rmoveto",
                        "59 -73 -5 -105 -67 -67 -68 -67 -105 -4 -72 58 rrcurveto",
                        "-15 273 rmoveto", "68 67 106 5 72 -60 rrcurveto",
                        "-258 -257 rlineto", "-59 71 4 106 67 68 rrcurveto",
                        "287 -287 rmoveto", "514 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni22EF
     */
    public void testuni22EF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni22EF");
        assertNotNull(cs);
        assertEquals("uni22EF", cs.getName());
        String[] text =
                {
                        "163 204 108 hstem",
                        "71 108 97 108 95 108 vstem",
                        "179 258 rmoveto",
                        "30 -27 24 -27 -29 -25 -26 -28 -28 21 -26 33 31 23 25 29 vhcurveto",
                        "152 -54 rmoveto",
                        "30 23 25 29 30 -27 24 -26 -30 -25 -26 -28 -28 21 -26 34 hvcurveto",
                        "202 hmoveto",
                        "30 24 25 29 30 -27 24 -27 -30 -24 -26 -28 -28 21 -26 33 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2302
     */
    public void testuni2302() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2302");
        assertNotNull(cs);
        assertEquals("uni2302", cs.getName());
        String[] text =
                {"364 0 34 hstem", "73 44 632 43 vstem", "73 430 rmoveto",
                        "-430 719 430 vlineto", "-352 216 rlineto",
                        "-323 -239 rmoveto",
                        "323 185 309 -185 0 -373 -632 0 rlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2303
     */
    public void testuni2303() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2303");
        assertNotNull(cs);
        assertEquals("uni2303", cs.getName());
        String[] text =
                {"178 362 340 hstem", "112 441 vstem", "332 646 rmoveto",
                        "173 -284 48 0 -199 340 -42 0 -200 -340 48 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2310
     */
    public void testuni2310() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2310");
        assertNotNull(cs);
        assertEquals("uni2310", cs.getName());
        String[] text =
                {"59 357 44 hstem", "24 54 vstem", "78 133 rmoveto",
                        "-54 268 513 -44 -459 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2320
     */
    public void testuni2320() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2320");
        assertNotNull(cs);
        assertEquals("uni2320", cs.getName());
        String[] text =
                {"-122 21 -21 405 50 hstem", "104 80 vstem", "104 hmoveto",
                        "80 0 -4 235 rlineto",
                        "-2 139 18 31 21 0 24 0 2 -32 32 0 rrcurveto",
                        "24 20 17 22 25 -24 18 -28 hvcurveto",
                        "-107 0 -61 -106 3 -237 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2321
     */
    public void testuni2321() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2321");
        assertNotNull(cs);
        assertEquals("uni2321", cs.getName());
        String[] text =
                {"-122 203 54 441 -20 hstem", "154 80 vstem",
                        "234 698 rmoveto", "-80 0 4 -279 rlineto",
                        "1 -129 -18 -33 -24 0 -18 0 -16 35 -30 0 rrcurveto",
                        "-21 -22 -18 -24 -27 24 -20 36 hvcurveto",
                        "108 0 63 106 -5 304 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2329
     */
    public void testuni2329() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2329");
        assertNotNull(cs);
        assertEquals("uni2329", cs.getName());
        String[] text =
                {"", "-49 166 251 vstem", "417 630 rmoveto",
                        "-76 -120 -73 -100 -71 -72 rrcurveto",
                        "-31 -28 31 -30 rlineto",
                        "66 -54 73 -98 81 -140 rrcurveto", "76 vlineto",
                        "-54 106 -65 88 -48 55 51 63 64 81 52 97 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni232A
     */
    public void testuni232A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni232A");
        assertNotNull(cs);
        assertEquals("uni232A", cs.getName());
        String[] text =
                {
                        "-49 34 251 vstem",
                        "34 -12 rmoveto",
                        "75 121 75 99 70 72 rrcurveto",
                        "31 29 -31 29 rlineto",
                        "-66 55 -73 98 -81 139 rrcurveto",
                        "-76 vlineto",
                        "54 -105 64 -88 49 -55 -51 -64 -64 -80 -52 -98 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni23D3
     */
    public void testuni23D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni23D3");
        assertNotNull(cs);
        assertEquals("uni23D3", cs.getName());
        String[] text =
                {"26 113 50 51 61 hstem", "456 357 rmoveto", "-27 hlineto",
                        "-7 -39 -66 -43 -99 0 -109 0 -55 43 -9 39 rrcurveto",
                        "-27 hlineto",
                        "5 -70 55 -73 139 0 133 0 61 72 6 71 rrcurveto",
                        "5 -194 rmoveto", "-395 -50 395 hlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2460
     */
    public void testuni2460() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2460");
        assertNotNull(cs);
        assertEquals("uni2460", cs.getName());
        String[] text =
                {"-15 37 105 19 292 -20 191 37 hstem",
                        "49 36 280 47 259 37 vstem", "351 438 rmoveto",
                        "14 0 -16 -22 hvcurveto", "-224 vlineto",
                        "-19 0 -11 -24 vhcurveto", "-39 hlineto",
                        "-4 -1 -2 -3 hvcurveto",
                        "0 -14 90 1 89 -1 0 14 rlineto", "4 -3 1 -2 vhcurveto",
                        "-34 hlineto", "-21 -4 7 23 hvcurveto",
                        "327 -12 vlineto", "-33 -23 -22 -14 -56 -26 rrcurveto",
                        "7 -21 rlineto", "14 7 29 12 12 0 rrcurveto",
                        "27 171 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2461
     */
    public void testuni2461() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2461");
        assertNotNull(cs);
        assertEquals("uni2461", cs.getName());
        String[] text =
                {"-15 37 104 38 317 21 107 37 hstem",
                        "49 36 183 45 119 49 190 37 vstem", "269 414 rmoveto",
                        "-13 11 -11 13 11 13 6 18 vhcurveto",
                        "0 4 -1 5 -1 4 -2 5 -1 5 0 5 rrcurveto",
                        "16 12 23 45 23 40 -17 -59 vhcurveto",
                        "0 -39 -15 -29 -37 -38 rrcurveto", "-46 -47 rlineto",
                        "-60 -62 -6 -28 0 -36 rrcurveto", "",
                        "202 0 12 82 -16 2 rlineto",
                        "-9 -35 -12 -11 -22 0 rrcurveto", "-110 hlineto",
                        "0 30 43 43 4 3 rrcurveto", "61 60 rlineto",
                        "35 34 25 25 0 49 rrcurveto",
                        "75 -58 19 -49 -69 -36 -51 -37 vhcurveto",
                        "109 195 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2462
     */
    public void testuni2462() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2462");
        assertNotNull(cs);
        assertEquals("uni2462", cs.getName());
        String[] text =
                {
                        "-15 37 103 20 344 20 100 37 hstemhm",
                        "49 36 187 40 117 42 -27 48 179 37 hintmask 1111111010000000",
                        "376 489 rmoveto",
                        "27 26 -19 -36 hvcurveto",
                        "0 -31 -42 -49 -50 -8 rrcurveto",
                        "3 -20 rlineto",
                        "7 2 7 1 6 0 rrcurveto",
                        "hintmask 1111110110000000",
                        "35 49 -11 -69 -82 -62 -22 -21 hvcurveto",
                        "-31 0 -11 16 -8 11 -6 8 -6 7 -12 0 rrcurveto",
                        "-13 -9 -11 -10 -24 51 -17 38 73 65 46 86 hvcurveto",
                        "0 68 -48 27 -37 5 rrcurveto",
                        "hintmask 1111111010000000",
                        "59 38 5 31 0 16 rrcurveto",
                        "27 -19 40 -63 -90 -27 -60 -21 -1 1 -19 18 17 4 20 12 vhcurveto",
                        "39 48 10 16 vhcurveto", "2 120 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2463
     */
    public void testuni2463() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2463");
        assertNotNull(cs);
        assertEquals("uni2463", cs.getName());
        String[] text =
                {
                        "-15 37 105 18 82 30 352 37 hstem",
                        "49 36 300 44 242 37 vstem",
                        "385 358 rmoveto",
                        "-101 -103 vlineto",
                        "48 76 47 84 30 79 -8 1 -14 6 0 0 -3 0 -1 -1 -1 -3 -24 -53 -75 -145 -42 -47 rrcurveto",
                        "0 -1 -1 -1 0 0 -1 1 hvcurveto", "8 -14 5 -7 rlineto",
                        "2 -2 1 -1 2 0 rrcurveto", "128 -55 hlineto",
                        "-19 -2 -8 -20 vhcurveto", "-18 hlineto",
                        "-4 0 -3 -1 hvcurveto", "-15 vlineto",
                        "0 38 1 25 27 42 -1 0 vhcurveto", "14 vlineto",
                        "2 -1 3 -4 vhcurveto", "-17 hlineto",
                        "-19 -3 9 19 hvcurveto", "54 49 vlineto",
                        "3 30 -52 0 0 104 rlineto", "14 0 6 -9 vhcurveto",
                        "-10 0 -11 -5 -8 -5 -5 -4 -1 -5 0 -4 rrcurveto",
                        "-7 251 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2464
     */
    public void testuni2464() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2464");
        assertNotNull(cs);
        assertEquals("uni2464", cs.getName());
        String[] text =
                {
                        "-15 37 100 22 195 31 88 41 110 37 hstem",
                        "49 36 352 47 187 37 vstem",
                        "437 239 rmoveto",
                        "-56 -34 -39 -42 vhcurveto",
                        "-21 0 -10 13 -10 11 -8 11 -8 9 -13 0 rrcurveto",
                        "-12 -10 -8 -12 -26 54 -20 37 74 50 56 72 61 -38 59 -70 hvcurveto",
                        "-24 0 -24 -4 -14 -6 rrcurveto", "13 103 rlineto",
                        "22 -3 23 -2 29 0 18 0 21 0 25 3 rrcurveto",
                        "10 42 -4 2 rlineto",
                        "-35 -4 -34 -2 -32 0 -23 0 -22 1 -22 2 rrcurveto",
                        "-21 -177 rlineto", "26 10 23 4 30 0 rrcurveto",
                        "40 36 -32 -68 hvcurveto", "-59 370 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2465
     */
    public void testuni2465() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2465");
        assertNotNull(cs);
        assertEquals("uni2465", cs.getName());
        String[] text =
                {
                        "-15 37 96 19 188 22 138 16 108 37 hstem",
                        "49 36 163 44 144 43 192 37 vstem",
                        "464 485 rmoveto",
                        "-2 16 rlineto",
                        "-64 -3 -43 -17 -43 -43 -44 -45 -20 -58 0 -60 rrcurveto",
                        "-129 72 -28 48 89 22 74 45 30 -12 80 -96 vhcurveto",
                        "-25 0 -36 -14 -15 -19 8 53 21 43 30 29 31 31 36 11 43 4 rrcurveto",
                        "-171 -189 rmoveto",
                        "26 28 25 1 14 0 rrcurveto",
                        "62 16 -62 -31 -67 -32 -28 -30 -33 -49 27 109 hvcurveto",
                        "0 7 0 10 1 6 rrcurveto", "85 313 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2466
     */
    public void testuni2466() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2466");
        assertNotNull(cs);
        assertEquals("uni2466", cs.getName());
        String[] text =
                {"-15 37 438 39 110 37 hstem", "49 36 586 37 vstem",
                        "339 460 rmoveto", "117 hlineto",
                        "-48 -120 -50 -121 -41 -93 rrcurveto",
                        "2 -4 42 2 rlineto", "35 105 37 101 69 168 rrcurveto",
                        "-10 4 rlineto", "-10 -3 -14 0 -23 0 rrcurveto",
                        "-124 hlineto", "-15 0 -2 2 -2 4 rrcurveto",
                        "-14 hlineto", "-2 -35 -6 -26 -8 -26 rrcurveto",
                        "17 -2 rlineto", "12 33 10 11 28 0 rrcurveto",
                        "39 149 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2467
     */
    public void testuni2467() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2467");
        assertNotNull(cs);
        assertEquals("uni2467", cs.getName());
        String[] text =
                {
                        "-15 37 97 18 350 15 107 37 hstemhm",
                        "49 36 179 37 -24 41 122 38 -27 41 179 37 hintmask 1111100001000000",
                        "378 609 rmoveto", "517 callsubr", "-624 vmoveto",
                        "516 callsubr", "-3 152 rmoveto",
                        "hintmask 1111110011000000", "-28 -46 25 54 hvcurveto",
                        "0 19 12 43 53 35 rrcurveto", "30 -17 rlineto",
                        "39 -24 16 -29 0 -29 rrcurveto",
                        "-62 -48 -15 -28 vhcurveto",
                        "hintmask 1111101101000000", "103 288 rmoveto",
                        "44 -35 33 -61 -62 -43 -37 -48 vhcurveto",
                        "0 -34 18 -25 38 -25 rrcurveto", "10 -6 rlineto",
                        "-15 -12 -14 -10 -15 -14 rrcurveto",
                        "hintmask 1111110011000000",
                        "-25 -22 -10 -28 0 -25 rrcurveto",
                        "-63 45 -34 65 80 38 60 48 vhcurveto",
                        "0 35 -17 28 -31 21 rrcurveto", "-37 26 rlineto",
                        "27 18 44 31 0 39 rrcurveto", "-99 62 rmoveto",
                        "hintmask 1111101101000000", "40 21 -32 -29 hvcurveto",
                        "0 -33 -38 -30 -17 -12 rrcurveto", "-18 12 rlineto",
                        "-39 25 -10 22 0 19 rrcurveto",
                        "29 24 29 37 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2468
     */
    public void testuni2468() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2468");
        assertNotNull(cs);
        assertEquals("uni2468", cs.getName());
        String[] text =
                {
                        "-15 37 95 16 138 22 188 19 109 37 hstem",
                        "49 36 186 44 143 45 168 37 vstem",
                        "287 133 rmoveto",
                        "1 -16 rlineto",
                        "64 3 44 17 42 43 44 45 21 58 0 60 rrcurveto",
                        "129 -72 28 -48 -90 -22 -74 -45 -29 13 -81 96 vhcurveto",
                        "24 0 36 15 15 18 -7 -52 -22 -44 -30 -29 -31 -31 -36 -10 -42 -5 rrcurveto",
                        "170 189 rmoveto", "-26 -28 -25 -1 -13 0 rrcurveto",
                        "-63 -15 62 31 68 31 27 30 33 49 -27 -109 hvcurveto",
                        "0 -7 0 -9 -1 -7 rrcurveto", "-79 287 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2469
     */
    public void testuni2469() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2469");
        assertNotNull(cs);
        assertEquals("uni2469", cs.getName());
        String[] text =
                {
                        "-15 37 103 22 291 -20 68 23 100 37 hstem",
                        "49 36 172 47 58 50 136 49 74 37 vstem",
                        "478 125 rmoveto",
                        "47 72 50 145 hvcurveto",
                        "0 61 -14 49 -27 36 -20 26 -28 17 -28 0 rrcurveto",
                        "-61 -57 -73 -122 -100 47 -89 69 hvcurveto",
                        "2 361 rmoveto",
                        "11 0 10 -3 7 -6 19 -17 21 -46 0 -82 0 -57 -5 -39 -8 -31 -14 -51 -31 -7 -11 0 rrcurveto",
                        "-57 -10 107 53 152 41 27 27 hvcurveto",
                        "-102 123 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-136 453 rmoveto",
                        "15 0 -16 -22 hvcurveto", "-224 vlineto",
                        "-19 0 -11 -25 vhcurveto", "-39 hlineto",
                        "-4 -1 -2 -3 hvcurveto",
                        "0 -14 90 1 89 -1 0 14 rlineto", "4 -3 1 -2 vhcurveto",
                        "-34 hlineto", "-21 -3 7 23 hvcurveto",
                        "327 -13 vlineto", "-33 -23 -22 -14 -56 -26 rrcurveto",
                        "7 -21 rlineto", "14 7 29 12 12 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni246A
     */
    public void testuni246A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni246A");
        assertNotNull(cs);
        assertEquals("uni246A", cs.getName());
        String[] text =
                {"-15 37 105 19 292 -20 191 37 hstem",
                        "49 36 180 47 150 47 162 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-128 453 rmoveto", "15 0 -16 -22 hvcurveto",
                        "-224 vlineto", "-19 0 -11 -25 vhcurveto",
                        "-39 hlineto", "-4 -1 -2 -3 hvcurveto",
                        "0 -14 90 1 89 -1 0 14 rlineto", "4 -3 1 -2 vhcurveto",
                        "-34 hlineto", "-22 -2 7 23 hvcurveto",
                        "327 -13 vlineto", "-33 -23 -22 -14 -56 -26 rrcurveto",
                        "7 -21 rlineto", "14 7 29 12 12 0 rrcurveto",
                        "198 hmoveto", "14 0 -16 -22 hvcurveto",
                        "-224 vlineto", "-19 0 -11 -24 vhcurveto",
                        "-40 hlineto", "-3 -1 -2 -3 hvcurveto",
                        "0 -14 90 1 89 -1 0 14 rlineto", "4 -3 1 -3 vhcurveto",
                        "-33 hlineto", "-22 -3 7 23 hvcurveto",
                        "327 -12 vlineto", "-33 -23 -22 -14 -57 -26 rrcurveto",
                        "8 -21 rlineto", "14 7 29 12 12 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni246B
     */
    public void testuni246B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni246B");
        assertNotNull(cs);
        assertEquals("uni246B", cs.getName());
        String[] text =
                {
                        "-15 37 103 38 -36 19 292 -20 63 20 108 37 hstemhm",
                        "49 36 176 47 73 45 118 50 77 37 hintmask 1101111111100000",
                        "382 414 rmoveto",
                        "-14 11 -10 13 11 13 6 17 vhcurveto",
                        "0 5 -1 4 -1 5 -2 5 -1 5 0 5 rrcurveto",
                        "16 12 23 45 22 40 -17 -59 vhcurveto",
                        "0 -40 -15 -29 -36 -37 rrcurveto", "-46 -47 rlineto",
                        "-60 -62 -6 -28 0 -37 rrcurveto",
                        "201 0 13 83 -16 2 rlineto",
                        "-9 -36 -12 -11 -22 0 rrcurveto", "-110 hlineto",
                        "0 31 43 42 4 4 rrcurveto", "61 60 rlineto",
                        "35 34 25 24 0 49 rrcurveto",
                        "75 -58 19 -50 vhcurveto", "-68 -36 -50 -37 hvcurveto",
                        "-4 195 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-131 453 rmoveto", "518 callsubr",
                        "hintmask 1011111111100000", "519 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni246C
     */
    public void testuni246C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni246C");
        assertNotNull(cs);
        assertEquals("uni246C", cs.getName());
        String[] text =
                {
                        "-15 37 100 20 -15 19 292 -20 67 20 104 37 hstemhm",
                        "49 36 176 47 82 40 117 42 -27 47 62 37 hintmask 1101111111010000",
                        "494 485 rmoveto",
                        "27 26 -18 -37 hvcurveto",
                        "0 -31 -42 -48 -50 -9 rrcurveto",
                        "3 -19 rlineto",
                        "7 2 7 1 6 0 rrcurveto",
                        "hintmask 1101111110110000",
                        "35 49 -12 -69 -82 -62 -21 -21 hvcurveto",
                        "-31 0 -11 15 -8 11 -6 9 -6 7 -12 0 rrcurveto",
                        "-13 -10 -12 -9 -25 52 -16 37 73 65 46 86 hvcurveto",
                        "0 67 -47 27 -37 6 rrcurveto",
                        "hintmask 1101111111010000",
                        "58 37 6 32 0 16 rrcurveto",
                        "26 -19 40 -63 -90 -27 -60 -20 -2 1 -18 17 18 4 19 13 vhcurveto",
                        "39 48 9 16 vhcurveto", "-116 124 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-131 453 rmoveto", "518 callsubr",
                        "hintmask 1011111110010000", "519 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni246D
     */
    public void testuni246D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni246D");
        assertNotNull(cs);
        assertEquals("uni246D", cs.getName());
        String[] text =
                {
                        "-15 37 105 18 82 30 181 -20 191 37 hstem",
                        "49 36 176 47 182 44 137 37 vstem",
                        "490 358 rmoveto",
                        "-101 -103 vlineto",
                        "48 76 47 84 29 79 -8 1 -13 6 -1 0 -3 0 -1 -1 -1 -3 -23 -53 -75 -145 -42 -47 rrcurveto",
                        "-1 0 -1 -1 hvcurveto", "0 -1 8 -14 5 -7 rlineto",
                        "2 -2 1 -1 3 0 rrcurveto", "128 -55 hlineto",
                        "-19 -2 -8 -21 vhcurveto", "-17 hlineto",
                        "-4 -1 -3 -1 hvcurveto", "-15 vlineto",
                        "0 39 1 24 27 42 -1 0 vhcurveto", "14 vlineto",
                        "2 -1 3 -4 vhcurveto", "-17 hlineto",
                        "-19 -2 9 19 hvcurveto", "54 49 vlineto",
                        "3 30 -52 0 0 104 rlineto", "14 -1 6 -9 vhcurveto",
                        "-9 0 -12 -5 -7 -5 -6 -4 0 -5 0 -4 rrcurveto",
                        "-112 251 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-131 453 rmoveto",
                        "14 0 -16 -22 hvcurveto", "-224 vlineto",
                        "-19 0 -11 -25 vhcurveto", "-39 hlineto",
                        "-4 0 0 -2 -1 -3 rrcurveto",
                        "0 -14 91 1 89 -1 0 14 rlineto", "4 -3 1 -3 vhcurveto",
                        "-33 hlineto", "-22 -3 7 23 hvcurveto",
                        "327 -13 vlineto", "-32 -23 -22 -14 -57 -26 rrcurveto",
                        "7 -21 rlineto", "15 7 28 12 13 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni246E
     */
    public void testuni246E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni246E");
        assertNotNull(cs);
        assertEquals("uni246E", cs.getName());
        String[] text =
                {
                        "-15 37 100 22 -17 19 193 31 68 -20 40 41 110 37 hstemhm",
                        "49 36 176 47 233 46 84 37 hintmask 1101111111100000",
                        "541 239 rmoveto",
                        "-56 -35 -39 -42 vhcurveto",
                        "-20 0 -11 13 -9 11 -8 11 -8 9 -13 0 rrcurveto",
                        "-12 -10 -8 -12 -26 53 -20 38 73 50 56 72 61 -38 59 -69 hvcurveto",
                        "-25 0 -23 -4 -14 -6 rrcurveto", "12 103 rlineto",
                        "23 -3 22 -2 29 0 18 0 21 0 26 3 rrcurveto",
                        "10 42 -4 2 rlineto",
                        "-35 -4 -35 -2 -32 0 -23 0 -22 1 -21 2 rrcurveto",
                        "-21 -177 rlineto", "25 10 23 4 30 0 rrcurveto",
                        "40 37 -32 -68 hvcurveto", "-163 370 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-131 453 rmoveto", "518 callsubr",
                        "hintmask 1011111111100000", "519 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni246F
     */
    public void testuni246F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni246F");
        assertNotNull(cs);
        assertEquals("uni246F", cs.getName());
        String[] text =
                {
                        "-15 37 96 19 -10 19 179 21 92 -20 66 17 108 37 hstemhm",
                        "49 36 176 47 45 45 143 44 86 37 hintmask 1101111111110000",
                        "569 484 rmoveto",
                        "-2 17 rlineto",
                        "-64 -3 -43 -17 -42 -43 -44 -45 -21 -58 0 -60 rrcurveto",
                        "-129 72 -28 48 89 23 74 45 30 -13 79 -96 vhcurveto",
                        "-24 0 -37 -14 -15 -18 8 52 21 44 30 29 rrcurveto",
                        "32 31 35 10 43 4 rrcurveto",
                        "-171 -189 rmoveto",
                        "27 29 25 1 13 0 rrcurveto",
                        "62 16 -62 -31 -68 -32 -27 -30 -32 -49 27 109 hvcurveto",
                        "-20 336 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-131 453 rmoveto", "518 callsubr",
                        "hintmask 1011111111110000", "519 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2470
     */
    public void testuni2470() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2470");
        assertNotNull(cs);
        assertEquals("uni2470", cs.getName());
        String[] text =
                {"-15 37 105 19 292 -20 42 39 110 37 hstem",
                        "49 36 164 47 375 37 vstem", "429 460 rmoveto",
                        "117 hlineto", "-48 -120 -50 -121 -41 -93 rrcurveto",
                        "2 -4 42 2 rlineto", "35 105 37 101 69 168 rrcurveto",
                        "-10 4 rlineto", "-10 -3 -14 0 -23 0 rrcurveto",
                        "-124 hlineto", "-15 0 -2 2 -2 4 rrcurveto",
                        "-15 hlineto", "-1 -35 -6 -26 -8 -26 rrcurveto",
                        "16 -2 rlineto", "13 33 9 11 29 0 rrcurveto",
                        "-51 149 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-143 453 rmoveto",
                        "14 0 -16 -22 hvcurveto", "-224 vlineto",
                        "-19 0 -11 -24 vhcurveto", "-39 hlineto",
                        "-4 -1 -2 -3 hvcurveto",
                        "0 -14 90 1 89 -1 0 14 rlineto", "4 -3 1 -3 vhcurveto",
                        "-33 hlineto", "-22 -3 7 23 hvcurveto",
                        "327 -12 vlineto", "-33 -23 -22 -14 -57 -26 rrcurveto",
                        "8 -21 rlineto", "14 7 29 12 12 0 rrcurveto", "",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2471
     */
    public void testuni2471() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2471");
        assertNotNull(cs);
        assertEquals("uni2471", cs.getName());
        String[] text =
                {
                        "-15 37 97 18 -10 19 292 -20 69 15 107 37 hstemhm",
                        "49 36 176 47 72 37 -24 41 123 37 -27 41 63 37 hintmask 1001111100001000",
                        "378 609 rmoveto", "517 callsubr", "-624 vmoveto",
                        "516 callsubr", "-131 453 rmoveto", "518 callsubr",
                        "hintmask 1011111100001000", "519 callsubr",
                        "hintmask 1101111110011000", "244 -301 rmoveto",
                        "-28 -46 25 54 hvcurveto",
                        "0 19 13 43 52 35 rrcurveto", "30 -17 rlineto",
                        "39 -24 16 -29 0 -29 rrcurveto",
                        "-62 -48 -15 -28 vhcurveto",
                        "hintmask 1101111101101000", "103 288 rmoveto",
                        "44 -35 33 -60 -63 -43 -37 -48 vhcurveto",
                        "0 -34 19 -25 37 -25 rrcurveto", "10 -6 rlineto",
                        "-15 -12 -13 -10 -16 -14 rrcurveto",
                        "hintmask 1101111110011000",
                        "-25 -22 -10 -28 0 -25 rrcurveto",
                        "-63 45 -34 65 80 38 60 48 vhcurveto",
                        "0 35 -17 28 -30 21 rrcurveto", "-38 26 rlineto",
                        "27 18 44 31 0 39 rrcurveto", "-99 62 rmoveto",
                        "hintmask 1001111101101000", "41 21 -32 -29 hvcurveto",
                        "0 -33 -39 -30 -17 -12 rrcurveto", "-18 12 rlineto",
                        "-39 25 -10 22 0 19 rrcurveto",
                        "29 24 29 37 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2472
     */
    public void testuni2472() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2472");
        assertNotNull(cs);
        assertEquals("uni2472", cs.getName());
        String[] text =
                {
                        "-15 37 100 16 -11 19 130 22 140 -20 68 19 104 37 hstemhm",
                        "49 36 176 47 71 44 143 45 60 37 hintmask 1101111111110000",
                        "395 138 rmoveto",
                        "1 -16 rlineto",
                        "64 3 44 17 42 43 44 44 21 59 0 60 rrcurveto",
                        "129 -72 28 -48 -90 -22 -74 -45 -30 13 -80 96 vhcurveto",
                        "24 0 36 15 15 18 -7 -52 -22 -44 -30 -29 rrcurveto",
                        "-31 -31 -36 -10 -42 -5 rrcurveto", "170 189 rmoveto",
                        "-26 -28 -25 -1 -14 0 rrcurveto",
                        "-62 -15 62 31 67 31 28 30 33 49 -27 -109 hvcurveto",
                        "0 -7 -1 -10 0 -6 rrcurveto", "-318 111 rmoveto",
                        "518 callsubr", "hintmask 1011111111110000",
                        "519 callsubr", "131 171 rmoveto", "515 callsubr",
                        "-624 vmoveto", "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2473
     */
    public void testuni2473() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2473");
        assertNotNull(cs);
        assertEquals("uni2473", cs.getName());
        String[] text =
                {
                        "-15 37 103 22 -20 38 317 21 -17 23 100 37 hstemhm",
                        "49 36 68 43 120 50 16 50 136 50 53 37 hintmask 1100111111110000",
                        "499 125 rmoveto",
                        "47 72 50 145 hvcurveto",
                        "0 61 -15 49 -27 36 -19 26 -28 17 -28 0 rrcurveto",
                        "-61 -58 -73 -122 hvcurveto",
                        "-100 47 -89 70 vhcurveto",
                        "2 361 rmoveto",
                        "520 callsubr",
                        "-123 123 rmoveto",
                        "163 130 -131 -163 -163 -131 -130 -162 hvcurveto",
                        "hintmask 1011011111110000",
                        "-90 0 -81 40 -54 65 rrcurveto",
                        "201 0 13 82 -17 2 rlineto",
                        "-9 -35 -11 -11 -22 0 rrcurveto",
                        "-111 hlineto",
                        "0 30 44 43 3 3 rrcurveto",
                        "62 60 rlineto",
                        "34 34 26 25 0 49 rrcurveto",
                        "75 -58 19 -50 -69 -36 -51 -37 -13 11 -11 14 10 14 6 18 vhcurveto",
                        "0 4 -1 5 -2 4 -1 5 -2 5 0 5 rrcurveto",
                        "16 12 23 45 23 40 -17 -59 vhcurveto",
                        "0 -39 -15 -29 -36 -38 rrcurveto", "-46 -47 rlineto",
                        "-60 -61 -6 -28 -1 -36 -42 51 -25 65 0 71 rrcurveto",
                        "163 131 131 162 vhcurveto", "-624 vmoveto",
                        "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2474
     */
    public void testuni2474() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2474");
        assertNotNull(cs);
        assertEquals("uni2474", cs.getName());
        String[] text =
                {"343 -1 30 549 -20 hstem", "57 60 280 72 244 60 vstem",
                        "773 270 rmoveto", "521 callsubr", "-716 1 rmoveto",
                        "0 -34 3 -176 160 -138 rrcurveto", "13 13 rlineto",
                        "-25 28 -91 106 0 201 0 202 91 106 25 27 rrcurveto",
                        "-13 14 rlineto", "-92 -78 -71 -127 0 -144 rrcurveto",
                        "318 206 rmoveto", "22 0 -24 -34 hvcurveto",
                        "-344 vlineto", "-29 0 -17 -38 vhcurveto",
                        "-60 hlineto", "-6 -1 -5 -3 hvcurveto",
                        "0 -22 138 2 137 -2 0 22 rlineto",
                        "6 -5 2 -3 vhcurveto", "-52 hlineto",
                        "-33 -5 10 36 hvcurveto", "503 -19 vlineto",
                        "-50 -36 -34 -21 -88 -41 rrcurveto", "12 -31 rlineto",
                        "22 10 44 18 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2475
     */
    public void testuni2475() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2475");
        assertNotNull(cs);
        assertEquals("uni2475", cs.getName());
        String[] text =
                {"343 0 58 489 31 hstem", "51 59 133 69 182 77 138 60 vstem",
                        "769 270 rmoveto", "522 callsubr", "-718 1 rmoveto",
                        "523 callsubr", "193 172 rmoveto",
                        "-20 16 -17 22 16 20 10 26 vhcurveto",
                        "0 8 -2 7 -2 7 -2 7 -2 8 0 8 rrcurveto",
                        "24 19 36 69 34 62 -26 -91 vhcurveto",
                        "0 -61 -23 -45 -56 -57 rrcurveto", "-70 -73 rlineto",
                        "-93 -95 -9 -43 0 -56 rrcurveto",
                        "309 0 20 126 -25 4 rlineto",
                        "-14 -55 -18 -17 -34 0 rrcurveto", "-169 hlineto",
                        "0 47 66 66 5 5 rrcurveto", "95 92 rlineto",
                        "54 52 39 38 0 76 rrcurveto",
                        "115 -90 29 -77 -105 -55 -78 -57 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2476
     */
    public void testuni2476() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2476");
        assertNotNull(cs);
        assertEquals("uni2476", cs.getName());
        String[] text =
                {
                        "343 -12 31 528 31 hstemhm",
                        "59 59 135 62 180 64 -42 74 125 60 hintmask 11110010",
                        "776 270 rmoveto",
                        "0 34 -4 176 -159 138 rrcurveto",
                        "-13 -13 rlineto",
                        "25 -28 91 -106 0 -201 0 -201 -91 -107 -25 -27 rrcurveto",
                        "13 -14 rlineto",
                        "91 79 72 127 0 143 rrcurveto",
                        "-717 1 rmoveto",
                        "0 -34 3 -176 159 -138 rrcurveto",
                        "13 13 rlineto",
                        "-25 28 -91 106 0 201 0 202 92 106 24 27 rrcurveto",
                        "-13 14 rlineto",
                        "-91 -78 -71 -127 0 -144 rrcurveto",
                        "355 276 rmoveto",
                        "hintmask 11111010",
                        "40 41 -28 -57 hvcurveto",
                        "0 -46 -65 -75 -77 -13 rrcurveto",
                        "4 -30 rlineto",
                        "12 2 10 2 10 0 rrcurveto",
                        "hintmask 11110110",
                        "53 75 -17 -107 -126 -94 -33 -33 hvcurveto",
                        "-48 0 -17 24 -12 17 -9 13 -9 10 -19 0 rrcurveto",
                        "-20 -14 -17 -15 -38 79 -25 57 113 100 71 132 hvcurveto",
                        "0 104 -73 41 -57 9 rrcurveto",
                        "hintmask 11111010",
                        "90 57 8 50 0 25 rrcurveto",
                        "40 -29 61 -97 -139 -41 -92 -31 -3 2 -29 26 27 7 31 18 61 74 14 25 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2477
     */
    public void testuni2477() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2477");
        assertNotNull(cs);
        assertEquals("uni2477", cs.getName());
        String[] text =
                {
                        "343 1 27 125 47 378 -20 hstem",
                        "67 59 329 67 205 59 vstem",
                        "786 270 rmoveto",
                        "524 callsubr",
                        "-719 1 rmoveto",
                        "523 callsubr",
                        "388 84 rmoveto",
                        "-155 -159 vlineto",
                        "74 116 73 130 45 121 -11 2 -22 9 -1 0 -4 0 -2 -1 -1 -4 -36 -82 -116 -223 -65 -72 -1 -1 0 -1 0 -1 rrcurveto",
                        "0 -2 13 -21 8 -11 rlineto", "3 -4 1 -2 4 0 rrcurveto",
                        "197 -83 hlineto", "-29 -3 -13 -31 vhcurveto",
                        "-27 hlineto", "-6 -1 -5 -2 hvcurveto", "-22 vlineto",
                        "0 59 2 38 41 65 -2 0 vhcurveto", "22 vlineto",
                        "2 -2 5 -5 vhcurveto", "-27 hlineto",
                        "-29 -5 14 28 hvcurveto", "83 76 vlineto",
                        "6 47 -82 0 0 161 rlineto", "20 0 11 -14 vhcurveto",
                        "-14 0 -18 -9 -12 -8 -8 -5 -1 -8 0 -7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2478
     */
    public void testuni2478() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2478");
        assertNotNull(cs);
        assertEquals("uni2478", cs.getName());
        String[] text =
                {
                        "343 -12 34 301 47 135 63 hstem",
                        "59 60 393 72 140 60 vstem",
                        "784 270 rmoveto",
                        "522 callsubr",
                        "-725 1 rmoveto",
                        "525 callsubr",
                        "453 -102 rmoveto",
                        "-87 -53 -60 -64 vhcurveto",
                        "-32 0 -16 20 -14 18 -13 16 -12 15 -20 0 rrcurveto",
                        "-18 -17 -13 -19 -39 83 -32 58 112 78 86 112 92 -59 92 -106 hvcurveto",
                        "-39 0 -36 -7 -21 -8 rrcurveto", "19 158 rlineto",
                        "35 -4 34 -4 45 0 28 0 32 1 39 4 rrcurveto",
                        "15 65 -6 3 rlineto",
                        "-54 -6 -52 -4 -50 0 -35 0 -34 2 -33 3 rrcurveto",
                        "-32 -273 rlineto", "39 16 35 7 47 0 rrcurveto",
                        "62 55 -51 -103 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2479
     */
    public void testuni2479() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2479");
        assertNotNull(cs);
        assertEquals("uni2479", cs.getName());
        String[] text =
                {
                        "343 -12 29 290 32 213 26 hstem",
                        "58 60 123 69 220 68 119 59 vstem",
                        "776 270 rmoveto",
                        "0 34 -3 176 -159 138 rrcurveto",
                        "-14 -13 rlineto",
                        "26 -28 91 -106 0 -201 0 -201 -92 -107 -25 -27 rrcurveto",
                        "14 -14 rlineto",
                        "91 79 71 127 0 143 rrcurveto",
                        "-718 1 rmoveto",
                        "525 callsubr",
                        "516 281 rmoveto",
                        "-3 26 rlineto",
                        "-98 -5 -68 -27 -64 -65 -69 -69 -31 -90 0 -92 rrcurveto",
                        "-199 111 -43 74 137 35 115 68 46 -20 122 -148 vhcurveto",
                        "-37 0 -56 -21 -23 -28 12 80 32 67 46 45 49 47 55 17 66 6 rrcurveto",
                        "-263 -290 rmoveto",
                        "41 43 38 2 21 0 rrcurveto",
                        "95 24 -96 -47 -104 -49 -43 -45 -51 -75 42 168 hvcurveto",
                        "0 10 1 15 0 10 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni247A
     */
    public void testuni247A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni247A");
        assertNotNull(cs);
        assertEquals("uni247A", cs.getName());
        String[] text =
                {"343 508 59 hstem", "45 60 639 59 vstem", "803 270 rmoveto",
                        "524 callsubr", "-758 1 rmoveto", "526 callsubr",
                        "305 237 rmoveto", "179 hlineto",
                        "-73 -184 -77 -186 -63 -144 rrcurveto",
                        "3 -6 64 3 rlineto", "55 161 56 156 106 258 rrcurveto",
                        "-15 7 rlineto", "-16 -5 -21 -1 -36 0 rrcurveto",
                        "-191 hlineto", "-23 0 -3 5 -3 6 rrcurveto",
                        "-21 hlineto", "-3 -56 -10 -38 -12 -41 rrcurveto",
                        "26 -4 rlineto", "19 51 15 18 44 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni247B
     */
    public void testuni247B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni247B");
        assertNotNull(cs);
        assertEquals("uni247B", cs.getName());
        String[] text =
                {
                        "343 -12 28 538 24 hstemhm",
                        "66 59 125 58 -38 63 188 59 -42 63 123 60 hintmask 11100001",
                        "784 270 rmoveto", "522 callsubr", "-718 1 rmoveto",
                        "0 -34 3 -176 160 -138 rrcurveto", "13 13 rlineto",
                        "-26 28 -91 106 0 201 0 202 92 106 25 27 rrcurveto",
                        "-13 14 rlineto", "-92 -78 -71 -127 0 -144 rrcurveto",
                        "354 -255 rmoveto", "hintmask 11110011",
                        "-92 callsubr", "hintmask 11101101", "160 443 rmoveto",
                        "68 -55 51 -93 -97 -65 -58 -73 vhcurveto",
                        "0 -53 28 -38 57 -38 rrcurveto", "17 -11 rlineto",
                        "-24 -17 -20 -17 -24 -21 rrcurveto",
                        "hintmask 11110011", "-39 -34 -15 -43 0 -37 rrcurveto",
                        "-97 68 -53 100 124 59 93 72 vhcurveto",
                        "0 55 -26 43 -48 32 rrcurveto", "-58 40 rlineto",
                        "42 28 69 47 0 61 rrcurveto", "-153 95 rmoveto",
                        "hintmask 11101101", "-91 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni247C
     */
    public void testuni247C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni247C");
        assertNotNull(cs);
        assertEquals("uni247C", cs.getName());
        String[] text =
                {
                        "343 -12 26 213 32 290 29 hstem",
                        "60 60 127 67 220 69 123 60 vstem",
                        "786 270 rmoveto",
                        "522 callsubr",
                        "-726 1 rmoveto",
                        "525 callsubr",
                        "211 -257 rmoveto",
                        "2 -26 rlineto",
                        "99 5 67 27 64 65 69 69 31 90 0 92 rrcurveto",
                        "199 -111 43 -74 -137 -34 -115 -68 -46 19 -122 148 vhcurveto",
                        "38 0 55 21 23 28 -11 -80 -33 -67 -46 -45 -48 -47 -56 -17 -65 -6 rrcurveto",
                        "262 290 rmoveto", "527 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni247D
     */
    public void testuni247D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni247D");
        assertNotNull(cs);
        assertEquals("uni247D", cs.getName());
        String[] text =
                {
                        "734 -12 33 -22 30 514 35 hstemhm",
                        "65 60 267 72 134 76 210 76 144 59 hintmask 00111111",
                        "1163 270 rmoveto",
                        "0 34 -3 176 -160 138 rrcurveto",
                        "-13 -13 rlineto",
                        "26 -28 91 -106 0 -201 0 -201 -92 -107 -25 -27 rrcurveto",
                        "13 -14 rlineto",
                        "91 79 72 127 0 143 rrcurveto",
                        "-1098 1 rmoveto",
                        "525 callsubr",
                        "305 206 rmoveto",
                        "528 callsubr",
                        "hintmask 01111111",
                        "-29 0 -17 -38 vhcurveto",
                        "-60 hlineto",
                        "hintmask 10111111",
                        "-6 -1 -5 -3 hvcurveto",
                        "hintmask 01111111",
                        "0 -22 138 2 137 -2 rlineto",
                        "hintmask 10111111",
                        "22 vlineto",
                        "hintmask 01111111",
                        "6 -4 2 -4 vhcurveto",
                        "-52 hlineto",
                        "-33 -5 10 36 hvcurveto",
                        "503 -19 vlineto",
                        "-50 -36 -34 -21 -88 -41 rrcurveto",
                        "12 -31 rlineto",
                        "22 10 44 18 19 0 rrcurveto",
                        "hintmask 10111111",
                        "406 -489 rmoveto",
                        "74 110 77 222 hvcurveto",
                        "0 94 -22 75 -42 56 -30 39 -43 27 -43 0 rrcurveto",
                        "-93 -89 -113 -187 hvcurveto",
                        "-153 71 -137 107 vhcurveto",
                        "4 555 rmoveto",
                        "16 0 16 -5 11 -10 29 -25 32 -71 0 -127 0 -87 -7 -60 -14 -48 -20 -78 -49",
                        "-11 -17 0 rrcurveto",
                        "-87 -16 165 82 233 64 42 42 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni247E
     */
    public void testuni247E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni247E");
        assertNotNull(cs);
        assertEquals("uni247E", cs.getName());
        String[] text =
                {"734 -1 30 549 -20 hstem", "70 60 280 72 281 72 270 60 vstem",
                        "1165 270 rmoveto", "522 callsubr", "-1095 1 rmoveto",
                        "526 callsubr", "318 206 rmoveto", "529 callsubr",
                        "353 hmoveto", "22 0 -24 -34 hvcurveto",
                        "-344 vlineto", "-29 0 -17 -38 vhcurveto",
                        "-59 hlineto", "-7 -1 -5 -3 hvcurveto",
                        "0 -22 138 2 138 -2 0 22 rlineto",
                        "6 -5 2 -4 vhcurveto", "-52 hlineto",
                        "-33 -5 10 36 hvcurveto", "503 -19 vlineto",
                        "-50 -36 -34 -21 -87 -41 rrcurveto", "11 -31 rlineto",
                        "22 10 44 18 19 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni247F
     */
    public void testuni247F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni247F");
        assertNotNull(cs);
        assertEquals("uni247F", cs.getName());
        String[] text =
                {"734 -1 30 -29 58 489 31 hstemhm",
                        "70 60 280 72 149 69 182 77 146 60 hintmask 00111111",
                        "1165 270 rmoveto", "522 callsubr", "-1095 1 rmoveto",
                        "526 callsubr", "318 206 rmoveto", "528 callsubr",
                        "hintmask 10111111", "530 callsubr", "244 -34 rmoveto",
                        "-20 16 -17 22 16 21 10 26 vhcurveto",
                        "0 8 -2 7 -2 7 -3 7 -2 8 0 8 rrcurveto",
                        "24 19 36 69 34 62 -26 -91 vhcurveto",
                        "0 -61 -23 -45 -56 -57 rrcurveto", "-70 -73 rlineto",
                        "hintmask 01111111", "-93 -95 -9 -43 0 -56 rrcurveto",
                        "309 0 20 126 -25 4 rlineto",
                        "-14 -55 -18 -17 -34 0 rrcurveto", "-169 hlineto",
                        "0 47 67 66 4 5 rrcurveto", "95 92 rlineto",
                        "54 52 39 38 0 76 rrcurveto",
                        "115 -89 29 -78 -104 -56 -78 -57 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2480
     */
    public void testuni2480() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2480");
        assertNotNull(cs);
        assertEquals("uni2480", cs.getName());
        String[] text =
                {
                        "734 -12 31 -20 30 518 31 hstemhm",
                        "70 60 280 72 163 62 179 65 -42 73 123 60 hintmask 0011110010000000",
                        "1165 270 rmoveto",
                        "522 callsubr",
                        "-1095 1 rmoveto",
                        "526 callsubr",
                        "318 206 rmoveto",
                        "528 callsubr",
                        "hintmask 0111110010000000",
                        "530 callsubr",
                        "417 70 rmoveto",
                        "hintmask 1011111010000000",
                        "-95 callsubr",
                        "hintmask 1011110110000000",
                        "53 76 -17 -107 -126 -95 -33 -32 hvcurveto",
                        "-48 0 -18 24 -11 17 -9 13 -9 10 -19 0 rrcurveto",
                        "-20 -15 -17 -15 -38 80 -25 57 113 99 71 132 hvcurveto",
                        "0 104 -73 41 -56 9 rrcurveto",
                        "hintmask 1011111010000000",
                        "90 57 8 50 0 25 rrcurveto",
                        "40 -30 61 -96 -139 -41 -92 -31 -3 2 -29 26 27 7 31 18 61 73 14 25 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2481
     */
    public void testuni2481() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2481");
        assertNotNull(cs);
        assertEquals("uni2481", cs.getName());
        String[] text =
                {"734 -1 30 124 47 378 -20 hstem",
                        "70 60 280 72 337 68 218 60 vstem", "1165 270 rmoveto",
                        "522 callsubr", "-1095 1 rmoveto", "526 callsubr",
                        "318 206 rmoveto", "529 callsubr", "431 -122 rmoveto",
                        "-94 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2482
     */
    public void testuni2482() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2482");
        assertNotNull(cs);
        assertEquals("uni2482", cs.getName());
        String[] text =
                {
                        "734 -12 34 -23 30 294 47 135 63 hstemhm",
                        "71 59 281 71 417 73 133 60 hintmask 00111111",
                        "1165 270 rmoveto",
                        "521 callsubr",
                        "-1094 1 rmoveto",
                        "523 callsubr",
                        "317 206 rmoveto",
                        "23 0 -24 -34 hvcurveto",
                        "-344 vlineto",
                        "hintmask 01111111",
                        "-29 0 -17 -38 vhcurveto",
                        "-60 hlineto",
                        "-6 0 -1 -5 -1 -3 rrcurveto",
                        "0 -22 139 2 137 -2 0 22 rlineto",
                        "6 -5 2 -3 vhcurveto",
                        "-52 hlineto",
                        "-34 -5 10 36 hvcurveto",
                        "503 -19 vlineto",
                        "-49 -36 -35 -21 -87 -41 rrcurveto",
                        "12 -31 rlineto",
                        "21 10 45 18 18 0 rrcurveto",
                        "511 -308 rmoveto",
                        "hintmask 10111111",
                        "-87 -52 -60 -65 vhcurveto",
                        "-32 0 -16 20 -14 18 -13 16 -12 15 -20 0 rrcurveto",
                        "-18 -16 -13 -19 -39 83 -32 57 113 78 86 112 92 -59 92 -107 hvcurveto",
                        "-38 0 -37 -7 -21 -8 rrcurveto", "19 158 rlineto",
                        "35 -4 34 -4 45 0 28 0 32 1 39 4 rrcurveto",
                        "16 65 -6 3 rlinet", "o",
                        "-55 -6 -52 -4 -50 0 -35 0 -34 2 -33 3 rrcurveto",
                        "-32 -273 rlineto", "39 16 35 7 47 0 rrcurveto",
                        "62 55 -51 -103 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2483
     */
    public void testuni2483() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2483");
        assertNotNull(cs);
        assertEquals("uni2483", cs.getName());
        String[] text =
                {
                        "734 -12 29 -18 30 278 32 213 26 hstemhm",
                        "70 60 280 72 121 68 221 67 146 60 hintmask 0011111110000000",
                        "1165 270 rmoveto",
                        "522 callsubr",
                        "-1095 1 rmoveto",
                        "526 callsubr",
                        "318 206 rmoveto",
                        "528 callsubr",
                        "hintmask 0111111110000000",
                        "530 callsubr",
                        "547 75 rmoveto",
                        "-3 26 rlineto",
                        "-98 -5 -67 -27 -65 -65 -68 -69 -31 -90 0 -92 rrcurveto",
                        "hintmask 1011111110000000",
                        "-199 110 -43 74 138 34 115 68 46 -20 122 -147 vhcurveto",
                        "-38 0 -56 -21 -23 -28 12 80 33 67 46 45 48 47 56 17 65 6 rrcurveto",
                        "-263 -290 rmoveto", "531 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2484
     */
    public void testuni2484() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2484");
        assertNotNull(cs);
        assertEquals("uni2484", cs.getName());
        String[] text =
                {
                        "734 -1 30 479 59 hstem",
                        "61 59 280 72 623 60 vstem",
                        "1155 270 rmoveto",
                        "0 34 -4 176 -159 138 rrcurveto",
                        "-13 -13 rlineto",
                        "25 -28 91 -106 0 -201 0 -201 -92 -107 -24 -27 rrcurveto",
                        "13 -14 rlineto", "91 79 72 127 0 143 rrcurveto",
                        "-1094 1 rmoveto", "0 -34 2 -176 160 -138 rrcurveto",
                        "13 13 rlineto",
                        "-25 28 -91 106 0 201 0 202 92 106 24 27 rrcurveto",
                        "-13 14 rlineto", "-91 -78 -71 -127 0 -144 rrcurveto",
                        "317 206 rmoveto", "22 0 -24 -34 hvcurveto",
                        "-344 vlineto", "-29 0 -17 -38 vhcurveto",
                        "-59 hlineto", "-7 -1 -5 -3 hvcurveto",
                        "0 -22 139 2 137 -2 0 22 rlineto",
                        "6 -5 2 -4 vhcurveto", "-52 hlineto",
                        "-33 -5 10 36 hvcurveto", "503 -19 vlineto",
                        "-50 -36 -34 -21 -87 -41 rrcurveto", "11 -31 rlineto",
                        "22 10 44 18 19 0 rrcurveto", "321 31 rmoveto",
                        "179 hlineto", "-73 -184 -76 -186 -64 -144 rrcurveto",
                        "3 -6 64 3 rlineto", "",
                        "55 161 56 156 106 258 rrcurveto", "-15 7 rlineto",
                        "-16 -5 -21 -1 -36 0 rrcurveto", "-191 hlineto",
                        "-23 0 -2 5 -4 6 rrcurveto", "-21 hlineto",
                        "-3 -56 -10 -38 -12 -41 rrcurveto", "26 -4 rlineto",
                        "19 51 15 18 44 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2485
     */
    public void testuni2485() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2485");
        assertNotNull(cs);
        assertEquals("uni2485", cs.getName());
        String[] text =
                {
                        "734 -12 28 -17 30 525 24 hstemhm",
                        "70 60 280 72 132 58 -38 63 189 58 -42 63 140 60 hintmask 0011100001000000",
                        "1165 270 rmoveto", "522 callsubr", "-1095 1 rmoveto",
                        "526 callsubr", "318 206 rmoveto", "528 callsubr",
                        "hintmask 0111100001000000", "530 callsubr",
                        "hintmask 1011110011000000", "397 -461 rmoveto",
                        "-44 -69 37 85 hvcurveto",
                        "0 28 18 66 81 55 rrcurveto", "45 -27 rlineto",
                        "60 -36 26 -45 0 -45 rrcurveto",
                        "-95 -74 -23 -43 vhcurveto",
                        "hintmask 1011101101000000", "159 443 rmoveto",
                        "68 -55 51 -93 -96 -66 -58 -73 vhcurveto",
                        "0 -53 28 -38 58 -38 rrcurveto", "16 -11 rlineto",
                        "-24 -17 -20 -17 -24 -21 rrcurveto",
                        "hintmask 1011110011000000",
                        "-39 -34 -15 -43 0 -37 rrcurveto",
                        "-97 69 -53 100 123 59 93 72 vhcurveto",
                        "0 55 -26 43 -47 32 rrcurveto", "-59 40 rlineto",
                        "42 28 69 47 0 61 rrcurveto", "-153 95 rmoveto",
                        "hintmask 0011101101000000", "532 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2486
     */
    public void testuni2486() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2486");
        assertNotNull(cs);
        assertEquals("uni2486", cs.getName());
        String[] text =
                {
                        "734 -12 26 -15 30 198 32 290 29 hstemhm",
                        "65 60 280 72 138 68 220 69 128 60 hintmask 0011111110000000",
                        "1160 270 rmoveto",
                        "522 callsubr",
                        "-1095 1 rmoveto",
                        "526 callsubr",
                        "318 206 rmoveto",
                        "528 callsubr",
                        "hintmask 0111111110000000",
                        "-29 0 -17 -38 vhcurveto",
                        "-59 hlineto",
                        "-7 -1 -5 -3 hvcurveto",
                        "0 -22 138 2 138 -2 0 22 rlineto",
                        "6 -5 2 -4 vhcurveto",
                        "-52 hlineto",
                        "-33 -5 10",
                        "36 hvcurveto",
                        "503 -19 vlineto",
                        "-50 -36 -34 -21 -87 -41 rrcurveto",
                        "11 -31 rlineto",
                        "22 10 44 18 19 0 rrcurveto",
                        "hintmask 1011111110000000",
                        "256 -463 rmoveto",
                        "3 -26 rlineto",
                        "98 5 68 27 64 65 68 69 32 90 0 92 rrcurveto",
                        "199 -111 43 -74 -138 -34 -115 -68 -46 20 -122 148 vhcurveto",
                        "37 0 56 21 23 28 -12 -80 -33 -67 -45 -45 rrcurveto",
                        "-49 -47 -55 -17 -66 -6 rrcurveto", "263 290 rmoveto",
                        "-90 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2487
     */
    public void testuni2487() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2487");
        assertNotNull(cs);
        assertEquals("uni2487", cs.getName());
        String[] text =
                {
                        "734 -12 33 -21 58 485 35 -31 31 hstemhm",
                        "68 60 127 69 182 77 56 77 209 76 102 60 hintmask 0000111111000000",
                        "1163 270 rmoveto", "522 callsubr", "-1095 1 rmoveto",
                        "526 callsubr", "188 172 rmoveto",
                        "-20 16 -17 22 16 21 10 26 vhcurveto",
                        "0 8 -2 7 -2 7 -3 7 -2 8 0 8 rrcurveto",
                        "hintmask 0101111111000000",
                        "24 19 36 69 34 62 -26 -91 vhcurveto",
                        "0 -61 -23 -45 -56 -57 rrcurveto", "-70 -73 rlineto",
                        "-93 -95 -9 -43 0 -56 rrcurveto",
                        "309 0 20 126 -25 4 rlineto",
                        "-14 -55 -18 -17 -34 0 rrcurveto", "-169 hlineto",
                        "0 47 67 66 5 5 rrcurveto", "94 92 rlineto",
                        "54 52 39 38 0 76 rrcurveto",
                        "115 -89 29 -77 -105 -56 -78 -57 vhcurveto",
                        "hintmask 1010111111000000", "562 -455 rmoveto",
                        "73 110 77 222 hvcurveto",
                        "0 94 -22 75 -41 56 -30 39 -43 27 -43 0 rrcurveto",
                        "-94 -89 -113 -187 hvcurveto",
                        "-153 72 -137 107 vhcurveto", "4 555 rmoveto",
                        "-96 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24B6
     */
    public void testuni24B6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24B6");
        assertNotNull(cs);
        assertEquals("uni24B6", cs.getName());
        String[] text =
                {"-15 37 108 21 118 23 151 -20 186 37 hstem",
                        "49 36 586 37 vstem", "289 260 rmoveto",
                        "3 5 4 4 11 0 rrcurveto", "139 0 37 -93 rlineto",
                        "2 -3 0 -3 0 -3 rrcurveto", "-10 -11 -6 -21 vhcurveto",
                        "-14 hlineto", "-3 -2 -2 -3 hvcurveto",
                        "0 -16 1 -2 rlineto", "0 67 2 23 24 41 -2 0 vhcurveto",
                        "2 2 0 16 rlineto", "3 -2 2 -4 vhcurveto",
                        "-26 0 -11 7 -12 32 rrcurveto", "-121 298 rlineto",
                        "-8 18 -13 2 -10 0 -6 0 -13 -3 -8 -17 rrcurveto",
                        "-140 -303 rlineto", "-13 -29 -17 -5 -21 0 rrcurveto",
                        "-2 -2 -2 -3 hvcurveto", "0 -16 1 -2 rlineto",
                        "0 36 2 16 15 63 -2 0 vhcurveto", "1 2 0 16 rlineto",
                        "3 -3 2 -2 vhcurveto", "-10 hlineto",
                        "-21 -11 4 11 hvcurveto", "0 2 1 4 1 4 rrcurveto",
                        "187 116 rmoveto", "-111 hlineto",
                        "-13 -4 6 5 hvcurveto", "0 1 65 139 1 0 rlineto",
                        "3 166 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24B7
     */
    public void testuni24B7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24B7");
        assertNotNull(cs);
        assertEquals("uni24B7", cs.getName());
        String[] text =
                {
                        "-15 37 103 22 171 20 134 23 -20 20 114 37 hstemhm",
                        "49 36 194 59 133 58 -28 65 105 37 hintmask 1110011100100000",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-155 158 rmoveto",
                        "0 -18 80 1 rlineto",
                        "19 0 39 -1 45 0 rrcurveto",
                        "hintmask 1110111101100000",
                        "124 36 51 49 hvcurveto",
                        "hintmask 1110111110100000",
                        "0 52 -29 39 -66 15 32 14 26 30 0 32 0 38 -21 50 -116 0 -22 0 -46 -1 -21 0 rrcurveto",
                        "hintmask 1111011101100000",
                        "-19 0 -34 0 -27 1 rrcurveto", "-19 vlineto",
                        "0 -2 1 -1 4 -1 rrcurveto", "19 hlineto",
                        "25 7 -7 -19 hvcurveto", "-272 vlineto",
                        "-20 -8 -7 -24 vhcurveto", "-19 hlineto",
                        "-4 0 0 -2 -1 -2 rrcurveto", "115 175 rmoveto",
                        "54 hlineto",
                        "74 35 -35 -52 -35 -17 -52 -95 -51 0 9 19 hvcurveto",
                        "282 vmoveto", "hintmask 1110111110100000",
                        "19 2 2 51 35 45 -10 -59 -49 -27 -19 -52 vhcurveto",
                        "-54 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24B8
     */
    public void testuni24B8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24B8");
        assertNotNull(cs);
        assertEquals("uni24B8", cs.getName());
        String[] text =
                {"-15 37 90 28 338 23 108 37 hstem",
                        "49 36 105 63 418 37 vstem", "", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "5 127 rmoveto", "62 0 39 24 37 50 rrcurveto",
                        "-16 13 rlineto", "-37 -43 -28 -16 -53 0 rrcurveto",
                        "-96 -38 90 79 135 71 34 60 hvcurveto",
                        "65 0 40 -40 10 -56 rrcurveto", "20 2 rlineto",
                        "-4 33 -5 34 -1 36 -29 -3 -37 17 -65 0 rrcurveto",
                        "-105 -83 -83 -117 -92 69 -97 124 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24B9
     */
    public void testuni24B9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24B9");
        assertNotNull(cs);
        assertEquals("uni24B9", cs.getName());
        String[] text =
                {
                        "-15 37 99 23 325 23 117 37 hstem",
                        "49 36 167 60 220 63 76 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-66 194 rmoveto",
                        "268 vlineto",
                        "20 21 2 32 134 33 -96 -89 -115 -64 -25 -88 -61 -7 12 23 vhcurveto",
                        "-116 -40 rmoveto", "0 -16 1 -2 79 2 rlineto",
                        "22 0 37 -2 64 0 rrcurveto",
                        "88 108 37 140 106 -87 88 -120 hvcurveto",
                        "-21 0 -49 -1 -42 -1 rrcurveto",
                        "-79 2 -1 -2 0 -16 rlineto", "-3 3 -2 3 vhcurveto",
                        "18 hlineto", "26 6 -6 -21 hvcurveto", "-262 vlineto",
                        "-24 -9 -11 -23 vhcurveto", "-19 hlineto",
                        "-3 -2 -3 -3 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24BA
     */
    public void testuni24BA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24BA");
        assertNotNull(cs);
        assertEquals("uni24BA", cs.getName());
        String[] text =
                {"-15 37 100 23 161 26 137 23 117 37 hstem",
                        "49 36 195 59 106 15 211 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "145 507 rmoveto",
                        "-160 0 -58 -2 -80 2 -1 -2 0 -17 rlineto",
                        "-2 1 -2 4 vhcurveto", "19 hlineto",
                        "23 9 -8 -18 hvcurveto", "-273 vlineto",
                        "-16 -8 -9 -24 vhcurveto", "-19 hlineto",
                        "-4 -1 -2 -2 hvcurveto",
                        "0 -18 1 -2 80 2 57 -1 162 0 rlineto",
                        "1 25 6 34 10 38 rrcurveto", "-21 3 rlineto",
                        "-12 -40 -19 -37 -48 0 rrcurveto", "-79 hlineto",
                        "-14 -9 3 15 hvcurveto", "143 70 vlineto",
                        "21 0 7 -9 3 -16 rrcurveto", "4 -17 rlineto",
                        "-2 2 -3 4 vhcurveto", "13 0 2 2 rlineto",
                        "-2 19 -3 16 0 20 0 19 3 22 2 19 rrcurveto",
                        "1 0 1 -2 vhcurveto", "-13 hlineto",
                        "-3 -2 -2 -2 hvcurveto", "-5 -17 rlineto",
                        "-3 -16 -6 -9 -22 0 rrcurveto", "-70 118 hlineto",
                        "14 8 5 15 vhcurveto", "78 hlineto",
                        "51 0 15 -47 9 -29 rrcurveto", "20 3 rlineto",
                        "-6 30 -5 31 -1 35 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24BB
     */
    public void testuni24BB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24BB");
        assertNotNull(cs);
        assertEquals("uni24BB", cs.getName());
        String[] text =
                {"-15 37 101 22 161 26 137 23 117 37 hstem",
                        "49 36 194 60 106 16 210 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-39 465 rmoveto", "13 7 6 15 vhcurveto", "88 hlineto",
                        "39 0 20 -46 6 -29 rrcurveto", "20 2 rlineto",
                        "-5 30 -5 32 -1 33 rrcurveto",
                        "-164 0 -55 -1 -78 2 -2 -1 0 -18 rlineto",
                        "-1 0 -3 5 vhcurveto", "18 hlineto",
                        "26 6 -9 -16 hvcurveto", "-275 vlineto",
                        "-16 -8 -8 -26 vhcurveto", "-16 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -17 1 -2 rlineto",
                        "0 58 2 22 25 64 -2 0 vhcurveto", "1 2 0 17 rlineto",
                        "3 -3 2 -3 vhcurveto", "-16 hlineto",
                        "-25 -9 6 18 hvcurveto", "137 71 vlineto",
                        "20 0 8 -9 3 -16 rrcurveto", "3 -17 rlineto",
                        "1 -2 1 -3 4 0 rrcurveto", "14 0 1 2 rlineto",
                        "-2 19 -2 16 0 20 0 19 3 22 1 19 rrcurveto",
                        "1 0 1 -2 vhcurveto", "-13 hlineto",
                        "-3 -2 -2 -2 hvcurveto", "-4 -17 rlineto",
                        "-4 -16 -5 -9 -22 0 rrcurveto", "-71 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24BC
     */
    public void testuni24BC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24BC");
        assertNotNull(cs);
        assertEquals("uni24BC", cs.getName());
        String[] text =
                {"-15 37 90 22 143 19 183 22 108 37 hstem",
                        "49 36 104 62 222 60 138 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "95 267 rmoveto", "-85 vlineto",
                        "-20 -19 -29 -14 -28 0 rrcurveto",
                        "-100 -45 109 66 100 46 70 84 hvcurveto",
                        "83 0 35 -43 10 -54 rrcurveto", "21 2 rlineto",
                        "-5 32 -4 33 -1 37 -28 -2 -56 17 -44 0 rrcurveto",
                        "-118 -85 -72 -131 -108 78 -78 114 hvcurveto",
                        "55 0 58 25 49 35 -5 5 -5 8 0 5 rrcurveto",
                        "62 vlineto", "16 6 9 21 vhcurveto", "1 hlineto",
                        "3 2 1 3 hvcurveto", "0 15 -2 1 rlineto",
                        "0 -35 -1 -23 -24 -64 1 0 vhcurveto",
                        "-1 -1 0 -15 rlineto", "-3 2 -1 3 vhcurveto",
                        "17 hlineto", "24 10 -7 -18 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni24BD
     */
    public void testuni24BD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24BD");
        assertNotNull(cs);
        assertEquals("uni24BD", cs.getName());
        String[] text =
                {"-15 37 106 21 162 25 138 22 113 37 hstem",
                        "49 36 139 60 194 60 133 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "100 189 rmoveto", "-16 -8 -9 -26 vhcurveto",
                        "-17 hlineto", "-3 -1 -2 -2 hvcurveto",
                        "0 -17 1 -2 rlineto", "0 58 2 22 24 64 -2 0 vhcurveto",
                        "1 2 0 17 rlineto", "2 -2 2 -3 vhcurveto",
                        "-16 hlineto", "-25 -9 7 18 hvcurveto", "275 vlineto",
                        "16 8 9 26 vhcurveto", "16 hlineto",
                        "3 2 2 3 hvcurveto", "0 16 -1 2 rlineto",
                        "0 -68 -2 -22 -24 -55 2 0 vhcurveto",
                        "-1 -2 0 -16 rlineto", "-3 3 -2 2 vhcurveto",
                        "17 hlineto", "24 10 -7 -18 hvcurveto",
                        "-113 -194 113 vlineto", "16 8 9 25 vhcurveto",
                        "17 hlineto", "3 2 2 3 hvcurveto", "0 16 -1 2 rlineto",
                        "0 -67 -1 -23 -24 -55 1 0 vhcurveto",
                        "-1 -2 0 -16 rlineto", "-3 3 -2 2 vhcurveto",
                        "17 hlineto", "24 10 -7 -18 hvcurveto", "-275 vlineto",
                        "-16 -9 -9 -25 vhcurveto", "-17 hlineto",
                        "-3 -2 -2 -2 hvcurveto", "0 -17 1 -2 rlineto",
                        "0 59 2 22 24 64 -2 0 vhcurveto", "1 2 0 17 rlineto",
                        "2 -2 2 -3 vhcurveto", "-17 hlineto",
                        "-24 -9 7 18 hvcurveto", "137 194 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni24BE
     */
    public void testuni24BE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24BE");
        assertNotNull(cs);
        assertEquals("uni24BE", cs.getName());
        String[] text =
                {"-15 37 101 22 324 21 119 37 hstem",
                        "49 36 255 60 271 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "22 459 rmoveto", "16 9 9 25 vhcurveto", "17 hlineto",
                        "3 2 2 3 hvcurveto", "0 16 -1 2 rlineto",
                        "0 -59 -2 -22 -24 -64 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto", "-3 3 -1 2 vhcurveto",
                        "17 hlineto", "24 9 -8 -17 hvcurveto", "-270 vlineto",
                        "-15 -8 -14 -25 vhcurveto", "-17 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -17 1 -2 rlineto",
                        "0 68 2 22 25 54 -2 0 vhcurveto", "1 2 0 17 rlineto",
                        "3 -2 2 -3 vhcurveto", "-17 hlineto",
                        "-24 -10 12 17 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24BF
     */
    public void testuni24BF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24BF");
        assertNotNull(cs);
        assertEquals("uni24BF", cs.getName());
        String[] text =
                {"-15 37 51 22 394 21 99 37 hstem",
                        "49 36 287 60 239 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-53 110 rmoveto",
                        "-17 0 -1 8 -1 7 -1 13 -10 20 -19 0 rrcurveto",
                        "-14 -10 -11 -19 -28 34 -12 38 hvcurveto",
                        "22 0 23 12 17 17 28 28 18 48 0 79 rrcurveto",
                        "207 vlineto", "16 8 9 26 vhcurveto", "10 hlineto",
                        "3 2 1 3 hvcurveto", "0 17 -2 2 rlineto",
                        "0 -57 -2 -23 -24 -64 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto", "-3 2 -1 3 vhcurveto",
                        "22 hlineto", "25 10 -7 -18 hvcurveto", "-219 vlineto",
                        "-121 -21 -29 -26 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C0
     */
    public void testuni24C0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C0");
        assertNotNull(cs);
        assertEquals("uni24C0", cs.getName());
        String[] text =
                {"-15 37 101 22 324 21 119 37 hstem",
                        "49 36 155 60 371 37 vstem", "300 294 rmoveto",
                        "15 -1 10 -5 12 -14 rrcurveto", "96 -110 rlineto",
                        "11 -13 1 -8 0 -10 rrcurveto", "0 -10 1 -1 rlineto",
                        "0 28 1 21 22 43 -1 0 vhcurveto", "2 1 0 17 rlineto",
                        "3 -3 2 -3 vhcurveto", "-4 hlineto",
                        "-16 0 -14 2 -15 17 rrcurveto", "", "-129 146 rlineto",
                        "-9 10 -2 8 23 24 rrcurveto", "77 80 rlineto",
                        "30 31 21 6 30 0 rrcurveto", "4 2 2 3 hvcurveto",
                        "0 17 -2 1 rlineto",
                        "0 -35 -1 -20 -23 -57 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-3 1 -2 3 vhcurveto",
                        "27 0 7 -5 -20 -20 rrcurveto", "-100 -104 rlineto",
                        "-12 -12 -10 -5 -12 -2 rrcurveto", "123 vlineto",
                        "16 8 9 25 vhcurveto", "9 hlineto",
                        "3 2 2 3 hvcurveto", "0 16 -1 2 rlineto",
                        "0 -50 -2 -23 -24 -64 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto", "-3 3 -1 2 vhcurveto",
                        "17 hlineto", "24 10 -8 -17 hvcurveto", "-270 vlineto",
                        "-15 -9 -14 -25 vhcurveto", "-17 hlineto",
                        "-2 -2 -2 -3 hvcurveto", "0 -17 1 -2 rlineto",
                        "0 67 2 22 25 46 -2 0 vhcurveto", "1 2 0 17 rlineto",
                        "3 -2 2 -3 vhcurveto", "-9 hlineto",
                        "-24 -9 12 17 hvcurveto", "78 435 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C1
     */
    public void testuni24C1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C1");
        assertNotNull(cs);
        assertEquals("uni24C1", cs.getName());
        String[] text =
                {"-15 37 99 23 325 21 119 37 hstem",
                        "49 36 199 60 165 21 141 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-68 138 rmoveto", "57 -1 157 0 6 97 -21 3 rlineto",
                        "-9 -44 -18 -32 -38 0 rrcurveto", "-78 hlineto",
                        "-13 -9 4 16 hvcurveto", "278 vlineto",
                        "16 9 9 25 vhcurveto", "17 hlineto",
                        "2 2 2 3 hvcurveto", "0 16 -1 2 rlineto",
                        "0 -67 -2 -22 -25 -55 2 0 vhcurveto",
                        "0 -2 0 -16 rlineto", "-3 2 -2 3 vhcurveto",
                        "16 hlineto", "25 9 -8 -17 hvcurveto", "-274 vlineto",
                        "-20 -6 -6 -26 vhcurveto", "-19 hlineto",
                        "-2 -2 -1 -3 hvcurveto", "0 -17 0 -2 rlineto",
                        "64 1 9 1 8 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C2
     */
    public void testuni24C2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C2");
        assertNotNull(cs);
        assertEquals("uni24C2", cs.getName());
        String[] text =
                {
                        "-15 37 100 23 324 23 117 37 hstemhm",
                        "49 36 120 27 258 54 -48 55 120 37 hintmask 1111110110000000",
                        "378 609 rmoveto",
                        "163 130 -131 -163 hvcurveto",
                        "0 -73 -26 -66 -43 -51 rrcurveto",
                        "15 vlineto",
                        "3 -4 2 -3 vhcurveto",
                        "-28 0 -15 1 -1 32 rrcurveto",
                        "hintmask 1111111010000000",
                        "-7 267 rlineto",
                        "21 1 3 39 5 2 2 5 vhcurveto",
                        "0 14 -2 2 -100 -2 -109 -285 -117 285 -104 2 -2 -2 0 -17 rlineto",
                        "-2 2 -2 4 31 11 -3 -16 vhcurveto",
                        "-269 vlineto",
                        "-31 -12 -5 -31 -3 -3 -2 -3 vhcurveto",
                        "-16 vlineto",
                        "-44 51 -27 67 0 73 rrcurveto",
                        "163 131 131 162 vhcurveto",
                        "-624 vmoveto",
                        "516 callsubr",
                        "112 443 rmoveto",
                        "hintmask 1111110110000000",
                        "-4 6 -254 0 vhcurveto",
                        "-17 -4 -8 -17 vhcurveto",
                        "-17 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -17 1 -2 rlineto",
                        "0 54 2 23 vhcurveto",
                        "21 0 38 -1 9 0 -54 -62 -79 -38 -88 0 -88 0 -79 39 -53 61 7 0 28 1 20 0 rrcurveto",
                        "24 38 -2 0 hvcurveto", "1 2 0 17 rlineto",
                        "3 -4 2 -2 -32 -6 2 30 vhcurveto",
                        "-3 245 125 -297 rlineto",
                        "2 -4 4 -2 4 0 4 0 3 1 2 5 rrcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni24C3
     */
    public void testuni24C3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C3");
        assertNotNull(cs);
        assertEquals("uni24C3", cs.getName());
        String[] text =
                {"-15 37 101 22 324 23 117 37 hstem",
                        "49 36 148 38 245 37 118 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "175 449 rmoveto", "17 9 18 25 vhcurveto",
                        "17 hlineto", "2 3 2 3 hvcurveto", "0 17 -2 1 rlineto",
                        "0 -45 -2 -23 -23 -55 2 0 vhcurveto",
                        "-3 -2 0 -16 rlineto", "-3 5 -2 3 vhcurveto",
                        "16 hlineto", "26 8 -19 -16 hvcurveto", "-193 vlineto",
                        "0 -26 -3 -3 -23 27 rrcurveto",
                        "-203 251 -108 2 -1 -3 0 -15 rlineto",
                        "-3 4 -2 3 vhcurveto", "30 0 10 -15 8 -14 rrcurveto",
                        "-261 vlineto", "-15 -8 -19 -26 vhcurveto",
                        "-16 hlineto", "-3 -5 -2 -3 hvcurveto",
                        "0 -17 2 -2 rlineto", "0 53 2 22 24 49 -2 0 vhcurveto",
                        "1 2 0 17 rlineto", "3 -2 2 -3 vhcurveto",
                        "-16 hlineto", "-25 -9 17 17 hvcurveto", "194 vlineto",
                        "20 0 8 6 vhcurveto", "4 0 6 -6 11 -13 rrcurveto",
                        "208 -252 rlineto", "11 -13 8 -5 12 0 rrcurveto",
                        "9 7 6 16 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C4
     */
    public void testuni24C4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C4");
        assertNotNull(cs);
        assertEquals("uni24C4", cs.getName());
        String[] text =
                {
                        "-15 37 95 26 337 26 103 37 hstem",
                        "49 36 103 64 255 65 99 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "194 330 rmoveto",
                        "114 -91 77 -104 -112 -77 -89 -113 -112 83 -75 107 119 75 84 114 vhcurveto",
                        "-203 165 rmoveto", "533 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C5
     */
    public void testuni24C5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C5");
        assertNotNull(cs);
        assertEquals("uni24C5", cs.getName());
        String[] text =
                {"-15 37 101 22 128 21 175 23 117 37 hstem",
                        "49 36 206 59 131 61 129 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-87 184 rmoveto", "-15 -9 -9 -26 vhcurveto",
                        "-16 hlineto", "-3 -2 -2 -3 hvcurveto",
                        "0 -17 1 -2 rlineto", "0 58 2 22 25 64 -2 0 vhcurveto",
                        "1 2 0 17 rlineto", "3 -3 2 -3 vhcurveto",
                        "-16 hlineto", "-25 -9 7 17 hvcurveto", "112 vlineto",
                        "15 -6 19 -2 19 0 rrcurveto",
                        "114 25 73 48 42 -23 56 -113 hvcurveto",
                        "-30 0 -34 -2 -22 0 -24 0 -50 2 -10 0 rrcurveto",
                        "-19 vlineto", "-2 1 -2 4 37 13 0 -24 vhcurveto",
                        "59 20 rmoveto", "12 4 28 0 11 0 rrcurveto",
                        "44 36 -16 -69 -61 -28 -29 -48 hvcurveto",
                        "-16 0 -23 1 -16 6 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C6
     */
    public void testuni24C6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C6");
        assertNotNull(cs);
        assertEquals("uni24C6", cs.getName());
        String[] text =
                {
                        "-15 37 95 26 337 26 103 37 hstem",
                        "49 36 103 64 255 65 99 37 vstem",
                        "421 121 rmoveto",
                        "15 -18 15 -14 22 -7 29 -11 25 6 28 19 rrcurveto",
                        "-9 12 rlineto",
                        "-14 -8 -19 1 -13 4 -13 5 -8 13 -9 14 64 32 38 65 0 81 rrcurveto",
                        "114 -91 77 -104 -112 -77 -89 -113 -112 83 -75 107 vhcurveto",
                        "15 0 14 2 14 2 rrcurveto", "-43 488 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-9 495 rmoveto", "533 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C7
     */
    public void testuni24C7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C7");
        assertNotNull(cs);
        assertEquals("uni24C7", cs.getName());
        String[] text =
                {
                        "-15 37 94 26 -18 21 153 24 147 23 117 37 hstemhm",
                        "49 36 185 60 128 58 155 37 hintmask 1001111111000000",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-108 185 rmoveto",
                        "hintmask 1011111111000000",
                        "-16 -9 -9 -25 vhcurveto",
                        "-17 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -16 1 -2 rlineto",
                        "0 59 2 22 25 56 -2 0 vhcurveto",
                        "2 2 0 16 rlineto",
                        "3 -3 2 -2 vhcurveto",
                        "-10 hlineto",
                        "-25 -9 8 17 hvcurveto",
                        "128 14 vlineto",
                        "55 0 20 -28 6 -28 rrcurveto",
                        "12 -53 rlineto",
                        "hintmask 1101111111000000",
                        "5 -26 10 -47 62 0 10 0 18 2 15 5 rrcurveto",
                        "-6 19 rlineto",
                        "-43 0 -8 32 -4 21 rrcurveto",
                        "-15 64 rlineto",
                        "-6 29 -25 23 -27 1 rrcurveto",
                        "1 vlineto",
                        "47 5 46 40 0 49 0 64 -58 21 -77 0 -19 0 -37 -1 -27 0 -26 0 -32 0 -25 1 rrcurveto",
                        "-19 vlineto", "-2 3 -2 3 27 22 -1 -23 vhcurveto",
                        "188 -40 rmoveto", "-66 -36 -17 -61 vhcurveto",
                        "-31 143 hlineto", "14 2 18 1 23 0 rrcurveto",
                        "51 22 -14 -49 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C8
     */
    public void testuni24C8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C8");
        assertNotNull(cs);
        assertEquals("uni24C8", cs.getName());
        String[] text =
                {
                        "-15 37 107 10 342 23 105 37 hstemhm",
                        "49 36 172 53 144 60 -41 20 178 37 hintmask 1111110010000000",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "107 499 rmoveto",
                        "-22 -1 -20 21 -65 0 -56 0 -65 -32 0 -66 0 -62 72 -28 34 -12 rrcurveto",
                        "hintmask 1111111010000000",
                        "50 -18 41 -20 0 -55 0 -46 -25 -26 -48 0 -44 0 -45 28 -13 72 rrcurveto",
                        "-22 -1 rlineto",
                        "6 -55 3 -35 0 -23 11 1 6 3 9 0 15 0 27 -13 62 0 71 0 47 47 0 66 0 70 -73 34 -41 13 -20 6 -70 24 0 44 rrcurveto",
                        "35 28 26 41 vhcurveto", "hintmask 1111110110000000",
                        "39 0 48 -29 7 -56 rrcurveto", "20 1 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24C9
     */
    public void testuni24C9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24C9");
        assertNotNull(cs);
        assertEquals("uni24C9", cs.getName());
        String[] text =
                {"-15 37 101 22 323 24 117 37 hstem",
                        "49 36 263 60 263 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "93 483 rmoveto", "34 0 11 -21 16 -58 rrcurveto",
                        "21 3 rlineto", "-6 38 0 36 0 35 rrcurveto",
                        "-20 hlineto", "-2 -5 -7 -4 -13 0 rrcurveto",
                        "-262 hlineto", "-14 0 -7 4 -1 5 rrcurveto",
                        "-20 hlineto", "0 -35 0 -37 -6 -37 rrcurveto",
                        "21 -3 rlineto", "16 58 10 21 36 0 rrcurveto",
                        "40 hlineto", "22 8 -9 -18 hvcurveto", "-272 vlineto",
                        "-16 -9 -8 -25 vhcurveto", "-17 hlineto",
                        "-3 -2 -2 -3 hvcurveto", "0 -17 1 -2 rlineto",
                        "0 59 2 22 24 64 -2 0 vhcurveto", "1 2 0 17 rlineto",
                        "3 -2 2 -3 vhcurveto", "-16 hlineto",
                        "-25 -9 7 17 hvcurveto", "271 vlineto",
                        "19 7 9 23 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24CA
     */
    public void testuni24CA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24CA");
        assertNotNull(cs);
        assertEquals("uni24CA", cs.getName());
        String[] text =
                {"-15 37 86 23 333 22 123 37 hstem",
                        "49 36 148 59 214 36 129 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "4 123 rmoveto", "128 32 73 102 hvcurveto",
                        "156 vlineto", "17 5 8 26 vhcurveto", "13 hlineto",
                        "3 2 2 3 hvcurveto", "0 17 -1 2 rlineto",
                        "0 -41 -2 -22 -25 -51 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto", "-3 2 -2 3 vhcurveto",
                        "16 hlineto", "26 9 -7 -18 hvcurveto", "-166 vlineto",
                        "-65 -6 -77 -104 vhcurveto",
                        "-30 0 -22 11 -18 17 -33 30 -1 40 0 37 rrcurveto",
                        "173 vlineto", "17 9 8 26 vhcurveto", "", "16 hlineto",
                        "3 2 2 3 hvcurveto", "0 17 -1 2 rlineto",
                        "0 -68 -2 -22 -24 -53 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto", "-3 3 -2 2 vhcurveto",
                        "15 hlineto", "25 9 -7 -18 hvcurveto", "-189 vlineto",
                        "-117 94 -25 55 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24CB
     */
    public void testuni24CB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24CB");
        assertNotNull(cs);
        assertEquals("uni24CB", cs.getName());
        String[] text =
                {"-15 37 441 21 125 37 hstem", "49 36 586 37 vstem",
                        "378 609 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "113 451 rmoveto",
                        "-103 -245 -96 247 rlineto",
                        "-7 16 5 9 29 0 rrcurveto", "9 hlineto",
                        "4 1 2 3 hvcurveto", "0 17 -1 1 rlineto",
                        "0 -57 -2 -22 -25 -51 2 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-3 5 -2 3 vhcurveto",
                        "35 0 6 -15 7 -18 rrcurveto", "114 -291 rlineto",
                        "5 -14 10 -19 15 0 14 0 8 11 9 22 rrcurveto",
                        "121 290 rlineto", "8 18 7 16 35 0 rrcurveto",
                        "3 3 2 3 hvcurveto", "0 16 -1 2 rlineto",
                        "0 -34 -2 -22 -25 -50 2 0 vhcurveto",
                        "-2 -2 0 -16 rlineto", "-3 3 -2 3 vhcurveto",
                        "6 hlineto", "29 0 8 -10 -8 -17 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni24CC
     */
    public void testuni24CC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24CC");
        assertNotNull(cs);
        assertEquals("uni24CC", cs.getName());
        String[] text =
                {
                        "-15 37 409 -20 49 23 126 37 hstem",
                        "49 36 586 37 vstem",
                        "633 461 rmoveto",
                        "25 -43 13 -49 0 -54 rrcurveto",
                        "-163 -131 -130 -162 -163 -130 132 161 vhcurveto",
                        "0 61 19 56 31 47 rrcurveto",
                        "-14 vlineto",
                        "-3 3 -2 5 vhcurveto",
                        "7 hlineto",
                        "18 0 12 -14 5 -17 rrcurveto",
                        "81 -294 rlineto",
                        "2 -9 9 -22 15 0 21 0 8 17 4 15 rrcurveto",
                        "46 189 rlineto",
                        "3 9 2 5 3 0 3 0 2 -6 4 -10 rrcurveto",
                        "52 -187 rlineto",
                        "3 -11 9 -21 24 0 21 0 10 22 3 10 rrcurveto",
                        "73 297 rlineto",
                        "6 22 21 5 19 0 0 0 2 0 2 1 rrcurveto",
                        "-255 -476 rmoveto",
                        "516 callsubr",
                        "39 420 rmoveto",
                        "-6 20 -2 6 -15 0 -18 0 -6 -18 -12 -47 rrcurveto",
                        "-46 -185 -67 254 rlineto",
                        "-4 15 0 10 18 0 rrcurveto",
                        "13 hlineto",
                        "2 4 1 4 hvcurveto",
                        "0 16 -1 2 rlineto",
                        "0 -53 -2 -32 vhcurveto",
                        "-20 0 -27 2 -7 0 53 76 87 50 100 0 101 0 87 -50 54 -76 -12 -1 -15 0 -11 0 rrcurveto",
                        "-26 -47 1 0 hvcurveto", "-1 -2 0 -17 rlineto",
                        "-2 2 -2 3 vhcurveto", "17 hlineto",
                        "20 0 2 -11 -4 -16 rrcurveto", "-60 -254 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24CD
     */
    public void testuni24CD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24CD");
        assertNotNull(cs);
        assertEquals("uni24CD", cs.getName());
        String[] text =
                {"-15 37 101 21 325 21 119 37 hstem", "49 36 586 37 vstem",
                        "378 609 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-136 453 rmoveto", "96 -119 rlineto",
                        "6 -7 4 -5 0 -5 0 -4 -3 -5 -4 -5 rrcurveto",
                        "-91 -114 rlineto", "-12 -15 -19 -15 -22 0 rrcurveto",
                        "-8 hlineto", "-3 -3 0 -3 hvcurveto",
                        "0 -18 1 -2 rlineto", "0 49 2 2 10 70 -2 0 vhcurveto",
                        "2 2 0 17 rlineto", "3 -1 1 -3 vhcurveto",
                        "-12 hlineto", "-11 -7 4 7 hvcurveto",
                        "0 4 4 7 5 6 rrcurveto", "77 98 rlineto",
                        "4 4 2 4 3 0 2 0 3 -2 4 -5 rrcurveto",
                        "75 -101 rlineto", "7 -9 6 -6 0 -5 rrcurveto",
                        "-4 -6 -2 -15 vhcurveto", "-15 hlineto",
                        "-1 -2 -1 -2 hvcurveto", "0 -18 2 -2 rlineto",
                        "0 72 2 4 vhcurveto", "7 0 55 -1 17 -1 rrcurveto",
                        "1 2 0 17 rlineto", "4 -3 0 -4 vhcurveto",
                        "-29 0 -6 4 -21 26 rrcurveto", "-97 126 rlineto",
                        "-6 8 -4 5 0 6 0 5 3 6 5 6 rrcurveto",
                        "84 103 rlineto", "22 27 13 3 23 0 rrcurveto",
                        "6 0 2 2 hvcurveto", "0 18 -1 1 rlineto",
                        "-12 -1 -42 -1 -3 0 -7 0 -51 1 -13 1 rrcurveto",
                        "-1 -2 0 -17 rlineto", "-3 2 -1 2 vhcurveto",
                        "19 hlineto", "9 4 -3 -5 hvcurveto",
                        "0 -4 -3 -5 -6 -9 rrcurveto", "-77 -93 rlineto",
                        "-4 -5 -2 -3 -2 0 -2 0 -2 2 -4 5 rrcurveto",
                        "-71 90 rlineto", "", "-6 8 -8 10 0 5 rrcurveto",
                        "4 3 3 11 vhcurveto", "23 hlineto",
                        "3 2 2 2 hvcurveto", "17 vlineto",
                        "-1 -2 2 0 hvcurveto",
                        "-19 -1 -67 -1 -3 0 -6 0 -43 1 -16 1 rrcurveto",
                        "-3 -2 0 -17 rlineto", "-3 4 -1 3 vhcurveto",
                        "22 0 7 -3 25 -28 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24CE
     */
    public void testuni24CE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24CE");
        assertNotNull(cs);
        assertEquals("uni24CE", cs.getName());
        String[] text =
                {"-15 37 101 22 324 23 117 37 hstem",
                        "49 36 263 60 263 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-30 184 rmoveto", "-16 -8 -8 -26 vhcurveto",
                        "-16 hlineto", "-4 -2 -2 -3 hvcurveto",
                        "0 -17 2 -2 rlineto", "0 59 2 22 24 63 -2 0 vhcurveto",
                        "2 2 0 17 rlineto", "3 -3 2 -3 vhcurveto",
                        "-16 hlineto", "-25 -9 6 18 hvcurveto",
                        "0 117 93 158 rlineto", "10 19 9 6 19 0 rrcurveto",
                        "13 hlineto", "6 0 2 2 hvcurveto", "0 17 -1 2 rlineto",
                        "-13 -1 -36 -1 -6 0 -7 0 -49 2 -5 0 rrcurveto",
                        "-2 -1 0 -18 rlineto", "-2 1 -2 3 vhcurveto",
                        "18 hlineto", "13 3 -2 -6 hvcurveto",
                        "0 -3 -2 -4 -5 -9 rrcurveto",
                        "-74 -128 -84 128 rlineto", "-4 9 -3 4 0 3 rrcurveto",
                        "6 4 2 12 vhcurveto", "17 hlineto",
                        "3 1 3 2 hvcurveto", "0 17 -1 1 rlineto",
                        "-9 -1 -67 -1 -4 0 -9 0 -49 2 -8 0 rrcurveto",
                        "-1 -2 0 -17 rlineto", "-3 3 -1 3 vhcurveto",
                        "23 0 13 -8 10 -17 rrcurveto", "102 -161 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24CF
     */
    public void testuni24CF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24CF");
        assertNotNull(cs);
        assertEquals("uni24CF", cs.getName());
        String[] text =
                {
                        "-15 37 100 28 312 29 118 37 hstem",
                        "49 36 586 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-71 477 rmoveto",
                        "140 hlineto",
                        "5 2 -1 -3 hvcurveto",
                        "0 -3 -2 -4 -3 -5 rrcurveto",
                        "-230 -302 rlineto",
                        "-4 -5 -2 -4 0 -5 rrcurveto",
                        "-5 3 -3 9 vhcurveto",
                        "290 hlineto",
                        "4 24 8 39 14 45 rrcurveto",
                        "-22 6 -10 -23 rlineto",
                        "-19 -42 -13 -21 -47 0 rrcurveto",
                        "-115 hlineto",
                        "-10 -6 2 6 hvcurveto",
                        "0 2 2 4 4 5 rrcurveto",
                        "218 290 rlineto",
                        "12 16 2 6 0 6 0 6 -4 3 -13 0 -9 0 -13 -1 -20 -4 rrcurveto",
                        "-206 hlineto", "-12 0 -8 5 -2 4 rrcurveto",
                        "-19 hlineto", "-1 -36 -4 -35 -7 -39 rrcurveto",
                        "21 -2 rlineto", "16 57 27 17 24 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D0
     */
    public void testuni24D0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D0");
        assertNotNull(cs);
        assertEquals("uni24D0", cs.getName());
        String[] text =
                {
                        "-15 37 141 31 223 24 168 37 hstemhm",
                        "49 36 175 52 -47 48 108 54 196 37 hintmask 1111100110000000",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "86 178 rmoveto",
                        "19 0 19 12 9 10 rrcurveto",
                        "-10 15 rlineto",
                        "-3 -2 -5 -3 -4 0 rrcurveto",
                        "-10 -4 17 40 hvcurveto",
                        "76 vlineto",
                        "93 -58 20 -48 vhcurveto",
                        "hintmask 1111101110000000",
                        "-42 -62 -33 -39 -15 11 -11 15 19 7 13 9 hvcurveto",
                        "0 5 -1 5 -1 2 -1 2 -1 4 0 7 rrcurveto",
                        "15 20 12 34 23 31 -9 -75 vhcurveto",
                        "-58 -15 rlineto",
                        "hintmask 1111110110000000",
                        "-63 -15 -40 -29 0 -42 0 -42 35 -27 42 0 33 0 18 9 34 30 3 -18 14 -21 25 0 rrcurveto",
                        "-43 144 rmoveto",
                        "-79 vlineto",
                        "-26 -23 -17 -11 -21 0 -34 0 -11 20 0 21 0 32 23 18 86 22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D1
     */
    public void testuni24D1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D1");
        assertNotNull(cs);
        assertEquals("uni24D1", cs.getName());
        String[] text =
                {
                        "-15 37 124 25 216 31 191 37 hstem",
                        "49 36 212 49 119 55 151 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-32 380 rmoveto",
                        "21 16 12 6 26 0 rrcurveto",
                        "31 29 -37 -74 -93 -41 -12 -23 -22 -33 13 52 hvcurveto",
                        "-49 224 rmoveto", "-260 vlineto",
                        "0 -25 0 -11 -2 -16 rrcurveto", "14 -2 rlineto",
                        "6 6 8 9 6 8 16 -14 25 -9 30 0 rrcurveto",
                        "65 55 68 74 68 -38 62 -62 hvcurveto",
                        "-26 0 -23 -10 -25 -14 rrcurveto", "131 -13 vlineto",
                        "-25 -11 -22 -6 -33 -4 rrcurveto", "2 -22 rlineto",
                        "11 2 10 1 7 0 rrcurveto", "14 0 -9 -16 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D2
     */
    public void testuni24D2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D2");
        assertNotNull(cs);
        assertEquals("uni24D2", cs.getName());
        String[] text =
                {
                        "-15 37 131 32 220 27 177 37 hstem",
                        "49 36 167 54 365 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "4 447 rmoveto",
                        "-86 -44 -72 -73 -73 40 -61 85 hvcurveto",
                        "45 0 31 24 26 35 rrcurveto",
                        "-20 16 rlineto",
                        "-20 -22 -19 -21 -38 0 -22 0 -24 16 -14 22 -12 19 -4 25 0 24 0 81 42 33 31 0 38 0 4 -24 3 -22 2 -16 13 -7 14 0 rrcurveto",
                        "14 12 10 19 34 -35 33 -62 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni24D3
     */
    public void testuni24D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D3");
        assertNotNull(cs);
        assertEquals("uni24D3", cs.getName());
        String[] text =
                {"-15 37 129 26 218 25 189 37 hstem",
                        "49 36 144 55 124 49 214 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "30 196 rmoveto", "-33 14 vlineto",
                        "24 12 22 6 33 3 rrcurveto", "-2 22 rlineto",
                        "-11 -2 -9 -1 -7 0 rrcurveto", "-15 0 10 15 hvcurveto",
                        "315 -14 vlineto", "-24 -12 -23 -6 -32 -3 rrcurveto",
                        "2 -22 rlineto", "11 2 10 1 7 0 rrcurveto",
                        "13 1 -10 -15 hvcurveto", "-63 vlineto",
                        "-15 13 -24 7 -26 0 rrcurveto",
                        "-77 -37 -77 -65 -76 47 -51 67 hvcurveto",
                        "23 0 24 13 18 17 rrcurveto", "27 vmoveto",
                        "-20 -21 -17 -10 -21 0 rrcurveto",
                        "-36 -30 27 90 73 27 28 34 hvcurveto",
                        "25 0 22 -20 16 -20 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D4
     */
    public void testuni24D4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D4");
        assertNotNull(cs);
        assertEquals("uni24D4", cs.getName());
        String[] text =
                {"-15 37 141 31 128 28 66 25 168 37 hstem",
                        "49 36 172 55 113 57 189 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "47 365 rmoveto", "-110 hlineto",
                        "5 29 25 37 31 0 rrcurveto", "24 25 -14 -52 hvcurveto",
                        "-38 -156 rmoveto", "",
                        "-21 0 -24 16 -14 22 -12 19 -4 24 0 25 rrcurveto",
                        "22 170 vlineto", "-3 61 -17 58 -85 0 rrcurveto",
                        "-72 -48 -71 -74 -73 40 -60 85 hvcurveto",
                        "46 0 30 23 26 35 rrcurveto", "-20 16 rlineto",
                        "-19 -22 -20 -21 -38 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D5
     */
    public void testuni24D5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D5");
        assertNotNull(cs);
        assertEquals("uni24D5", cs.getName());
        String[] text =
                {
                        "-15 37 110 22 182 29 92 -21 45 25 103 37 hstem",
                        "49 36 225 48 313 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-68 197 rmoveto",
                        "-18 -6 -10 -21 vhcurveto",
                        "-12 hlineto",
                        "-2 -2 -1 -4 hvcurveto",
                        "0 -17 1 -1 rlineto",
                        "0 42 1 22 23 54 -1 0 vhcurveto",
                        "1 1 0 17 rlineto",
                        "4 -2 1 -3 vhcurveto",
                        "-20 hlineto",
                        "-20 -7 10 18 hvcurveto",
                        "154 59 vlineto",
                        "6 8 2 6 hvcurveto",
                        "18 vlineto",
                        "2 -1 1 -4 vhcurveto",
                        "-68 10 hlineto",
                        "95 24 11 20 vhcurveto",
                        "18 0 10 -7 8 -20 5 -11 11 -7 11 0 13 0 10 10 0 12 0 11 -7 11 -12 9 -15 11 -16 6 -24 0 rrcurveto",
                        "-52 -52 -45 -96 hvcurveto", "-32 hlineto",
                        "-11 -3 -7 -5 hvcurveto", "-14 vlineto",
                        "-2 1 -1 2 vhcurveto", "43 hlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni24D6
     */
    public void testuni24D6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D6");
        assertNotNull(cs);
        assertEquals("uni24D6", cs.getName());
        String[] text =
                {
                        "-15 37 42 31 105 39 -38 43 49 22 144 22 -16 29 115 37 hstemhm",
                        "49 36 170 41 -25 49 -46 38 117 51 4 35 152 37 hintmask 1100100110001110",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "51 398 rmoveto",
                        "-61 -29 -7 -21 vhcurveto",
                        "hintmask 1100110110101110",
                        "-50 -9 46 33 48 18 17 33 36 22 -25 -51 hvcurveto",
                        "-113 -178 rmoveto",
                        "7 -4 9 -2 8 0 rrcurveto",
                        "hintmask 1110100111001110",
                        "7 0 8 1 9 0 rrcurveto",
                        "hintmask 1101100111001110",
                        "9 1 7 0 5 0 29 0 21 -6 17 -9 25 -12 7 -8 0 -16 rrcurveto",
                        "-45 -62 -10 -53 -20 -53 6 46 vhcurveto",
                        "0 21 2 19 18 18 rrcurveto",
                        "188 239 rmoveto",
                        "12 10 11 13 hvcurveto",
                        "hintmask 1100101110101110",
                        "12 -12 14 -25 vhcurveto",
                        "-23 0 -17 -10 -16 -18 rrcurveto",
                        "hintmask 1101110110101110",
                        "-10 6 -19 9 -28 0 -53 0 -52 -36 0 -57 0 -34 17 -21 17 -16 rrcurveto",
                        "hintmask 1101100110011110",
                        "-17 -15 -14 -27 0 -21 0 -22 16 -15 16 -8 rrcurveto",
                        "hintmask 1101100111001110",
                        "-32 -20 -19 -28 0 -26 rrcurveto",
                        "-54 53 -17 45 79 87 36 66 vhcurveto",
                        "0 20 -9 17 -17 15 -24 22 -41 4 -22 0 -10 0 -16 -2 -14 -1 rrcurveto",
                        "hintmask 1110101110011110",
                        "-9 -1 -6 -1 -3 0 -18 0 -18 5 0 26 rrcurveto",
                        "hintmask 1100101110101110",
                        "0 13 1 12 7 11 14 -9 19 -4 23 0 51 0 53 33 0 60 0 29 -11 18 -18 18 4 6 6 8 7 0 9 0 6 -3 2 -6 rrcurveto",
                        "2 -6 7 -6 10 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D7
     */
    public void testuni24D7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D7");
        assertNotNull(cs);
        assertEquals("uni24D7", cs.getName());
        String[] text =
                {"-15 37 129 22 211 34 191 37 hstem",
                        "49 36 198 49 112 49 178 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-139 519 rmoveto", "2 -22 rlineto",
                        "11 2 10 1 7 0 rrcurveto", "14 0 -9 -16 hvcurveto",
                        "-260 vlineto", "0 -20 0 -6 -25 -1 rrcurveto",
                        "-7 hlineto", "-4 -1 -2 -2 hvcurveto", "-19 vlineto",
                        "0 37 1 24 26 41 -1 0 vhcurveto", "19 vlineto",
                        "4 -3 0 -3 vhcurveto", "-11 hlineto",
                        "-16 -9 6 21 hvcurveto", "139 vlineto",
                        "19 22 22 23 21 0 rrcurveto",
                        "30 20 -17 -52 hvcurveto", "-115 vlineto",
                        "0 -23 -6 -3 -20 -1 rrcurveto", "-10 hlineto",
                        "-4 -1 -2 -2 hvcurveto", "-19 vlineto",
                        "0 39 1 25 25 38 -1 0 vhcurveto", "19 vlineto",
                        "2 -1 2 -5 vhcurveto", "-6 hlineto",
                        "-19 1 -6 2 0 24 rrcurveto", "126 vlineto",
                        "68 -30 24 -46 vhcurveto",
                        "-36 0 -35 -35 -14 -17 rrcurveto", "159 -14 vlineto",
                        "-24 -11 -22 -6 -33 -4 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D8
     */
    public void testuni24D8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D8");
        assertNotNull(cs);
        assertEquals("uni24D8", cs.getName());
        String[] text =
                {
                        "-15 37 108 24 292 57 106 37 hstemhm",
                        "49 36 263 60 -50 50 263 37 hintmask 11111001",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "hintmask 11111011",
                        "30 194 rmoveto",
                        "222 -14 vlineto",
                        "-25 -9 -24 -7 -39 -8 rrcurveto",
                        "3 -20 rlineto",
                        "10 4 12 2 13 0 rrcurveto",
                        "10 4 -11 -15 hvcurveto",
                        "-158 vlineto",
                        "-20 -2 -5 -23 vhcurveto",
                        "-19 hlineto",
                        "-3 -1 -2 -4 hvcurveto",
                        "0 -18 72 1 74 -1 0 18 rlineto",
                        "4 -3 2 -2 vhcurveto",
                        "-18 hlineto",
                        "-17 -8 0 25 hvcurveto",
                        "-30 324 rmoveto",
                        "hintmask 11111101",
                        "-20 -10 -12 -15 -16 12 -14 18 17 13 14 16 12 -9 15 -21 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24D9
     */
    public void testuni24D9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24D9");
        assertNotNull(cs);
        assertEquals("uni24D9", cs.getName());
        String[] text =
                {
                        "-15 37 30 19 400 57 81 37 hstemhm",
                        "49 36 286 60 -50 50 240 37 hintmask 11111001",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "hintmask 11111011",
                        "3 214 rmoveto",
                        "-93 -8 -35 -29 vhcurveto",
                        "-5 0 -4 4 -2 7 -3 13 -9 15 -15 0 rrcurveto",
                        "-11 -9 -8 -17 -20 33 -13 27 hvcurveto",
                        "16 0 21 7 16 18 26 30 6 27 0 85 rrcurveto",
                        "207 -14 vlineto",
                        "-25 -10 -24 -7 -39 -8 rrcurveto",
                        "3 -20 rlineto",
                        "11 4 11 3 13 0 rrcurveto",
                        "11 3 -13 -14 hvcurveto",
                        "20 167 rmoveto",
                        "hintmask 11111101",
                        "-20 -10 -13 -15 -16 13 -13 17 17 13 13 16 13 -9 15 -21 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24DA
     */
    public void testuni24DA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24DA");
        assertNotNull(cs);
        assertEquals("uni24DA", cs.getName());
        String[] text =
                {"-15 37 119 22 221 22 65 22 116 37 hstem",
                        "49 36 196 49 341 37 vstem", "330 270 rmoveto",
                        "2 1 2 0 1 0 15 0 7 -11 9 -11 rrcurveto",
                        "45 -64 rlineto", "12 -18 2 -3 0 -6 rrcurveto",
                        "0 -16 2 -2 rlineto", "0 16 1 22 24 37 -1 0 vhcurveto",
                        "2 2 0 16 rlineto", "3 -4 2 -3 vhcurveto",
                        "-34 0 -17 25 -7 11 rrcurveto", "-63 93 rlineto",
                        "-4 4 0 6 3 5 rrcurveto", "38 42 rlineto",
                        "21 24 28 11 24 0 rrcurveto", "3 4 2 3 hvcurveto",
                        "0 17 -2 1 rlineto",
                        "0 -41 -1 -24 -21 -31 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto",
                        "-2 2 -3 3 8 11 -1 -8 vhcurveto",
                        "0 -4 -3 -7 -8 -9 -32 -36 -21 -15 -27 -12 rrcurveto",
                        "223 -14 vlineto", "-24 -13 -22 -5 -33 -4 rrcurveto",
                        "2 -22 rlineto", "11 3 10 1 7 0 rrcurveto",
                        "13 1 -11 -15 hvcurveto", "-260 vlineto",
                        "0 -20 -1 -5 -24 -1 rrcurveto", "-7 hlineto",
                        "-5 0 -3 -2 hvcurveto", "-18 vlineto",
                        "0 37 1 24 25 38 -1 0 vhcurveto", "18 vlineto",
                        "4 -3 1 -2 vhcurveto", "-8 hlineto",
                        "-16 -9 4 22 hvcurveto", "48 420 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24DB
     */
    public void testuni24DB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24DB");
        assertNotNull(cs);
        assertEquals("uni24DB", cs.getName());
        String[] text =
                {"-15 37 124 21 442 37 hstem", "49 36 269 48 269 37 vstem",
                        "378 609 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "24 535 rmoveto", "-13 hlineto",
                        "-25 -12 -22 -6 -32 -4 rrcurveto", "2 -21 rlineto",
                        "10 2 10 0 7 0 rrcurveto", "14 1 -9 -16 hvcurveto",
                        "-260 vlineto", "0 -20 -1 -6 -24 -1 rrcurveto",
                        "-8 hlineto", "-4 -1 -2 -2 hvcurveto", "-18 vlineto",
                        "0 38 1 23 26 41 -1 0 vhcurveto", "18 vlineto",
                        "4 -3 0 -3 vhcurveto", "-10 hlineto",
                        "-17 -9 6 21 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24DC
     */
    public void testuni24DC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24DC");
        assertNotNull(cs);
        assertEquals("uni24DC", cs.getName());
        String[] text =
                {
                        "-15 37 159 22 206 22 -13 35 156 37 hstemhm",
                        "49 36 115 49 111 49 108 48 106 37 hintmask 1100111111000000",
                        "378 609 rmoveto",
                        "517 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "hintmask 1110111111000000",
                        "-222 446 rmoveto",
                        "2 -22 rlineto",
                        "11 3 10 1 7 0 rrcurveto",
                        "13 1 -11 -15 hvcurveto",
                        "-158 vlineto",
                        "0 -20 -1 -5 -24 -1 rrcurveto",
                        "-7 hlineto",
                        "-5 0 -3 -2 hvcurveto",
                        "-18 vlineto",
                        "0 37 1 24 26 40 -1 0 vhcurveto",
                        "18 vlineto",
                        "4 -3 1 -2 vhcurveto",
                        "-11 hlineto",
                        "-16 -9 5 21 hvcurveto",
                        "145 vlineto",
                        "hintmask 1101111111000000",
                        "19 22 21 22 22 0 rrcurveto",
                        "30 19 -16 -51 hvcurveto",
                        "-122 vlineto",
                        "0 -23 -6 -2 -19 -1 rrcurveto",
                        "-11 hlineto",
                        "-4 -1 -3 -2 hvcurveto",
                        "-18 vlineto",
                        "0 40 1 25 24 38 -1 0 vhcurveto",
                        "18 vlineto",
                        "2 -1 3 -4 vhcurveto",
                        "-6 hlineto",
                        "-20 1 -6 1 0 24 rrcurveto",
                        "0 132 0 18 rlineto",
                        "18 20 20 19 19 0 rrcurveto",
                        "30 21 -16 -51 hvcurveto",
                        "-122 vlineto",
                        "0 -23 -6 -2 -20 -1 rrcurveto",
                        "-11 hlineto",
                        "-3 -1 -3 -2 hvcurveto",
                        "-18 vlineto",
                        "0 39 1 25 24 39 -1 0 vhcurveto",
                        "18 vlineto",
                        "2 -1 3 -5 vhcurveto",
                        "-6 hlineto",
                        "-20 1 -6 1 0 24 rrcurveto",
                        "132 vlineto",
                        "67 -30 25 -45 vhcurveto",
                        "-35 0 -36 -35 -14 -16 -10 36 -26 15 -35 0 -36 0 -35 -35 -14 -17 rrcurveto",
                        "52 -14 vlineto", "-24 -13 -23 -5 -32 -4 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24DD
     */
    public void testuni24DD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24DD");
        assertNotNull(cs);
        assertEquals("uni24DD", cs.getName());
        String[] text =
                {"-15 37 147 22 216 34 168 37 hstem",
                        "49 36 194 49 111 49 183 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-143 435 rmoveto", "2 -23 rlineto",
                        "11 3 10 1 7 0 rrcurveto", "13 1 -10 -15 hvcurveto",
                        "-158 vlineto", "0 -21 -1 -5 -24 -1 rrcurveto",
                        "-7 hlineto", "-5 0 -3 -1 hvcurveto",
                        "0 -18 1 -1 rlineto", "0 37 1 23 26 39 -1 0 vhcurveto",
                        "1 1 0 18 rlineto", "3 -3 1 -2 vhcurveto",
                        "-10 hlineto", "-17 -9 5 22 hvcurveto", "",
                        "144 vlineto", "19 23 21 22 22 0 rrcurveto",
                        "30 19 -16 -52 hvcurveto", "-121 vlineto",
                        "0 -24 -5 -2 -20 -1 rrcurveto", "-11 hlineto",
                        "-4 -1 -3 -1 hvcurveto", "0 -18 1 -1 rlineto",
                        "0 39 1 25 24 37 -1 0 vhcurveto", "1 2 0 17 rlineto",
                        "1 -1 3 -3 vhcurveto", "-7 hlineto",
                        "-20 1 -6 1 0 25 rrcurveto", "132 vlineto",
                        "67 -29 24 -46 vhcurveto",
                        "-36 0 -35 -35 -14 -16 rrcurveto", "51 -14 vlineto",
                        "-24 -12 -22 -6 -33 -3 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24DE
     */
    public void testuni24DE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24DE");
        assertNotNull(cs);
        assertEquals("uni24DE", cs.getName());
        String[] text =
                {
                        "-15 37 143 25 228 25 166 37 hstem",
                        "49 36 166 59 134 58 169 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "66 296 rmoveto",
                        "-63 -31 -28 -27 -40 -36 41 78 85 31 24 29 43 31 -58 -79 vhcurveto",
                        "-68 162 rmoveto",
                        "-101 -24 -89 -57 -64 44 -68 80 86 41 70 65 54 -21 89 -105 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24DF
     */
    public void testuni24DF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24DF");
        assertNotNull(cs);
        assertEquals("uni24DF", cs.getName());
        String[] text =
                {"-15 37 44 22 120 25 205 21 -16 32 134 37 hstemhm",
                        "49 36 213 49 119 54 151 37 hintmask 1110011111000000",
                        "378 609 rmoveto", "517 callsubr", "-624 vmoveto",
                        "516 callsubr", "-31 314 rmoveto", "113 vlineto",
                        "hintmask 1110111111000000",
                        "19 18 18 13 26 0 rrcurveto",
                        "28 28 -37 -73 -93 -42 -7 -23 -21 -33 14 52 hvcurveto",
                        "-49 116 rmoveto", "-300 vlineto",
                        "0 -20 -1 -6 -24 -1 rrcurveto", "-7 hlineto",
                        "-5 0 -2 -2 hvcurveto", "-19 vlineto",
                        "0 37 1 24 26 40 -1 0 vhcurveto", "19 vlineto",
                        "4 -3 0 -2 vhcurveto", "-11 hlineto",
                        "-17 -8 6 21 hvcurveto", "114 vlineto",
                        "13 -13 21 -8 19 0 rrcurveto",
                        "65 55 63 74 68 -41 62 -57 hvcurveto",
                        "-29 0 -25 -15 -21 -15 rrcurveto",
                        "0 31 0 4 -14 0 rlineto", "hintmask 1111011111000000",
                        "-24 -11 -22 -6 -33 -4 rrcurveto", "2 -21 rlineto",
                        "11 1 9 1 7 0 rrcurveto", "14 1 -9 -16 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E0
     */
    public void testuni24E0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E0");
        assertNotNull(cs);
        assertEquals("uni24E0", cs.getName());
        String[] text =
                {"-15 37 42 22 120 25 216 26 136 37 hstem",
                        "49 36 146 55 124 49 212 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "62 486 rmoveto", "-25 -24 rlineto",
                        "-15 16 -26 10 -29 0 rrcurveto",
                        "-77 -37 -78 -64 -77 52 -48 66 hvcurveto",
                        "24 0 19 10 18 17 rrcurveto", "-120 vlineto",
                        "-22 -9 -5 -16 vhcurveto", "-11 hlineto",
                        "-2 -3 -1 -3 hvcurveto", "-19 vlineto",
                        "0 40 1 26 24 37 -1 0 vhcurveto", "19 vlineto",
                        "2 0 2 -5 vhcurveto", "-7 hlineto",
                        "-25 1 0 6 0 20 rrcurveto", "357 vlineto",
                        "6 -2 3 -3 vhcurveto", "-4 0 -6 -5 -4 -3 rrcurveto",
                        "-30 -211 rmoveto", "-20 -21 -13 -8 -22 0 rrcurveto",
                        "-34 -35 25 90 73 27 28 34 hvcurveto",
                        "26 0 21 -20 16 -19 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E1
     */
    public void testuni24E1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E1");
        assertNotNull(cs);
        assertEquals("uni24E1", cs.getName());
        String[] text =
                {
                        "-15 37 143 24 207 41 172 37 hstem",
                        "49 36 237 50 299 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-6 355 rmoveto",
                        "0 9 4 7 4 6 16 23 14 11 7 0 5 0 5 -1 3 -4 7 -6 7 -5 13 0 rrcurveto",
                        "17 11 10 16 18 -9 13 -28 hvcurveto",
                        "-30 0 -29 -34 -17 -25 rrcurveto",
                        "-2 0 2 59 -15 0 rlineto",
                        "-24 -11 -23 -6 -39 -8 rrcurveto", "1 -19 rlineto",
                        "12 3 12 2 12 0 rrcurveto", "11 3 -11 -15 hvcurveto",
                        "-158 vlineto", "-20 -1 -5 -23 vhcurveto",
                        "-19 hlineto", "-5 -1 -1 -4 hvcurveto",
                        "0 -19 74 1 74 -1 0 19 rlineto", "4 -3 1 -3 vhcurveto",
                        "-18 hlineto", "-16 -9 0 25 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni24E2
     */
    public void testuni24E2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E2");
        assertNotNull(cs);
        assertEquals("uni24E2", cs.getName());
        String[] text =
                {
                        "-15 37 141 25 229 24 168 37 hstem",
                        "49 36 200 49 87 54 196 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-99 277 rmoveto",
                        "3 -31 3 -32 -2 -25 7 2 9 0 3 0 21 0 21 -13 30 0 35 0 66 15 0 61 0 50 -46 20 -52 20 -33 14 -10 10 0 24 rrcurveto",
                        "26 20 14 26 vhcurveto",
                        "19 0 34 -11 14 -57 rrcurveto",
                        "22 1 -8 75 rlineto",
                        "-11 7 -39 9 -31 0 -50 0 -45 -31 0 -43 0 -45 31 -15 46 -20 50 -21 9 -20 0 -20 0 -28 -25 -10 -24 0 -23 0 -19 11 -7 6 rrcurveto",
                        "-15 17 -6 26 -1 15 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E3
     */
    public void testuni24E3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E3");
        assertNotNull(cs);
        assertEquals("uni24E3", cs.getName());
        String[] text =
                {"-15 37 101 34 209 30 213 37 hstemhm",
                        "49 36 247 49 -38 38 290 37 hintmask 11111001",
                        "378 609 rmoveto", "517 callsubr", "-624 vmoveto",
                        "516 callsubr", "hintmask 11111101", "3 381 rmoveto",
                        "58 hlineto", "6 9 2 6 hvcurveto", "18 vlineto",
                        "3 -2 1 -3 vhcurveto", "hintmask 11111011",
                        "-68 94 hlineto", "-38 -11 0 -12 rlineto",
                        "-47 -10 -24 -41 -2 -1 -1 -1 vhcurveto", "-26 vlineto",
                        "-1 2 -1 2 vhcurveto", "hintmask 11111101",
                        "39 -181 hlineto", "-44 22 -18 29 vhcurveto",
                        "27 0 24 8 25 27 rrcurveto", "-15 17 rlineto",
                        "-16 -12 -10 -6 -17 0 rrcurveto",
                        "-16 -4 19 38 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E4
     */
    public void testuni24E4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E4");
        assertNotNull(cs);
        assertEquals("uni24E4", cs.getName());
        String[] text =
                {"-15 37 139 34 216 22 176 37 hstem",
                        "49 36 183 48 112 49 194 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-62 448 rmoveto", "-1 1 rlineto",
                        "0 -13 -1 -9 -24 -38 1 0 vhcurveto",
                        "-1 -2 0 -16 rlineto", "-3 1 -2 4 vhcurveto",
                        "7 hlineto", "20 -1 6 -1 0 -25 rrcurveto",
                        "-132 vlineto", "-67 29 -24 46 vhcurveto",
                        "36 0 35 34 14 17 rrcurveto", "-51 13 vlineto",
                        "25 12 22 6 33 3 rrcurveto", "-2 22 rlineto",
                        "-11 -2 -10 -1 -7 0 rrcurveto",
                        "-13 -1 10 15 hvcurveto", "0 206 -1 2 rlineto",
                        "0 -14 -1 -9 -25 -40 1 0 vhcurveto",
                        "-1 -2 0 -16 rlineto", "-4 3 -1 2 vhcurveto",
                        "10 hlineto", "17 9 -5 -22 hvcurveto", "-145 vlineto",
                        "-19 -22 -21 -22 -22 0 rrcurveto",
                        "-30 -20 16 52 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E5
     */
    public void testuni24E5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E5");
        assertNotNull(cs);
        assertEquals("uni24E5", cs.getName());
        String[] text =
                {"-15 37 374 21 192 37 hstem", "49 36 586 37 vstem",
                        "378 609 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-27 172 rmoveto", "-82 198 rlineto",
                        "-15 35 -4 6 -20 0 rrcurveto", "-2 -2 0 3 hvcurveto",
                        "0 18 1 1 rlineto", "0 38 -1 19 vhcurveto",
                        "55 1 2 -1 0 -17 rlineto", "-3 -2 -1 -3 vhcurveto",
                        "-11 hlineto", "-13 0 -6 -11 8 -21 rrcurveto",
                        "67 -153 65 149 rlineto", "12 28 -6 8 -30 0 rrcurveto",
                        "-3 -2 1 2 hvcurveto", "0 18 1 1 rlineto",
                        "0 35 -1 21 19 22 1 0 vhcurveto", "1 -1 0 -17 rlineto",
                        "-4 -4 0 -3 vhcurveto",
                        "-14 0 -10 -4 -14 -34 rrcurveto", "-87 -200 rlineto",
                        "-5 -10 -8 -2 -8 0 -5 0 -5 5 -2 6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E6
     */
    public void testuni24E6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E6");
        assertNotNull(cs);
        assertEquals("uni24E6", cs.getName());
        String[] text =
                {"-15 37 362 22 203 37 hstem", "49 36 586 37 vstem",
                        "378 609 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-88 404 rmoveto", "0 17 -1 1 rlineto",
                        "0 -37 -1 -25 -25 -26 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-3 3 -2 3 vhcurveto",
                        "17 0 8 -3 11 -29 rrcurveto", "75 -206 rlineto",
                        "3 -7 5 -5 6 0 8 0 8 3 4 11 rrcurveto",
                        "56 147 56 -149 rlineto",
                        "2 -7 5 -5 6 0 7 0 9 3 4 10 rrcurveto",
                        "79 201 rlineto", "12 28 13 8 13 0 rrcurveto",
                        "4 4 1 4 hvcurveto", "0 17 -1 1 rlineto",
                        "0 -22 -1 -19 -21 -41 1 0 vhcurveto",
                        "-1 -1 0 -17 rlineto", "-2 2 -3 3 vhcurveto",
                        "8 hlineto", "", "26 0 7 -7 -11 -27 rrcurveto",
                        "-58 -150 -57 153 rlineto",
                        "-11 29 6 2 26 0 rrcurveto", "3 2 2 3 hvcurveto",
                        "0 17 -2 1 -55 -1 rlineto", "-19 -39 1 0 hvcurveto",
                        "-1 -1 0 -17 rlineto", "-4 2 -1 3 vhcurveto",
                        "19 0 6 -6 11 -26 rrcurveto",
                        "9 -23 -48 -129 -57 153 rlineto",
                        "-10 26 2 5 18 0 rrcurveto", "9 hlineto",
                        "3 2 2 3 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E7
     */
    public void testuni24E7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E7");
        assertNotNull(cs);
        assertEquals("uni24E7", cs.getName());
        String[] text =
                {"-15 37 143 22 222 22 178 37 hstem", "49 36 586 37 vstem",
                        "378 609 rmoveto", "515 callsubr", "-624 vmoveto",
                        "516 callsubr", "-144 195 rmoveto",
                        "0 -14 1 -2 rlineto",
                        "18 1 18 0 23 0 16 0 17 0 19 -1 rrcurveto",
                        "1 3 0 13 rlineto", "5 -1 2 -8 vhcurveto",
                        "-16 0 -8 2 14 17 rrcurveto", "44 56 rlineto",
                        "4 -8 38 -50 0 0 9 -13 -7 -4 -12 0 rrcurveto",
                        "-9 -1 -5 -6 hvcurveto", "0 -10 1 -2 rlineto",
                        "12 0 35 1 23 0 19 0 18 0 19 -1 rrcurveto",
                        "1 2 0 14 rlineto", "4 -1 3 -12 vhcurveto",
                        "-22 0 -11 14 -11 15 rrcurveto",
                        "-63 86 56 76 rlineto", "21 27 4 4 21 0 rrcurveto",
                        "12 0 3 6 hvcurveto", "0 11 -1 2 rlineto",
                        "-20 -1 -15 0 -20 0 -17 0 -16 0 -18 1 rrcurveto",
                        "-1 -1 0 -13 rlineto", "-7 5 -1 5 vhcurveto",
                        "20 0 1 -7 -6 -8 rrcurveto", "-48 -66 -37 55 rlineto",
                        "-8 12 -5 14 15 0 rrcurveto", "9 5 3 5 hvcurveto",
                        "0 12 -1 2 -65 0 -60 0 -1 -1 0 -13 rlineto",
                        "-5 2 -3 12 vhcurveto", "12 0 11 -7 9 -12 rrcurveto",
                        "71 -102 rlineto",
                        "-2 -2 -60 -72 0 0 -21 -24 -7 -3 -18 0 rrcurveto",
                        "-8 -4 0 -7 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E8
     */
    public void testuni24E8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E8");
        assertNotNull(cs);
        assertEquals("uni24E8", cs.getName());
        String[] text =
                {
                        "-15 37 46 41 319 22 159 37 hstem",
                        "49 36 586 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-15 448 rmoveto",
                        "0 16 -1 2 rlineto",
                        "0 -50 -1 -29 -19 -28 1 0 vhcurveto",
                        "-2 -1 0 -17 rlineto",
                        "-3 3 -2 4 vhcurveto",
                        "27 0 4 -10 11 -26 rrcurveto",
                        "75 -174 rlineto",
                        "6 -13 5 -17 0 -5 0 -6 -2 -6 -3 -8 -15 -38 -5 -16 -10 0 -6 0 -5 5 -5 6 -5 5 -5 3 -10 0 rrcurveto",
                        "-10 -19 -9 -18 -23 32 -10 11 hvcurveto",
                        "45 0 8 22 19 44 51 121 27 65 33 70 9 18 12 20 24 0 rrcurveto",
                        "4 2 2 3 hvcurveto", "0 17 -1 1 rlineto",
                        "0 -26 -1 -17 -23 -41 1 0 vhcurveto",
                        "-1 -2 0 -16 rlineto", "-2 2 -3 3 vhcurveto",
                        "3 hlineto", "15 11 -2 -10 hvcurveto",
                        "0 -3 -1 -7 -2 -5 rrcurveto",
                        "-69 -153 -66 156 rlineto", "-1 4 -1 6 0 3 rrcurveto",
                        "7 7 4 18 3 4 2 3 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24E9
     */
    public void testuni24E9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24E9");
        assertNotNull(cs);
        assertEquals("uni24E9", cs.getName());
        String[] text =
                {
                        "-15 37 142 29 208 30 178 37 hstem",
                        "49 36 586 37 vstem",
                        "378 609 rmoveto",
                        "515 callsubr",
                        "-624 vmoveto",
                        "516 callsubr",
                        "-70 446 rmoveto",
                        "-10 0 -6 4 -1 3 rrcurveto",
                        "-20 hlineto",
                        "-1 -28 -3 -26 -6 -30 rrcurveto",
                        "22 -2 rlineto",
                        "12 44 21 5 19 0 rrcurveto",
                        "77 0 -146 -216 rlineto",
                        "-5 -8 -1 -2 0 -4 rrcurveto",
                        "-4 5 -3 9 vhcurveto",
                        "197 hlineto",
                        "3 20 6 28 11 36 rrcurveto",
                        "-21 4 -8 -18 rlineto",
                        "-15 -32 -10 -9 -36 0 rrcurveto",
                        "-74 0 142 211 rlineto",
                        "14 21 -1 3 0 2 0 4 -4 0 -3 0 -2 0 -29 -3 -18 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24EA
     */
    public void testuni24EA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24EA");
        assertNotNull(cs);
        assertEquals("uni24EA", cs.getName());
        String[] text =
                {"-15 37 103 22 339 23 100 37 hstem",
                        "49 36 173 50 136 50 177 37 vstem", "378 609 rmoveto",
                        "515 callsubr", "-624 vmoveto", "516 callsubr",
                        "-3 140 rmoveto", "47 72 50 145 hvcurveto",
                        "0 61 -15 49 -27 36 -19 26 -28 17 -28 0 rrcurveto",
                        "-61 -58 -73 -122 -100 47 -89 70 hvcurveto",
                        "2 361 rmoveto", "520 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24EB
     */
    public void testuni24EB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24EB");
        assertNotNull(cs);
        assertEquals("uni24EB", cs.getName());
        String[] text =
                {"-15 171 490 -20 hstemhm",
                        "49 202 51 162 -103 30 125 191 hintmask 11101100",
                        "236 413 rmoveto", "534 callsubr", "hintmask 11110100",
                        "535 callsubr", "214 hmoveto",
                        "12 2 -10 -32 hvcurveto", "-152 vlineto",
                        "-22 -14 -15 -16 vhcurveto", "-36 hlineto",
                        "hintmask 11101100", "-3 -4 -3 -2 hvcurveto",
                        "-21 vlineto", "0 60 1 38 33 53 -1 0 vhcurveto",
                        "21 vlineto", "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-14 -11 15 22 hvcurveto", "261 -16 vlineto",
                        "-44 -27 -26 -12 -47 -17 rrcurveto", "10 -27 rlineto",
                        "14 7 30 9 13 0 rrcurveto", "-72 233 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24EC
     */
    public void testuni24EC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24EC");
        assertNotNull(cs);
        assertEquals("uni24EC", cs.getName());
        String[] text =
                {
                        "-15 171 324 166 hstemhm",
                        "49 192 51 86 -26 26 217 112 hintmask 11101100",
                        "227 413 rmoveto",
                        "12 2 -10 -32 hvcurveto",
                        "-152 vlineto",
                        "-22 -14 -15 -16 vhcurveto",
                        "-36 hlineto",
                        "-4 -3 -3 -2 hvcurveto",
                        "-21 vlineto",
                        "0 60 1 38 33 53 -1 0 vhcurveto",
                        "21 vlineto",
                        "4 -3 1 -3 vhcurveto",
                        "-28 hlineto",
                        "hintmask 11110100",
                        "-14 -12 15 22 hvcurveto",
                        "261 -16 vlineto",
                        "-43 -27 -26 -12 -47 -17 rrcurveto",
                        "9 -27 rlineto",
                        "15 7 30 9 13 0 rrcurveto",
                        "179 -37 rmoveto",
                        "10 18 8 16 hvcurveto",
                        "0 8 -5 8 0 8 rrcurveto",
                        "14 11 15 43 18 35 -13 -47 vhcurveto",
                        "0 -54 -22 -22 -45 -36 rrcurveto",
                        "hintmask 11101100",
                        "-48 -38 -43 -42 0 -48 rrcurveto",
                        "206 hlineto",
                        "3 29 7 35 9 30 rrcurveto",
                        "-24 6 rlineto",
                        "-11 -29 -16 -39 -31 0 rrcurveto",
                        "-81 hlineto",
                        "0 31 24 29 42 30 55 40 34 34 0 46 rrcurveto",
                        "63 -58 20 -50 -79 -28 -51 -27 -13 14 -11 12 vhcurveto",
                        "-28 270 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24ED
     */
    public void testuni24ED() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24ED");
        assertNotNull(cs);
        assertEquals("uni24ED", cs.getName());
        String[] text =
                {
                        "-15 162 330 169 hstem",
                        "49 186 111 24 54 96 85 102 vstem",
                        "221 413 rmoveto",
                        "12 2 -10 -32 hvcurveto",
                        "-152 vlineto",
                        "-22 -13 -15 -17 vhcurveto",
                        "-35 hlineto",
                        "-4 -4 -3 -2 hvcurveto",
                        "-21 vlineto",
                        "0 60 1 38 33 53 -1 0 vhcurveto",
                        "21 vlineto",
                        "4 -3 1 -3 vhcurveto",
                        "-28 hlineto",
                        "-13 -12 15 22 hvcurveto",
                        "261 -16 vlineto",
                        "-43 -27 -27 -12 -47 -17 rrcurveto",
                        "10 -27 rlineto",
                        "15 7 29 9 13 0 rrcurveto",
                        "299 hmoveto",
                        "0 -41 -30 -26 -44 -6 rrcurveto",
                        "2 -24 rlineto",
                        "8 1 5 1 7 0 rrcurveto",
                        "24 54 -7 -57 -69 -57 -13 -19 hvcurveto",
                        "-32 0 -10 8 -8 10 -6 7 -6 7 -14 0 rrcurveto",
                        "-11 -13 -10 -10 -21 52 -16 37 80 66 46 69 hvcurveto",
                        "0 58 -47 27 -33 3 29 16 22 23 0 29 rrcurveto",
                        "37 -33 22 -52 -87 -29 -53 -17 -3 4 -15 19 vhcurveto",
                        "23 0 2 17 1 12 1 25 34 10 20 0 20 0 21 -9 0 -31 rrcurveto",
                        "-142 233 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24EE
     */
    public void testuni24EE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24EE");
        assertNotNull(cs);
        assertEquals("uni24EE", cs.getName());
        String[] text =
                {"-15 171 23 74 393 -20 hstem", "49 202 279 177 vstem",
                        "236 413 rmoveto", "537 callsubr", "294 -20 rmoveto",
                        "8 -8 2 -5 vhcurveto",
                        "-7 0 -11 -12 -8 -9 -2 -3 -5 -8 0 -7 rrcurveto",
                        "-76 -91 vlineto", "23 34 59 82 45 70 rrcurveto",
                        "-30 9 -154 -218 4 -12 144 0 0 -50 rlineto",
                        "-21 -5 -3 -18 vhcurveto", "-14 hlineto",
                        "-4 -1 -3 -1 hvcurveto", "-21 vlineto",
                        "0 37 1 24 27 43 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 3 -4 vhcurveto", "-16 hlineto",
                        "-18 -4 6 19 hvcurveto", "49 52 vlineto",
                        "2 35 -54 0 rlineto", "-152 358 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24EF
     */
    public void testuni24EF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24EF");
        assertNotNull(cs);
        assertEquals("uni24EF", cs.getName());
        String[] text =
                {
                        "-15 161 219 71 34 176 hstem",
                        "49 192 111 25 212 118 vstem",
                        "227 413 rmoveto",
                        "12 2 -10 -32 hvcurveto",
                        "-152 vlineto",
                        "-22 -14 -15 -16 vhcurveto",
                        "-36 hlineto",
                        "-4 -3 -3 -2 hvcurveto",
                        "-21 vlineto",
                        "0 60 1 38 33 53 -1 0 vhcurveto",
                        "21 vlineto",
                        "4 -3 1 -3 vhcurveto",
                        "-28 hlineto",
                        "-14 -12 15 22 hvcurveto",
                        "261 -16 vlineto",
                        "-43 -27 -26 -12 -47 -17 rrcurveto",
                        "9 -27 rlineto",
                        "15 7 30 9 13 0 rrcurveto",
                        "305 -163 rmoveto",
                        "-42 -17 -37 -45 vhcurveto",
                        "-22 0 -11 10 -9 9 -8 8 -7 7 -14 0 rrcurveto",
                        "-10 -12 -9 -12 -24 60 -14 34 70 48 54 59 54 -36 52 -77 hvcurveto",
                        "-15 0 -25 -5 -9 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -21 -142 5 -4 rlineto",
                        "15 8 21 6 21 0 rrcurveto", "72 3 -59 -29 hvcurveto",
                        "-154 396 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F0
     */
    public void testuni24F0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F0");
        assertNotNull(cs);
        assertEquals("uni24F0", cs.getName());
        String[] text =
                {"-15 163 498 -20 hstem", "49 202 51 59 54 119 56 117 vstem",
                        "236 413 rmoveto", "537 callsubr", "354 -164 rmoveto",
                        "17 -10 79 -97 vhcurveto",
                        "-25 0 -27 -16 -14 -15 11 59 35 66 109 19 rrcurveto",
                        "20 vlineto", "-153 -12 -58 -103 0 -82 rrcurveto",
                        "-104 72 -29 49 80 28 65 36 vhcurveto",
                        "-56 -5 rmoveto",
                        "-37 -8 -35 -44 -28 -39 23 84 vhcurveto", "19 vlineto",
                        "22 17 21 6 14 0 rrcurveto", "57 5 -55 -22 hvcurveto",
                        "-156 402 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F1
     */
    public void testuni24F1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F1");
        assertNotNull(cs);
        assertEquals("uni24F1", cs.getName());
        String[] text =
                {"-15 171 279 -20 57 174 hstem", "49 206 51 80 vstem",
                        "240 413 rmoveto", "537 callsubr", "201 22 rmoveto",
                        "100 hlineto", "-26 -46 -56 -124 -35 -111 rrcurveto",
                        "34 hlineto", "31 105 57 122 53 91 rrcurveto",
                        "-174 hlineto", "-16 -5 1 5 hvcurveto", "-18 hlineto",
                        "-1 -27 -7 -40 -5 -28 rrcurveto", "22 -3 rlineto",
                        "11 48 8 7 27 0 rrcurveto", "-63 211 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F2
     */
    public void testuni24F2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F2");
        assertNotNull(cs);
        assertEquals("uni24F2", cs.getName());
        String[] text =
                {"-15 162 330 169 hstemhm",
                        "49 202 51 84 -25 10 59 103 70 104 hintmask 11101110",
                        "236 413 rmoveto", "534 callsubr", "hintmask 11110110",
                        "535 callsubr", "239 -101 rmoveto", "29 -15 rlineto",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-41 -29 -17 -37 -23 -42 16 44 vhcurveto",
                        "0 34 41 40 16 9 rrcurveto", "102 98 rmoveto",
                        "39 -46 28 -45 -52 -48 -29 -45 vhcurveto",
                        "0 -29 15 -26 40 -19 rrcurveto", "12 -6 rlineto",
                        "hintmask 11101110", "-38 -21 -44 -36 0 -37 rrcurveto",
                        "-65 67 -17 44 90 31 58 32 vhcurveto",
                        "0 31 -18 25 -31 17 rrcurveto", "-39 21 rlineto",
                        "59 34 3 30 0 15 rrcurveto", "-95 45 rmoveto",
                        "36 15 -18 -27 hvcurveto",
                        "0 -30 -23 -27 -16 -10 rrcurveto", "-20 11 rlineto",
                        "-36 20 -8 22 0 16 rrcurveto", "29 23 14 29 vhcurveto",
                        "-104 191 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F3
     */
    public void testuni24F3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F3");
        assertNotNull(cs);
        assertEquals("uni24F3", cs.getName());
        String[] text =
                {"-15 171 321 169 hstem", "49 200 51 82 56 119 56 94 vstem",
                        "234 413 rmoveto", "13 2 -10 -32 hvcurveto",
                        "-152 vlineto", "-22 -14 -15 -16 vhcurveto",
                        "-36 hlineto", "-4 -3 -3 -2 hvcurveto", "-21 vlineto",
                        "0 59 1 38 34 52 -1 0 vhcurveto", "21 vlineto",
                        "4 -3 1 -2 vhcurveto", "-28 hlineto",
                        "-14 -12 15 22 hvcurveto", "261 -16 vlineto",
                        "-43 -27 -26 -12 -47 -17 rrcurveto", "9 -27 rlineto",
                        "15 7 30 9 12 0 rrcurveto", "148 -37 rmoveto",
                        "-17 10 -79 96 vhcurveto",
                        "25 0 27 16 15 15 -12 -59 -34 -66 -110 -19 rrcurveto",
                        "-20 vlineto", "154 12 60 103 0 82 rrcurveto",
                        "104 -74 29 -50 -79 -28 -65 -36 vhcurveto",
                        "56 5 rmoveto", "37 7 35 44 29 39 -23 -84 vhcurveto",
                        "-19 vlineto", "-22 -17 -22 -6 -14 0 rrcurveto",
                        "-57 -4 55 22 hvcurveto", "-60 265 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F4
     */
    public void testuni24F4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F4");
        assertNotNull(cs);
        assertEquals("uni24F4", cs.getName());
        String[] text =
                {
                        "-15 162 331 168 hstem",
                        "49 85 215 30 59 127 59 83 vstem",
                        "160 376 rmoveto",
                        "9 19 8 16 hvcurveto",
                        "0 8 -5 8 0 8 rrcurveto",
                        "14 11 15 43 18 35 -13 -47 vhcurveto",
                        "0 -54 -22 -22 -45 -36 -48 -38 -43 -42 0 -48 rrcurveto",
                        "206 hlineto",
                        "3 29 7 35 8 30 rrcurveto",
                        "-23 6 rlineto",
                        "-11 -29 -16 -39 -32 0 rrcurveto",
                        "-80 hlineto",
                        "0 31 24 29 42 30 55 40 34 34 0 46 rrcurveto",
                        "63 -58 20 -50 -79 -28 -51 -27 -13 13 -11 13 vhcurveto",
                        "339 -229 rmoveto",
                        "59 66 49 119 121 -64 41 -58 -68 -55 -73 -93 -85 51 -79 69 hvcurveto",
                        "3 305 rmoveto",
                        "48 15 -73 -54 -77 -6 -77 -59 -54 -8 78 56 53 1 94 63 hvcurveto",
                        "-124 194 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F5
     */
    public void testuni24F5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F5");
        assertNotNull(cs);
        assertEquals("uni24F5", cs.getName());
        String[] text =
                {"276 -15 23 43 21 92 17 262 -20 160 19 45 23 hstem",
                        "43 23 40 24 242 42 231 24 40 23 vstem",
                        "388 583 rmoveto", "538 callsubr", "-532 vmoveto",
                        "539 callsubr", "596 vmoveto", "540 callsubr",
                        "-662 vmoveto", "541 callsubr", "-30 458 rmoveto",
                        "14 0 -14 -20 hvcurveto", "-201 vlineto",
                        "-17 0 -10 -22 vhcurveto", "-36 hlineto",
                        "-3 0 0 -3 -1 -2 rrcurveto",
                        "0 -12 81 1 81 -1 0 12 rlineto", "4 -3 1 -2 vhcurveto",
                        "-31 hlineto", "-19 -3 6 21 hvcurveto",
                        "294 -11 vlineto", "-29 -21 -20 -12 -52 -24 rrcurveto",
                        "7 -18 rlineto", "13 6 26 10 10 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F6
     */
    public void testuni24F6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F6");
        assertNotNull(cs);
        assertEquals("uni24F6", cs.getName());
        String[] text =
                {"278 -15 23 43 21 91 34 286 18 82 19 45 23 hstem",
                        "43 23 40 24 158 40 108 44 165 24 40 23 vstem",
                        "388 583 rmoveto", "538 callsubr", "-532 vmoveto",
                        "539 callsubr", "", "596 vmoveto", "540 callsubr",
                        "-662 vmoveto", "541 callsubr", "-99 438 rmoveto",
                        "-12 9 -10 13 9 13 6 15 vhcurveto",
                        "0 4 -1 5 -2 4 -1 4 -1 4 0 5 rrcurveto",
                        "14 10 21 41 20 37 -15 -53 vhcurveto",
                        "0 -36 -14 -26 -33 -34 rrcurveto", "-41 -42 rlineto",
                        "-54 -56 -6 -25 0 -33 rrcurveto",
                        "181 0 12 74 -15 2 rlineto",
                        "-8 -32 -10 -10 -20 0 rrcurveto", "-100 hlineto",
                        "0 28 40 38 3 3 rrcurveto", "55 54 rlineto",
                        "32 31 22 22 0 44 rrcurveto",
                        "67 -52 17 -45 -62 -32 -45 -33 vhcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni24F7
     */
    public void testuni24F7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F7");
        assertNotNull(cs);
        assertEquals("uni24F7", cs.getName());
        String[] text =
                {
                        "276 -15 23 43 21 87 18 309 18 79 19 45 23 hstemhm",
                        "43 23 40 24 162 36 105 38 -25 43 156 24 40 23 hintmask 1111111110011000",
                        "388 583 rmoveto",
                        "542 callsubr",
                        "-532 vmoveto",
                        "539 callsubr",
                        "596 vmoveto",
                        "540 callsubr",
                        "-662 vmoveto",
                        "541 callsubr",
                        "-2 501 rmoveto",
                        "hintmask 1111111111011000",
                        "24 23 -16 -33 hvcurveto",
                        "0 -28 -37 -44 -45 -8 rrcurveto",
                        "2 -17 rlineto",
                        "6 2 7 0 5 0 rrcurveto",
                        "hintmask 1111111110111000",
                        "31 44 -9 -63 -74 -55 -19 -19 hvcurveto",
                        "-28 0 -10 14 -7 10 -5 7 -6 7 -10 0 rrcurveto",
                        "-12 -9 -10 -9 -22 47 -15 33 66 58 42 77 hvcurveto",
                        "0 61 -42 24 -33 5 rrcurveto",
                        "hintmask 1111111111011000",
                        "52 33 5 29 0 15 rrcurveto",
                        "23 -17 36 -57 -81 -24 -53 -19 -1 1 -17 16 15 4 17 11 36 43 8 15 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F8
     */
    public void testuni24F8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F8");
        assertNotNull(cs);
        assertEquals("uni24F8", cs.getName());
        String[] text =
                {
                        "276 -15 23 43 21 93 15 73 28 302 19 45 23 hstem",
                        "43 23 40 24 263 40 212 24 40 23 vstem",
                        "388 583 rmoveto",
                        "538 callsubr",
                        "-532 vmoveto",
                        "539 callsubr",
                        "596 vmoveto",
                        "540 callsubr",
                        "-662 vmoveto",
                        "541 callsubr",
                        "5 387 rmoveto",
                        "-91 -93 vlineto",
                        "43 68 43 76 27 71 -7 1 -13 5 0 0 -3 0 -1 -1 -1 -2 -21 -48 -67 -131 -38 -41 -1 -1 0 -1 0 0 rrcurveto",
                        "0 -2 7 -12 5 -6 rlineto", "2 -3 0 -1 3 0 rrcurveto",
                        "115 -48 hlineto", "-17 -2 -8 -18 vhcurveto",
                        "-16 hlineto", "-3 -1 -2 -2 hvcurveto", "-13 vlineto",
                        "0 35 2 22 24 38 -2 0 vhcurveto", "13 vlineto",
                        "2 -1 2 -3 vhcurveto", "-16 hlineto",
                        "-17 -2 8 17 hvcurveto", "48 44 vlineto",
                        "3 28 -47 0 0 94 rlineto", "12 -1 6 -8 vhcurveto",
                        "-8 0 -11 -5 -7 -5 -4 -3 -1 -5 0 -3 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24F9
     */
    public void testuni24F9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24F9");
        assertNotNull(cs);
        assertEquals("uni24F9", cs.getName());
        String[] text =
                {
                        "276 -15 23 43 21 85 20 177 27 79 37 86 19 45 23 hstem",
                        "43 23 40 24 312 43 160 24 40 23 vstem",
                        "388 583 rmoveto",
                        "538 callsubr",
                        "-532 vmoveto",
                        "539 callsubr",
                        "596 vmoveto",
                        "540 callsubr",
                        "-662 vmoveto",
                        "541 callsubr",
                        "54 278 rmoveto",
                        "-51 -30 -35 -38 vhcurveto",
                        "-19 0 -9 12 -9 10 -7 10 -7 8 -12 0 rrcurveto",
                        "-10 -10 -7 -11 -23 49 -19 33 66 46 51 65 54 -35 54 -62 hvcurveto",
                        "-23 0 -21 -4 -12 -5 rrcurveto", "11 92 rlineto",
                        "20 -2 20 -2 27 0 16 0 19 0 23 2 rrcurveto",
                        "9 39 -4 1 rlineto",
                        "-32 -3 -30 -2 -29 0 -21 0 -20 1 -19 2 rrcurveto",
                        "-19 -160 rlineto", "23 10 21 4 27 0 rrcurveto",
                        "36 32 -30 -61 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24FA
     */
    public void testuni24FA() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24FA");
        assertNotNull(cs);
        assertEquals("uni24FA", cs.getName());
        String[] text =
                {
                        "276 -15 23 43 21 84 17 170 19 124 15 82 19 45 23 hstem",
                        "43 23 40 24 141 40 129 39 166 24 40 23 vstem",
                        "388 583 rmoveto",
                        "538 callsubr",
                        "-532 vmoveto",
                        "539 callsubr",
                        "596 vmoveto",
                        "540 callsubr",
                        "-662 vmoveto",
                        "541 callsubr",
                        "77 501 rmoveto",
                        "-1 15 rlineto",
                        "-58 -3 -39 -15 -38 -38 -39 -41 -19 -52 0 -54 rrcurveto",
                        "-116 65 -26 43 80 20 67 41 26 -11 72 -87 vhcurveto",
                        "-22 0 -32 -13 -14 -16 7 47 19 39 27 26 29 28 32 9 38 4 rrcurveto",
                        "-153 -170 rmoveto",
                        "23 26 23 1 12 0 rrcurveto",
                        "56 14 -56 -28 -61 -28 -25 -27 -30 -44 25 98 hvcurveto",
                        "0 6 1 9 0 5 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24FB
     */
    public void testuni24FB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24FB");
        assertNotNull(cs);
        assertEquals("uni24FB", cs.getName());
        String[] text =
                {"276 -15 23 43 21 391 34 86 19 45 23 hstem",
                        "43 23 40 24 515 24 40 23 vstem", "388 583 rmoveto",
                        "538 callsubr", "-532 vmoveto", "539 callsubr",
                        "596 vmoveto", "540 callsubr", "-662 vmoveto",
                        "541 callsubr", "-32 478 rmoveto", "105 hlineto",
                        "-43 -109 -44 -108 -38 -84 rrcurveto",
                        "2 -4 38 2 rlineto", "32 94 32 91 62 152 rrcurveto",
                        "-8 3 rlineto", "-10 -2 -12 -1 -21 0 rrcurveto",
                        "-112 hlineto", "-13 0 -2 3 -2 3 rrcurveto",
                        "-12 hlineto", "-2 -32 -5 -22 -8 -25 rrcurveto",
                        "16 -2 rlineto", "11 30 9 11 25 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24FC
     */
    public void testuni24FC() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24FC");
        assertNotNull(cs);
        assertEquals("uni24FC", cs.getName());
        String[] text =
                {
                        "276 -15 23 43 21 87 16 315 14 79 19 45 23 hstemhm",
                        "43 23 40 24 154 34 -22 37 110 34 -24 36 156 24 40 23 hintmask 1111111100001100",
                        "388 583 rmoveto", "542 callsubr", "-532 vmoveto",
                        "539 callsubr", "596 vmoveto", "540 callsubr",
                        "-662 vmoveto", "541 callsubr", "-4 190 rmoveto",
                        "hintmask 1111111110011100", "-26 -40 22 50 hvcurveto",
                        "0 16 11 39 47 32 rrcurveto", "26 -16 rlineto",
                        "36 -21 15 -26 0 -26 rrcurveto",
                        "-56 -44 -14 -25 vhcurveto",
                        "hintmask 1111111101101100", "93 260 rmoveto",
                        "40 -32 29 -54 -57 -38 -34 -42 vhcurveto",
                        "0 -32 16 -21 34 -23 rrcurveto",
                        "9 -6 -40 -32 rlineto", "hintmask 1111111110011100",
                        "-22 -20 -9 -25 0 -22 rrcurveto",
                        "-57 40 -31 59 72 34 54 43 vhcurveto",
                        "0 32 -15 25 -28 19 rrcurveto", "-33 23 rlineto",
                        "24 16 40 28 0 36 rrcurveto", "-89 55 rmoveto",
                        "hintmask 1111111101101100", "36 19 -29 -26 hvcurveto",
                        "0 -30 -35 -26 -15 -11 rrcurveto", "-17 10 rlineto",
                        "-35 23 -8 20 0 17 rrcurveto", "26 21 26 34 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24FD
     */
    public void testuni24FD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24FD");
        assertNotNull(cs);
        assertEquals("uni24FD", cs.getName());
        String[] text =
                {
                        "276 -15 23 43 21 88 15 124 19 170 17 78 19 45 23 hstem",
                        "43 23 40 24 167 40 129 40 139 24 40 23 vstem",
                        "388 583 rmoveto",
                        "538 callsubr",
                        "-532 vmoveto",
                        "539 callsubr",
                        "596 vmoveto",
                        "540 callsubr",
                        "-662 vmoveto",
                        "541 callsubr",
                        "-76 190 rmoveto",
                        "1 -15 rlineto",
                        "58 3 39 15 38 38 40 41 18 52 0 54 rrcurveto",
                        "116 -65 26 -43 -81 -20 -67 -41 -26 12 -72 87 vhcurveto",
                        "21 0 33 13 13 16 -6 -47 -20 -39 -26 -26 -29 -28 -32 -9 -38 -4 rrcurveto",
                        "153 170 rmoveto", "-24 -26 -22 -1 -12 0 rrcurveto",
                        "-56 -14 56 28 61 29 25 27 29 44 -25 -98 hvcurveto",
                        "0 -6 -1 -9 0 -5 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24FE
     */
    public void testuni24FE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24FE");
        assertNotNull(cs);
        assertEquals("uni24FE", cs.getName());
        String[] text =
                {
                        "286 -15 23 43 21 90 20 261 -20 64 20 76 19 45 23 hstem",
                        "43 23 40 24 154 42 53 45 122 45 54 24 40 23 vstem",
                        "388 583 rmoveto",
                        "538 callsubr",
                        "-532 vmoveto",
                        "539 callsubr",
                        "596 vmoveto",
                        "540 callsubr",
                        "-662 vmoveto",
                        "541 callsubr",
                        "95 177 rmoveto",
                        "43 65 46 129 hvcurveto",
                        "0 55 -13 45 -24 32 -18 23 -25 15 -25 0 rrcurveto",
                        "-55 -52 -66 -109 -90 42 -80 62 hvcurveto",
                        "3 325 rmoveto",
                        "9 0 9 -3 7 -5 17 -16 18 -41 0 -74 0 -51 -4 -35 -7 -29 -13 -45 -28 -6 -10 0 rrcurveto",
                        "-51 -9 96 48 137 37 24 25 hvcurveto",
                        "-215 -44 rmoveto", "13 0 -14 -20 hvcurveto",
                        "-201 vlineto", "-17 0 -10 -22 vhcurveto",
                        "-35 hlineto", "-3 -1 -3 -2 hvcurveto",
                        "0 -12 81 1 80 -1 0 12 rlineto", "4 -3 1 -2 vhcurveto",
                        "-30 hlineto", "-20 -3 6 21 hvcurveto",
                        "294 -11 vlineto", "-29 -21 -20 -12 -51 -24 rrcurveto",
                        "7 -18 rlineto", "12 6 26 10 11 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni24FF
     */
    public void testuni24FF() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni24FF");
        assertNotNull(cs);
        assertEquals("uni24FF", cs.getName());
        String[] text =
                {
                        "-15 161 330 170 hstem",
                        "49 206 58 128 59 207 vstem",
                        "375 146 rmoveto",
                        "59 66 50 119 121 -64 40 -58 -69 -54 -72 -94 -85 50 -79 70 hvcurveto",
                        "3 306 rmoveto",
                        "48 15 -73 -54 -77 -6 -77 -59 -54 -9 78 56 53 2 94 63 hvcurveto",
                        "194 vmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25B3
     */
    public void testuni25B3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25B3");
        assertNotNull(cs);
        assertEquals("uni25B3", cs.getName());
        String[] text =
                {"40 37 25 hstem", "44 454 vstem", "498 37 rmoveto",
                        "-227 393 -227 -393 rlineto", "409 25 rmoveto",
                        "-364 0 182 315 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25B6
     */
    public void testuni25B6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25B6");
        assertNotNull(cs);
        assertEquals("uni25B6", cs.getName());
        String[] text =
                {"9 -9 454 hstem", "73 394 vstem", "73 -9 rmoveto",
                        "394 228 -394 226 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25B7
     */
    public void testuni25B7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25B7");
        assertNotNull(cs);
        assertEquals("uni25B7", cs.getName());
        String[] text =
                {"9 -9 454 hstem", "73 26 vstem", "73 -9 rmoveto",
                        "394 228 -394 226 rlineto", "26 -408 rmoveto",
                        "0 363 315 -181 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25BD
     */
    public void testuni25BD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25BD");
        assertNotNull(cs);
        assertEquals("uni25BD", cs.getName());
        String[] text =
                {"40 404 26 hstem", "44 454 vstem", "44 430 rmoveto",
                        "227 -393 227 393 rlineto", "-409 -26 rmoveto",
                        "364 0 -182 -314 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25C0
     */
    public void testuni25C0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25C0");
        assertNotNull(cs);
        assertEquals("uni25C0", cs.getName());
        String[] text =
                {"9 -8 454 hstem", "44 394 vstem", "438 446 rmoveto",
                        "-394 -227 394 -227 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25C1
     */
    public void testuni25C1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25C1");
        assertNotNull(cs);
        assertEquals("uni25C1", cs.getName());
        String[] text =
                {"9 -8 454 hstem", "412 26 vstem", "438 446 rmoveto",
                        "-394 -227 394 -227 rlineto", "-26 409 rmoveto",
                        "0 -363 -315 181 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25C6
     */
    public void testuni25C6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25C6");
        assertNotNull(cs);
        assertEquals("uni25C6", cs.getName());
        String[] text =
                {"165 29 215 rmoveto", "543 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25C7
     */
    public void testuni25C7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25C7");
        assertNotNull(cs);
        assertEquals("uni25C7", cs.getName());
        String[] text =
                {"165 29 215 rmoveto", "", "543 callsubr", "-252 -301 rmoveto",
                        "249 249 255 -256 -249 -248 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni25C9
     */
    public void testuni25C9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25C9");
        assertNotNull(cs);
        assertEquals("uni25C9", cs.getName());
        String[] text =
                {
                        "63 -15 26 107 205 103 26 hstem",
                        "49 26 103 205 107 26 vstem",
                        "282 426 rmoveto",
                        "544 callsubr",
                        "-441 vmoveto",
                        "545 callsubr",
                        "-104 235 rmoveto",
                        "-56 46 -46 56 57 46 46 56 57 -46 46 -57 -56 -46 -46 -57 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25CE
     */
    public void testuni25CE() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25CE");
        assertNotNull(cs);
        assertEquals("uni25CE", cs.getName());
        String[] text =
                {
                        "63 -15 16 29 14 349 12 32 15 hstem",
                        "49 15 28 16 349 16 27 16 vstem",
                        "282 393 rmoveto",
                        "96 79 -78 -96 -97 -79 -78 -96 -97 -77 79 96 96 78 78 96 hvcurveto",
                        "-363 vmoveto",
                        "105 86 85 106 105 -88 79 -103 -103 -87 -79 -105 -105 85 -86 105 hvcurveto",
                        "407 vmoveto",
                        "121 97 -97 -121 -121 -98 -97 -120 -121 -97 98 120 120 97 98 121 hvcurveto",
                        "-452 vmoveto", "545 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D0
     */
    public void testuni25D0() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D0");
        assertNotNull(cs);
        assertEquals("uni25D0", cs.getName());
        String[] text =
                {
                        "63 -15 26 415 26 hstem",
                        "49 233 208 26 vstem",
                        "282 426 rmoveto",
                        "58 0 53 -24 38 -38 36 -37 23 -52 0 -56 0 -57 -23 -52 -37 -37 -38 -38 -52 -24 -58 0 rrcurveto",
                        "-233 208 rmoveto", "546 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D1
     */
    public void testuni25D1() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D1");
        assertNotNull(cs);
        assertEquals("uni25D1", cs.getName());
        String[] text =
                {
                        "63 -15 26 415 26 hstem",
                        "49 26 207 234 vstem",
                        "282 11 rmoveto",
                        "-58 0 -53 24 -37 38 -37 38 -22 51 0 57 0 57 23 51 36 38 38 38 53 23 57 0 0 -35 1 -378 -1 -2 rrcurveto",
                        "234 208 rmoveto",
                        "0 64 -26 58 -43 43 -42 42 -58 26 -65 0 -65 0 -58 -26 -43 -43 -41 -42 -26 -58 0 -64 0 -64 25 -57 41 -43 43 -43 59 -27 65 0 rrcurveto",
                        "64 0 57 26 43 41 43 42 27 59 0 66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D2
     */
    public void testuni25D2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D2");
        assertNotNull(cs);
        assertEquals("uni25D2", cs.getName());
        String[] text =
                {
                        "63 -8 26 208 233 hstem",
                        "49 26 415 26 vstem",
                        "490 226 rmoveto",
                        "0 -59 -24 -52 -38 -38 -38 -36 -51 -23 -57 0 -57 0 -51 23 -38 37 -38 38 -23 52 0 58 rrcurveto",
                        "",
                        "207 233 rmoveto",
                        "-64 0 -58 -26 -43 -42 -42 -43 -26 -58 0 -64 0 -65 26 -59 43 -42 42 -42 58 -26 64 0 64 0 57 26 43 41 43 42 27 59 0 66 rrcurveto",
                        "0 63 -26 58 -41 42 -42 43 -59 27 -66 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D3
     */
    public void testuni25D3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D3");
        assertNotNull(cs);
        assertEquals("uni25D3", cs.getName());
        String[] text =
                {
                        "63 -21 233 207 26 hstem",
                        "49 26 415 26 vstem",
                        "75 212 rmoveto",
                        "0 58 24 53 38 37 37 37 52 22 56 0 57 0 52 -23 37 -36 38 -38 24 -52 0 -58 -36 0 -378 -1 -1 1 rrcurveto",
                        "207 -233 rmoveto",
                        "65 0 58 25 42 43 43 42 26 58 0 65 0 65 -27 58 -43 43 -42 41 -58 26 -64 0 -63 0 -58 -25 -42 -41 -43 -43 -27 -59 0 -65 rrcurveto",
                        "0 -64 25 -57 41 -43 43 -43 59 -26 65 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D4
     */
    public void testuni25D4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D4");
        assertNotNull(cs);
        assertEquals("uni25D4", cs.getName());
        String[] text =
                {
                        "63 -15 26 415 26 hstem",
                        "49 26 415 26 vstem",
                        "75 219 rmoveto",
                        "0 58 24 53 38 37 37 37 52 22 56 0 rrcurveto",
                        "-207 208 vlineto",
                        "0 -57 -23 -52 -37 -37 -38 -38 -52 -24 -58 0 -57 0 -52 23 -38 38 -37 38 -23 52 0 57 rrcurveto",
                        "-26 hmoveto", "546 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D5
     */
    public void testuni25D5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D5");
        assertNotNull(cs);
        assertEquals("uni25D5", cs.getName());
        String[] text =
                {
                        "63 -15 26 415 26 hstem",
                        "49 26 415 26 vstem",
                        "75 219 rmoveto",
                        "65 0 75 -1 67 0 rrcurveto",
                        "208 vlineto",
                        "58 0 53 -24 38 -38 36 -37 23 -52 0 -56 0 -57 -23 -52 -37 -37 -38 -38 -52 -24 -58 0 -57 0 -52 23 -38 38 -37 38 -23 52 0 57 rrcurveto",
                        "-26 hmoveto", "546 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D6
     */
    public void testuni25D6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D6");
        assertNotNull(cs);
        assertEquals("uni25D6", cs.getName());
        String[] text =
                {
                        "-146 49 233 vstem",
                        "282 452 rmoveto",
                        "-65 0 -59 -27 -43 -43 -41 -42 -25 -58 0 -63 0 -64 26 -58 41 -42 43 -43 58 -27 65 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni25D7
     */
    public void testuni25D7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni25D7");
        assertNotNull(cs);
        assertEquals("uni25D7", cs.getName());
        String[] text =
                {
                        "-146 73 234 vstem",
                        "73 -15 rmoveto",
                        "66 0 59 27 42 43 41 43 26 57 0 64 0 64 -26 58 -42 42 -42 43 -59 26 -65 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2605
     */
    public void testuni2605() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2605");
        assertNotNull(cs);
        assertEquals("uni2605", cs.getName());
        String[] text =
                {
                        "109 194 194 rmoveto",
                        "-72 -200 178 124 170 -123 -65 196 167 116 -205 0 -63 193 -70 -193 -195 0 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2619
     */
    public void testuni2619() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2619");
        assertNotNull(cs);
        assertEquals("uni2619", cs.getName());
        String[] text =
                {
                        "605 -67 68 0.942947387695 34.0570526123 -18 31 44 65 -49 25 63 36 -18 26 21 21 7 28 -17 39 66 65 -46 28 61 35 -20 68 hstemhm",
                        "390 56 384 32 99 34 -30 28 hintmask 100000010101011101000000",
                        "639 567 rmoveto",
                        "26 2 rlineto",
                        "-4 -14 2 -10 8 -8 4 -6 8 -2 7 0 8 0 11 3 5 9 4 7 2 6 -1 13 10 -12 2 -15 -4 -14 -2 -3 -2 -5 -4 -7 rrcurveto",
                        "-50 6 -28 -10 -15 -11 -21 -17 -9 -17 -4 -22 -17 10 -25 3 -18 0 -19 0 -21 -9 -14 -12 rrcurveto",
                        "-28 -1 rlineto",
                        "2 10 0 11 -2 5 -3 7 -9 4 -9 0 -10 0 -8 -4 -6 -6 -7 -5 -4 -7 0 -14 0 -12 6 -8 7 -4 5 -4 24 1 22 0 rrcurveto",
                        "-12 -24 -17 -35 -8 -11 -7 -12 -7 -9 -10 -9 -11 -13 -13 -11 -11 0 -6 0 -17 7 -13 6 1 6 -5 21 5 19 6 2 4 -1 4 -1 rrcurveto",
                        "3 -13 2 -7 -3 -13 9 1 0 -7 14 9 10 6 3 8 0 9 0 11 -4 6 -10 7 -12 9 -15 9 -3 8 -3 9 6 19 2 16 rrcurveto",
                        "-37 -19 -4 -12 -9 -23 -7 -18 2 -20 -2 -23 rrcurveto",
                        "hintmask 100100111000001101000000",
                        "-12 3 -14 3 -11 0 -25 -1 -12 -3 -20 -15 -14 -10 -8 -9 -14 -12 12 -13 8 -10 12 -10 11 -9 21 -11 21 0 20 0 13 2 12 6 rrcurveto",
                        "2 -22 -1 -19 7 -17 8 -23 -2 -15 44 -20 -2 18 -7 21 3 8 4 9 14 9 12 9 11 7 3 6 0 12 0 7 -3 9 -9 6 rrcurveto",
                        "-15 8 1 -8 -9 1 3 -13 -2 -6 -4 -12 -4 -1 -4 -1 -5 2 -5 17 4 18 0 9 13 3 14 3 6 0 12 0 12 -11 18 -20 rrcurveto",
                        "15 -16 19 -26 13 -17 -18 0 -25 -1 -3 -3 -6 -4 -7 -5 0 -15 0 -14 6 -9 6 -3 7 -5 6 -6 10 0 9 0 10 7 2 5 rrcurveto",
                        "1 5 -1 21 0 0 rrcurveto",
                        "26 -1 rlineto",
                        "hintmask 101010010000101101000000",
                        "11 -12 14 -9 16 0 30 0 27 12 25 16 -3 -25 17 -38 15 -17 20 -23 37 -17 33 1 4 0 3 1 4 0 3 -7 2 -5 1 -3 rrcurveto",
                        "5 -13 -2 -16 -10 -12 1 13 -2 6 -4 7 -6 9 -11 3 -7 0 -8 0 -7 -2 -5 -6 -7 -8 -2 -10 3 -14 rrcurveto",
                        "-26 2 rlineto",
                        "12 -14 11 -17 30 1 31",
                        "1 19 16 5 13 7 16 2 22 -4 24 21 7 21 10 12 10 14 13 17 18 10 18 12 -13 31 -14 9 0 rrcurveto",
                        "9 0 8 4 7 7 8 7 3 18 0 11 0 9 -4 8 -7 7 -7 7 -8 3 -9 0 -11 0 1 -8 -7 -5 -6 -7 -14 6 -4 -4 rrcurveto",
                        "1 14 -1 16 -2 11 -6 32 -27 36 -18 16 rrcurveto",
                        "22 hlineto",
                        "42 -16 37 -24 26 -28 19 -22 10 -28 0 -28 0 -35 -8 -35 -21 -20 -29 -26 -38 -13 -44 -18 -21 -9 -38 -17 -22 -24 -26 -29 -18 -34 -6 -21 rrcurveto",
                        "-34 22 -37 39 -13 21 -13 22 -35 54 -13 28 0 0 -11 22 -3 21 -37 -11 3 -16 -62 -1 -79 -2 -70 38 -56 44 -43 34 -59 50 -57 63 rrcurveto",
                        "62 69 51 47 42 41 80 77 66 18 53 -1 50 -1 26 -5 37 -23 21 55 63 103 57 47 rrcurveto",
                        "hintmask 100000010010011110000000",
                        "24 -36 10 -34 28 -23 33 -26 79 -27 31 -13 40 -19 33 -42 0 -47 -1 -34 -13 -25 -30 -30 -12 -12 -28 -20 -36 -16 rrcurveto",
                        "-8 -3 -20 0 rlineto",
                        "12 9 11 16 9 15 9 15 8 18 1 15 0 9 1 13 -2 13 6 0 7 2 4 -5 7 -6 0 -7 10 0 10 0 8 3 7 7 rrcurveto",
                        "6 7 4 8 0 9 0 10 -3 18 -7 7 -7 8 -8 4 -10 0 -8 0 -28 -13 -13 -12 -15 20 -32 28 -50 12 6 25 -2 19 -7 17 rrcurveto",
                        "-6 14 -19 15 -30 1 rrcurveto",
                        "-31 1 -11 -17 -11 -14 rrcurveto",
                        "hintmask 100001010100001100000000",
                        "-1 -266 rmoveto",
                        "39 22 -27 -6 -9 -22 -26 -37 hvcurveto",
                        "-36 0 -20 17 -31 18 rrcurveto",
                        "27 17 19 16 39 0 rrcurveto",
                        "-429 147 rmoveto",
                        "-185 -184 rlineto",
                        "61 -72 71 -55 56 -48 43 -38 91 -51 89 2 32 1 37 11 17 8 14 -35 36 -65 16 -23 41 -58 43 -28 43 -26 2 54 22 34 28 28 rrcurveto",
                        "13 13 42 23 35 14 44 17 30 10 29 30 rrcurveto",
                        "hintmask 100000010000101101000000",
                        "25 27 9 35 0 44 0 31 -14 39 -22 24 -16 18 -18 18 -19 13 rrcurveto",
                        "40 -5 139 -44 0 36 -57 22 56 21 -1 35 -137 -41 -41 -6 -1 0 rlineto",
                        "18 13 12 11 7 8 rrcurveto",
                        "hintmask 100000010000101110000000",
                        "16 15 39 35 1 64 1 61 -41 52 -56 23 -34 14 -52 18 -32 19 -36 21 -45 71 -4 42 -72 -57 -60 -76 -39 -85 -24 8 -37 15 -42 0 rrcurveto",
                        "",
                        "-89 0 -92 -71 -32 -30 rrcurveto",
                        "-9 -180 rmoveto",
                        "hintmask 100000111000001100000000",
                        "15 14 18 8 23 0 21 0 18 -8 19 -14 -17 -16 -21 -11 -23 0 -18 0 -19 10 -16 17 rrcurveto",
                        "521 32 rmoveto",
                        "hintmask 100000010100001100000000",
                        "14 -5 19 0 8 6 10 8 2 24 -6 12 -6 11 -22 24 -9 23 -9 22 11 29 9 25 39 -12 31 -28 7 -21 3 -5 5 -9 0 -22 rrcurveto",
                        "-1 -14 rlineto",
                        "-1 -8 -2 -12 -11 -17 -11 -19 -8 -8 -6 -6 -4 -4 -5 -3 -2 -6 -18 0 -14 1 -4 0 -6 0 -6 6 -7 8 rrcurveto",
                        "-37 30 rmoveto",
                        "-17 8 -19 2 -9 0 -17 0 -28 -8 -15 -9 -16 -10 -16 -13 -16 -9 -17 -9 -10 -6 -16 -8 19 -9 20 -9 11 -6 10 -6 19 -14 12 -8 rrcurveto",
                        "hintmask 101011010101001100000000",
                        "12 -8 27 -11 23 0 18 0 16 4 12 5 -7 -11 -7 -12 1 -17 1 -32 9 -30 8 -19 rrcurveto",
                        "18 -36 -3 0 -2 0 rlineto",
                        "-30 2 -12 11 -11 11 -10 11 -17 29 -5 19 -3 14 -4 24 4 13 -16 -16 -18 -10 -17 -8 -17 -8 -10 -7 -19 0 -7 0 -9 6 -10 8 rrcurveto",
                        "9 -2 11 -2 9 1 22 1 2 13 -2 13 -2 15 -11 5 -10 3 -14 3 -26 -10 -21 15 -21 15 -6 6 -14 10 -11 16 -7 1 -6 5 rrcurveto",
                        "-5 4 -4 2 -4 2 2 1 2 1 3 1 7 4 4 6 10 9 7 7 9 9 10 12 rrcurveto",
                        "41 30 rlineto",
                        "25 18 10 -7 12 3 10 2 11 6 2 14 2 14 -2 12 -22 2 -13 1 -15 -4 -11 -4 1 2 2 2 2 2 12 13 22 5 16 0 rrcurveto",
                        "16 0 29 -13 29 -19 -5 27 9 35 17 15 14 13 18 5 27 0 rrcurveto",
                        "10 -2 rlineto",
                        "-7 -13 -7 -13 -4 -8 -8 -19 -9 -30 -2 -32 0 -17 7 -14 8 -10 rrcurveto",
                        "90 -68 rmoveto",
                        "5 -13 18 -10 14 -17 12 -15 7 -28 0 -27 0 -13 -2 -12 -5 -10 -7 -13 -11 -14 -18 -14 -11 -10 -14 -5 -15 -5 -10 26 -10 30 8 22 rrcurveto",
                        "9 23 22 24 6 11 6 12 -1 25 -11 7 -6 7 -21 -1 -17 -6 2 3 3 3 1 4 6 11 5 3 10 1 4 1 10 0 11 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni261B
     */
    public void testuni261B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni261B");
        assertNotNull(cs);
        assertEquals("uni261B", cs.getName());
        String[] text =
                {
                        "496 39 16 -7 14 5 30 265 9 -3 15 hstemhm",
                        "111 26 hintmask 00101100",
                        "137 205 rmoveto",
                        "30 17 133 47 vhcurveto",
                        "4 0 5 -4 6 -3 rrcurveto",
                        "2 2 rlineto",
                        "-5 13 -9 7 -14 0 -2 0 -2 0 -2 -1 rrcurveto",
                        "hintmask 00110100",
                        "-154 -11 0 -9 rlineto",
                        "hintmask 01101100",
                        "126 6 rlineto",
                        "-31 -32 -14 -76 0 -62 0 -49 10 -66 25 -29 rrcurveto",
                        "-122 8 0 -14 rlineto",
                        "hintmask 10101100",
                        "147 -9 5 0 rlineto",
                        "15 0 10 5 7 12 -3 -1 -5 0 -6 0 rrcurveto",
                        "-35 -22 50 100 hvcurveto",
                        "513 96 rmoveto",
                        "133 19 190 -30 0 58 0 41 -149 4 -100 5 -89 5 -139 18 -24 0 rrcurveto",
                        "hintmask 01110100",
                        "-15 0 -78 -24 -67 -35 -30 -15 -50 -3 -20 0 rrcurveto",
                        "-9 hlineto",
                        "-29 -34 -15 -49 0 -60 0 -52 10 -40 21 -30 13 -3 89 -7 15 -7 76 -45 54 -8 25 0 53 0 66 8 54 24 22 8 11 15 0 19 rrcurveto",
                        "0 22 -17 -6 -6 11 25 8 12 13 0 20 0 22 -26 20 0 0 31 16 14 17 0 20 0 17 -14 18 -37 20 rrcurveto",
                        "-574 -219 rmoveto",
                        "-8 8 -7 11 10 9 7 8 8 -9 7 -10 -11 -8 -7 -8 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni261E
     */
    public void testuni261E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni261E");
        assertNotNull(cs);
        assertEquals("uni261E", cs.getName());
        String[] text =
                {
                        "393 8 26 0 25 40 26 4 27 26 26 -4 26 -2 2 36 24 24 29 32 28 -10 10 hstemhm",
                        "24 29 114 32 167 22 32 26 101 19 23 26 0 27 -11 26 181 32 hintmask 111100111001111110010000",
                        "435 228 rmoveto",
                        "-22 -25 -20 -17 -24 13 -11 24 42 122 38 38 hvcurveto",
                        "0 10 -9 9 -17 11 2 -5 1 -5 0 -5 rrcurveto",
                        "hintmask 111101011001111110010000",
                        "-29 -30 -14 -36 vhcurveto",
                        "-20 0 -26 24 -19 0 rrcurveto",
                        "403 98 rmoveto",
                        "33 -99 18 -163 vhcurveto",
                        "hintmask 111100011101111110010000",
                        "-26 0 -45 -2 -31 0 31 -30 25 -27 18 -24 rrcurveto",
                        "30 -2 37 -2 27 0 rrcurveto",
                        "14 0 35 0 rlineto",
                        "67 80 4 32 hvcurveto",
                        "-311 -292 rmoveto",
                        "hintmask 111100011001111110110000",
                        "47 57 25 27 15 -6 8 -13 hvcurveto",
                        "-36 -14 rlineto",
                        "-64 -24 -34 5 0 -15 rrcurveto",
                        "-17 23 -10 26 vhcurveto",
                        "88 123 rmoveto",
                        "hintmask 111110011001111110010000",
                        "16 -8 9 -17 vhcurveto",
                        "-7 0 -111 -48 -25 -4 -1 -2 0 -2 0 0 rrcurveto",
                        "-14 0 -19 36 42 91 24 40 vhcurveto",
                        "hintmask 111101011011111110010000",
                        "-113 73 rmoveto",
                        "9 36 5 20 12 -104 126 -55 hvcurveto",
                        "-65 0 -42 -79 -82 0 rrcurveto",
                        "-189 vlineto",
                        "101 0 -30 -66 185 0 rrcurveto",
                        "3 12 rlineto",
                        "-26 2 -12 13 0 25 0 3 2 7 3 8 rrcurveto",
                        "-4 hlineto",
                        "-38 0 -18 19 1 40 rrcurveto",
                        "hintmask 111110011001111110010000",
                        "-18 -4 -14 -2 -12 0 -22 0 -24 9 -26 21 rrcurveto",
                        "10 vlineto",
                        "29 -9 24 -5 17 0 29 0 28 13 27 26 rrcurveto",
                        "-48 54 8 10 rlineto",
                        "7 -7 87 -74 44 0 rrcurveto",
                        "-449 115 rmoveto",
                        "0 -256 114 1 0 261 rlineto",
                        "26 -8 rmoveto",
                        "82 0 41 75 73 0 rrcurveto",
                        "hintmask 111100111101111110010000",
                        "17 0 19 -4 22 -11 rrcurveto",
                        "121 hlineto",
                        "128 174 -7 -71 -57 -116 -2 -95 hvcurveto",
                        "-20 0 -42 0 rlineto",
                        "12 -12 6 -12 0 -12 0 -6 -3 -8 -4 -9 rrcurveto",
                        "23 -10 11 -15 0 -21 0 -11 -3 -11 -7 -11 rrcurveto",
                        "hintmask 111100111101111110110000",
                        "17 -10 8 -14 0 -17 0 -50 -74 -29 -61 0 -27 0 -19 9 -13 19 -5 -1 -2 0 0 1 -20 -2 -13 0 -5 0 -137 0 -4 66 -75 0 rrcurveto",
                        "-2 -1 -2 0 -1 0 rrcurveto", "-4 -48 rlineto",
                        "-60 -5 -70 -6 -39 -5 rrcurveto",
                        "0 338 165 4 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2627
     */
    public void testuni2627() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2627");
        assertNotNull(cs);
        assertEquals("uni2627", cs.getName());
        String[] text =
                {"85 1 24 -24 20 285 20 23 30 237 31 -31 22 hstemhm",
                        "246 72 166 69 hintmask 01110011", "187 306 rmoveto",
                        "5 5 3 3 hvcurveto",
                        "0 14 -4 2 -90 -2 -66 2 -3 -2 0 -14 rlineto",
                        "-3 8 -3 10 vhcurveto", "1 hlineto",
                        "5 0 18 -14 28 -21 rrcurveto", "139 -112 rlineto",
                        "1 -1 2 -1 0 -1 rrcurveto",
                        "0 -5 -2 -2 -122 -92 rlineto",
                        "-32 -23 -18 -13 -7 0 rrcurveto", "-2 hlineto",
                        "-12 -7 -2 -5 hvcurveto", "0 -13 4 -1 rlineto", "",
                        "0 35 1 21 24 38 -1 0 vhcurveto", "1 1 0 15 rlineto",
                        "4 -2 1 -7 vhcurveto", "-1 hlineto",
                        "-13 -2 2 7 hvcurveto", "0 4 5 6 19 15 rrcurveto",
                        "80 61 0 -52 rlineto", "hintmask 10110011",
                        "-25 -11 -14 -25 vhcurveto", "-3 hlineto",
                        "-4 -3 -3 -4 hvcurveto", "hintmask 01110011",
                        "0 -17 2 -2 rlineto", "0 49 2 33 35 38 -2 0 vhcurveto",
                        "2 2 0 17 rlineto", "hintmask 10110011",
                        "4 -4 3 -3 vhcurveto", "-4 hlineto",
                        "-20 -10 12 27 hvcurveto", "0 40 55 -40 rlineto",
                        "31 -26 7 -6 0 -3 rrcurveto", "hintmask 01111011",
                        "-6 -2 -2 -9 vhcurveto", "-1 hlineto",
                        "-7 -4 -1 -4 hvcurveto", "0 -15 3 -1 rlineto",
                        "0 53 1 34 26 41 -1 0 vhcurveto", "3 1 0 14 rlineto",
                        "5 -6 1 -14 vhcurveto", "-1 hlineto",
                        "-5 0 -1 2 -44 34 rrcurveto", "-139 107 rlineto",
                        "-3 3 0 6 6 4 rrcurveto", "125 94 rlineto",
                        "38 27 11 8 17 0 rrcurveto", "2 hlineto",
                        "8 9 1 5 hvcurveto", "0 14 -2 2 rlineto",
                        "0 -13 -2 -44 -43 -22 2 0 vhcurveto",
                        "-4 -2 0 -14 rlineto", "-4 4 -2 6 6 4 -3 -5 vhcurveto",
                        "0 -5 -2 -6 -21 -16 rrcurveto", "-92 -69 rlineto",
                        "-4 -3 -3 -2 -3 -2 rrcurveto", "163 vlineto",
                        "12 -5 10 -4 24 0 rrcurveto",
                        "147 42 85 76 53 -29 84 -149 hvcurveto",
                        "-21 0 -32 -1 -47 -3 rrcurveto", "hintmask 01110111",
                        "-43 -2 -53 -3 -13 0 rrcurveto", "-18 vlineto",
                        "-2 1 -4 6 vhcurveto", "4 0 21 2 8 0 rrcurveto",
                        "16 24 -6 -34 hvcurveto", "0 -344 -50 40 rlineto",
                        "-16 14 -6 7 0 4 rrcurveto", "5 1 4 12 vhcurveto",
                        "131 298 rmoveto", "hintmask 00111011",
                        "16 7 19 5 15 0 rrcurveto",
                        "56 60 -8 -114 -97 -46 -18 -79 hvcurveto",
                        "-19 0 -11 2 -11 2 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni262F
     */
    public void testuni262F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni262F");
        assertNotNull(cs);
        assertEquals("uni262F", cs.getName());
        String[] text =
                {
                        "142 -16 156 100 77 -4 101 130 25 hstemhm",
                        "223 96 101 78 92 24 hintmask 10111110",
                        "146 275 rmoveto",
                        "-21 17 -18 21 21 18 18 21 21 -18 17 -21 vhcurveto",
                        "-21 -17 -17 -21 hvcurveto",
                        "274 4 rmoveto",
                        "hintmask 11011110",
                        "-21 18 -18 20 21 19 18 21 21 -19 17 -21 -20 -18 -17 -21 vhcurveto",
                        "37 -139 rmoveto",
                        "82 51 62 77 151 -121 114 -147 hvcurveto",
                        "-156 0 -103 -109 -9 -160 rrcurveto",
                        "hintmask 10111110",
                        "11 92 41 47 78 0 rrcurveto",
                        "61 74 -42 -95 -109 89 -28 49 hvcurveto",
                        "-135 -156 rmoveto",
                        "-170 -123 132 159 170 135 124 158 161 131 -125 -169 -160 -121 -131 -171 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2639
     */
    public void testuni2639() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2639");
        assertNotNull(cs);
        assertEquals("uni2639", cs.getName());
        String[] text =
                {
                        "63 -8 29 120 25 241 28 hstem",
                        "61 28 158 29 199 29 vstem",
                        "276 147 rmoveto",
                        "4 -1 5 -43 -10 -2 rlineto",
                        "-5 87 rmoveto",
                        "-31 0 -37 -35 -8 -2 rrcurveto",
                        "2 -5 rlineto",
                        "14 5 20 2 17 1 rrcurveto",
                        "2 -42 rlineto",
                        "-17 13 -13 20 vhcurveto",
                        "22 0 10 14 1 20 rrcurveto",
                        "1 29 rlineto",
                        "10 -2 8 -2 9 0 8 0 12 4 7 10 rrcurveto",
                        "-4 7 rlineto",
                        "-10 1 -10 3 -3 0 -15 0 -25 17 -18 4 -5 0 -5 1 -5 0 rrcurveto",
                        "52 99 rmoveto",
                        "547 callsubr",
                        "-135 hmoveto",
                        "548 callsubr",
                        "95 120 rmoveto",
                        "549 callsubr",
                        "-415 vmoveto",
                        "123 99 99 123 hvcurveto",
                        "0 102 -68 85 -94 26 19 25 59 37 33 18 0 0 -24 28 -10 -3 -16 -1 -63 -58 -30 -39 -4 1 -4 0 -5 0 rrcurveto",
                        "-23 122 -26 -22 20 -100 -1 0 rlineto",
                        "-17 59 -35 47 -51 38 rrcurveto",
                        "-39 -5 rlineto",
                        "49 -43 44 -45 19 -55 -101 -21 -75 -89 0 -107 rrcurveto",
                        "-122 98 -100 123 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni263A
     */
    public void testuni263A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni263A");
        assertNotNull(cs);
        assertEquals("uni263A", cs.getName());
        String[] text =
                {"63 -8 29 434 -21 hstem", "61 28 160 26 200 29 vstem",
                        "276 112 rmoveto", "1 0 4 0 4 -39 -10 -2 rlineto",
                        "2 66 rmoveto", "", "-42 0 -19 25 -18 32 rrcurveto",
                        "-21 -12 rlineto", "16 -29 20 -27 34 -10 rrcurveto",
                        "2 -33 rlineto", "-18 13 -13 20 vhcurveto",
                        "22 0 10 14 1 20 rrcurveto", "1 33 rlineto",
                        "39 12 21 30 8 14 rrcurveto", "-20 13 rlineto",
                        "-29 -45 -37 -6 -21 0 rrcurveto", "45 150 rmoveto",
                        "547 callsubr", "-135 hmoveto", "548 callsubr",
                        "95 120 rmoveto", "549 callsubr", "-415 vmoveto",
                        "550 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni263B
     */
    public void testuni263B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni263B");
        assertNotNull(cs);
        assertEquals("uni263B", cs.getName());
        String[] text =
                {
                        "63 -8 60 403 -21 hstem",
                        "61 122 193 128 vstem",
                        "324 287 rmoveto",
                        "14 12 12 14 14 12 -12 -14 -14 -12 -12 -14 -14 -12 12 14 vhcurveto",
                        "-141 hmoveto",
                        "14 11 12 14 15 12 -12 -14 -14 -12 -12 -15 -14 -11 12 14 vhcurveto",
                        "99 -295 rmoveto", "550 callsubr", "-5 145 rmoveto",
                        "21 0 37 6 29 45 rrcurveto", "20 -13 rlineto",
                        "-8 -14 -21 -30 -39 -12 rrcurveto", "-1 -33 rlineto",
                        "-1 -20 -10 -14 -22 0 rrcurveto",
                        "-20 -13 13 18 hvcurveto", "-2 33 rlineto",
                        "-34 10 -20 27 -16 29 rrcurveto", "21 12 rlineto",
                        "18 -32 19 -25 42 0 rrcurveto", "-1 -27 rmoveto",
                        "-1 -39 10 2 -5 36 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni263D
     */
    public void testuni263D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni263D");
        assertNotNull(cs);
        assertEquals("uni263D", cs.getName());
        String[] text =
                {
                        "6 -76 32 635 33 hstem",
                        "283 50 95 50 vstem",
                        "28 611 rmoveto",
                        "24 6 52 7 25 0 rrcurveto",
                        "216 133 -163 -189 -179 -152 -169 -205 hvcurveto",
                        "-50 0 -27 6 -24 11 124 30 139 132 0 172 0 165 -131 139 -124 32 rrcurveto",
                        "91 -655 rmoveto",
                        "183 126 161 160 171 -158 143 -124 hvcurveto",
                        "103 -58 84 -114 0 -142 0 -153 -88 -106 -126 -62 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni263E
     */
    public void testuni263E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni263E");
        assertNotNull(cs);
        assertEquals("uni263E", cs.getName());
        String[] text =
                {
                        "6 -76 33 635 32 hstem",
                        "29 51 95 50 vstem",
                        "479 -63 rmoveto",
                        "-24 -6 -52 -7 -25 0 rrcurveto",
                        "-215 -134 162 189 180 153 169 205 hvcurveto",
                        "50 0 26 -6 24 -11 -124 -30 -138 -132 0 -173 0 -165 130 -138 124 -32 rrcurveto",
                        "-90 655 rmoveto",
                        "-184 -125 -161 -160 -171 157 -143 124 hvcurveto",
                        "-102 58 -84 113 0 143 0 153 88 106 126 62 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni263F
     */
    public void testuni263F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni263F");
        assertNotNull(cs);
        assertEquals("uni263F", cs.getName());
        String[] text =
                {
                        "56 -46 204 -204 46 500 51 145 -20 hstemhm",
                        "58 50 -28 50 119 59 -56 52 125 50 -29 50 hintmask 0111001000000000",
                        "249 111 rmoveto",
                        "551 callsubr",
                        "hintmask 1011000100000000",
                        "552 callsubr",
                        "hintmask 0111001001000000",
                        "107 46 -106 hlineto",
                        "3 111 rlineto",
                        "117 16 75 98 0 105 0 78 -44 81 -76 38 rrcurveto",
                        "hintmask 0111010010000000",
                        "67 38 32 81 0 50 rrcurveto",
                        "-50 hlineto",
                        "-50 -47 -95 -103 -87 -62 79 66 vhcurveto",
                        "-50 hlineto",
                        "0 -43 26 -86 73 -40 rrcurveto",
                        "hintmask 0111101000000000",
                        "-74 -37 -47 -76 0 -84 rrcurveto",
                        "0 -95 65 -106 126 -18 rrcurveto",
                        "30 389 rmoveto",
                        "hintmask 1011100001000000",
                        "98 73 -79 -91 -93 -72 -79 -99 -99 -72 79 93 93 75 77 96 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2641
     */
    public void testuni2641() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2641");
        assertNotNull(cs);
        assertEquals("uni2641", cs.getName());
        String[] text =
                {
                        "56 -22 49 343 204 -46 46 123 -20 hstemhm",
                        "56 50 142 59 -56 53 -50 47 147 50 hintmask 1101100010000000",
                        "277 27 rmoveto",
                        "-98 -73 80 91 93 72 79 99 99 72 -79 -93 hvcurveto",
                        "-94 -75 -77 -96 vhcurveto",
                        "hintmask 1011110010000000", "30 390 rmoveto",
                        "-2 111 106 0 0 46 rlineto",
                        "hintmask 1101101010000000", "-107 0 rlineto",
                        "hintmask 1101100110000000", "-3 123 -47 0 rlineto",
                        "hintmask 1101101010000000", "-3 -123 rlineto",
                        "hintmask 1011110010000000", "-106 -46 105 hlineto",
                        "-2 -111 rlineto", "-117 -16 -75 -98 0 -105 rrcurveto",
                        "-108 83 -112 137 128 94 101 119 vhcurveto",
                        "0 94 -65 106 -126 19 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2643
     */
    public void testuni2643() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2643");
        assertNotNull(cs);
        assertEquals("uni2643", cs.getName());
        String[] text =
                {
                        "144 85 47 -38 46 387 41 hstemhm",
                        "49 73 163 69 114 71 hintmask 10111100",
                        "189 527 rmoveto",
                        "65 31 -123 -78 hvcurveto",
                        "0 -84 -31 -70 -58 -24 -17 -7 -40 -9 -21 0 rrcurveto",
                        "-1 hlineto",
                        "-8 -15 -8 -8 hvcurveto",
                        "-21 vlineto",
                        "-5 3 -5 1 vhcurveto",
                        "hintmask 01111100",
                        "364 9 rlineto",
                        "4 2 -2 -2 hvcurveto",
                        "0 -189 11 -18 60 31 0 182 61 2 rlineto",
                        "4 3 2 7 0 9 0 9 -3 10 -5 3 rrcurveto",
                        "-59 1 0 417 -22 2 -49 -11 0 -402 rlineto",
                        "-3 -2 -3 -4 vhcurveto",
                        "-195 hlineto",
                        "41 30 46 84 0 94 rrcurveto",
                        "105 -52 115 -104 -92 -57 -50 -59 -24 16 -16 24 29 10 20 13 vhcurveto",
                        "0 7 -1 8 -2 3 -1 4 -2 5 0 12 rrcurveto",
                        "30 22 6 45 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2644
     */
    public void testuni2644() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2644");
        assertNotNull(cs);
        assertEquals("uni2644", cs.getName());
        String[] text =
                {
                        "9 337 47 97 47 hstem",
                        "122 71 128 67 16 68 vstem",
                        "122 610 rmoveto",
                        "-82 -59 vlineto",
                        "-11 -13 -13 -16 -9 5 -9 10 hvcurveto",
                        "68 -484 hlineto",
                        "11 -18 59 31 0 253 rlineto",
                        "32 46 42 28 63 0 34 0 41 -39 0 -46 0 -49 -19 -61 -18 -37 -16 -34 -30 -63 0 -49 0 -53 20 -35 37 -33 rrcurveto",
                        "64 -8 8 11 rlineto",
                        "-45 38 -17 29 0 51 0 44 14 64 19 36 21 39 30 66 0 48 0 85 -68 43 -70 0 -50 0 -64 -34 -27 -36 rrcurveto",
                        "167 83 vlineto", "13 14 22 12 8 -4 5 -11 hvcurveto",
                        "-95 91 hlineto", "-23 1 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2645
     */
    public void testuni2645() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2645");
        assertNotNull(cs);
        assertEquals("uni2645", cs.getName());
        String[] text =
                {
                        "116 -91 32 164 26 170 47 179 27 hstem",
                        "104 70 35 52 15 70 20 51 26 70 vstem",
                        "104 483 rmoveto",
                        "-309 vlineto",
                        "-28 -13 -16 -41 vhcurveto",
                        "-3 hlineto",
                        "-5 -3 -3 -5 hvcurveto",
                        "0 -18 2 -2 rlineto",
                        "0 69 2 36 vhcurveto",
                        "28 197 102 -219 hlineto",
                        "-38 -10 -29 -27 0 -47 rrcurveto",
                        "-57 56 -32 47 49 56 30 61 vhcurveto",
                        "0 42 -31 28 -40 11 rrcurveto",
                        "",
                        "220 97 -197 vlineto",
                        "28 1 rlineto",
                        "36 69 -3 0 hvcurveto",
                        "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-3 hlineto",
                        "-41 -13 16 28 hvcurveto",
                        "308 vlineto",
                        "29 13 15 41 vhcurveto",
                        "3 hlineto",
                        "5 3 3 6 hvcurveto",
                        "0 19 -2 2 rlineto",
                        "0 -70 -3 -35 vhcurveto",
                        "-28 1 0 -207 -97 0 0 174 -19 15 -32 0 -19 -15 0 -174 -102 0 0 207 -28 -1 rlineto",
                        "-35 -70 3 0 hvcurveto",
                        "-2 -2 0 -19 rlineto",
                        "-6 3 -3 5 vhcurveto",
                        "3 hlineto",
                        "41 13 -15 -29 hvcurveto",
                        "157 -482 rmoveto",
                        "25 21 28 32 34 18 -29 -24 -37 -24 -23 -27 -31 -23 23 37 vhcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2646
     */
    public void testuni2646() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2646");
        assertNotNull(cs);
        assertEquals("uni2646", cs.getName());
        String[] text =
                {
                        "309 -46 46 432 -20 hstemhm",
                        "121 67 182 75 -68 59 -56 53 192 67 hintmask 11100110",
                        "433 -46 rmoveto",
                        "107 46 -106 hlineto",
                        "1 75 rlineto",
                        "183 18 74 137 0 177 0 21 6 8 8 0 12 0 17 -18 11 -14 rrcurveto",
                        "35 3 -152 175 rlineto",
                        "-1 -1 -2 0 -1 0 rrcurveto",
                        "-174 vlineto",
                        "hintmask 11101010",
                        "0 -150 -43 -123 -146 -12 rrcurveto",
                        "hintmask 11110010",
                        "9 382 rlineto",
                        "25 3 12 8 vhcurveto",
                        "8 0 14 -14 21 -26 rrcurveto",
                        "35 3 -125 143 -130 -143 33 -3 rlineto",
                        "21 26 15 14 9 0 rrcurveto",
                        "8 5 -12 -25 hvcurveto",
                        "hintmask 11101010",
                        "7 -382 rlineto",
                        "-149 11 -40 115 0 155 rrcurveto",
                        "177 vlineto",
                        "-1 -8 0 0 vhcurveto",
                        "-151 -176 33 -3 rlineto",
                        "14 16 18 16 12 0 9 0 6 -8 0 -21 0 -183 74 -127 183 -18 rrcurveto",
                        "0 -1 1 -74 -106 0 0 -46 rlineto", "hintmask 11100110",
                        "107 0 2 -123 48 0 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2647
     */
    public void testuni2647() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2647");
        assertNotNull(cs);
        assertEquals("uni2647", cs.getName());
        String[] text =
                {"-6 -64 48 -43 49 281 49 -46 49 hstemhm",
                        "49 71 82 71 91 73 hintmask 00101110",
                        "364 446 rmoveto", "0 -62 -37 -56 -54 -9 rrcurveto",
                        "0 111 -20 4 -51 -17 0 -97 rlineto",
                        "hintmask 00011110", "-82 3 0 215 132 8 rlineto",
                        "47 3 65 -27 0 -76 rrcurveto", "-91 -177 rmoveto",
                        "94 3 70 72 0 103 0 98 -78 54 -101 -4 rrcurveto",
                        "-209 -8 0 -587 25 -14 46 21 0 267 rlineto",
                        "hintmask 10101110", "82 -3 0 -335 rlineto",
                        "hintmask 01001110", "240 5 9 36 -4 13 rlineto",
                        "hintmask 10011110", "-174 -6 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2648
     */
    public void testuni2648() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2648");
        assertNotNull(cs);
        assertEquals("uni2648", cs.getName());
        String[] text =
                {
                        "391 569 52 -47 48 hstemhm",
                        "39 75 295 75 294 75 hintmask 10111000",
                        "409 -121 rmoveto",
                        "318 -83 372 -133 -47 -32 -45 -65 vhcurveto",
                        "0 -43 14 -45 28 -46 rrcurveto",
                        "-22 -8 -54 8 rlineto",
                        "-27 50 -14 46 0 43 0 92 74 65 78 0 154 0 70 -248 26 -220 rrcurveto",
                        "10 hlineto",
                        "hintmask 01111000",
                        "21 170 59 299 176 0 82 0 64 -69 0 -87 0 -44 -14 -47 -27 -50 rrcurveto",
                        "-23 -9 -52 9 rlineto", "28 50 13 45 0 42 rrcurveto",
                        "69 -31 43 -48 -132 -83 -374 -308 vhcurveto",
                        "-63 -31 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2649
     */
    public void testuni2649() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2649");
        assertNotNull(cs);
        assertEquals("uni2649", cs.getName());
        String[] text =
                {
                        "287 -112 57 366 47 211 47 hstem",
                        "152 56 372 56 vstem",
                        "287 343 rmoveto",
                        "-73 -40 -62 -72 0 -103 rrcurveto",
                        "-129 111 -111 131 133 109 112 128 vhcurveto",
                        "0 103 -62 72 -73 40 53 22 23 26 36 64 rrcurveto",
                        "22 40 rlineto",
                        "28 49 31 25 35 0 rrcurveto",
                        "10 47 -28 hlineto",
                        "-49 0 -44 -39 -40 -70 rrcurveto",
                        "-32 -53 rlineto",
                        "-20 -36 -22 -25 -22 -14 -23 -14 -29 -7 -36 0 -36 0 -29 7 -23 14 -22 14 -21 25 -21 36 rrcurveto",
                        "-31 53 rlineto",
                        "-40 70 -45 39 -49 0 rrcurveto",
                        "-28 -47 10 hlineto",
                        "35 0 31 -25 28 -49 rrcurveto",
                        "22 -40 rlineto",
                        "39 -71 25 -21 48 -20 rrcurveto",
                        "107 -398 rmoveto",
                        "-107 -79 83 99 106 85 78 101 106 80 -82 -102 -99 -79 -83 -107 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni264A
     */
    public void testuni264A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni264A");
        assertNotNull(cs);
        assertEquals("uni264A", cs.getName());
        String[] text =
                {
                        "217 0 47 470 46 hstem",
                        "186 74 198 75 vstem",
                        "260 42 rmoveto",
                        "478 vlineto",
                        "28 -2 33 -1 38 0 39 0 33 1 27 2 rrcurveto",
                        "-478 vlineto",
                        "-29 3 -33 2 -37 0 -36 0 -33 -2 -30 -3 rrcurveto",
                        "-74 -5 rmoveto",
                        "-43 -6 -45 -9 -49 -13 rrcurveto",
                        "-47 vlineto",
                        "96 25 104 13 110 0 111 0 103 -13 96 -25 rrcurveto",
                        "47 vlineto",
                        "-49 13 -45 9 -42 6 rrcurveto",
                        "485 vlineto",
                        "45 6 46 11 45 12 rrcurveto",
                        "48 vlineto",
                        "-84 -24 -103 -12 -123 0 -122 0 -104 12 -84 24 rrcurveto",
                        "-48 vlineto", "46 -12 45 -10 46 -5 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni264B
     */
    public void testuni264B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni264B");
        assertNotNull(cs);
        assertEquals("uni264B", cs.getName());
        String[] text =
                {
                        "335 29 56 144 40 85 41 142 56 hstem",
                        "49 48 211 47 126 48 211 48 vstem",
                        "636 395 rmoveto",
                        "-83 -72 -62 -84 hvcurveto",
                        "0 -73 49 -38 48 -24 -46 -19 -58 -10 -73 0 -105 0 -108 25 -111 49 rrcurveto",
                        "-19 -33 1 -21 rlineto",
                        "111 -50 105 -26 100 0 116 0 96 21 76 42 77 41 48 50 0 66 rrcurveto",
                        "84 -70 62 -82 vhcurveto",
                        "-1 -41 rmoveto",
                        "57 48 -46 -61 -63 -49 -42 -55 -61 -46 49 56 57 45 50 61 hvcurveto",
                        "-429 -125 rmoveto",
                        "85 64 72 82 hvcurveto",
                        "0 44 -22 45 -74 36 46 19 59 10 72 0 104 0 108 -24 112 -49 rrcurveto",
                        "18 34 2 19 rlineto",
                        "-111 50 -107 26 -100 0 -115 0 -96 -20 -77 -42 -77 -42 -48 -42 0 -66 rrcurveto",
                        "-87 76 -65 81 vhcurveto",
                        "-4 40 rmoveto",
                        "-57 -48 45 62 58 44 46 60 57 50 -45 -60 -57 -45 -49 -61 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni264C
     */
    public void testuni264C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni264C");
        assertNotNull(cs);
        assertEquals("uni264C", cs.getName());
        String[] text =
                {
                        "224 -165 55 97 50 211 49 270 47 hstem",
                        "39 50 93 74 39 62 54 73 109 71 vstem",
                        "484 -32 rmoveto",
                        "0 59 26 62 63 71 57 65 34 80 0 99 rrcurveto",
                        "98 -87 112 -164 -117 -114 -81 -112 vhcurveto",
                        "0 -40 11 -36 40 -52 -17 4 -9 0 -16 0 rrcurveto",
                        "-84 -68 -69 -85 -91 71 -65 84 87 76 76 82 hvcurveto",
                        "0 37 -14 36 -33 40 -44 54 -10 46 0 72 rrcurveto",
                        "81 74 56 88 94 81 -87 -94 vhcurveto",
                        "0 -98 -21 -48 -50 -54 -54 -60 -57 -79 0 -91 0 -69 54 -52 77 0 42 0 45 28 47 58 rrcurveto",
                        "-22 19 rlineto",
                        "-42 -39 -28 -11 -41 0 -32 0 -27 28 0 50 rrcurveto",
                        "-293 280 rmoveto",
                        "62 42 -48 -58 -60 -46 -45 -57 -57 -46 44 62 59 46 46 56 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni264D
     */
    public void testuni264D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni264D");
        assertNotNull(cs);
        assertEquals("uni264D", cs.getName());
        String[] text =
                {
                        "263 84 75 115 75 115 75 101 76 vstem",
                        "349 13 rmoveto",
                        "327 vlineto",
                        "19 78 32 61 40 42 16 -28 8 -42 0 -56 rrcurveto",
                        "-343 vlineto",
                        "0 -25 2 -24 4 -24 -34 -22 -43 -21 -50 -15 rrcurveto",
                        "9 -33 rlineto",
                        "50 8 44 14 35 20 22 -55 34 -42 51 -29 rrcurveto",
                        "17 14 rlineto",
                        "-40 45 -16 32 -4 63 75 60 96 99 0 132 0 68 -20 65 -40 62 rrcurveto",
                        "-67 -17 rlineto",
                        "-17 -24 -18 -34 -15 -43 rrcurveto",
                        "108 vlineto",
                        "0 51 -34 47 -30 42 rrcurveto",
                        "-55 -11 rlineto",
                        "-33 -38 -26 -40 -12 -41 -7 54 -34 44 -25 32 rrcurveto",
                        "-33 7 -22 -18 rlineto",
                        "-25 -27 -25 -37 -19 -47 -8 46 -14 37 -21 28 rrcurveto",
                        "-23 -2 -44 -15 rlineto",
                        "23 -42 12 -46 0 -49 rrcurveto",
                        "0 -409 12 -18 63 31 0 341 rlineto",
                        "20 66 31 56 40 45 16 -27 8 -48 0 -70 rrcurveto",
                        "0 -376 11 -18 rlineto",
                        "254 33 rmoveto",
                        "223 vlineto",
                        "18 58 25 46 28 34 20 -42 10 -43 0 -46 0 -102 -49 -76 -52 -52 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni264E
     */
    public void testuni264E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni264E");
        assertNotNull(cs);
        assertEquals("uni264E", cs.getName());
        String[] text =
                {"236 57 53 118 54 231 49 hstem", "181 64 249 64 vstem",
                        "66 57 rmoveto", "593 hlineto",
                        "13 14 25 11 9 -4 8 -11 hvcurveto", "-595 hlineto",
                        "-12 -13 -21 -15 -9 6 -8 9 hvcurveto", "171 vmoveto",
                        "234 0 6 50 rlineto", "-44 25 -17 37 0 44 rrcurveto",
                        "69 57 60 68 67 57 -60 -69 vhcurveto",
                        "0 -44 -17 -41 -45 -21 rrcurveto",
                        "-5 -50 233 0 rlineto",
                        "13 14 25 12 8 -4 9 -11 hvcurveto", "-168 hlineto",
                        "31 31 23 35 0 39 rrcurveto",
                        "99 -87 76 -99 -102 -89 -82 -95 vhcurveto",
                        "0 -39 23 -33 30 -31 rrcurveto", "-158 hlineto",
                        "-12 -13 -21 -16 -9 6 -8 9 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni264F
     */
    public void testuni264F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni264F");
        assertNotNull(cs);
        assertEquals("uni264F", cs.getName());
        String[] text =
                {
                        "177 -168 17 hstem",
                        "79 75 113 74 113 75 83 15 vstem",
                        "44 546 rmoveto",
                        "23 -38 12 -48 0 -58 rrcurveto",
                        "0 -402 11 -18 64 31 0 340 rlineto",
                        "18 67 29 57 41 45 16 -26 9 -48 0 -69 rrcurveto",
                        "0 -379 11 -18 63 31 0 327 rlineto",
                        "17 74 29 60 42 48 17 -24 8 -41 0 -58 rrcurveto",
                        "-321 vlineto",
                        "0 -82 27 -51 38 -38 rrcurveto",
                        "36 -36 rlineto",
                        "24 -23 -28 -1 -18 2 rrcurveto",
                        "-16 -17 118 -7 -8 120 -15 -16 rlineto",
                        "1 -21 -3 -26 -22 22 rrcurveto",
                        "-25 25 rlineto",
                        "-27 26 -7 42 0 81 rrcurveto",
                        "351 vlineto",
                        "0 56 -15 49 -31 41 rrcurveto",
                        "-73 -12 rlineto",
                        "-32 -38 -23 -38 -14 -40 -7 55 -16 43 -26 30 rrcurveto",
                        "-72 -12 rlineto",
                        "-26 -29 -23 -37 -17 -44 -8 41 -14 37 -22 32 rrcurveto",
                        "-23 -2 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2650
     */
    public void testuni2650() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2650");
        assertNotNull(cs);
        assertEquals("uni2650", cs.getName());
        String[] text =
                {
                        "145 589 541 rmoveto",
                        "-82 -16 -90 7 -55 18 rrcurveto",
                        "-8 -42 rlineto",
                        "48 -18 54 -5 46 5 rrcurveto",
                        "-252 -249 -119 120 -40 -40 119 -119 -176 -175 39 -40 177 175 119 -121 40 40 -119 120 251 250 rlineto",
                        "-6 -42 7 -58 23 -50 rrcurveto", "42 10 rlineto",
                        "-22 65 -7 75 17 83 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2651
     */
    public void testuni2651() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2651");
        assertNotNull(cs);
        assertEquals("uni2651", cs.getName());
        String[] text =
                {
                        "320 -113 47 66 42 203 47 hstem",
                        "187 56 476 75 vstem",
                        "361 525 rmoveto",
                        "17 -36 6 -72 13 -102 19 -151 6 0 27 -47 -52 -151 -17 -32 -100 0 rrcurveto",
                        "-25 -47 52 hlineto",
                        "53 0 77 2 64 166 40 -41 51 -14 54 0 rrcurveto",
                        "77 71 61 84 84 -51 63 -84 hvcurveto",
                        "",
                        "-64 0 -83 -54 -36 -70 -25 93 3 203 -51 114 rrcurveto",
                        "-74 -15 rlineto",
                        "-50 -59 -35 -77 -22 -95 -14 86 -16 63 -19 36 -15 27 -45 18 -45 1 rrcurveto",
                        "-9 -22 rlineto",
                        "39 -17 11 -7 23 -44 17 -32 38 -152 0 -122 rrcurveto",
                        "15 -12 41 12 rlineto", "0 180 75 128 43 50 rrcurveto",
                        "358 -384 rmoveto", "-60 -36 -39 -38 vhcurveto",
                        "-42 0 -51 7 -41 45 32 86 40 65 56 0 rrcurveto",
                        "50 30 -50 -54 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2652
     */
    public void testuni2652() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2652");
        assertNotNull(cs);
        assertEquals("uni2652", cs.getName());
        String[] text =
                {"329 38 476 hstem", "66 85 rmoveto", "26 -47 126 102 rlineto",
                        "2 2 2 1 2 0 2 0 1 -2 2 -3 rrcurveto",
                        "69 -95 rlineto",
                        "2 -3 1 -1 2 0 1 0 1 1 3 2 rrcurveto",
                        "118 97 rlineto",
                        "3 3 2 1 2 0 3 0 1 -3 2 -4 rrcurveto",
                        "68 -93 rlineto",
                        "2 -2 1 -2 2 0 1 0 1 1 3 2 rrcurveto",
                        "117 95 rlineto",
                        "3 3 4 3 1 0 3 0 1 -2 3 -4 rrcurveto",
                        "72 -99 44 27 -94 149 rlineto",
                        "-3 5 -2 2 -2 0 -3 0 -3 -2 -5 -4 rrcurveto",
                        "-120 -98 -71 99 rlineto",
                        "-4 4 -1 2 -3 0 -2 0 -2 -2 -4 -3 rrcurveto",
                        "-122 -100 -73 100 rlineto",
                        "-2 3 -2 2 -3 0 -2 0 -2 -2 -4 -2 rrcurveto",
                        "-170 159 rmoveto", "26 -47 126 102 rlineto",
                        "3 2 1 1 2 0 2 0 2 -1 2 -4 rrcurveto",
                        "68 -95 rlineto",
                        "2 -2 1 -1 2 0 1 0 2 0 2 2 rrcurveto",
                        "118 98 rlineto",
                        "3 2 2 1 2 0 3 0 2 -2 2 -5 rrcurveto",
                        "67 -93 rlineto",
                        "2 -2 1 -1 2 0 1 0 2 0 2 2 rrcurveto",
                        "117 96 rlineto",
                        "3 3 4 2 2 0 2 0 1 -2 3 -4 rrcurveto",
                        "72 -99 44 27 -93 149 rlineto",
                        "-4 5 -2 2 -2 0 -2 0 -4 -2 -4 -4 rrcurveto",
                        "-120 -98 -72 99 rlineto",
                        "-3 4 -2 2 -2 0 -3 0 -2 -2 -4 -3 rrcurveto",
                        "-122 -100 -73 100 rlineto",
                        "-2 4 -2 1 -2 0 -3 0 -2 -2 -3 -2 rrcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2653
     */
    public void testuni2653() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2653");
        assertNotNull(cs);
        assertEquals("uni2653", cs.getName());
        String[] text =
                {"144 271 46 hstem", "190 75 116 75 vstem", "500 -14 rmoveto",
                        "40 -7 41 7 rlineto", "-83 87 -42 94 0 104 rrcurveto",
                        "120 46 -120 hlineto", "5 90 41 86 79 85 rrcurveto",
                        "-41 6 -37 -6 rlineto",
                        "-71 -77 -41 -85 -10 -99 rrcurveto", "-116 hlineto",
                        "-11 99 -40 85 -71 77 rrcurveto",
                        "-43 3 -34 -3 rlineto",
                        "78 -85 41 -86 5 -90 rrcurveto",
                        "-120 -46 120 hlineto",
                        "0 -104 -42 -94 -82 -87 rrcurveto",
                        "15 -5 65 5 rlineto", "79 90 40 109 0 86 rrcurveto",
                        "116 hlineto", "0 -113 61 -106 58 -66 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2660
     */
    public void testuni2660() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2660");
        assertNotNull(cs);
        assertEquals("uni2660", cs.getName());
        String[] text =
                {
                        "221 21 -21 hstem",
                        "327 68 vstem",
                        "426 182 rmoveto",
                        "37 0 0 -97 105 0 57 0 61 44 0 81 0 40 -15 44 -38 37 -123 119 -62 73 -89 110 -91 -112 -78 -83 -102 -107 -34 -36 -17 -31 0 -51 rrcurveto",
                        "-94 69 -34 47 vhcurveto",
                        "107 0 -3 97 42 0 11 0 17 -17 0 -45 0 -54 -15 -39 -36 -6 rrcurveto",
                        "-21 168 21 vlineto",
                        "-38 6 -11 50 0 42 0 52 18 11 13 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2663
     */
    public void testuni2663() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2663");
        assertNotNull(cs);
        assertEquals("uni2663", cs.getName());
        String[] text =
                {
                        "276 21 -21 90 276 -185 135 hstemhm",
                        "356 85 -73 61 hintmask 10101000",
                        "429 124 rmoveto",
                        "51 7 7 11 vhcurveto",
                        "37 0 31 -91 103 0 rrcurveto",
                        "78 47 54 77 40 -16 105 -114 hvcurveto",
                        "-65 0 -58 -51 -30 0 rrcurveto",
                        "hintmask 10110000",
                        "-10 -9 8 10 hvcurveto",
                        "0 33 111 16 0 104 rrcurveto",
                        "61 -49 59 -103 -112 -42 -66 -54 vhcurveto",
                        "0 -103 110 -14 0 -37 0 -14 -10 -3 -8 0 rrcurveto",
                        "hintmask 11001000",
                        "-34 0 -52 50 -66 0 rrcurveto",
                        "-105 -26 -91 -53 -78 50 -54 75 hvcurveto",
                        "hintmask 10101000",
                        "103 0 31 91 37 0 15 0 2 -21 0 -37 0 -52 -8 -42 -39 -8 rrcurveto",
                        "-21 155 21 vlineto", "-34 8 -13 52 0 43 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2665
     */
    public void testuni2665() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2665");
        assertNotNull(cs);
        assertEquals("uni2665", cs.getName());
        String[] text =
                {
                        "224 540 596 rmoveto",
                        "-154 0 -9 -139 -17 0 -15 0 -12 139 -149 0 -58 0 -87 -32 0 -116 0 -125 129 -132 81 -87 rrcurveto",
                        "112 -121 121 125 rlineto",
                        "91 95 114 120 0 124 0 112 -80 37 -67 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2666
     */
    public void testuni2666() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2666");
        assertNotNull(cs);
        assertEquals("uni2666", cs.getName());
        String[] text =
                {
                        "144 326 620 rmoveto",
                        "-92 -120 -97 -105 -103 -93 109 -102 98 -106 85 -111 89 114 95 106 101 99 -114 98 -89 109 -82 111 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2669
     */
    public void testuni2669() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2669");
        assertNotNull(cs);
        assertEquals("uni2669", cs.getName());
        String[] text =
                {
                        "-147 10 -21 698 -20 hstem",
                        "259 46 vstem",
                        "305 687 rmoveto",
                        "-46 -543 hlineto",
                        "-18 7 -26 3 -34 0 -23 1 -28 -8 -32 -15 -39 -19 -20 -24 0 -31 0 -24 14 -18 27 -13 21 -9 23 -5 26 0 34 0 33 10 33 20 rrcurveto",
                        "37 23 18 26 0 32 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni266C
     */
    public void testuni266C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni266C");
        assertNotNull(cs);
        assertEquals("uni266C", cs.getName());
        String[] text =
                {"222 10 -21 hstem", "259 46 323 47 vstem", "305 534 rmoveto",
                        "0 73 323 -164 0 -74 rlineto", "-81 -392 rmoveto",
                        "-35 -104 -30 -67 -46 56 -23 55 68 88 47 64 hvcurveto",
                        "0 579 -416 205 0 -562 rlineto",
                        "-17 6 -28 4 -35 0 rrcurveto",
                        "-35 -105 -29 -67 -45 56 -24 55 68 87 46 65 hvcurveto",
                        "0 383 320 -162 3 3 0 -358 rlineto",
                        "-17 7 -28 4 -36 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2695
     */
    public void testuni2695() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2695");
        assertNotNull(cs);
        assertEquals("uni2695", cs.getName());
        String[] text =
                {
                        "-34 7 40 -22 32 74 48 76 44 156 11 3 114 hstemhm",
                        "41 58 -18 50 48 81 -71 67 -42 38 63 37 -26 52 hintmask 0011110000000000",
                        "342 451 rmoveto",
                        "2 2 2 2 3 2 -2 -2 -3 -2 -2 -3 vhcurveto",
                        "-2 -2 2 3 hvcurveto",
                        "hintmask 0011110000100000",
                        "-128 -518 rmoveto",
                        "38 16 0 176 -49 -3 rlineto",
                        "32 -224 rmoveto",
                        "hintmask 0111110000010000",
                        "70 24 47 34 0 40 0 40 -35 21 -32 0 -7 0 -12 -2 -8 -3 rrcurveto",
                        "-1 -33 rlineto",
                        "7 2 10 4 9 0 7 0 25 -2 0 -24 0 -29 -57 -27 -24 -9 -20 -8 -23 -15 -21 -18 -19 -17 -24 -7 0 -7 0 -10 31 6 13 6 rrcurveto",
                        "27 13 12 13 25 8 rrcurveto",
                        "19 -1 rmoveto",
                        "-18 -8 -10 -2 -11 -6 rrcurveto",
                        "1 -41 rlineto",
                        "-13 6 -8 12 11 10 11 23 vhcurveto",
                        "3 616 rmoveto",
                        "-24 0 -25 -3 -23 -4 rrcurveto",
                        "hintmask 0011110010000000",
                        "-2 11 -5 48 0 10 rrcurveto",
                        "23 12 29 27 34 8 -23 -43 vhcurveto",
                        "0 -20 -1 -20 -1 -8 rrcurveto",
                        "hintmask 0011111001000000",
                        "-69 -206 rmoveto",
                        "-2 45 rlineto",
                        "-15 -4 -28 -5 -3 0 rrcurveto",
                        "-28 -14 13 25 56 129 14 39 hvcurveto",
                        "52 0 4 -11 34 0 14 0 12 2 13 7 rrcurveto",
                        "-6 3 6 -2 8 -3 14 -10 -2 9 5 5 -4 0 -9 0 -9 1 -9 2 -1 -1 -10 6 24 -4 rlineto",
                        "2 2 2 2 0 5 0 10 -20 12 -11 3 -14 3 3 18 -20 0 -20 0 -55 -7 -47 -3 -61 -4 -121 -26 0 -87 0 -36 17 -48 67 0 rrcurveto",
                        "17 0 22 2 25 6 rrcurveto",
                        "10 -77 rmoveto",
                        "18 1 18 1 18 -1 rrcurveto",
                        "3 211 rlineto",
                        "-23 -1 -22 -4 -22 -5 rrcurveto",
                        "14 -373 rmoveto",
                        "hintmask 1011110100001000",
                        "-2 32 rlineto",
                        "-48 1 -22 14 0 25 rrcurveto",
                        "40 63 4 37 54 93 19 70 vhcurveto",
                        "0 76 -57 12 -59 4 rrcurveto",
                        "-1 -45 rlineto",
                        "39 -1 26 -6 0 -31 rrcurveto",
                        "-50 -58 0 -42 -45 -100 -4 -91 -40 31 -37 44 vhcurveto",
                        "12 0 17 3 18 5 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2698
     */
    public void testuni2698() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2698");
        assertNotNull(cs);
        assertEquals("uni2698", cs.getName());
        String[] text =
                {
                        "-94 432 33 hstem",
                        "109 37 47 21 48 36 vstem",
                        "193 140 rmoveto",
                        "138 vlineto",
                        "-47 3 -37 38 0 52 rrcurveto",
                        "51 41 43 54 48 46 -38 -56 vhcurveto",
                        "0 -54 -40 -34 -44 -5 rrcurveto",
                        "-138 vlineto",
                        "31 82 55 70 73 1 1 0 5 -2 4 -8 0 -32 -21 -27 -32 -30 -69 -63 -44 19 -3 -149 rrcurveto",
                        "-14 -3 -6 -7 -4 -7 5 15 vhcurveto",
                        "-1 146 -57 -17 -57 67 -10 11 -44 30 0 45 3 6 4 3 4 0 96 -1 40 -72 22 -79 rrcurveto",
                        "11 292 rmoveto",
                        "-31 -27 -29 -33 -33 28 -29 30 26 32 23 39 40 -25 22 -33 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni26A2
     */
    public void testuni26A2() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni26A2");
        assertNotNull(cs);
        assertEquals("uni26A2", cs.getName());
        String[] text =
                {
                        "336 -46 204 -204 46 500 50 hstemhm",
                        "",
                        "58 50 141 59 -56 52 23 49 74 50 18 59 -56 52 145 50 hintmask 0011001100100000",
                        "413 436 rmoveto",
                        "23 -30 14 -37 0 -39 0 -40 -13 -38 -24 -29 -23 29 -14 38 0 40 rrcurveto",
                        "0 40 14 36 23 30 rrcurveto",
                        "36 -248 rmoveto",
                        "32 40 19 50 0 52 0 49 -18 51 -32 40 27 19 34 11 36 0 rrcurveto",
                        "99 72 -79 -91 hvcurveto",
                        "hintmask 1011001100100000",
                        "-93 -72 -79 -99 vhcurveto",
                        "-37 0 -34 11 -27 19 rrcurveto",
                        "-170 312 rmoveto",
                        "37 0 33 -11 27 -19 -31 -38 -18 -50 0 -52 0 -49 17 -51 33 -42 -27 -19 -34 -11 -37 0 rrcurveto",
                        "-99 -72 79 93 93 75 77 96 hvcurveto",
                        "hintmask 0111101100100000",
                        "-30 -389 rmoveto",
                        "551 callsubr",
                        "hintmask 1011011100100000",
                        "552 callsubr",
                        "hintmask 0111101110100000",
                        "107 46 -106 hlineto",
                        "3 111 rlineto",
                        "41 5 35 16 29 22 28 -21 35 -16 42 -6 rrcurveto",
                        "2 -111 -107 0 0 -46 rlineto",
                        "hintmask 1011001101100000",
                        "108 0 2 -123 47 0 3 123 rlineto",
                        "hintmask 0111101110100000",
                        "107 46 -106 hlineto",
                        "3 111 rlineto",
                        "116 16 75 98 0 105 0 108 -83 112 -137 0 -52 0 -46 -16 -36 -28 -36 27 -45 17 -53 0 -129 0 -93 -101 0 -119 rrcurveto",
                        "0 -95 65 -106 126 -18 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni26A3
     */
    public void testuni26A3() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni26A3");
        assertNotNull(cs);
        assertEquals("uni26A3", cs.getName());
        String[] text =
                {
                        "423 -164 46 96 46 201 49 93 49 hstem",
                        "58 50 170 50 122 50 169 50 vstem",
                        "487 274 rmoveto",
                        "-16 51 -34 39 -47 24 rrcurveto",
                        "109 216 rlineto",
                        "8 -54 8 -35 22 -50 -15 -4 -15 -4 -16 -5 rrcurveto",
                        "30 -35 rlineto",
                        "67 16 37 16 57 32 rrcurveto",
                        "-119 -215 rlineto",
                        "-24 8 -18 0 -21 0 rrcurveto",
                        "-2 -49 rmoveto",
                        "1 hlineto",
                        "98 72 -80 -91 -93 -71 -79 -99 hvcurveto",
                        "-74 0 -59 44 -25 61 91 27 68 84 0 97 0 11 -1 9 -1 10 rrcurveto",
                        "-50 -7 rmoveto",
                        "1 -8 1 -7 0 -8 0 -75 -49 -67 -72 -22 -1 8 0 7 0 8 0 76 50 66 70 22 rrcurveto",
                        "",
                        "-169 149 rmoveto",
                        "72 0 58 -43 26 -58 -94 -27 -63 -85 0 -100 0 -11 0 -9 2 -10 rrcurveto",
                        "-1 hlineto",
                        "-99 -72 79 92 94 75 78 96 hvcurveto",
                        "440 -313 rmoveto",
                        "0 89 -41 68 -68 35 rrcurveto",
                        "108 217 rlineto",
                        "10 -61 9 -38 28 -59 rrcurveto",
                        "44 -4 rlineto",
                        "-35 94 -12 52 -12 98 rrcurveto",
                        "-21 11 rlineto",
                        "-61 -38 -42 -21 -50 -18 -25 72 -10 51 -11 85 rrcurveto",
                        "-21 10 rlineto", "-91 -56 -50 -20 -97 -28 rrcurveto",
                        "30 -34 rlineto", "68 15 37 17 56 32 rrcurveto",
                        "-118 -215 rlineto", "-25 8 -17 0 -22 0 rrcurveto",
                        "-129 -93 -99 -122 -122 99 -95 120 hvcurveto",
                        "14 hlineto",
                        "31 -84 81 -58 94 0 121 0 101 98 0 120 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni26A4
     */
    public void testuni26A4() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni26A4");
        assertNotNull(cs);
        assertEquals("uni26A4", cs.getName());
        String[] text =
                {
                        "301 -118 47 112 46 342 -20 21 49 hstemhm",
                        "59 49 126 50 -34 59 -57 53 -50 47 148 50 125 50 hintmask 1111110001100000",
                        "367 405 rmoveto",
                        "50 -30 33 -56 0 -61 0 -62 -32 -55 -51 -31 -51 31 -32 55 0 62 rrcurveto",
                        "0 62 33 55 50 30 rrcurveto",
                        "55 -315 rmoveto",
                        "50 41 28 62 0 65 0 62 -27 64 -50 43 11 2 10 1 11 0 rrcurveto",
                        "98 72 -80 -92 -92 -71 -79 -99 hvcurveto",
                        "-12 0 -10 1 -11 2 rrcurveto",
                        "-143 339 rmoveto",
                        "11 0 10 -1 10 -1 -48 -41 -28 -60 0 -68 0 -68 31 -60 48 -40 -11 -2 -11 -1 -12 0 rrcurveto",
                        "-99 -72 79 92 94 76 77 95 hvcurveto",
                        "396 -171 rmoveto",
                        "0 90 -41 68 -68 35 rrcurveto",
                        "108 216 rlineto",
                        "10 -61 9 -37 28 -60 rrcurveto",
                        "44 -4 rlineto",
                        "-35 94 -12 52 -12 99 rrcurveto",
                        "-21 10 rlineto",
                        "-91 -56 -50 -20 -97 -28 rrcurveto",
                        "30 -34 rlineto",
                        "67 15 38 17 56 32 rrcurveto",
                        "-118 -215 rlineto",
                        "-25 8 -17 0 -22 0 -32 0 -30 -6 -27 -11 -26 11 -29 6 -32 0 -128 0 -93 -102 0 -119 rrcurveto",
                        "hintmask 1111101001100000",
                        "0 -94 64 -106 127 -18 rrcurveto",
                        "1 -111 -106 0 0 -47 rlineto",
                        "hintmask 1111100101100000",
                        "107 0 rlineto",
                        "hintmask 1111100011100000",
                        "3 -123 47 0 rlineto",
                        "hintmask 1111100101100000",
                        "3 123 107 0 0 47 -106 0 rlineto",
                        "hintmask 1111101001100000",
                        "3 111 rlineto",
                        "22 2 20 6 19 9 26 -11 28 -5 29 0 121 0 101 98 0 119 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni26A5
     */
    public void testuni26A5() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni26A5");
        assertNotNull(cs);
        assertEquals("uni26A5", cs.getName());
        String[] text =
                {
                        "166 -153 190 -190 47 486 51 hstemhm",
                        "61 51 141 59 -56 53 -50 47 148 51 hintmask 10110001",
                        "283 380 rmoveto",
                        "98 73 -77 -92 -92 -72 -82 -99 -99 -72 82 92 hvcurveto",
                        "94 76 75 95 vhcurveto", "hintmask 01111001",
                        "-30 -391 rmoveto", "2 -95 -106 0 0 -47 rlineto",
                        "hintmask 10110101", "107 0 rlineto",
                        "hintmask 10110011", "3 -91 47 0 rlineto",
                        "hintmask 10110101", "3 91 rlineto",
                        "hintmask 01111001", "107 47 -106 hlineto",
                        "2 94 rlineto",
                        "108 14 85 98 0 110 0 89 -44 68 -68 35 rrcurveto",
                        "108 217 rlineto", "9 -61 10 -37 27 -60 rrcurveto",
                        "45 -4 rlineto", "-35 94 -13 52 -11 98 rrcurveto",
                        "-22 11 rlineto", "-91 -57 -49 -19 -97 -28 rrcurveto",
                        "29 -35 rlineto", "68 16 37 16 56 32 rrcurveto",
                        "-118 -215 rlineto",
                        "-25 8 -17 1 -22 0 -128 0 -93 -99 0 -122 rrcurveto",
                        "0 -111 86 -95 106 -15 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2767
     */
    public void testuni2767() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2767");
        assertNotNull(cs);
        assertEquals("uni2767", cs.getName());
        String[] text =
                {
                        "605 -61 68 -20 35 46 63 -48 28 85 39 -17 29 6 21 21 26 -18 36 2 51 -14 65 -41 25 73 34.1241455078 0.875854492188 68 hstemhm",
                        "109 35 -32 28 103 31 385 56 63 43 hintmask 100100100000110111100000",
                        "466 -31 rmoveto",
                        "-27 -2 rlineto",
                        "4 14 -2 10 -7 8 -5 6 -7 2 -8 0 -7 0 -11 -3 -5 -9 -5 -7 -1 -6 1 -13 -11 12 -2 16 4 13 2 3 3 6 3 6 rrcurveto",
                        "50 -6 29 10 15 12 20 16 9 17 4 22 18 -10 25 -3 17 0 19 0 21 9 14 12 rrcurveto",
                        "29 1 rlineto",
                        "-2 -10 0 -11 2 -4 rrc",
                        "urveto",
                        "hintmask 001010100000110111100000",
                        "3 -8 9 -4 9 0 9 0 9 4 6 6 6 5 5 7 0 14 0 12 -6 8 -8 4 -5 4 -23 -1 -23 0 13 24 17 35 8 11 rrcurveto",
                        "7 12 6 9 10 9 12 13 12 11 11 0 6 0 18 -6 12 -7 0 -6 4 -21 -5 -19 -5 -2 -4 1 -4 1 -4 13 -1 7 3 13 rrcurveto",
                        "-10 -1 1 7 -15 -9 -9 -6 -3 -8 0 -8 0 -12 3 -5 11 -8 12 -9 14 -9 4 -8 3 -8 -6 -20 -3 -16 38 19 4 12 8 23 rrcurveto",
                        "7 18 -1 20 2 23 rrcurveto",
                        "hintmask 000001110010110111100000",
                        "12 -3 14 -3 10 0 26 1 12 3 20 15 14 11 8 8 14 13 -13 12 -8 11 -11 9 -12 9 -21 11 -21 0 -20 0 -13 -2 -12 -6 rrcurveto",
                        "-1 22 0 19 -6 17 -9 24 2 14 -44 20 3 -18 6 -21 -3 -8 -3 -8 -15 -10 -12 -9 -10 -7 -4 -6 0 -11 0 -8 3 -9 10 -5 rrcurveto",
                        "14 -9 -1 8 9 -1 -3 13 3 6 3 12 4 1 4 1 5 -2 5 -17 -3 -18 0 -9 -14 -3 -13 -2 -7 0 -12 0 -12 10 -17 20 rrcurveto",
                        "-15 16 -19 26 -14 17 18 0 25 1 4 3 6 4 7 5 0 15 0 14 -6 9 -7 4 -7 4 -6 6 -9 0 -10 0 -10 -7 -1 -5 rrcurveto",
                        "-1 -5 1 -21 0 0 rrcurveto",
                        "-26 1 rlineto",
                        "hintmask 010000100001110111100000",
                        "-12 12 -13 9 -16 0 -30 0 -27 -12 -26 -16 3 25 -17 38 -15 17 -19 23 -38 18 -32 -2 rrcurveto",
                        "-11 hlineto",
                        "-3 6 -3 5 -1 3 -5 13 3 16 10 12 -1 -13 2 -6 4 -7 5 -9 11 -3 7 0 8 0 7 2 5 6 8 8 1 10 -3 14 rrcurveto",
                        "26 -2 rlineto",
                        "-11 14 -12 17 -30 -1 -31 -1 -18 -16 -6 -13 -6 -16 -3 -22 5 -24 -22 -7 -21 -10 -11 -10 -15 -13 -16 -18 -10 -18 -13 13 -30 14 -9 0 rrcurveto",
                        "-10 0 -8 -4 -7 -7 -7 -7 -3 -18 0 -10 0 -10 4 -8 6 -7 7 -7 8 -3 10 0 10 0 0 8 7 6 6 6 14 -6 4 4 rrcurveto",
                        "-1 -14 1 -15 2 -12 5 -32 27 -35 18 -17 rrcurveto",
                        "-22 hlineto",
                        "-42 17 -36 23 -26 28 -20 22 -9 28 0 28 0 35 7 35 22 20 28 27 39 12 44 18 21 9 37 17 22 24 27 29 17 34 6 21 rrcurveto",
                        "35 -22 37 -39 12 -21 14 -22 34 -54 13 -28 0 0 11 -22 3 -21 37 11 -2 16 61 1 79 2 70 -38 56 -44 44 -34 59 -50 57 -63 rrcurveto",
                        "-62 -68 -51 -48 -42 -41 -80 -76 -67 -19 -53 1 -50 1 -26 5 -37 23 -21 -55 -62 -103 -57 -47 rrc",
                        "urveto",
                        "hintmask 100100100000111011100000",
                        "-25 36 -9 34 -29 23 -32 26 -79 27 -31 13 -40 19 -34 42 1 47 1 34 13 25 29 30 12 12 28 20 37 16 rrcurveto",
                        "8 3 19 0 rlineto",
                        "-12 -8 -10 -17 -10 -15 -9 -15 -7 -18 -1 -15 -1 -9 -1 -13 2 -13 -6 0 -7 -2 -4 5 -6 6 0 7 -11 0 -9 0 -9 -3 -6 -7 rrcurveto",
                        "-7 -7 -3 -7 0 -10 0 -10 3 -18 7 -7 6 -8 9 -4 9 0 9 0 27 13 14 12 14 -20 32 -28 50 -12 -6 -25 3 -19 6 -17 rrcurveto",
                        "6 -13 19 -16 31 -1 rrcurveto",
                        "30 -1 11 17 12 14 rrcurveto",
                        "hintmask 000010101000110011100000",
                        "1 266 rmoveto",
                        "-39 -23 27 6 9 23 26 36 hvcurveto",
                        "36 0 21 -17 31 -17 rrcurveto",
                        "-28 -18 -19 -16 -38 0 rrcurveto",
                        "428 -147 rmoveto",
                        "185 184 rlineto",
                        "-61 72 -71 55 -55 48 -43 38 -92 52 -89 -3 -32 -1 -37 -11 -17 -8 -13 35 -37 65 -16 23 -40 58 -44 28 -42 27 -3 -55 -22 -33 -28 -29 rrcurveto",
                        "-13 -13 -42 -23 -35 -14 -43 -17 -31 -10 -28 -30 rrcurveto",
                        "hintmask 010000100000110111100000",
                        "-26 -26 -8 -36 0 -44 0 -31 13 -39 22 -24 16 -17 18 -18 20 -14 rrcurveto",
                        "-40 5 -139 44 0 -35 56 -23 -56 -20 1 -36 137 41 42 6 rlineto",
                        "-17 -12 -13 -12 -7 -8 rrcurveto",
                        "hintmask 010000100000111011100000",
                        "-16 -15 -38 -35 -2 -64 -1 -61 41 -52 56 -22 35 -15 51 -18 33 -19 36 -21 44 -71 4 -42 72 58 61 75 38 85 25 -8 36 -15 42 0 rrcurveto",
                        "90 0 91 71 32 30 rrcurveto",
                        "10 180 rmoveto",
                        "hintmask 000001110000110011100000",
                        "-15 -14 -19 -7 -23 0 -20 0 -18 7 -19 14 17 16 21 11 22 0 19 0 19 -10 16 -17 rrcurveto",
                        "-521 -32 rmoveto",
                        "hintmask 000010100000110011100000",
                        "-15 5 -18 0 -9 -6 -10 -7 -1 -25 5 -12 6 -11 23 -24 9 -23 8 -22 -10 -28 -10 -26 -38 12 -31 28 -8 21 -2 6 -5 8 0 22 rrcurveto",
                        "14 vlineto",
                        "1 8 2 12 11 18 12 18 8 8 5 6 4 4 5 3 2 6 19 0 13 -1 5 0 6 0 6 -6 7 -8 rrcurveto",
                        "36 -30 rmoveto",
                        "18 -8 19 -2 9 0 16 0 29 8 15 9 15 10 17 13 16 9 16 9 10 6 17 8 -20 9 -20 9 -10 6 -",
                        "11 6 -19 14 -12 8 rrcurveto",
                        "hintmask 000110101101110011100000",
                        "-11 9 -28 10 -22 0 -19 0 -15 -4 -13 -4 8 10 7 12 -1 17 -1 32 -10 30 -8 19 -3 8 -8 14 -6 14 rrcurveto",
                        "3 0 2 0 rlineto",
                        "30 -2 12 -11 10 -11 11 -11 16 -29 5 -19 4 -13 4 -25 -5 -12 16 15 18 10 18 8 17 8 9 7 19 0 7 0 10 -6 10 -8 rrcurveto",
                        "-9 3 -11 1 -9 0 -22 -2 -2 -13 1 -13 2 -14 11 -6 10 -3 14 -3 27 10 20 -15 22 -15 6 -6 13 -10 12 -15 7 -2 6 -5 rrcurveto",
                        "4 -4 5 -2 4 -2 -2 -1 -3 0 -2 -2 -8 -4 -4 -6 -9 -9 -7 -6 -9 -10 -10 -12 rrcurveto",
                        "-42 -30 rlineto",
                        "-24 -18 -11 7 -12 -3 -10 -2 -11 -6 -2 -14 -1 -14 2 -12 22 -2 12 -1 15 4 11 4 -1 -2 -2 -2 -2 -2 -11 -13 -23 -5 -16 0 rrcurveto",
                        "-16 0 -29 13 -29 19 5 -27 -9 -35 -16 -15 -14 -13 -18 -5 -27 0 rrcurveto",
                        "-11 2 rlineto",
                        "8 13 7 13 3 8 8 19 10 30 1 32 1 18 -7 13 -9 10 rrcurveto",
                        "-90 68 rmoveto",
                        "-5 14 -18 9 -13 17 -13 15 -7 28 0 27 0 13 2 12 5 10 8 13 11 14 17 14 11 10 15 6 14 4 10 -25 11 -31 -9 -22 rrcurveto",
                        "-9 -23 -22 -24 -5 -11 -6 -12 1 -25 10 -7 7 -7 21 1 16 6 rrcurveto",
                        "-6 -9 rlineto",
                        "-6 -12 -5 -3 -10 -1 -4 -1 -9 0 -12 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2776
     */
    public void testuni2776() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2776");
        assertNotNull(cs);
        assertEquals("uni2776", cs.getName());
        String[] text =
                {"-15 167 494 -20 hstem", "347 409 rmoveto",
                        "12 2 -10 -33 hvcurveto", "-151 vlineto",
                        "-23 -14 -14 -16 vhcurveto", "-36 hlineto",
                        "-3 -4 -3 -2 hvcurveto", "-21 vlineto",
                        "0 60 1 38 33 53 -1 0 vhcurveto", "21 vlineto",
                        "4 -3 1 -3 vhcurveto", "-28 hlineto",
                        "-14 -11 14 23 hvcurveto", "261 -17 vlineto",
                        "-43 -28 -26 -10 -47 -18 rrcurveto", "10 -26 rlineto",
                        "14 5 30 10 13 0 rrcurveto", "31 237 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2777
     */
    public void testuni2777() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2777");
        assertNotNull(cs);
        assertEquals("uni2777", cs.getName());
        String[] text =
                {
                        "-15 168 325 168 hstem",
                        "490 217 vstem",
                        "302 376 rmoveto",
                        "9 18 8 16 hvcurveto",
                        "0 8 -4 8 0 8 rrcurveto",
                        "14 10 15 43 18 36 -13 -47 vhcurveto",
                        "0 -54 -23 -22 -45 -36 -47 -38 -44 -42 0 -48 rrcurveto",
                        "206 hlineto",
                        "4 29 7 35 8 30 rrcurveto",
                        "-24 6 rlineto",
                        "-10 -29 -16 -39 -32 0 rrcurveto",
                        "-81 hlineto",
                        "0 31 24 29 42 30 56 40 33 34 0 46 rrcurveto",
                        "63 -57 20 -50 -79 -29 -51 -27 -13 14 -11 13 vhcurveto",
                        "76 270 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2778
     */
    public void testuni2778() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2778");
        assertNotNull(cs);
        assertEquals("uni2778", cs.getName());
        String[] text =
                {
                        "-15 162 330 169 hstem",
                        "49 218 54 95 86 205 vstem",
                        "416 413 rmoveto",
                        "0 -41 -29 -26 -44 -6 rrcurveto",
                        "2 -24 rlineto",
                        "8 1 4 1 7 0 rrcurveto",
                        "25 54 -7 -57 -69 -57 -13 -19 hvcurveto",
                        "-32 0 -10 8 -9 10 -5 7 -7 7 -13 0 rrcurveto",
                        "-11 -13 -10 -10 -21 51 -16 38 80 66 46 69 hvcurveto",
                        "0 58 -47 27 -33 3 28 16 22 23 0 29 rrcurveto",
                        "37 -33 22 -51 -87 -30 -53 -17 -3 4 -15 20 vhcurveto",
                        "22 0 3 17 1 12 1 25 34 10 20 0 20 0 20 -9 0 -31 rrcurveto",
                        "-38 233 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2779
     */
    public void testuni2779() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2779");
        assertNotNull(cs);
        assertEquals("uni2779", cs.getName());
        String[] text =
                {"-15 169 25 74 393 -20 hstem", "422 393 rmoveto",
                        "8 -7 2 -6 vhcurveto",
                        "-7 0 -11 -12 -8 -9 -2 -3 -5 -8 0 -7 rrcurveto",
                        "-76 -91 vlineto", "23 34 59 82 45 70 rrcurveto",
                        "-30 9 rlineto", "-41 -56 -68 -96 -44 -66 rrcurveto",
                        "3 -12 144 0 0 -50 rlineto", "-21 -4 -3 -18 vhcurveto",
                        "-15 hlineto", "-4 -1 -3 -1 hvcurveto", "-21 vlineto",
                        "0 38 1 24 27 42 -1 0 vhcurveto", "20 vlineto",
                        "2 -1 3 -4 vhcurveto", "-16 hlineto",
                        "-18 -4 6 19 hvcurveto", "49 52 vlineto",
                        "3 35 -55 0 rlineto", "-44 358 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni277A
     */
    public void testuni277A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni277A");
        assertNotNull(cs);
        assertEquals("uni277A", cs.getName());
        String[] text =
                {
                        "-15 161 219 71 34 176 hstem",
                        "49 222 vstem",
                        "425 250 rmoveto",
                        "-42 -17 -37 -45 vhcurveto",
                        "",
                        "-21 0 -12 10 -9 9 -8 8 -7 7 -13 0 rrcurveto",
                        "-11 -11 -9 -12 -24 59 -14 34 70 48 54 59 54 -36 52 -77 hvcurveto",
                        "-15 0 -25 -5 -8 -5 rrcurveto",
                        "12 81 125 0 0 1 5 33 -153 0 -22 -142 6 -4 rlineto",
                        "14 8 21 6 22 0 rrcurveto", "72 2 -59 -29 hvcurveto",
                        "-47 396 rmoveto", "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni277B
     */
    public void testuni277B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni277B");
        assertNotNull(cs);
        assertEquals("uni277B", cs.getName());
        String[] text =
                {"-15 163 498 -20 hstem", "49 211 53 120 vstem",
                        "489 249 rmoveto", "17 -10 79 -97 vhcurveto",
                        "-25 0 -27 -16 -14 -15 11 59 35 66 109 19 rrcurveto",
                        "20 vlineto", "-153 -12 -58 -103 0 -82 rrcurveto",
                        "-104 72 -29 49 79 29 65 36 vhcurveto",
                        "-56 -5 rmoveto",
                        "-37 -8 -35 -44 -28 -40 23 84 vhcurveto",
                        "0 6 0 8 1 5 21 17 22 6 14 0 rrcurveto",
                        "57 5 -55 -22 hvcurveto", "-55 402 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni277C
     */
    public void testuni277C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni277C");
        assertNotNull(cs);
        assertEquals("uni277C", cs.getName());
        String[] text =
                {"435 -20 57 174 hstem", "49 236 vstem", "340 435 rmoveto",
                        "506 callsubr", "38 211 rmoveto", "536 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni277D
     */
    public void testuni277D() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni277D");
        assertNotNull(cs);
        assertEquals("uni277D", cs.getName());
        String[] text =
                {"-15 162 330 169 hstem", "49 219 59 103 vstem",
                        "372 312 rmoveto", "29 -15 rlineto",
                        "40 -20 5 -25 0 -25 rrcurveto",
                        "-41 -29 -17 -37 -24 -41 16 44 vhcurveto",
                        "0 34 41 40 16 9 rrcurveto", "102 98 rmoveto",
                        "39 -46 28 -45 -52 -48 -29 -45 vhcurveto",
                        "0 -29 15 -26 40 -19 rrcurveto", "12 -6 rlineto",
                        "-38 -21 -44 -36 0 -37 rrcurveto",
                        "-65 67 -17 44 90 31 58 32 vhcurveto",
                        "0 31 -18 25 -31 17 rrcurveto", "-39 21 rlineto",
                        "59 34 3 30 0 15 rrcurveto", "-95 45 rmoveto",
                        "35 16 -18 -27 hvcurveto",
                        "0 -30 -23 -27 -16 -10 rrcurveto", "-20 11 rlineto",
                        "-37 20 -7 22 0 16 rrcurveto", "29 23 14 29 vhcurveto",
                        "-1 191 rmoveto", "536 callsubr", "endchar", "", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni277E
     */
    public void testuni277E() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni277E");
        assertNotNull(cs);
        assertEquals("uni277E", cs.getName());
        String[] text =
                {"477 169 hstem", "319 119 56 213 vstem", "263 376 rmoveto",
                        "-17 9 -79 97 vhcurveto",
                        "25 0 27 16 15 15 -12 -59 -34 -66 -109 -19 rrcurveto",
                        "-20 vlineto", "153 12 60 103 0 82 rrcurveto",
                        "104 -74 29 -50 -79 -28 -65 -36 vhcurveto",
                        "56 5 rmoveto", "37 7 35 44 28 40 -23 -84 vhcurveto",
                        "-19 vlineto", "-22 -17 -22 -6 -14 0 rrcurveto",
                        "-56 -5 55 22 hvcurveto", "59 265 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni277F
     */
    public void testuni277F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni277F");
        assertNotNull(cs);
        assertEquals("uni277F", cs.getName());
        String[] text =
                {
                        "-15 166 330 165 hstem",
                        "49 202 51 62 58 128 58 99 vstem",
                        "484 151 rmoveto",
                        "58 66 50 119 120 -64 41 -57 -69 -54 -72 -94 -85 50 -79 70 hvcurveto",
                        "3 306 rmoveto",
                        "48 15 -73 -54 -78 -7 -76 -58 -54 -9 77 57 53 2 94 63 hvcurveto",
                        "-251 -44 rmoveto", "537 callsubr", "142 233 rmoveto",
                        "536 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni27E6
     */
    public void testuni27E6() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni27E6");
        assertNotNull(cs);
        assertEquals("uni27E6", cs.getName());
        String[] text =
                {"-76 -200 44 802 43 hstem", "98 58 57 58 vstem",
                        "418 689 rmoveto",
                        "-320 -889 320 44 -147 802 147 hlineto",
                        "-205 -802 rmoveto", "-57 802 57 hlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni27E7
     */
    public void testuni27E7() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni27E7");
        assertNotNull(cs);
        assertEquals("uni27E7", cs.getName());
        String[] text =
                {"-76 -200 44 802 43 hstem", "154 58 57 59 vstem",
                        "7 689 rmoveto",
                        "-43 147 -802 -147 -44 321 889 vlineto",
                        "-116 -845 rmoveto", "802 57 -802 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2C60
     */
    public void testuni2C60() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C60");
        assertNotNull(cs);
        assertEquals("uni2C60", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 248 39 64 39 189 27 hstemhm",
                        "106 81 hintmask 10111100", "336 429 rmoveto",
                        "-149 145 hlineto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-145 -86 -39 86 -64 -86 -39 86 -215 vlineto",
                        "-35 -9 -9 -42 vhcurveto", "-30 hlineto",
                        "-4 -4 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 115 2 12 vhcurveto", "hintmask 01111100",
                        "78 -1 255 0 rlineto", "4 56 11 57 11 52 rrcurveto",
                        "-30 5 rlineto", "-20 -72 -30 -59 -76 0 rrcurveto",
                        "-115 hlineto", "-29 -18 19 31 hvcurveto",
                        "198 149 39 -149 64 149 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C61
     */
    public void testuni2C61() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C61");
        assertNotNull(cs);
        assertEquals("uni2C61", cs.getName());
        String[] text =
                {"-220 1 27 259 39 64 39 269 -20 hstem", "95 74 vstem",
                        "246 429 rmoveto", "-77 269 -22 hlineto",
                        "-20 -9 -14 -4 -18 -4 -17 -3 -37 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-3 3 -2 3 vhcurveto",
                        "10 1 22 3 rlineto", "20 10 -16 -57 hvcurveto",
                        "-144 -80 -39 80 -64 -80 -39 80 -215 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-24 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 1 -2 rlineto",
                        "0 73 2 35 39 73 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-24 hlineto",
                        "-32 -11 15 29 hvcurveto",
                        "215 77 39 -77 64 77 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C62
     */
    public void testuni2C62() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C62");
        assertNotNull(cs);
        assertEquals("uni2C62", cs.getName());
        String[] text =
                {"25 -1 29 -28 39 243 59 6 59 212 27 hstemhm",
                        "106 81 hintmask 10111100", "-37 278 rmoveto",
                        "13 -4 rlineto",
                        "23 45 50 28 35 0 8 0 7 -2 7 -2 rrcurveto",
                        "-271 vlineto", "-35 -9 -9 -42 vhcurveto",
                        "-30 hlineto", "-4 -4 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 115 2 12 vhcurveto",
                        "hintmask 01111100", "78 -1 255 0 rlineto",
                        "4 56 11 57 11 52 rrcurveto", "-30 5 rlineto",
                        "-20 -72 -30 -59 -76 0 rrcurveto", "-115 hlineto",
                        "-29 -18 19 31 hvcurveto", "207 vlineto",
                        "15 -8 16 -6 16 0 24 0 65 12 31 107 rrcurveto",
                        "-17 7 rlineto",
                        "-22 -51 -49 -16 -29 0 -15 0 -17 8 -18 10 rrcurveto",
                        "215 vlineto", "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-171 vlineto", "-5 2 -5 1 -6 0 rrcurveto",
                        "-60 0 -55 -64 -12 -64 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C63
     */
    public void testuni2C63() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C63");
        assertNotNull(cs);
        assertEquals("uni2C63", cs.getName());
        String[] text =
                {"14 1 27 254 33 137 39 128 25 -24 34 hstemhm",
                        "106 81 225 85 hintmask 11101110", "106 491 rmoveto",
                        "-86 -39 86 -381 hlineto", "-28 -14 -15 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-27 hlineto", "-39 -15 13 30 hvcurveto",
                        "221 vlineto", "22 -7 19 -3 35 0 rrcurveto",
                        "182 52 119 85 59 -36 109 -185 hvcurveto",
                        "-26 0 -60 -2 -51 -3 rrcurveto", "hintmask 11110110",
                        "-47 callsubr", "192 -84 rmoveto", "-111 115 hlineto",
                        "hintmask 11101110", "19 7 44 7 19 0 rrcurveto",
                        "69 74 -25 -127 -108 -57 -45 -97 hvcurveto",
                        "-25 0 -35 2 -11 3 rrcurveto", "132 111 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C64
     */
    public void testuni2C64() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C64");
        assertNotNull(cs);
        assertEquals("uni2C64", cs.getName());
        String[] text =
                {
                        "68 -220 31 203 -21 290 38 295 36 -27 29 hstemhm",
                        "101 80 230 81 hintmask 11101110",
                        "181 72 rmoveto",
                        "1 211 rlineto",
                        "68 0 29 -5 4 -7 rrcurveto",
                        "103 -192 rlineto",
                        "26 -48 45 -38 59 0 15 0 17 3 11 4 rrcurveto",
                        "-4 20 rlineto",
                        "-40 -5 -31 38 -23 44 rrcurveto",
                        "-106 205 rlineto",
                        "22 8 22 12 22 18 47 38 24 46 0 55 0 50 -17 40 -36 34 -48 46 -70 5 -63 0 rrcurveto",
                        "hintmask 11110110",
                        "-31 0 -38 -1 -43 -1 -42 -2 -66 -6 -12 -3 rrcurveto",
                        "-18 vlineto",
                        "-4 3 -3 5 vhcurveto",
                        "30 3 7 0 rlineto",
                        "26 4 -17 -28 hvcurveto",
                        "-479 vlineto",
                        "0 -64 5 -56 12 -45 11 -43 18 -36 27 -28 26 -26 33 -17 30 0 23 0 19 4 16 7 19 8 12 8 7 10 6 9 2 11 0 10 rrcurveto",
                        "0 9 -3 9 -6 5 -7 5 -8 2 -8 0 -9 0 -9 -4 -5 -6 -8 -7 -5 -11 -3 -15 -3 -16 -11 -7 -19 0 -16 0 -13 5 -10 8 rrcurveto",
                        "-28 22 -15 80 0 146 rrcurveto",
                        "198 301 rmoveto",
                        "-24 -35 -48 -17 -75 0 rrcurveto",
                        "-50 296 hlineto",
                        "hintmask 11101110",
                        "24 6 27 2 36 0 60 0 32 -27 9 -8 31 -29 10 -41 0 -42 0 -43 -13 -34 -19 -28 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C65
     */
    public void testuni2C65() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C65");
        assertNotNull(cs);
        assertEquals("uni2C65", cs.getName());
        String[] text =
                {
                        "-50 -12 48 -48 41 383 30 hstemhm",
                        "39 72 -61 73 168 74 53 25 hintmask 01100110",
                        "162 32 rmoveto",
                        "120 211 9 2 0 -165 rlineto",
                        "-26 -22 -46 -29 -30 0 rrcurveto",
                        "-10 0 -9 1 -8 2 rrcurveto",
                        "-31 18 rmoveto",
                        "hintmask 00110110",
                        "-15 17 -5 22 0 18 0 48 17 40 105 34 rrcurveto",
                        "hintmask 10101110",
                        "122 -241 rmoveto",
                        "51 0 31 20 6 73 rrcurveto",
                        "-25 5 rlineto",
                        "-1 -22 -6 -28 -22 0 rrcurveto",
                        "-23 -1 26 61 hvcurveto",
                        "147 vlineto",
                        "0 37 -6 30 -10 23 rrcurveto",
                        "66 116 -41 0 -46 -81 rlineto",
                        "-32 37 -46 10 -42 0 rrcurveto",
                        "-64 -94 -51 -58 -24 16 -16 24 29 10 20 13 hvcurveto",
                        "0 7 -1 7 -2 4 -1 3 -2 6 0 11 0 31 44 17 38 0 28 0 42 -15 13 -73 rrcurveto",
                        "-32 -54 -57 -15 rlineto", "hintmask 01110110",
                        "-95 -24 -65 -52 0 -76 0 -52 24 -35 39 -17 rrcurveto",
                        "-34 -61 40 0 29 51 rlineto",
                        "8 -1 7 0 8 0 46 0 17 10 46 32 rrcurveto",
                        "23 16 rlineto", "4 -24 21 -34 38 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C66
     */
    public void testuni2C66() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C66");
        assertNotNull(cs);
        assertEquals("uni2C66", cs.getName());
        String[] text =
                {
                        "-163 -12 55 348 39 hstemhm",
                        "89 75 -58 58 hintmask 11010000",
                        "272 393 rmoveto",
                        "6 3 4 3 0 5 rrcurveto",
                        "0 5 38 67 -41 0 -26 -46 -89 0 0 154 -58 -20 0 -19 rlineto",
                        "-76 -16 -39 -67 -2 -1 -1 -3 vhcurveto", "-31 vlineto",
                        "-3 1 -1 3 vhcurveto", "hintmask 11100000",
                        "65 -248 hlineto", "-116 -205 41 0 76 134 rlineto",
                        "3 -60 26 -24 43 0 46 0 40 22 39 44 rrcurveto",
                        "-18 17 rlineto", "-26 -20 -20 -8 -26 0 rrcurveto",
                        "hintmask 11010000", "-27 -6 30 62 hvcurveto",
                        "hintmask 11100000", "67 vlineto", "66 189 rmoveto",
                        "-66 -118 0 118 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C67
     */
    public void testuni2C67() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C67");
        assertNotNull(cs);
        assertEquals("uni2C67", cs.getName());
        String[] text =
                {"194 0 28 301 39 250 27 hstem", "102 80 327 80 vstem",
                        "504 hmoveto", "-82 0 -2 1 0 19 rlineto",
                        "5 3 3 5 vhcurveto", "26 hlineto",
                        "41 14 16 28 hvcurveto", "257 -327 -257 vlineto",
                        "-31 15 -13 40 vhcurveto", "26 hlineto",
                        "5 3 -3 -5 hvcurveto", "0 -19 -1 -2 rlineto",
                        "0 -87 2 -39 -36 -93 -2 0 vhcurveto",
                        "-2 2 0 19 rlineto", "5 3 3 5 vhcurveto", "26 hlineto",
                        "41 14 16 28 hvcurveto", "502 vlineto",
                        "30 -16 14 -39 vhcurveto", "-26 hlineto",
                        "-5 -4 3 5 hvcurveto", "0 19 2 1 rlineto",
                        "0 87 -1 39 36 93 1 0 vhcurveto", "2 -1 0 -19 rlineto",
                        "-5 -3 -3 -5 vhcurveto", "-26 hlineto",
                        "-41 -14 -16 -28 hvcurveto", "-206 327 206 vlineto",
                        "30 -15 14 -40 vhcurveto", "-26 hlineto",
                        "-5 -4 3 5 hvcurveto", "0 19 2 1 rlineto",
                        "0 87 -1 39 36 93 1 0 vhcurveto", "2 -1 0 -19 rlineto",
                        "-5 -3 -3 -5 vhcurveto", "-26 hlineto",
                        "-41 -14 -16 -28 hvcurveto", "-497 vlineto",
                        "-25 16 -24 25 vhcurveto", "25 0 4 -11 1 -9 rrcurveto",
                        "6 -149 -27 0 rlineto",
                        "-14 71 -44 70 -77 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C68
     */
    public void testuni2C68() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C68");
        assertNotNull(cs);
        assertEquals("uni2C68", cs.getName());
        String[] text =
                {"17 0 28 367 47 256 -20 hstem", "88 75 198 75 vstem",
                        "436 76 rmoveto", "208 vlineto",
                        "103 -36 55 -72 vhcurveto",
                        "-39 0 -59 -16 -67 -67 rrcurveto", "339 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-2 2 -3 3 vhcurveto", "33 4 rlineto",
                        "20 9 -16 -57 hvcurveto", "-501 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 68 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-19 hlineto",
                        "-33 -10 15 29 hvcurveto", "250 vlineto",
                        "48 47 43 26 29 0 rrcurveto",
                        "56 22 -19 -81 hvcurveto", "-223 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "-20 71 vlineto",
                        "78 0 30 -79 11 -49 rrcurveto", "25 0 -6 135 rlineto",
                        "17 -11 4 -17 -19 -17 18 30 vhcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2C69
     */
    public void testuni2C69() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C69");
        assertNotNull(cs);
        assertEquals("uni2C69", cs.getName());
        String[] text =
                {"153 0 -20 21 27 590 27 hstem", "106 81 vstem",
                        "187 72 rmoveto", "237 vlineto",
                        "27 -4 16 -11 22 -23 rrcurveto", "182 -198 rlineto",
                        "20 -22 0 -26 0 -18 rrcurveto", "1 -7 24 0 rlineto",
                        "81 0 36 -85 11 -56 rrcurveto", "27 0 -6 149 rlineto",
                        "-1 12 -7 8 -22 0 -17 0 -16 16 -26 29 rrcurveto",
                        "-239 260 rlineto",
                        "-8 9 -6 8 0 8 0 9 10 12 29 28 rrcurveto",
                        "160 151 rlineto", "49 46 36 9 40 5 rrcurveto",
                        "6 5 3 5 hvcurveto", "0 19 -5 1 rlineto",
                        "0 -61 -1 -35 -40 -76 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "21 hlineto", "17 14 -10 -6 hvcurveto",
                        "0 -9 -8 -12 -19 -19 rrcurveto", "-187 -176 rlineto",
                        "-23 -21 -18 -12 -20 -6 rrcurveto", "227 vlineto",
                        "28 14 16 41 vhcurveto", "26 hlineto",
                        "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 4 vhcurveto",
                        "27 hlineto", "39 15 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -13 -16 -41 vhcurveto",
                        "-27 hlineto", "-4 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 35 40 86 -2 0 vhcurveto",
                        "2 2 0 19 rlineto", "5 -4 3 -4 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : uni2C6A
     */
    public void testuni2C6A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C6A");
        assertNotNull(cs);
        assertEquals("uni2C6A", cs.getName());
        String[] text =
                {
                        "-13 0 -20 21 27 374 27 269 -20 hstem",
                        "88 75 vstem",
                        "163 205 rmoveto",
                        "6 vlineto",
                        "4 0 3 1 3 0 23 0 12 -17 14 -19 rrcurveto",
                        "73 -103 rlineto",
                        "18 -25 2 -23 1 -18 rrcurveto",
                        "-7 25 vlineto",
                        "80 0 20 -73 12 -55 rrcurveto",
                        "27 0 -6 136 rlineto",
                        "-1 12 -7 8 -23 0 -17 0 -20 13 -22 32 rrcurveto",
                        "-117 173 rlineto",
                        "-3 4 -2 5 0 4 0 4 1 4 3 3 rrcurveto",
                        "76 84 rlineto",
                        "25 26 44 22 27 0 rrcurveto",
                        "7 hlineto",
                        "5 6 3 5 hvcurveto",
                        "0 19 -4 2 rlineto",
                        "0 -54 -2 -39 -35 -48 2 0 vhcurveto",
                        "-3 -2 0 -19 rlineto",
                        "-4 3 -4 5 vhcurveto",
                        "4 hlineto",
                        "24 5 -8 -8 hvcurveto",
                        "0 -10 -4 -13 -16 -16 -54 -58 -33 -31 -44 -22 rrcurveto",
                        "462 -22 vlineto",
                        "-20 -9 -15 -4 -18 -4 -17 -3 -36 -6 -16 0 rrcurveto",
                        "2 -25 rlineto", "-2 2 -3 2 vhcurveto",
                        "2 0 4 1 3 0 9 1 16 2 0 0 rrcurveto",
                        "20 9 -18 -55 hvcurveto", "-501 vlineto",
                        "-29 -9 -15 -34 vhcurveto", "-19 hlineto",
                        "-5 -2 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 67 2 36 39 51 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -4 vhcurveto", "-2 hlineto",
                        "-33 -10 15 29 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C6B
     */
    public void testuni2C6B() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C6B");
        assertNotNull(cs);
        assertEquals("uni2C6B", cs.getName());
        String[] text =
                {"117 0 39 567 40 hstem", "42 26 vstem", "134 646 rmoveto",
                        "-47 0 27 15 -52 6 rrcurveto",
                        "-20 -194 26 -2 rlineto", "4 45 29 90 74 0 rrcurveto",
                        "257 hlineto", "7 4 -2 -6 hvcurveto",
                        "0 -5 -3 -7 -6 -7 rrcurveto", "-385 -541 rlineto",
                        "-6 -8 -2 -8 0 -7 rrcurveto", "",
                        "-10 5 -5 14 vhcurveto", "379 hlineto",
                        "78 0 44 -70 14 -71 rrcurveto", "27 0 -7 149 rlineto",
                        "9 -3 22 -25 vhcurveto", "-378 hlineto",
                        "-17 -8 4 9 hvcurveto", "0 5 3 6 5 9 rrcurveto",
                        "371 519 rlineto", "20 28 3 7 0 8 rrcurveto",
                        "9 -6 3 -18 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C6C
     */
    public void testuni2C6C() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C6C");
        assertNotNull(cs);
        assertEquals("uni2C6C", cs.getName());
        String[] text =
                {
                        "-90 0 39 352 39 hstem",
                        "340 39 rmoveto",
                        "22 0 10 -19 1 -12 rrcurveto",
                        "6 -136 -27 0 rlineto",
                        "-12 55 -19 73 -81 0 rrcurveto",
                        "-172 hlineto",
                        "-27 -8 5 7 hvcurveto",
                        "0 5 3 6 6 9 rrcurveto",
                        "236 359 -142 0 rlineto",
                        "-30 0 -29 -13 -19 -84 rrcurveto",
                        "-26 5 31 152 24 -4 rlineto",
                        "1 -15 4 -2 16 0 rrcurveto",
                        "196 hlineto",
                        "25 2 22 1 3 0 8 0 2 0 4 -3 2 -2 0 -3 0 -4 0 -6 -8 -14 -9 -14 rrcurveto",
                        "-229 -348 rlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C74
     */
    public void testuni2C74() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C74");
        assertNotNull(cs);
        assertEquals("uni2C74", cs.getName());
        String[] text =
                {"-17 10 -21 413 27 -8 26 hstemhm",
                        "82 68 83 28 hintmask 10111000", "192 421 rmoveto",
                        "24 17 -14 -16 hvcurveto",
                        "0 -32 -47 -38 -26 -24 -7 18 -3 8 0 35 rrcurveto",
                        "38 20 25 22 vhcurveto", "4 26 rmoveto",
                        "-64 -50 -42 -50 hvcurveto",
                        "0 -32 8 -26 14 -34 -23 -20 -20 -12 -22 -14 rrcurveto",
                        "12 -18 rlineto",
                        "18 12 23 15 20 15 2 -4 30 -78 2 -5 rrcurveto",
                        "57 -145 rlineto",
                        "5 -12 7 -8 13 0 10 0 10 8 5 14 rrcurveto",
                        "141 345 rlineto", "17 42 14 3 28 2 rrcurveto",
                        "6 hlineto", "7 4 3 5 hvcurveto", "20 vlineto",
                        "hintmask 11011000",
                        "0 -43 -2 -28 -33 -53 2 0 vhcurveto", "-22 vlineto",
                        "-3 1 -4 5 vhcurveto", "16 hlineto",
                        "19 -1 8 -1 0 -11 0 -7 -3 -10 -6 -16 rrcurveto",
                        "-91 -221 -18 -50 -16 53 -41 98 rlineto",
                        "0 1 -17 39 0 3 33 26 58 46 0 49 rrcurveto",
                        "24 -23 23 -42 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C75
     */
    public void testuni2C75() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C75");
        assertNotNull(cs);
        assertEquals("uni2C75", cs.getName());
        String[] text =
                {"-36 1 27 304 34 252 27 hstem", "102 80 198 39 vstem",
                        "182 574 rmoveto", "28 14 16 41 vhcurveto",
                        "26 hlineto", "5 3 3 5 hvcurveto", "0 19 -2 1 rlineto",
                        "0 -93 -1 -36 -39 -87 1 0 vhcurveto",
                        "-2 -1 0 -19 rlineto", "-5 4 -3 5 vhcurveto",
                        "26 hlineto", "39 16 -14 -30 hvcurveto",
                        "-502 vlineto", "-28 -14 -16 -41 vhcurveto",
                        "-26 hlineto", "-5 -3 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto", "0 93 2 36 39 87 -2 0 vhcurveto",
                        "1 2 0 19 rlineto", "5 -3 3 -5 vhcurveto",
                        "-26 hlineto", "-40 -15 13 31 hvcurveto",
                        "260 141 vlineto", "33 0 12 -16 5 -28 rrcurveto",
                        "6 -31 rlineto", "-4 3 -3 5 vhcurveto",
                        "37 0 3 3 rlineto",
                        "-4 32 -4 29 0 35 0 33 5 30 3 32 rrcurveto",
                        "2 -1 2 -3 vhcurveto", "-36 hlineto",
                        "-4 -3 -4 -4 hvcurveto", "-7 -30 rlineto",
                        "-6 -28 -9 -16 -35 0 rrcurveto", "-141 hlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uni2C76
     */
    public void testuni2C76() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C76");
        assertNotNull(cs);
        assertEquals("uni2C76", cs.getName());
        String[] text =
                {"-82 1 27 185 34 155 27 hstem", "99 74 vstem",
                        "99 358 rmoveto", "-286 vlineto",
                        "-29 -10 -15 -33 vhcurveto", "-19 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 68 2 35 39 69 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-19 hlineto",
                        "-32 -11 15 29 hvcurveto", "141 106 vlineto",
                        "34 0 11 -15 6 -29 rrcurveto", "5 -31 rlineto",
                        "1 -3 2 -4 6 0 rrcurveto", "37 0 2 3 rlineto",
                        "-3 33 -5 29 0 34 0 34 6 29 2 32 rrcurveto",
                        "2 -1 3 -2 vhcurveto", "-36 hlineto",
                        "-4 0 -3 -4 -1 -5 rrcurveto", "-6 -29 rlineto",
                        "-7 -28 -9 -17 -35 0 rrcurveto", "-106 111 hlineto",
                        "28 11 16 32 vhcurveto", "19 hlineto",
                        "5 4 3 5 hvcurveto", "0 19 -2 2 rlineto",
                        "0 -69 -2 -39 -35 -68 2 0 vhcurveto", "",
                        "-2 -2 0 -19 rlineto", "-5 3 -3 5 vhcurveto",
                        "19 hlineto", "33 10 -16 -28 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uni2C77
     */
    public void testuni2C77() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uni2C77");
        assertNotNull(cs);
        assertEquals("uni2C77", cs.getName());
        String[] text =
                {
                        "117 411 27 hstem",
                        "37 81 162 58 164 80 vstem",
                        "37 228 rmoveto",
                        "-199 156 -50 117 88 184 51 203 105 -66 100 -115 vhcurveto",
                        "-26 0 -28 -7 -21 -21 -39 -39 -7 -42 0 -73 rrcurveto",
                        "-249 vlineto",
                        "-48 5 -36 15 -24 28 -32 39 -22 51 0 74 0 129 47 37 22 17 rrcurveto",
                        "-20 21 rlineto",
                        "-41 -23 -89 -43 0 -129 rrcurveto",
                        "301 -220 rmoveto",
                        "235 vlineto",
                        "114 24 54 38 61 41 -51 -141 vhcurveto",
                        "0 -64 -19 -42 -36 -46 -29 -37 -38 -16 -42 -6 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniA720
     */
    public void testuniA720() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniA720");
        assertNotNull(cs);
        assertEquals("uniA720", cs.getName());
        String[] text =
                {"138 397 298 hstem", "27 75 143 74 vstem", "27 695 rmoveto",
                        "-298 75 203 vlineto",
                        "143 -32 0 -101 74 0 0 84 253 -56 14 76 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniA721
     */
    public void testuniA721() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniA721");
        assertNotNull(cs);
        assertEquals("uniA721", cs.getName());
        String[] text =
                {"127 -229 299 hstem", "27 75 143 74 vstem",
                        "102 -133 rmoveto", "203 -75 -299 vlineto",
                        "559 125 -14 76 -253 -57 0 85 -74 0 0 -102 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE001
     */
    public void testuniE001() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE001");
        assertNotNull(cs);
        assertEquals("uniE001", cs.getName());
        String[] text =
                {
                        "656 -36 35 135 39 20 34 89 110 -79 135 hstemhm",
                        "55 49 464 41 268 121 hintmask 11100111",
                        "433 -1 rmoveto",
                        "-39 0 -41 22 -27 27 -21 22 -8 41 0 30 0 5 0 5 1 4 49 18 56 20 49 0 rrcurveto",
                        "89 27 -39 -58 hvcurveto",
                        "-48 -59 -49 -76 vhcurveto",
                        "7 -35 rmoveto",
                        "55 114 42 101 48 -38 72 -104 hvcurveto",
                        "-65 0 -90 -33 -15 -6 7 75 55 40 33 17 rrcurveto",
                        "hintmask 11101111",
                        "20 11 48 16 73 0 90 0 59 -36 33 -28 35 -31 25 -37 0 -27 0 -20 -16 -23 -27 0 -30 0 -11 24 -23 19 -5 -15 -2 -12 0 -11 rrcurveto",
                        "-93 66 -23 40 32 68 32 70 vhcurveto",
                        "0 28 -5 37 -11 24 9 -4 40 -6 38 0 46 0 64 15 52 20 -66 77 -52 52 -86 35 77 20 25 58 0 43 0 49 -45 53 -60 0 rrcurveto",
                        "-40 0 -39 -30 -21 -52 13 5 12 3 12 0 rrcurveto",
                        "26 21 -16 -35 -34 -44 -17 -34 hvcurveto",
                        "-11 0 -25 2 -30 5 -49 7 -67 7 -50 0 -67 0 -70 -18 -42 -26 -39 -25 -108 -80 0 -157 -8 -2 -9 -1 -10 0 rrcurveto",
                        "-50 -60 14 63 hvcurveto",
                        "hintmask 11110111",
                        "39 28 27 49 20 15 2 36 31 -15 41 -30 vhcurveto",
                        "-22 0 -52 -51 -19 -33 -18 -32 -5 -30 0 -36 0 -88 85 -22 68 0 12 0 10 0 12 2 4 -64 66 -108 128 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE002
     */
    public void testuniE002() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE002");
        assertNotNull(cs);
        assertEquals("uniE002", cs.getName());
        String[] text =
                {
                        "656 818 467 rmoveto",
                        "35 -17 28 -36 13 -37 9 -28 -10 -41 -13 -27 -2 -5 -2 -4 -2 -4 -52 5 -59 6 -45 20 -80 38 -9 47 25 53 20 43 74 19 70 -32 rrcurveto",
                        "8 35 rmoveto",
                        "-49 23 -122 10 -43 -92 -20 -43 4 -81 94 -44 60 -28 94 -8 17 -1 -38 -65 -67 -13 -37 -2 -23 -1 -50 7 -66 30 -82 38 -39 58 -17 40 rrcurveto",
                        "-19 42 -7 45 12 24 8 18 25 14 24 -11 27 -13 0 -27 13 -26 10 11 7 10 5 10 39 84 -49 49 -37 17 -29 13 -75 0 -30 -64 rrcurveto",
                        "-11 -25 -12 -35 1 -27 -8 8 -33 22 -34 16 -42 20 -64 13 -56 4 27 -98 26 -69 62 -68 -77 15 -48 -42 -18 -39 -21 -45 19 -66 54 -26 rrcurveto",
                        "37 -17 47 11 41 38 -13 1 -14 2 -10 6 -24 10 -11 24 14 31 15 32 47 -4 31 -14 10 -5 21 -13 25 -17 42 -27 58 -34 45 -22 rrcurveto",
                        "61 -28 71 -14 48 6 47 6 131 27 67 143 8 -2 9 -4 8 -4 45 -21 49 -37 -27 -57 -17 -36 -36 -13 -44 21 -18 8 -15 5 -15 -33 rrcurveto",
                        "-13 -28 -4 -43 28 -13 19 -9 68 24 32 22 30 21 17 25 16 32 37 81 -68 56 -62 29 -10 4 -10 4 -11 4 24 60 -15 126 -116 54 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE003
     */
    public void testuniE003() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE003");
        assertNotNull(cs);
        assertEquals("uniE003", cs.getName());
        String[] text =
                {
                        "656 -36 35 135 39 20 34 89 110 -79 135 hstemhm",
                        "156 121 10 92 166 41 271 55 138 50 hintmask 1110011111000000",
                        "722 -1 rmoveto",
                        "39 0 41 22 26 27 21 22 8 41 0 30 0 5 0 5 -1 4 -48 18 -57 20 -49 0 rrcurveto",
                        "-88 -28 -39 -58 hvcurveto",
                        "-48 59 -49 77 vhcurveto",
                        "-8 -35 rmoveto",
                        "-54 -115 42 101 48 38 72 105 hvcurveto",
                        "",
                        "64 0 90 -33 15 -6 -6 75 -56 40 -32 17 rrcurveto",
                        "hintmask 1110111111000000",
                        "-21 11 -48 16 -73 0 -90 0 -59 -36 -33 -28 -35 -31 -25 -37 0 -27 0 -20 17 -23 26 0 30 0 11 24 23 19 5 -15 2 -12 0 -11 rrcurveto",
                        "-93 -65 -23 -40 -33 -68 32 70 vhcurveto",
                        "0 28 5 37 12 24 -10 -4 -40 -6 -37 0 -47 0 -64 15 -51 20 65 77 52 52 86 35 -76 20 -26 58 0 43 0 49 46 53 60 0 rrcurveto",
                        "40 0 38 -30 21 -52 -12 5 -13 3 -12 0 rrcurveto",
                        "-26 -21 -16 -35 -34 44 -17 34 hvcurveto",
                        "12 0 24 2 30 5 50 7 67 7 49 0 68 0 70 -18 41 -26 40 -25 107 -80 0 -157 8 -2 10 -1 9 0 rrcurveto",
                        "50 60 14 63 hvcurveto",
                        "hintmask 1111011111000000",
                        "39 -28 27 -48 -20 -16 2 36 31 15 41 30 vhcurveto",
                        "22 0 52 -51 19 -33 19 -32 5 -30 0 -36 0 -88 -86 -22 -68 0 -11 0 -11 0 -12 2 -3 -64 -67 -108 -128 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE004
     */
    public void testuniE004() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE004");
        assertNotNull(cs);
        assertEquals("uniE004", cs.getName());
        String[] text =
                {"301 87 39 103 39 102 40 hstem", "765 126 rmoveto",
                        "-401 -39 401 hlineto", "-48 181 rmoveto",
                        "-626 -39 626 hlineto", "48 181 rmoveto",
                        "-401 -40 401 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE005
     */
    public void testuniE005() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE005");
        assertNotNull(cs);
        assertEquals("uniE005", cs.getName());
        String[] text =
                {"301 87 39 103 39 102 40 hstem", "38 126 rmoveto",
                        "401 -39 -401 hlineto", "48 181 rmoveto",
                        "626 -39 -626 hlineto", "-48 181 rmoveto",
                        "401 -40 -401 hlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE006
     */
    public void testuniE006() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE006");
        assertNotNull(cs);
        assertEquals("uniE006", cs.getName());
        String[] text =
                {"1840 197 106 -74 40 -23 6 hstemhm",
                        "1118 106 hintmask 10010000", "1118 250 rmoveto",
                        "-87 callsubr", "hintmask 01010000", "-443 19 rmoveto",
                        "-236 hlineto", "hintmask 00110000", "553 callsubr",
                        "hintmask 01010000", "554 callsubr",
                        "hintmask 00110000", "555 callsubr",
                        "hintmask 01010000", "1228 hmoveto", "-236 hlineto",
                        "hintmask 00110000", "553 callsubr",
                        "hintmask 01010000", "554 callsubr", "",
                        "hintmask 00110000", "555 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uniE007
     */
    public void testuniE007() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE007");
        assertNotNull(cs);
        assertEquals("uniE007", cs.getName());
        String[] text =
                {"3920 197 106 -77 47 -27 7 hstemhm",
                        "2165 106 hintmask 10010000", "2165 250 rmoveto",
                        "-29 24 -24 29 30 23 24 29 29 -23 24 -30 vhcurveto",
                        "-29 -24 -24 -29 hvcurveto", "hintmask 01010000",
                        "-913 23 rmoveto", "-471 hlineto", "hintmask 00110000",
                        "-142 0 -489 -20 -150 0 rrcurveto", "-7 vlineto",
                        "hintmask 01010000", "137 0 513 -20 131 0 rrcurveto",
                        "471 hlineto", "hintmask 00110000",
                        "100 0 502 20 179 0 rrcurveto", "7 vlineto",
                        "-199 1 -475 19 -107 0 rrcurveto", "hintmask 01010000",
                        "2389 hmoveto", "-471 hlineto", "hintmask 00110000",
                        "-143 0 -488 -20 -150 0 rrcurveto", "-7 vlineto",
                        "hintmask 01010000", "136 0 514 -20 131 0 rrcurveto",
                        "471 hlineto", "hintmask 00110000",
                        "99 0 502 20 180 0 rrcurveto", "7 vlineto",
                        "-199 1 -475 19 -107 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE008
     */
    public void testuniE008() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE008");
        assertNotNull(cs);
        assertEquals("uniE008", cs.getName());
        String[] text =
                {
                        "5771 -137 54 17 51 -24 54 146 54 -45 59 -52 54 -8 53 -29 54 -49 54 161 54 -48 53 -37 53 1 54 -23 54 hstemhm",
                        "hintmask 1010000000000000",
                        "2186 -83 rmoveto",
                        "-196 0 -300 29 -14 0 -14 0 -13 -12 0 -15 0 -13 10 -12 15 -1 143 -17 162 -13 212 0 389 0 236 98 185 0 243 0 204 -98 380 0 rrcurveto",
                        "hintmask 1100000000000000",
                        "273 0 138 71 235 0 136 0 55 -17 52 -36 5 -3 5 -2 5 0 15 0 12 13 0 14 0 9 -4 8 -8 5 -83 56 -99 4 -94 0 rrcurveto",
                        "-243 0 -75 -68 -325 0 rrcurveto",
                        "hintmask 1010000000000000",
                        "-357 0 -223 98 -247 0 rrcurveto",
                        "-186 0 -253 -98 -376 0 rrcurveto",
                        "hintmask 1000001000000000",
                        "-634 306 rmoveto",
                        "hintmask 1000100100000000",
                        "281 0 183 -53 202 0 230 0 486 77 58 0 rrcurveto",
                        "hintmask 1000010010000000",
                        "250 0 195 -70 290 0 241 0",
                        "271 75 155 0 219 0 426 -92 176 0 rrcurveto",
                        "190 127 15 61 14 -11 13 -16 hvcurveto",
                        "-39 0 48 -49 -299 0 -173 0 -413 92 -235 0 -164 0 -265 -75 -238 0 rrcurveto",
                        "hintmask 1000100100000000",
                        "-284 0 -195 70 -256 0 -182 0 -248 -72 -328 0 rrcurveto",
                        "hintmask 1001001000000000",
                        "-250 0 -175 47 -254 0 -237 0 -130 -61 -291 0 rrcurveto",
                        "-15 -12 -12 -15 -15 12 -12 15 hvcurveto",
                        "294 0 128 62 233 0 rrcurveto",
                        "-1493 394 rmoveto",
                        "0 -10 6 -9 10 -5 rrcurveto",
                        "hintmask 1000000000101000",
                        "204 -88 166 -32 239 0 468 0 24 70 269 0 322 0 85 -70 157 0 rrcurveto",
                        "hintmask 1000000000010100",
                        "302 0 342 101 317 0 293 0 143 -85 327 0 355 0 87 91 300 0 rrcurveto",
                        "hintmask 1000000001000100",
                        "317 0 219 -113 244 0 297 0 253 108 340 0 rrcurveto",
                        "14 12 12 15 14 -12 12 -14 hvcurveto",
                        "-345 0 -261 -107 -284 0 -227 0 -236 113 -317 0 rrcurveto",
                        "hintmask 1000000000010100",
                        "-295 0 -111 -92 -336 0 -301 0 -166 86 -296 0 rrcurveto",
                        "hintmask 1000000000101000",
                        "-333 0 -323 -102 -305 0 -157 0 -81 71 -326 0 -265 0 -35 -71 -461 0 -396 0 -176 119 -27 0 -13 0 -13 -12 0 -16 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE009
     */
    public void testuniE009() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE009");
        assertNotNull(cs);
        assertEquals("uniE009", cs.getName());
        String[] text =
                {"115 -211 55 282 29 -28 39 452 27 hstemhm",
                        "106 81 208 74 -57 57 hintmask 10111100",
                        "469 127 rmoveto", "556 callsubr", "hintmask 10111010",
                        "557 callsubr", "hintmask 11011100", "-54 callsubr",
                        "hintmask 10111100", "558 callsubr", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uniE00A
     */
    public void testuniE00A() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE00A");
        assertNotNull(cs);
        assertEquals("uniE00A", cs.getName());
        String[] text =
                {
                        "902 -211 55 11 30 -25 16 129 24 67 29 -18 21 -2 29 -28 39 8 57 136 30 -28 20 -17 16 129 24 60 36 -22 26 -23 27 40 58 hstemhm",
                        "106 81 175 57 -44 44 -24 74 -57 57 54 45 104 58 -45 45 -33 47 44 45 28 45 49 47 22 45 12 44 5 45 122 48 hintmask 1001000010011100110100100011111110000000",
                        "419 414 rmoveto",
                        "222 -9 vlineto",
                        "hintmask 1001000010011100110010100011111110000000",
                        "-4 0 -5 -2 -6 -3 -17 -8 -7 -3 -38 -6 rrcurveto",
                        "3 -16 rlineto",
                        "10 2 7 1 8 0 rrcurveto",
                        "hintmask 1001000010011100110100100011111110000000",
                        "8 6 -5 -33 hvcurveto",
                        "-149 vlineto",
                        "-17 -6 -9 -20 vhcurveto",
                        "-12 hlineto",
                        "-3 -1 -2 -3 hvcurveto",
                        "0 -11 0 -1 rlineto",
                        "0 42 1 21 23 41 -1 0 vhcurveto",
                        "1 1 0 11 rlineto",
                        "3 -2 2 -2 vhcurveto",
                        "-12 hlineto",
                        "-20 -6 9 17 hvcurveto",
                        "hintmask 1001000010001000111000100011111110000000",
                        "-57 299 rmoveto",
                        "-15 13 -13 16 15 13 13 15 16 -13 14 -15 vhcurveto",
                        "-16 -13 -14 -16 hvcurveto",
                        "206 80 rmoveto",
                        "-13 hlineto",
                        "-12 -5 -9 -2 -11 -2 -10 -2 -22 -4 -10 0 rrcurveto",
                        "2 -15 rlineto",
                        "-2 1 -1 2 vhcurveto",
                        "19 2 rlineto",
                        "13 5 -9 -34 hvcurveto",
                        "-301 vlineto",
                        "hintmask 1001000010011000110000100111111110000000",
                        "0 -23 0 -10 -2 -13 rrcurveto",
                        "hintmask 1001000010101010110000100111111110000000",
                        "13 -3 rlineto",
                        "6 6 7 8 6 8 17 -16 19 -6 26 0 rrcurveto",
                        "61 68 53 96 73 -50 50 -52 hvcurveto",
                        "-30 0 -23 -11 -21 -22 rrcurveto",
                        "-200 vmoveto",
                        "181 vlineto",
                        "24 25 31 1 6 0 rrcurveto",
                        "37 31 -44 -61 -69 -29 -52 -57 hvcurveto",
                        "-18 0 -12 5 -13 14 rrcurveto",
                        "426 22 rmoveto",
                        "hintmask 1001000011001000110000100011111110000000",
                        "-21 -22 -21 -11 -33 0 -44 0 -42 47 0 61 rrcurveto",
                        "12 158 vlineto",
                        "7 4 4 6 51 -19 62 -78 -57 -60 -55 -91 -65 34 -62 83 hvcurveto",
                        "42 0 36 22 23 31 rrcurveto",
                        "-171 121 rmoveto",
                        "11 73 44 5 14 0 rrcurveto",
                        "22 29 -15 -55 -6 -3 -2 -6 hvcurveto",
                        "135 -126 rmoveto",
                        "hintmask 1001000010101100110000100011111110000000",
                        "-17 -6 -9 -20 vhcurveto",
                        "-12 hlineto",
                        "-2 -2 -2 -3 hvcurveto",
                        "0 -11 1 -2 rlineto",
                        "0 41 2 21 23 47 -2 0 vhcurveto",
                        "2 2 0 11 rlineto",
                        "3 -3 2 -3 vhcurveto",
                        "-17 hlineto",
                        "-20 -6 9 17 hvcurveto",
                        "133 vlineto",
                        "0 8 3 8 4 5 15 20 13 12 7 0 4 0 4 -2 4 -4 6 -6 6 -5 12 0 rrcurveto",
                        "16 10 10 15 16 -9 12 -25 hvcurveto",
                        "-28 0 -26 -31 -16 -23 rrcurveto",
                        "-1 0 1 54 -9 0 rlineto",
                        "-4 0 -5 -2 -6 -3 rrcurveto",
                        "hintmask 1001000010001010110000100011111110000000",
                        "-18 -8 -6 -3 -38 -6 rrcurveto",
                        "3 -17 rlineto",
                        "hintmask 1001000010101100110000100011111110000000",
                        "10 3 7 0 8 0 rrcurveto",
                        "9 5 -6 -31 hvcurveto",
                        "hintmask 1011100010001000110000101011111110000000",
                        "-351 -661 rmoveto",
                        "222 -9 vlineto",
                        "-5 0 -4 -2 -6 -3 -18 -8 -6 -3 -38 -6 rrcurveto",
                        "2 -17 rlineto",
                        "11 2 7 1 7 0 rrcurveto",
                        "9 5 -5 -32 hvcurveto",
                        "-149 vlineto",
                        "-17 -6 -10 -20 vhcurveto",
                        "-11 hlineto",
                        "-3 -2 -1 -3 hvcurveto",
                        "0 -12 1 -1 rlineto",
                        "0 41 1 22 23 41 -1 0 vhcurveto",
                        "1 1 0 12 rlineto",
                        "3 -2 1 -3 vhcurveto",
                        "-12 hlineto",
                        "-19 -6 10 17 hvcurveto",
                        "hintmask 1001000010001000110000110011111110000000",
                        "-58 299 rmoveto",
                        "-15 13 -13 16 16 13 13 15 16 -13 13 -16 vhcurveto",
                        "-16 -13 -13 -16 hvcurveto",
                        "352 -299 rmoveto",
                        "-17 -5 -9 -20 vhcurveto",
                        "-9 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -11 2 -2 rlineto",
                        "0 37 2 22 23 41 -2 0 vhcurveto",
                        "1 2 0 11 rlineto",
                        "3 -2 2 -3 vhcurveto",
                        "-11 hlineto",
                        "-19 -7 9 17 hvcurveto",
                        "127 vlineto",
                        "hintmask 1001100010001000110000100011111110000000",
                        "54 -11 41 -54 vhcurveto",
                        "-31 0 -29 -8 -38 -45 rrcurveto",
                        "-2 0 2 53 -9 0 rlineto",
                        "-4 0 -5 -2 -7 -3 -18 -10 -18 -3 -26 -4 rrcurveto",
                        "4 -17 rlineto",
                        "10 3 7 0 8 0 rrcurveto",
                        "8 5 -4 -32 hvcurveto",
                        "-150 vlineto",
                        "-17 -6 -9 -20 vhcurveto",
                        "-11 hlineto",
                        "-3 -2 -2 -3 hvcurveto",
                        "0 -11 1 -2 rlineto",
                        "0 41 2 21 24 38 -2 0 vhcurveto",
                        "1 2 0 11 rlineto",
                        "3 -2 2 -3 vhcurveto",
                        "-8 hlineto",
                        "-20 -6 9 17 hvcurveto",
                        "148 vlineto",
                        "31 35 22 10 27 0 rrcurveto",
                        "31 7 -19 -42 hvcurveto",
                        "312 -117 rmoveto",
                        "hintmask 1101010010001000110000100011111110000000",
                        "-21 -22 -21 -11 -33 0 -43 0 -43 48 0 60 0 6 0 3 1 3 rrcurveto",
                        "157 hlineto",
                        "7 5 4 7 50 -19 62 -79 -57 -60 -55 -91 -65 35 -62 82 hvcurveto",
                        "43 0 36 22 22 32 rrcurveto", "-170 120 rmoveto",
                        "10 73 44 5 15 0 rrcurveto",
                        "21 29 -14 -56 -5 -3 -3 -6 hvcurveto",
                        "hintmask 1001000110001001110010100011111110000000",
                        "-819 98 rmoveto", "556 callsubr",
                        "hintmask 1001000110001001110001100011111110000000",
                        "557 callsubr",
                        "hintmask 1001001010001000110010100011111110000000",
                        "-35 -9 -9 -42 vhcurveto", "-30 hlineto",
                        "-4 -4 -3 -5 hvcurveto",
                        "hintmask 1001010010001000110010100011111110000000",
                        "0 -19 rlineto",
                        "hintmask 1001001010001000110010100011111110000000",
                        "2 -2 rlineto",
                        "hintmask 1001010010001000110010100011111110000000",
                        "0 115 2 12 vhcurveto",
                        "hintmask 1001000110001001110010100011111110000000",
                        "558 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE02F
     */
    public void testuniE02F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE02F");
        assertNotNull(cs);
        assertEquals("uniE02F", cs.getName());
        String[] text = {"245 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE04F
     */
    public void testuniE04F() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE04F");
        assertNotNull(cs);
        assertEquals("uniE04F", cs.getName());
        String[] text =
                {
                        "25 -184 40 535 39 26 -21 hstemhm",
                        "89 75 -58 58 248 80 hintmask 11101100",
                        "391 430 rmoveto",
                        "-227 154 hlineto",
                        "-58 -20 0 -19 rlineto",
                        "-76 -16 -39 -67 -2 -1 -1 -3 vhcurveto",
                        "-31 vlineto",
                        "-3 1 -1 3 vhcurveto",
                        "hintmask 11110100",
                        "65 -397 hlineto",
                        "11 -17 64 30 0 384 208 0 -145 -213 7 -9 rlineto",
                        "16 3 17 1 13 0 rrcurveto",
                        "79 53 -66 -75 -92 -66 -84 -50 hvcurveto",
                        "-67 0 -7 7 -19 80 rrcurveto",
                        "-32 -3 rlineto",
                        "11 -78 -9 -21 0 -23 11 0 11 7 8 0 32 0 20 -9 32 0 92 0 113 79 0 150 0 77 -39 83 -124 8 rrcurveto",
                        "120 174 rlineto",
                        "13 25 7 13 0 4 0 5 -8 1 -5 0 rrcurveto",
                        "-3 0 -33 -5 -29 0 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE0E8
     */
    public void testuniE0E8() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE0E8");
        assertNotNull(cs);
        assertEquals("uniE0E8", cs.getName());
        String[] text =
                {
                        "74 1 27 255 38 304 29 hstem",
                        "79 81 229 81 vstem",
                        "313 654 rmoveto",
                        "-63 0 -70 -5 -49 -46 -35 -34 -17 -40 0 -50 0 -55 24 -46 46 -38 23 -18 59 -24 38 -4 -73 -23 -23 -46 -20 -43 -44 -98 -37 -72 -56 8 rrcurveto",
                        "-4 -20 rlineto",
                        "10 -4 18 -3 15 0 91 0 45 86 29 75 36 94 39 35 94 0 rrcurveto",
                        "-211 vlineto",
                        "-31 -15 -13 -40 vhcurveto",
                        "-26 hlineto",
                        "-4 -4 -3 -5 hvcurveto",
                        "0 -19 2 -2 rlineto",
                        "0 87 2 39 35 94 -2 0 vhcurveto",
                        "2 2 0 19 rlineto",
                        "5 -3 3 -5 vhcurveto",
                        "-27 hlineto",
                        "-41 -13 16 28 hvcurveto",
                        "502 vlineto",
                        "28 4 17 26 vhcurveto",
                        "6 0 31 -3 rlineto",
                        "5 2 3 4 hvcurveto",
                        "18 vlineto",
                        "-8 2 -71 11 -152 0 rrcurveto",
                        "-11 -29 rmoveto",
                        "35 0 28 -2 24 -6 rrcurveto",
                        "-296 -51 vlineto",
                        "-74 0 -48 17 -24 35 -20 28 -12 34 0 43 0 118 81 29 61 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE0F9
     */
    public void testuniE0F9() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE0F9");
        assertNotNull(cs);
        assertEquals("uniE0F9", cs.getName());
        String[] text =
                {
                        "122 485 218 hstem",
                        "73 38 150 38 152 39 vstem",
                        "138 698 rmoveto",
                        "484 callsubr",
                        "188 5 rmoveto",
                        "-39 -26 -39 -60 hvcurveto",
                        "0 -70 50 -34 60 -10 rrcurveto",
                        "5 25 rlineto",
                        "-53 13 -24 30 0 21 0 23 18 4 18 2 19 3 26 8 0 33 rrcurveto",
                        "28 -22 23 -32 vhcurveto",
                        "191 -3 rmoveto",
                        "-39 -27 -39 -60 hvcurveto",
                        "0 -70 50 -33 60 -11 rrcurveto",
                        "5 26 rlineto",
                        "-52 12 -24 31 0 20 0 24 17 4 19 2 18 3 26 8 0 32 rrcurveto",
                        "28 -22 23 -31 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE0FB
     */
    public void testuniE0FB() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE0FB");
        assertNotNull(cs);
        assertEquals("uniE0FB", cs.getName());
        String[] text =
                {"139 485 213 hstem", "157 38 150 38 150 38 vstem",
                        "cntrmask 01110000", "130 698 rmoveto", "483 callsubr",
                        "188 hmoveto", "483 callsubr", "188 hmoveto",
                        "483 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE104
     */
    public void testuniE104() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE104");
        assertNotNull(cs);
        assertEquals("uniE104", cs.getName());
        String[] text =
                {
                        "110 -12 27 29 27 26 27 27 27 26 27 27 27 32 27 31 27 71 27 42 26 51 27 hstemhm",
                        "73 32 37 139 -49 32 14 52 -6 139 43 32 hintmask 111111111111010010000000",
                        "105 473 rmoveto", "159 146 242 -604 -401 hlineto",
                        "127 581 rmoveto", "-96 -105 vlineto",
                        "160 68 rmoveto", "-26 174 26 vlineto",
                        "hintmask 111111111111001010000000",
                        "-183 -497 rmoveto", "-27 52 27 vlineto",
                        "hintmask 111111111111000110000000", "-6 53 rmoveto",
                        "599 callsubr", "hintmask 111111111111100010000000",
                        "-321 hmoveto", "599 callsubr",
                        "hintmask 111111111111000110000000", "43 54 rmoveto",
                        "599 callsubr", "hintmask 111111111111100010000000",
                        "-321 hmoveto", "599 callsubr",
                        "hintmask 111111111111000110000000", "43 53 rmoveto",
                        "599 callsubr", "hintmask 111111111111100010000000",
                        "-321 hmoveto", "599 callsubr",
                        "hintmask 111111111111000110000000", "43 54 rmoveto",
                        "599 callsubr", "hintmask 111111111111100010000000",
                        "-321 hmoveto", "599 callsubr",
                        "hintmask 111111111111000110000000", "43 59 rmoveto",
                        "599 callsubr", "hintmask 111111111111100010000000",
                        "-321 hmoveto", "599 callsubr",
                        "hintmask 111111111111000110000000", "43 58 rmoveto",
                        "599 callsubr", "hintmask 111111111111100010000000",
                        "-321 hmoveto", "599 callsubr", "-27 244 rmoveto",
                        "-181 -160 0 -498 465 0 0 658 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uniE105
     */
    public void testuniE105() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE105");
        assertNotNull(cs);
        assertEquals("uniE105", cs.getName());
        String[] text =
                {
                        "334 -12 27 43 24 31 25 56 25 10 25 1 25 -13 25 30 27 -2 25 -15 24 -16 21 -17 24 34 20 21 27 hstemhm",
                        "73 32 127 32 19 24 114 25 -23 25 110 25 36 21 41 20 30 32 hintmask 111110010000111110011110",
                        "108 322 rmoveto",
                        "156 137 hlineto",
                        "9 9 458 0 0 -453 -626 0 0 304 rlineto",
                        "127 113 rmoveto",
                        "-83 -93 vlineto",
                        "hintmask 111110100000111110011110",
                        "15 -57 rmoveto",
                        "-11 -25 12 hlineto",
                        "1 hlineto",
                        "12 -1 7 -15 8 -10 3 -4 4 -3 5 0 rrcurveto",
                        "1 hlineto",
                        "1 1 6 2 1 1 2 2 9 7 9 7 rrcurveto",
                        "hintmask 111111000000111110011110",
                        "23 1 -2 25 -27 -2 rlineto",
                        "-3 0 -2 -1 -2 -2 rrcurveto",
                        "-14 -12 rlineto",
                        "hintmask 111110100000111110011110",
                        "-10 14 -7 12 -24 3 rrcurveto",
                        "176 -46 rmoveto",
                        "6 24 -1 hlineto",
                        "-30 35 0 1 0 15 rrcurveto",
                        "4 vlineto",
                        "hintmask 111110000001111110011110",
                        "1 6 25 35 35 3 rrcurveto",
                        "1 hlineto",
                        "7 0 20 -7 10 -6 rrcurveto",
                        "hintmask 111110001000111110011110",
                        "7 -3 6 -6 24 0 rrcurveto",
                        "hintmask 111110000100111110011110",
                        "20 0 -2 10 22 0 rrcurveto",
                        "5 hlineto",
                        "43 -2 26 -22 1 -23 -6 -28 -40 -28 -33 0 rrcurveto",
                        "-5 0 -2 -24 rlineto",
                        "2 0 2 -1 3 0 41 0 54 34 9 43 rrcurveto",
                        "3 vlineto",
                        "0 42 -42 28 -52 2 rrcurveto",
                        "-6 hlineto",
                        "hintmask 111110001000111110011110",
                        "-27 0 -2 -9 -11 0 -17 0 -4 4 -4 2 rrcurveto",
                        "hintmask 111110000001111110011110",
                        "-11 6 -23 9 -15 0 rrcurveto",
                        "-3 hlineto",
                        "-46 -4 -33 -43 -4 -15 rrcurveto",
                        "0 -5 0 -5 rlineto",
                        "0 -23 2 -4 38 -44 2 -3 3 -1 4 0 rrcurveto",
                        "308 160 rmoveto",
                        "11 9 10 11 11 10 -10 -11 vhcurveto",
                        "hintmask 111110000010111110011110",
                        "-11 -10 -9 -11 -11 -9 9 11 vhcurveto",
                        "-21 hmoveto",
                        "-22 19 -19 22 23 18 19 22 23 -18 18 -23 -22 -19 -18 -23 vhcurveto",
                        "-444 -322 rmoveto",
                        "",
                        "-48 12 -5 -24 48 -12 3 0 rlineto",
                        "5 0 10 -1 4 -1 1 0 2 -1 3 -1 rrcurveto",
                        "30 hlineto",
                        "6 0 31 10 10 17 6 9 24 21 49 0 12 0 13 -1 15 -3 rrcurveto",
                        "hintmask 111110000000111110111110",
                        "8 -2 9 -1 12 -1 rrcurveto",
                        "-4 vlineto",
                        "hintmask 111110000000111111011110",
                        "0 -9 0 -9 -2 -9 rrcurveto",
                        "25 -4 rlineto",
                        "hintmask 111110000000111110111110",
                        "1 11 1 10 0 10 rrcurveto",
                        "3 vlineto",
                        "5 1 1 0 4 1 rrcurveto",
                        "17 7 rlineto",
                        "1 1 33 13 14 14 31 29 22 24 51 0 4 1 18 5 25 0 rrcurveto",
                        "40 -7 5 24 -41 8 -3 0 -1 0 rlineto",
                        "-27 -21 -6 0 hvcurveto",
                        "-59 -1 -27 -28 -33 -31 -7 -6 -21 -12 -13 -5 -9 -4 -3 -1 -4 -2 rrcurveto",
                        "-3 0 rlineto",
                        "hintmask 111110000000111111011110",
                        "-1 hlineto",
                        "-3 26 -6 25 -9 25 rrcurveto",
                        "15 43 rlineto",
                        "4 9 1 2 9 11 3 4 11 18 29 16 1 0 1 1 1 1 rrcurveto",
                        "4 3 -18 18 -2 -3 rlineto",
                        "-33 -19 -16 -23 0 -1 -12 -15 -2 -3 -4 -11 rrcurveto",
                        "-5 -16 -42 93 -23 -10 rlineto",
                        "25 -53 37 -71 9 -69 -9 0 -7 1 -7 2 -16 3 -15 2 -13 0 -58 0 -31 -27 -10 -15 -5 -8 -22 -8 0 0 -21 0 -1 0 -5 1 rrcurveto",
                        "-1 0 -2 1 -1 0 -4 1 -5 0 -13 1 rrcurveto",
                        "88 411 rmoveto",
                        "-190 -169 0 -338 690 0 0 507 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : uniE106
     */
    public void testuniE106() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE106");
        assertNotNull(cs);
        assertEquals("uniE106", cs.getName());
        String[] text =
                {
                        "229 0 32 115 27 100 32 -16 27 66 27 23 31 hstemhm",
                        "37 26 100 26 -6 26 80 26 100 26 100 26 100 26 hintmask 1101111001111000",
                        "667 174 rmoveto",
                        "116 -100 -116 vlineto",
                        "-152 hmoveto",
                        "116 -100 -116 vlineto",
                        "126 hmoveto",
                        "100 116 -100 hlineto",
                        "126 -258 rmoveto",
                        "100 115 -100 hlineto",
                        "-152 -115 rmoveto",
                        "115 -100 -115 vlineto",
                        "126 hmoveto",
                        "100 115 -100 hlineto",
                        "hintmask 1100111101111000",
                        "-278 -115 rmoveto",
                        "115 -100 -115 vlineto",
                        "126 hmoveto",
                        "100 115 -100 hlineto",
                        "hintmask 1110111011111000",
                        "20 286 rmoveto",
                        "-159 -146 -100 vlineto",
                        "hintmask 1101111101111000",
                        "100 72 26 -72 100 116 -49 27 49 32 26 -32 100 30 26 hlineto",
                        "-30 100 30 26 -30 100 116 vlineto",
                        "hintmask 1110111011111000", "-581 -127 rmoveto",
                        "97 105 hlineto", "258 -1 rmoveto",
                        "-27 -123 27 vlineto", "-281 -126 rmoveto",
                        "600 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE107
     */
    public void testuniE107() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE107");
        assertNotNull(cs);
        assertEquals("uniE107", cs.getName());
        String[] text =
                {
                        "229 0 32 13 17 73 18 -10 17 53 18 1 18 24 32 29 27 71 31 hstemhm",
                        "37 26 24 30 43 19 4 26 20 31 42 19 53 27 29 27 29 27 29 27 30 26 42 26 hintmask 110011111111111111111000",
                        "209 433 rmoveto",
                        "-159 -146 -242 311 170 27 -170 29 241 27 -241 29 315 27 -315 vlineto",
                        "29 289 27 -289 30 202 26 -202 42 401 hlineto",
                        "-581 -127 rmoveto",
                        "97 105 hlineto",
                        "-66 -229 rmoveto",
                        "21 11 29 17 7 8 -3 -18 vhcurveto",
                        "hintmask 110111111111111111111000",
                        "-21 -15 -30 -16 -6 -6 8 14 vhcurveto",
                        "94 49 rmoveto",
                        "-7 0 -14 0 -22 11 -3 4 -12 4 -11 0 rrcurveto",
                        "-33 -22 -33 -30 -21 14 -23 24 34 20 37 33 hvcurveto",
                        "0 4 0 2 -1 3 8 -4 12 -5 10 0 11 0 16 4 15 6 rrcurveto",
                        "-119 -169 20 -11 140 195 -20 13 rlineto",
                        "-16 -17 -27 -3 -17 0 rrcurveto",
                        "18 -142 rmoveto",
                        "-21 15 -23 24 33 20 35 36 vhcurveto",
                        "hintmask 111011111111111111111000",
                        "30 -20 7 -16 -36 -20 -33 -31 vhcurveto",
                        "31 -4 rmoveto",
                        "21 13 29 15 5 9 -2 -19 -20 -10 -32 -21 -6 -5 9 14 vhcurveto",
                        "130 277 rmoveto", "-27 -123 27 vlineto",
                        "-230 -78 rmoveto", "600 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniE420
     */
    public void testuniE420() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniE420");
        assertNotNull(cs);
        assertEquals("uniE420", cs.getName());
        String[] text =
                {
                        "0 -244 23 10 22 178 23 192 23 192 23 191 24 26 23 -23 37 -23 23 80 23 45 23 hstemhm",
                        "245 23 hintmask 1111110011110000",
                        "17 697 rmoveto",
                        "228 -470 -21 -23 21 -192 -134 -23 134 -178 -158 -22 158 -33 11 hlineto",
                        "12 0 213 0 0 23 -213 0 0 210 139 0 0 23 -139 0 0 192 181 0 0 23 -181 0 0 192 213 0 0 23 rlineto",
                        "-213 191 213 24 -213 hlineto",
                        "hintmask 1111110101110000", "26 vlineto",
                        "hintmask 1111111001110000", "211 23 -62 hlineto",
                        "hintmask 1111110101110000", "14 -149 34 vlineto",
                        "46 212 23 -212 45 211 23 -211 vlineto",
                        "-15 0 -8 0 0 -137 rlineto",
                        "hintmask 1111110011110000", "-34 -228 vlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uniFFFD
     */
    public void testuniFFFD() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uniFFFD");
        assertNotNull(cs);
        assertEquals("uniFFFD", cs.getName());
        String[] text =
                {
                        "483 436 -28 rmoveto",
                        "26 22 22 27 27 22 -22 -26 -27 -22 -22 -27 -27 -22 22 27 vhcurveto",
                        "-32 532 rmoveto",
                        "0 -15 3 -6 4 -5 4 -6 3 -6 0 -13 rrcurveto",
                        "-23 -21 -14 -22 -17 -26 11 35 59 62 72 115 105 63 -63 -90 vhcurveto",
                        "0 -67 -44 -51 -70 -49 -20 -15 -43 -29 0 -72 rrcurveto",
                        "-44 vlineto", "-7 -7 -4 -8 -7 -6 4 7 vhcurveto",
                        "46 vlineto",
                        "0 43 1 59 65 59 40 37 20 32 0 48 rrcurveto",
                        "59 -41 64 -57 -55 -41 -27 -29 vhcurveto",
                        "-382 -210 rmoveto",
                        "472 -471 469 469 -472 472 rlineto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : union
     */
    public void testunion() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("union");
        assertNotNull(cs);
        assertEquals("union", cs.getName());
        String[] text =
                {"-26 0 37 402 -20 hstem", "60 49 255 49 vstem",
                        "364 439 rmoveto", "-211 vlineto",
                        "-111 -18 -80 -117 -104 -16 88 102 vhcurveto",
                        "212 -49 -212 vlineto",
                        "-128 23 -99 147 155 28 104 123 vhcurveto",
                        "212 vlineto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : universal
     */
    public void testuniversal() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("universal");
        assertNotNull(cs);
        assertEquals("universal", cs.getName());
        String[] text =
                {
                        "-13 21 -21 361 64 hstem",
                        "9 471 vstem",
                        "245 76 rmoveto",
                        "-96 285 190 0 rlineto",
                        "-55 -361 rmoveto",
                        "196 572 -73 0 -47 -147 -232 0 -46 147 -73 0 196 -572 rlineto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uogonek
     */
    public void testuogonek() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uogonek");
        assertNotNull(cs);
        assertEquals("uogonek", cs.getName());
        String[] text =
                {
                        "16 -208 40 156 45 -6 28 347 27 hstemhm",
                        "88 75 112 60 19 75 hintmask 10111110",
                        "368 -208 rmoveto",
                        "36 0 50 20 24 47 rrcurveto",
                        "-15 7 rlineto",
                        "-20 -20 -20 -14 -29 0 -37 0 -22 25 0 33 0 42 37 59 57 19 rrcurveto",
                        "1 hlineto", "22 6 27 5 30 6 rrcurveto",
                        "-4 28 rlineto", "-17 -3 -22 -2 -12 0 rrcurveto",
                        "-20 -5 16 50 hvcurveto", "0 236 1 79 rlineto",
                        "0 -16 -2 -23 -28 -71 2 0 vhcurveto",
                        "-2 -3 0 -25 2 -2 rlineto", "3 0 11 1 6 0 rrcurveto",
                        "37 5 -17 -36 hvcurveto", "-247 vlineto",
                        "-10 -13 -16 -14 -24 -18 rrcurveto",
                        "hintmask 11011110", "-21 -15 -21 -9 -23 0 rrcurveto",
                        "-30 -46 16 89 hvcurveto", "0 213 1 80 rlineto",
                        "0 -23 -2 -14 -32 -68 2 0 vhcurveto",
                        "-3 -3 0 -26 3 -1 rlineto", "7 0 6 1 4 0 rrcurveto",
                        "37 7 -17 -33 hvcurveto", "-228 vlineto",
                        "-69 26 -67 99 vhcurveto",
                        "41 0 45 14 55 60 rrcurveto", "3 0 -3 -59 rlineto",
                        "-48 -34 -31 -50 0 -42 rrcurveto",
                        "-55 39 -30 54 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : upsilon
     */
    public void testupsilon() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("upsilon");
        assertNotNull(cs);
        assertEquals("upsilon", cs.getName());
        String[] text =
                {"3 -12 47 355 52 hstemhm",
                        "86 72 -56 77 243 36 hintmask 11101000",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11011000",
                        "245 callsubr", "hintmask 11101000", "246 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : upsilondieresis
     */
    public void testupsilondieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("upsilondieresis");
        assertNotNull(cs);
        assertEquals("upsilondieresis", cs.getName());
        String[] text =
                {"3 -12 47 355 52 85 91 hstemhm",
                        "86 72 -56 77 -55 90 70 91 47 36 hintmask 11110011",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101011",
                        "245 callsubr", "hintmask 11110011", "246 callsubr",
                        "hintmask 11100111", "-334 323 rmoveto", "57 callsubr",
                        "160 hmoveto", "253 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : upsilondieresistonos
     */
    public void testupsilondieresistonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("upsilondieresistonos");
        assertNotNull(cs);
        assertEquals("upsilondieresistonos", cs.getName());
        String[] text =
                {"3 -12 47 355 52 85 91 hstemhm",
                        "86 72 -56 77 -41 91 69 91 33 36 hintmask 11110011",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101011",
                        "245 callsubr", "hintmask 11110011", "",
                        "246 callsubr", "hintmask 11100111",
                        "-320 323 rmoveto", "56 callsubr", "160 hmoveto",
                        "72 callsubr", "29 212 rmoveto", "247 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : upsilontonos
     */
    public void testupsilontonos() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("upsilontonos");
        assertNotNull(cs);
        assertEquals("upsilontonos", cs.getName());
        String[] text =
                {"3 -12 47 355 52 240 -20 hstemhm",
                        "86 72 -56 77 243 36 hintmask 11110100",
                        "458 249 rmoveto", "244 callsubr", "hintmask 11101100",
                        "245 callsubr", "hintmask 11110100", "246 callsubr",
                        "-149 433 rmoveto", "255 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uring
     */
    public void testuring() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uring");
        assertNotNull(cs);
        assertEquals("uring", cs.getName());
        String[] text =
                {
                        "16 -12 45 -6 28 347 27 71 26 113 27 hstemhm",
                        "88 75 -7 32 107 32 27 75 hintmask 1011110110000000",
                        "429 116 rmoveto",
                        "0 callsubr",
                        "hintmask 0111110110000000",
                        "1 callsubr",
                        "hintmask 0011101110000000",
                        "-273 467 rmoveto",
                        "-47 39 -36 46 48 38 38 45 46 -40 37 -46 vhcurveto",
                        "-47 -38 -38 -45 hvcurveto",
                        "86 56 rmoveto",
                        "29 24 -26 -30 -29 -22 -28 -31 -32 -22 28 29 29 23 27 31 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : uring_sc
     */
    public void testuring_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("uring.sc");
        assertNotNull(cs);
        assertEquals("uring.sc", cs.getName());
        String[] text =
                {
                        "67 -12 29 417 26 49 27 112 27 hstem",
                        "94 74 35 31 108 32 61 44 vstem",
                        "280 -12 rmoveto",
                        "591 callsubr",
                        "-77 604 rmoveto",
                        "-46 39 -37 46 47 39 38 45 47 -41 36 -45 -47 -38 -37 -46 vhcurveto",
                        "85 56 rmoveto", "595 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : utilde
     */
    public void testutilde() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("utilde");
        assertNotNull(cs);
        assertEquals("utilde", cs.getName());
        String[] text =
                {"16 -12 45 -6 28 347 27 96 44 5 46 hstemhm",
                        "88 75 191 75 hintmask 10111110", "429 116 rmoveto",
                        "0 callsubr", "hintmask 01111110", "1 callsubr",
                        "-105 453 rmoveto", "123 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : v
     */
    public void testv() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("v");
        assertNotNull(cs);
        assertEquals("v", cs.getName());
        String[] text =
                {"-4 9 -21 414 27 hstem", "330 402 rmoveto", "2 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : v_sc
     */
    public void testv_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("v.sc");
        assertNotNull(cs);
        assertEquals("v.sc", cs.getName());
        String[] text =
                {"28 9 -21 446 26 hstem", "", "403 399 rmoveto",
                        "-128 -305 -121 308 rlineto",
                        "-8 20 6 12 36 0 rrcurveto", "12 hlineto",
                        "4 2 2 3 hvcurveto", "0 22 -2 1 rlineto",
                        "0 -71 -2 -28 -30 -64 2 0 vhcurveto",
                        "-1 -1 0 -22 rlineto", "-3 6 -2 3 vhcurveto",
                        "44 0 8 -20 8 -21 rrcurveto", "143 -365 rlineto",
                        "6 -17 12 -23 19 0 18 0 10 13 11 27 rrcurveto",
                        "151 363 rlineto", "10 23 9 20 43 0 rrcurveto",
                        "4 5 2 3 hvcurveto", "0 21 -1 2 rlineto",
                        "0 -43 -2 -28 -31 -63 2 0 vhcurveto",
                        "-2 -2 0 -21 rlineto", "-3 3 -2 4 vhcurveto",
                        "9 hlineto", "35 0 10 -13 -10 -22 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : v_superior
     */
    public void testv_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("v.superior");
        assertNotNull(cs);
        assertEquals("v.superior", cs.getName());
        String[] text =
                {"-187 608 22 hstem", "137 371 rmoveto", "-81 197 rlineto",
                        "-15 35 -4 5 -20 0 rrcurveto", "-3 -2 1 4 hvcurveto",
                        "0 17 1 1 rlineto", "0 39 -1 19 vhcurveto",
                        "55 1 2 -1 0 -17 rlineto", "-3 -3 -2 -2 vhcurveto",
                        "-11 hlineto", "-13 0 -7 -10 10 -21 rrcurveto",
                        "65 -153 66 150 rlineto", "13 28 -7 6 -31 0 rrcurveto",
                        "-2 -2 3 2 hvcurveto", "0 17 1 1 rlineto",
                        "0 35 -1 21 19 22 1 0 vhcurveto", "1 -1 0 -17 rlineto",
                        "-4 -4 -1 -4 vhcurveto",
                        "-13 0 -11 -4 -14 -32 rrcurveto", "-86 -200 rlineto",
                        "-4 -11 -10 -3 -7 0 -5 0 -5 6 -3 7 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : w
     */
    public void testw() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("w");
        assertNotNull(cs);
        assertEquals("w", cs.getName());
        String[] text =
                {"243 9 -21 414 27 hstem", "202 410 rmoveto", "3 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : w_sc
     */
    public void testw_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("w.sc");
        assertNotNull(cs);
        assertEquals("w.sc", cs.getName());
        String[] text =
                {"267 9 -21 446 26 hstem", "240 -12 rmoveto",
                        "26 0 8 20 7 20 rrcurveto", "84 237 rlineto",
                        "4 11 3 6 3 0 4 0 3 -7 5 -13 rrcurveto",
                        "83 -234 rlineto",
                        "6 -15 9 -25 31 0 26 0 11 28 5 12 rrcurveto",
                        "135 371 rlineto", "11 29 23 6 23 0 rrcurveto",
                        "0 9 0 5 hvcurveto", "0 22 -2 1 rlineto",
                        "0 -40 -1 -26 -32 -59 1 0 vhcurveto",
                        "-1 -2 0 -21 rlineto", "-2 2 -3 4 vhcurveto",
                        "21 hlineto", "19 7 -7 -11 hvcurveto",
                        "0 -5 -1 -6 -2 -6 rrcurveto",
                        "-119 -317 -114 307 rlineto",
                        "-3 8 -2 8 0 7 rrcurveto", "13 6 9 15 vhcurveto",
                        "23 hlineto", "3 4 1 4 hvcurveto", "0 21 -2 2 rlineto",
                        "0 -69 -2 -38 -32 -43 2 0 vhcurveto",
                        "-2 -2 0 -21 rlineto", "-3 4 -2 5 vhcurveto",
                        "24 0 20 -5 9 -27 rrcurveto", "13 -39 rlineto",
                        "3 -7 0 -6 0 -7 0 -9 -2 -9 -3 -9 rrcurveto",
                        "-84 -231 -117 317 rlineto", "-3 7 -1 6 0 5 rrcurveto",
                        "10 6 4 15 vhcurveto", "17 hlineto",
                        "3 4 1 5 hvcurveto", "0 20 -1 2 rlineto",
                        "0 -66 -2 -40 -30 -40 2 0 vhcurveto",
                        "-2 -2 0 -21 rlineto", "-3 4 -2 6 vhcurveto",
                        "9 hlineto", "22 0 14 -21 7 -18 rrcurveto",
                        "135 -368 rlineto", "4 -10 11 -29 18 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : w_superior
     */
    public void testw_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("w.superior");
        assertNotNull(cs);
        assertEquals("w.superior", cs.getName());
        String[] text =
                {"-56 608 22 hstem", "127 613 rmoveto", "193 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : wacute
     */
    public void testwacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("wacute");
        assertNotNull(cs);
        assertEquals("wacute", cs.getName());
        String[] text =
                {"243 9 -21 414 27 hstem", "202 410 rmoveto", "3 callsubr",
                        "216 260 rmoveto", "79 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : wcircumflex
     */
    public void testwcircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("wcircumflex");
        assertNotNull(cs);
        assertEquals("wcircumflex", cs.getName());
        String[] text =
                {"243 9 -21 414 27 216 -20 hstem", "202 410 rmoveto",
                        "3 callsubr", "190 235 rmoveto", "54 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : wdieresis
     */
    public void testwdieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("wdieresis");
        assertNotNull(cs);
        assertEquals("wdieresis", cs.getName());
        String[] text =
                {"243 9 -21 414 27 98 91 hstem", "242 91 70 91 vstem",
                        "202 410 rmoveto", "3 callsubr", "40 162 rmoveto",
                        "253 callsubr", "161 hmoveto", "223 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : wgrave
     */
    public void testwgrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("wgrave");
        assertNotNull(cs);
        assertEquals("wgrave", cs.getName());
        String[] text =
                {"243 9 -21 414 27 hstem", "202 410 rmoveto", "3 callsubr",
                        "118 260 rmoveto", "52 callsubr", "", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : x
     */
    public void testx() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("x");
        assertNotNull(cs);
        assertEquals("x", cs.getName());
        String[] text =
                {"-4 1 27 374 29 hstem", "197 402 rmoveto", "4 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : x_inferior
     */
    public void testx_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("x.inferior");
        assertNotNull(cs);
        assertEquals("x.inferior", cs.getName());
        String[] text =
                {"-194 -110 22 222 22 hstem", "12 -96 rmoveto",
                        "0 -13 1 -3 rlineto",
                        "18 1 18 1 23 0 16 0 16 0 20 -1 rrcurveto",
                        "1 3 0 12 rlineto", "5 -1 3 -8 vhcurveto",
                        "-16 0 -8 2 13 16 rrcurveto", "44 56 rlineto",
                        "5 -8 37 -49 0 0 10 -14 -8 -3 -11 0 rrcurveto",
                        "-9 -2 -6 -6 hvcurveto", "0 -10 1 -2 rlineto",
                        "14 1 34 1 23 0 19 0 18 0 19 -2 rrcurveto",
                        "1 3 0 13 rlineto", "4 -1 4 -12 vhcurveto",
                        "-22 0 -12 14 -10 14 rrcurveto",
                        "-63 86 56 77 rlineto", "20 26 5 5 21 0 rrcurveto",
                        "12 0 2 6 hvcurveto", "0 11 -1 3 rlineto",
                        "-21 -1 -14 -1 -20 0 -17 0 -16 1 -18 1 rrcurveto",
                        "-1 -2 0 -13 rlineto", "-6 4 -1 6 vhcurveto",
                        "20 0 1 -7 -7 -9 rrcurveto", "-47 -66 -38 55 rlineto",
                        "-7 12 -5 15 15 0 rrcurveto", "9 5 2 5 hvcurveto",
                        "0 12 -1 3 rlineto",
                        "-24 -1 -21 0 -20 0 -24 0 -16 0 -20 1 rrcurveto",
                        "-1 -2 0 -13 rlineto", "-5 2 -2 12 vhcurveto",
                        "12 0 11 -8 9 -12 rrcurveto", "71 -101 rlineto",
                        "-3 -3 -60 -72 0 0 -20 -23 -7 -3 -19 0 rrcurveto",
                        "-7 -4 -1 -7 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : x_sc
     */
    public void testx_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("x.sc");
        assertNotNull(cs);
        assertEquals("x.sc", cs.getName());
        String[] text =
                {"63 -1 29 406 28 hstem", "101 394 rmoveto",
                        "120 -148 rlineto",
                        "8 -8 4 -7 0 -6 0 -5 -4 -7 -4 -5 rrcurveto",
                        "-114 -143 rlineto", "-15 -20 -24 -17 -28 0 rrcurveto",
                        "-9 hlineto", "-5 -4 -1 -4 hvcurveto",
                        "0 -22 1 -2 rlineto", "0 62 2 3 12 88 -2 0 vhcurveto",
                        "2 2 0 21 rlineto", "0 3 -1 2 -4 1 rrcurveto",
                        "-14 hlineto", "-15 -8 4 9 hvcurveto",
                        "0 5 5 9 6 7 rrcurveto", "96 123 rlineto",
                        "5 5 4 5 3 0 2 0 4 -3 4 -6 rrcurveto",
                        "95 -126 rlineto", "9 -11 6 -8 0 -5 rrcurveto",
                        "-6 -7 -2 -18 vhcurveto", "-19 hlineto",
                        "-2 -3 -2 -3 hvcurveto", "0 -22 3 -2 rlineto",
                        "0 90 2 5 vhcurveto", "9 0 69 -1 22 -1 rrcurveto",
                        "1 2 0 21 rlineto", "5 -4 1 -5 vhcurveto",
                        "-36 0 -8 4 -26 32 rrcurveto", "-121 159 rlineto",
                        "-8 9 -4 7 0 8 0 6 3 7 6 8 rrcurveto",
                        "105 129 rlineto", "27 33 17 4 29 0 rrcurveto",
                        "7 0 3 2 hvcurveto", "0 22 -2 1 rlineto",
                        "-14 -1 -52 -1 -4 0 -9 0 -64 2 -16 0 rrcurveto",
                        "-2 -2 0 -22 rlineto", "-3 2 -1 3 vhcurveto",
                        "24 hlineto", "11 6 -4 -6 hvcurveto",
                        "0 -5 -4 -7 -8 -10 rrcurveto", "-96 -118 rlineto",
                        "-5 -6 -2 -3 -3 0 -3 0 -2 3 -5 6 rrcurveto",
                        "-89 112 rlineto", "-7 10 -11 13 0 6 rrcurveto",
                        "5 5 4 13 vhcurveto", "30 hlineto",
                        "3 2 2 3 hvcurveto", "0 21 -3 2 rlineto",
                        "-24 -1 -83 -1 -5 0 -8 0 -53 1 -20 1 rrcurveto",
                        "-4 -2 0 -22 rlineto", "-3 5 -1 4 vhcurveto",
                        "28 0 9 -3 31 -37 rrcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : x_superior
     */
    public void testx_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("x.superior");
        assertNotNull(cs);
        assertEquals("x.superior", cs.getName());
        String[] text =
                {"-194 365 22 222 22 hstem", "15 380 rmoveto",
                        "0 -14 1 -2 rlineto",
                        "18 1 18 0 22 0 16 0 17 0 19 -1 rrcurveto",
                        "1 3 0 12 rlineto", "6 -1 2 -7 vhcurveto",
                        "-16 0 -8 2 13 16 rrcurveto", "44 57 rlineto",
                        "5 -8 37 -50 0 0 10 -13 -8 -4 -11 0 rrcurveto",
                        "-10 -1 -5 -6 hvcurveto", "0 -10 1 -2 rlineto",
                        "13 0 34 1 24 0 19 0 17 0 19 -1 rrcurveto",
                        "1 2 0 13 rlineto", "5 0 3 -12 vhcurveto",
                        "-22 0 -12 14 -11 15 rrcurveto",
                        "-62 86 56 76 rlineto", "20 27 5 4 21 0 rrcurveto",
                        "11 0 3 6 hvcurveto", "0 11 -1 2 rlineto",
                        "-20 -1 -14 0 -20 0 -17 0 -17 0 -18 1 rrcurveto",
                        "-1 -2 0 -12 rlineto", "-7 5 -1 6 vhcurveto",
                        "20 0 0 -6 -6 -10 rrcurveto", "-48 -65 -37 55 rlineto",
                        "-7 12 -6 14 15 0 rrcurveto", "10 5 3 5 hvcurveto",
                        "0 12 -1 2 rlineto",
                        "-24 0 -21 -1 -20 0 -25 0 -16 1 -19 0 rrcurveto",
                        "-1 -1 0 -13 rlineto", "-5 1 -3 13 vhcurveto",
                        "11 0 12 -7 8 -12 rrcurveto", "72 -102 rlineto",
                        "-3 -2 -60 -72 0 0 -20 -24 -8 -3 -18 0 rrcurveto",
                        "-7 -4 -1 -6 hvcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : xi
     */
    public void testxi() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("xi");
        assertNotNull(cs);
        assertEquals("xi", cs.getName());
        String[] text =
                {
                        "-69 -211 40 159 70 215 67 -65 32 201 27 32 26 hstemhm",
                        "49 59 -29 53 -53 67 216 32 -21 28 hintmask 1101111000100000",
                        "373 -78 rmoveto",
                        "-56 -31 -37 -35 vhcurveto",
                        "-39 0 -37 28 -39 0 rrcurveto",
                        "-20 -15 -11 -18 -33 34 -6 43 106 61 57 76 92 -64 44 -86 -115 -28 44 58 hvcurveto",
                        "0 45 23 27 36 18 rrcurveto",
                        "104 25 rlineto",
                        "hintmask 1110110011000000",
                        "11 0 6 -2 11 0 rrcurveto",
                        "33 19 13 26 18 -8 10 -17 hvcurveto",
                        "hintmask 1101110011000000",
                        "-30 0 -43 -33 -54 0 -30 0 -23 12 0 55 0 57 18 38 93 48 89 3 48 12 0 26 0 24 -12 11 -24 0 -22 0 -38 -16 -52 -36 rrcurveto",
                        "-24 -4 -21 -2 -17 0 rrcurveto",
                        "hintmask 1101110100000000",
                        "-36 -16 8 17 hvcurveto",
                        "0 42 50 21 14 6 -2 9 -3 6 -1 9 -65 -24 -46 -25 0 -34 0 -49 40 -13 49 0 11 0 11 1 12 2 rrcurveto",
                        "hintmask 1101110010000000",
                        "-80 -38 -43 -44 0 -45 0 -48 22 -34 45 -27 rrcurveto",
                        "hintmask 1101111000100000",
                        "-61 -25 -36 -35 0 -60 rrcurveto",
                        "-83 37 -84 177 vhcurveto", "65 45 -16 -50 hvcurveto",
                        "-81 620 rmoveto", "0 42 25 20 vhcurveto",
                        "hintmask 1100110001000000",
                        "6 2 -3 -2 -16 -55 -4 -15 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : y
     */
    public void testy() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("y");
        assertNotNull(cs);
        assertEquals("y", cs.getName());
        String[] text =
                {"8 -230 55 577 27 hstem", "208 410 rmoveto", "5 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : y_sc
     */
    public void testy_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("y.sc");
        assertNotNull(cs);
        assertEquals("y.sc", cs.getName());
        String[] text =
                {"-22 1 27 406 28 hstem", "205 75 vstem", "205 59 rmoveto",
                        "592 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : y_superior
     */
    public void testy_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("y.superior");
        assertNotNull(cs);
        assertEquals("y.superior", cs.getName());
        String[] text =
                {
                        "-163 217 41 350 22 hstem",
                        "146 614 rmoveto",
                        "0 16 -1 2 rlineto",
                        "0 -51 -2 -29 -19 -27 2 0 vhcurveto",
                        "-2 -2 0 -17 rlineto",
                        "-2 3 -3 3 vhcurveto",
                        "27 0 4 -9 11 -26 rrcurveto",
                        "76 -174 rlineto",
                        "5 -13 5 -16 0 -7 0 -6 -1 -5 -3 -8 -16 -38 -19 -48 -10 0 -6 0 -5 5 -5 7 -4 4 -6 4 -10 0 rrcurveto",
                        "-10 -19 -9 -19 -22 32 -11 12 hvcurveto",
                        "44 0 23 54 19 44 50 121 27 65 34 70 8 18 12 19 24 0 rrcurveto",
                        "5 2 2 4 hvcurveto", "0 16 -2 2 rlineto",
                        "0 -26 -2 -17 -22 -42 2 0 vhcurveto",
                        "-1 -2 0 -17 rlineto", "-2 3 -3 3 vhcurveto",
                        "3 hlineto", "14 11 -2 -9 hvcurveto",
                        "0 -3 -1 -7 -2 -4 rrcurveto",
                        "-68 -154 -66 156 rlineto", "-2 4 -1 6 0 2 rrcurveto",
                        "8 8 3 18 3 4 2 4 vhcurveto", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : yacute
     */
    public void testyacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("yacute");
        assertNotNull(cs);
        assertEquals("yacute", cs.getName());
        String[] text =
                {
                        "8 -230 55 577 27 hstem",
                        "208 410 rmoveto",
                        "5 callsubr",
                        "106 260 rmoveto",
                        "-79 -125 rlineto",
                        "-6 -10 0 -7 0 -6 0 -6 6 -6 8 0 7 0 6 5 16 15 rrcurveto",
                        "115 109 -3 10 rlineto",
                        "-2 2 -2 1 -2 2 -8 8 -13 11 -28 0 -5 0 -6 -1 -4 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : yacute_sc
     */
    public void testyacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("yacute.sc");
        assertNotNull(cs);
        assertEquals("yacute.sc", cs.getName());
        String[] text =
                {
                        "-22 1 27 406 28 hstem",
                        "205 75 vstem",
                        "205 59 rmoveto",
                        "592 callsubr",
                        "94 467 rmoveto",
                        "-79 -125 rlineto",
                        "-7 -10 0 -7 0 -5 0 -7 7 -6 8 0 6 0 7 5 16 15 rrcurveto",
                        "115 109 -3 10 rlineto",
                        "-2 1 -2 2 -2 2 -9 8 -12 11 -28 0 -5 0 -6 -1 -4 -2 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ycircumflex
     */
    public void testycircumflex() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ycircumflex");
        assertNotNull(cs);
        assertEquals("ycircumflex", cs.getName());
        String[] text =
                {"8 -230 55 577 27 217 -20 hstem", "208 410 rmoveto",
                        "5 callsubr", "92 236 rmoveto", "108 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : ydieresis
     */
    public void testydieresis() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ydieresis");
        assertNotNull(cs);
        assertEquals("ydieresis", cs.getName());
        String[] text =
                {"8 -230 55 577 27 98 91 hstem", "145 91 70 90 vstem",
                        "208 410 rmoveto", "5 callsubr", "-63 162 rmoveto",
                        "80 callsubr", "161 hmoveto", "81 callsubr", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : ydieresis_sc
     */
    public void testydieresis_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ydieresis.sc");
        assertNotNull(cs);
        assertEquals("ydieresis.sc", cs.getName());
        String[] text =
                {"-22 1 27 406 28 65 91 hstemhm",
                        "133 91 -19 75 13 91 hintmask 11101100",
                        "205 59 rmoveto", "592 callsubr", "hintmask 11110100",
                        "-72 371 rmoveto", "56 callsubr", "160 hmoveto",
                        "598 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : yen
     */
    public void testyen() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("yen");
        assertNotNull(cs);
        assertEquals("yen", cs.getName());
        String[] text =
                {
                        "-63 1 27 99 39 63 40 278 25 hstem",
                        "181 80 vstem",
                        "398 166 rmoveto",
                        "-137 63 137 40 -125 hlineto",
                        "103 232 rlineto",
                        "13 29 18 18 30 0 rrcurveto",
                        "6 hlineto",
                        "9 0 4 4 hvcurveto",
                        "0 17 -1 2 rlineto",
                        "-19 -2 -44 -1 -9 0 -13 0 -57 2 -8 1 rrcurveto",
                        "-2 -2 0 -18 rlineto",
                        "-3 1 -4 5 vhcurveto",
                        "15 hlineto",
                        "18 7 -4 -9 hvcurveto",
                        "0 -7 -4 -11 -6 -14 rrcurveto",
                        "-94 -213 -100 213 rlineto",
                        "-6 13 -6 10 0 8 rrcurveto",
                        "8 7 5 17 vhcurveto",
                        "14 hlineto",
                        "5 2 5 4 hvcurveto",
                        "0 17 -2 2 rlineto",
                        "-15 -2 -65 -1 -6 0 -13 0 -68 1 -11 2 rrcurveto",
                        "-1 -2 0 -18 rlineto",
                        "0 -6 7 -1 3 -1 rrcurveto",
                        "7 hlineto",
                        "26 0 13 -17 13 -29 rrcurveto",
                        "113 -232 -133 0 0 -40 139 0 0 -63 -139 0 0 -39 139 0 0 -55 rlineto",
                        "-28 -14 -16 -41 vhcurveto", "-26 hlineto",
                        "-5 -3 -3 -5 hvcurveto", "0 -19 2 -2 rlineto",
                        "0 93 2 36 39 87 -2 0 vhcurveto", "2 2 0 19 rlineto",
                        "5 -4 3 -5 vhcurveto", "-27 hlineto",
                        "-39 -15 13 31 hvcurveto", "55 137 vlineto", "endchar",
                        "", null};
        check(cs, text);
    }

    /**
     * test : ygrave
     */
    public void testygrave() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("ygrave");
        assertNotNull(cs);
        assertEquals("ygrave", cs.getName());
        String[] text =
                {"8 -230 55 577 27 hstem", "208 410 rmoveto", "5 callsubr",
                        "19 260 rmoveto",
                        "-3 2 -7 1 -5 0 -34 0 -23 -17 -8 -7 rrcurveto",
                        "-2 -10 115 -109 rlineto",
                        "15 -15 7 -5 7 0 7 0 7 6 0 5 0 7 -1 7 -5 10 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : z
     */
    public void testz() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("z");
        assertNotNull(cs);
        assertEquals("z", cs.getName());
        String[] text =
                {"-90 0 39 352 39 hstem", "106 430 rmoveto", "6 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : z_sc
     */
    public void testz_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("z.sc");
        assertNotNull(cs);
        assertEquals("z.sc", cs.getName());
        String[] text =
                {"-31 0 35 390 35 hstem", "146 425 rmoveto", "593 callsubr",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : z_superior
     */
    public void testz_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("z.superior");
        assertNotNull(cs);
        assertEquals("z.superior", cs.getName());
        String[] text =
                {
                        "-227 364 30 208 29 hstem",
                        "70 631 rmoveto",
                        "-10 0 -6 4 -1 3 rrcurveto",
                        "-21 hlineto",
                        "0 -28 -4 -27 -5 -30 rrcurveto",
                        "22 -1 rlineto",
                        "12 44 21 6 19 0 rrcurveto",
                        "76 0 -146 -218 rlineto",
                        "-5 -8 0 -1 0 -4 rrcurveto",
                        "-4 4 -3 10 vhcurveto",
                        "197 hlineto",
                        "3 19 6 29 11 36 rrcurveto",
                        "-22 4 -7 -17 rlineto",
                        "-15 -33 -10 -8 -36 0 rrcurveto",
                        "-74 0 142 210 rlineto",
                        "14 21 -1 2 0 3 0 3 -4 0 -4 0 -2 0 -28 -2 -18 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zacute
     */
    public void testzacute() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zacute");
        assertNotNull(cs);
        assertEquals("zacute", cs.getName());
        String[] text =
                {"-90 0 39 352 39 hstem", "106 430 rmoveto", "6 callsubr",
                        "-47 240 rmoveto", "129 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zacute_sc
     */
    public void testzacute_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zacute.sc");
        assertNotNull(cs);
        assertEquals("zacute.sc", cs.getName());
        String[] text =
                {"-31 0 35 390 35 hstem", "146 425 rmoveto", "593 callsubr",
                        "107 248 rmoveto", "79 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zcaron
     */
    public void testzcaron() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zcaron");
        assertNotNull(cs);
        assertEquals("zcaron", cs.getName());
        String[] text =
                {
                        "-90 0 39 352 39 hstem",
                        "106 430 rmoveto",
                        "6 callsubr",
                        "-114 72 rmoveto",
                        "50 hlineto",
                        "30 46 38 44 34 40 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -32 25 -39 29 rrcurveto",
                        "-21 -13 rlineto", "35 -38 38 -45 28 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zcaron_sc
     */
    public void testzcaron_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zcaron.sc");
        assertNotNull(cs);
        assertEquals("zcaron.sc", cs.getName());
        String[] text =
                {
                        "-31 0 35 390 35 hstem",
                        "146 425 rmoveto",
                        "593 callsubr",
                        "70 88 rmoveto",
                        "50 hlineto",
                        "29 46 38 45 35 39 rrcurveto",
                        "-19 13 rlineto",
                        "-37 -27 -34 -25 -37 -38 -34 36 -33 25 -39 29 rrcurveto",
                        "-20 -13 rlineto", "34 -38 38 -45 29 -47 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zdotaccent
     */
    public void testzdotaccent() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zdotaccent");
        assertNotNull(cs);
        assertEquals("zdotaccent", cs.getName());
        String[] text =
                {"-90 0 39 352 39 93 96 hstem", "167 96 vstem",
                        "106 430 rmoveto", "6 callsubr", "-135 141 rmoveto",
                        "130 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zdotaccent_sc
     */
    public void testzdotaccent_sc() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zdotaccent.sc");
        assertNotNull(cs);
        assertEquals("zdotaccent.sc", cs.getName());
        String[] text =
                {"-31 0 35 390 35 45 96 hstem", "188 96 vstem",
                        "146 425 rmoveto", "593 callsubr", "42 128 rmoveto",
                        "92 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero
     */
    public void testzero() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero");
        assertNotNull(cs);
        assertEquals("zero", cs.getName());
        String[] text =
                {"-63 -12 33 522 35 hstem", "36 77 209 76 vstem",
                        "215 -12 rmoveto", "73 110 77 222 hvcurveto",
                        "0 94 -22 75 -42 56 -29 39 -43 27 -43 0 rrcurveto",
                        "-94 -89 -113 -187 -153 72 -137 107 hvcurveto",
                        "4 555 rmoveto", "-96 callsubr", "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero_fitted
     */
    public void testzero_fitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.fitted");
        assertNotNull(cs);
        assertEquals("zero.fitted", cs.getName());
        String[] text =
                {
                        "-36 -12 33 522 35 hstem",
                        "52 76 210 76 vstem",
                        "230 -12 rmoveto",
                        "74 110 77 222 hvcurveto",
                        "0 94 -22 75 -42 56 -30 39 -43 27 -43 0 rrcurveto",
                        "-93 -89 -113 -187 -153 72 -137 106 hvcurveto",
                        "4 555 rmoveto",
                        "16 0 16 -5 11 -10 29 -25 32 -71 0 -127 0 -87 -7 -60 -14 -48 -20 -78 -48 -11 -18 0 rrcurveto",
                        "-87 -16 165 82 233 64 42 42 hvcurveto", "endchar", "",
                        null};
        check(cs, text);
    }

    /**
     * test : zero_inferior
     */
    public void testzero_inferior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.inferior");
        assertNotNull(cs);
        assertEquals("zero.inferior", cs.getName());
        String[] text =
                {
                        "-194 -117 24 281 24 hstem",
                        "31 59 127 59 vstem",
                        "151 -117 rmoveto",
                        "59 66 49 119 121 -64 40 -58 -69 -54 -72 -94 -85 51 -78 69 hvcurveto",
                        "3 305 rmoveto",
                        "48 15 -73 -54 -77 -6 -77 -59 -54 -8 78 56 53 2 94 62 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero_oldstyle
     */
    public void testzero_oldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.oldstyle");
        assertNotNull(cs);
        assertEquals("zero.oldstyle", cs.getName());
        String[] text =
                {
                        "25 -12 40 374 40 hstem",
                        "44 75 289 74 vstem",
                        "263 442 rmoveto",
                        "-129 -90 -104 -119 -133 87 -98 132 136 83 102 129 119 -71 104 -148 hvcurveto",
                        "",
                        "-40 vmoveto",
                        "96 49 -81 -102 -112 -51 -79 -94 -83 -61 85 106 102 55 81 89 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero_slash
     */
    public void testzero_slash() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.slash");
        assertNotNull(cs);
        assertEquals("zero.slash", cs.getName());
        String[] text =
                {
                        "-63 -12 33 522 35 hstem",
                        "38 77 209 76 vstem",
                        "300 548 rmoveto",
                        "-24 19 -27 11 -28 0 -94 0 -89 -113 0 -187 0 -85 22 -80 38 -54 rrcurveto",
                        "-35 -83 33 -11 27 64 rlineto",
                        "26 -26 32 -15 36 0 73 0 110 77 0 222 0 94 -22 75 -42 56 -3 4 -3 4 -3 3 rrcurveto",
                        "30 75 -32 11 rlineto",
                        "-23 -146 rmoveto",
                        "13 -38 9 -51 0 -69 0 -87 -7 -60 -13 -48 -21 -78 -48 -11 -17 0 -35 0 -23 25 -15 37 rrcurveto",
                        "76 460 rmoveto",
                        "16 0 15 -5 11 -10 7 -5 6 -8 6 -10 rrcurveto",
                        "-154 -372 rlineto",
                        "-10 47 -3 51 0 37 0 233 63 42 43 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero_slashfitted
     */
    public void testzero_slashfitted() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.slashfitted");
        assertNotNull(cs);
        assertEquals("zero.slashfitted", cs.getName());
        String[] text =
                {
                        "-36 -10 33 519 35 hstem",
                        "81 77 209 76 vstem",
                        "314 548 rmoveto",
                        "-24 19 -28 11 -28 0 -93 0 -89 -113 0 -187 0 -85 22 -80 37 -54 rrcurveto",
                        "-34 -83 32 -11 27 64 rlineto",
                        "27 -26 32 -15 35 0 74 0 110 77 0 222 0 94 -22 75 -42 56 -3 4 -3 4 -4 3 rrcurveto",
                        "31 75 -32 11 rlineto",
                        "-24 -146 rmoveto",
                        "14 -38 9 -51 0 -69 0 -87 -7 -60 -14 -48 -20 -78 -48 -11 -18 0 -34 0 -23 25 -16 37 rrcurveto",
                        "76 460 rmoveto",
                        "16 0 16 -5 11 -10 6 -5 7 -8 6 -10 rrcurveto",
                        "-154 -372 rlineto",
                        "-11 47 -3 51 0 37 0 233 64 42 42 0 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero_superior
     */
    public void testzero_superior() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.superior");
        assertNotNull(cs);
        assertEquals("zero.superior", cs.getName());
        String[] text =
                {
                        "-194 358 25 281 24 hstem",
                        "31 59 127 59 vstem",
                        "151 358 rmoveto",
                        "59 66 50 119 120 -64 41 -58 -69 -54 -72 -94 -85 51 -79 69 hvcurveto",
                        "3 306 rmoveto",
                        "48 15 -73 -54 -78 -6 -76 -59 -54 -8 77 57 53 2 94 62 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zero_taboldstyle
     */
    public void testzero_taboldstyle() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zero.taboldstyle");
        assertNotNull(cs);
        assertEquals("zero.taboldstyle", cs.getName());
        String[] text =
                {
                        "-63 -12 35 383 36 hstem",
                        "29 75 231 75 vstem",
                        "219 442 rmoveto",
                        "-109 -81 -92 -131 -147 78 -84 112 116 75 85 146 128 -65 95 -126 hvcurveto",
                        "-36 vmoveto",
                        "84 32 -74 -113 -113 -26 -83 -90 -82 -33 83 113 118 43 69 72 hvcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zerowidthspace
     */
    public void testzerowidthspace() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zerowidthspace");
        assertNotNull(cs);
        assertEquals("zerowidthspace", cs.getName());
        String[] text = {"-501 endchar", "", null};
        check(cs, text);
    }

    /**
     * test : zeta
     */
    public void testzeta() throws Exception {

        assertNotNull(reader);
        OtfTableCFF cff = (OtfTableCFF) reader.getTable(XtfReader.CFF);
        assertNotNull(cff);
        CffFont font = cff.getFont(0);
        assertNotNull(font);
        CharString cs = font.getCharstring("zeta");
        assertNotNull(cs);
        assertEquals("zeta", cs.getName());
        String[] text =
                {
                        "-47 -207 40 161 72 450 30 46 30 hstemhm",
                        "51 66 247 28 -10 33 hintmask 11111100",
                        "298 554 rmoveto",
                        "0 38 38 20 7 1 -3 -2 vhcurveto",
                        "-16 -52 -17 -14 vhcurveto",
                        "-126 90 rmoveto",
                        "-7 19 rlineto",
                        "-69 -25 -45 -27 0 -34 0 -46 38 -15 59 0 25 0 24 1 37 4 -136 -153 -47 -81 0 -96 rrcurveto",
                        "-103 34 -94 201 vhcurveto",
                        "hintmask 11111010",
                        "68 28 -21 -40 -60 -26 -40 -91 hvcurveto",
                        "-60 0 9 50 -47 0 rrcurveto",
                        "-23 -12 -14 -20 -40 53 -16 38 156 36 84 57 84 -52 48 -89 -145 -14 62 74 hvcurveto",
                        "0 74 15 68 141 178 rrcurveto",
                        "hintmask 11111100",
                        "75 11 46 20 0 27 0 24 -9 18 -26 0 -24 0 -35 -27 -39 -42 -30 -5 -23 -2 -23 0 -40 0 -26 9 0 17 0 45 50 26 5 1 rrcurveto",
                        "endchar", "", null};
        check(cs, text);
    }

}
